<?xml version="1.0" encoding="utf-8" ?>
<dataOperations dataSource="nss">
  <dataSetAdapter name="SyncContractApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetContract" type="Text">
        <commandText>
          SELECT b.* FROM Shipment a INNER JOIN Contract b ON a.ContractId = b.ContractId AND a.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Contract" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="SyncShipmentApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetShipment" type="Text">
        <commandText>
          SELECT * FROM Shipment WHERE ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetSyncShipmentList" type="Text">
        <commandText>
          <![CDATA[
          SELECT TOP 500 a.* FROM Shipment a WITH (NOLOCK)
          INNER JOIN Contract b WITH (NOLOCK) ON a.ContractId = b.ContractId AND a.Status = 1 AND a.Sync = 1 AND a.WorkflowStatusId NOT IN (5)
          INNER JOIN [NS-DB04].NSLDB.dbo.Office c ON b.OfficeId = c.OfficeId
          INNER JOIN [NS-DB04].NSLDB.dbo.MonthEndStatus e ON c.OfficeId = e.OfficeId
          --AND ShipmentId = 1188552
          WHERE NOT (a.ShipmentId IN (SELECT ShipmentId FROM [NS-DB04].ISAM.dbo.CutOffSales)
          AND e.MonthEndStatusId > 1)
          ORDER BY a.ModifiedOn
          ]]>
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Shipment" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="SyncShipmentDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetShipmentDetail" type="Text">
        <commandText>
          SELECT b.* FROM Shipment a INNER JOIN ShipmentDetail b ON a.ShipmentId = b.ShipmentId AND a.ShipmentId = @ShipmentId -- AND b.status = 1
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetShipmentDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ShipmentDetail WHERE ShipmentDetailId = @ShipmentDetailId
        </commandText>
        <parameters>
          <param key="ShipmentDetailId" name="@ShipmentDetailId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ShipmentDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="SyncSplitShipmentApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetSplitShipment" type="Text">
        <commandText>
          SELECT b.* FROM Shipment a INNER JOIN SplitShipment b ON a.ShipmentId = b.ShipmentId AND a.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetSplitShipmentByKey" type="Text">
        <commandText>
          SELECT * FROM SplitShipment WHERE SplitShipmentId = @SplitShipmentId
        </commandText>
        <parameters>
          <param key="SplitShipmentId" name="@SplitShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="SplitShipment" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="SyncSplitShipmentDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetSplitShipmentDetail" type="Text">
        <commandText>
          SELECT c.* FROM Shipment a INNER JOIN SplitShipment b ON a.ShipmentId = b.ShipmentId AND a.ShipmentId = @ShipmentId
          INNER JOIN SplitShipmentDetail c ON b.SplitShipmentId = c.SplitShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetSplitShipmentDetailByKey" type="Text">
        <commandText>
          SELECT * FROM SplitShipmentDetail WHERE SplitShipmentDetailId = @SplitShipmentDetailId
        </commandText>
        <parameters>
          <param key="SplitShipmentDetailId" name="@SplitShipmentDetailId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="SplitShipmentDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="SyncSizeOptionApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetSizeOption" type="Text">
        <commandText>
          SELECT DISTINCT d.* FROM Shipment a INNER JOIN Contract b ON a.ContractId = b.ContractId AND a.ShipmentId = @ShipmentId
          INNER JOIN ShipmentDetail c ON a.ShipmentId = c.ShipmentId
          INNER JOIN SizeOption d ON c.SizeOptionId = d.SizeOptionId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="SizeOption" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="SyncProductApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetProduct" type="Text">
        <commandText>
          SELECT DISTINCT c.* FROM Shipment a INNER JOIN Contract b ON a.ContractId = b.ContractId AND a.ShipmentId = @ShipmentId
          LEFT JOIN SplitShipment d ON a.ShipmentId = d.ShipmentId -- AND d.Status = 1
          LEFT JOIN Product c ON (b.ProductId = c.ProductId OR d.ProductId = c.ProductId)
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Product" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="SyncOtherCostApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetOtherCost" type="Text">
        <commandText>
          EXEC sp_GetSyncOtherCost @ShipmentId
          --SELECT c.* FROM Shipment a INNER JOIN ShipmentDetail b ON a.ShipmentId = b.ShipmentId AND a.ShipmentId = @ShipmentId
          --INNER JOIN OtherCost c ON b.ShipmentDetailId = c.ShipmentDetailId AND c.ShipmentTypeId = 1
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetSplitOtherCost" type="Text">
        <commandText>
          EXEC sp_GetSyncOtherCostSplit @ShipmentId
          --SELECT d.* FROM Shipment a INNER JOIN SplitShipment b ON a.ShipmentId = b.ShipmentId AND a.ShipmentId = @ShipmentId
          --INNER JOIN SplitShipmentDetail c ON b.SplitShipmentId = c.SplitShipmentId
          --INNER JOIN OtherCost d ON c.SplitShipmentDetailId = c.ShipmentDetailId AND d.ShipmentTypeId = 2
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="OtherCost" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="EBookingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="InsertEBookingBatch" type="Text">
        <commandText>
          INSERT INTO EBookingBatch VALUES
          VALUES (@BatchNo, @FileName, @FileExtractDateTime, @ImportDate)
        </commandText>
        <parameters/>
      </dataCommand>

      <dataCommand name="DeleteEBookingBatch" type="Text">
        <commandText>
          DELETE EBookingBatch WHERE BatchNo = @BatchNo
          DELETE EBookingTransaction WHERE BatchNo = @BatchNo
          DELETE EBookingContract WHERE BatchNo = @BatchNo
          DELETE EBookingShipment WHERE BatchNo = @BatchNo
          DELETE EBookingSizeOption WHERE BatchNo = @BatchNo
          DELETE EBookingMessage WHERE BatchNo = @BatchNo
          DELETE EBookingParty WHERE BatchNo = @BatchNo
        </commandText>
        <parameters>
          <param key="BatchNo" name="@BatchNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="ImportEBookingBatch" type="Text">
        <commandText>
          EXEC sp_import_ebooking_batch @BatchNo
        </commandText>
        <parameters>
          <param key="BatchNo" name="@BatchNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="EzibuyOrderCopySummaryApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetEzibuyOrderCopySummaryByContractNo" type="Text">
        <commandText>
          SELECT eo.*, es.Currency, es.Style, es.TotalOrderQuantity, es.TotalOrderAmount
          FROM EzibuyUploadOrder_All as eo
          INNER JOIN ( SELECT PurchaseOrder,
          Currency = MAX(UnitCurrency),
          Style = MAX(Style),
          TotalOrderQuantity = SUM(Quantity),
          TotalOrderAmount = SUM(ROUND(Quantity*UnitCost, 2))
          FROM EzibuyUploadLineItem_All
          WHERE status = 1
          AND PurchaseOrder = @ContractNo
          GROUP BY PurchaseOrder
          ) as es ON es.PurchaseOrder = eo.PurchaseOrder
          WHERE eo.Status=1
          AND eo.PurchaseOrder=@ContractNo
          AND eo.InboundDeliveryNumber=@BookingRefNo

        </commandText>
        <parameters>
          <param key="ContractNo" name="@ContractNo" type="varchar" direction="Input" />
          <param key="BookingRefNo" name="@BookingRefNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="EzibuyOrderCopySummary" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="ProductionProgressApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetProgressByShipmentIdMilestoneId" type="Text">
        <commandText>
          SELECT pg.* --,pgm.MilestoneDesc
          FROM Progress as pg WITH (NOLOCK)
          INNER JOIN ProgressMilestoneMapping as pgm WITH (NOLOCK) ON pg.ProgressTypeId = pgm.ProgressTypeId
          WHERE pg.Status = 1
          AND pg.ShipmentId = @ShipmentId
          AND pgm.MilestoneId = @MilestoneId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
          <param key="MilestoneId" name="@MilestoneId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <selectCommand>
      <dataCommand name="GetGoldSealProgressByShipmentId" type="Text">
        <commandText>
          SELECT pg.*
          FROM Progress as pg WITH (NOLOCK)
          WHERE pg.Status = 1
          AND pg.ProgressTypeId in (SELECT ProgressTypeId FROM ProgressMilestoneMapping WITH (NOLOCK) WHERE MileStoneId=28)
          AND pg.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <selectCommand>
      <dataCommand name="GetGoldSealProgressByShipmentIdList" type="Text">
        <commandText>
          SELECT pg.*
          FROM Progress as pg WITH (NOLOCK)
          WHERE pg.Status = 1
          AND pg.ProgressTypeId in (SELECT ProgressTypeId FROM ProgressMilestoneMapping WITH (NOLOCK) WHERE MileStoneId=28)
          AND (pg.ShipmentId @ShipmentIdList)
        </commandText>
        <parameters>
          <param key="ShipmentIdList" name="@ShipmentIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Progress" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NssReleaseLockRequestApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetOpenedReleaseLockByShipmentId" type="Text">
        <commandText>
          SELECT a.* FROM ReleaseLockRequest a
          INNER JOIN ReleaseLockRequestDetail AS b ON a.ReleaseLockRequestId = b.ReleaseLockRequestId
          WHERE
          ReleaseLockSectionId IN (31,131,231,331,28,128,228,328,6,106,206,306,30,130,230,330,33,133,233,333,3,103,203,303,
          24,124,224,324,9,109,209,309,4,104,204,304,15,115,215,315,39,139,239,339,19,119,219,319,2,102,202,302,
          29,129,229,329)
          AND WorkFlowCompletedOn IS NULL
          AND a.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

  </dataSetAdapter>

  <dataSetAdapter name="NSSAdvancePaymentApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAdvancePaymentKeyList" type="Text">
        <commandText>
          SELECT PaymentId from AdvancePayment
          WHERE Sync = 1 AND Status = 1
          AND WorkflowStatusId IN (2, 3) 
          --AND PaymentId = 101 
          -- Approved, Rejected
        </commandText>
      </dataCommand>
      <dataCommand name="GetAdvancePaymentByKey" type="Text">
        <commandText>
          SELECT * FROM AdvancePayment
          WHERE PaymentId = @PaymentId
        </commandText>
        <parameters>
          <param key="PaymentId" name="@PaymentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AdvancePayment" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NSSAdvancePaymentOrderDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAdvancePaymentOrderDetailByPaymentId" type="Text">
        <commandText>
          SELECT * FROM AdvancePaymentOrderDetail
          WHERE PaymentId = @PaymentId
        </commandText>
        <parameters>
          <param key="PaymentId" name="@PaymentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AdvancePaymentOrderDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NSSAdvancePaymentRejectReasonApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAdvancePaymentRejectReasonNameByKey" type="Text">
        <commandText>
          SELECT RejectReason FROM AdvancePaymentRejectReason
          WHERE RejectReasonId = @RejectReasonId
        </commandText>
        <parameters>
          <param key="RejectReasonId" name="@RejectReasonId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AdvancePaymentRejectReason" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NSSLGPaymentApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLGPaymentKeyList" type="Text">
        <commandText>
          SELECT PaymentId from LGPayment
          WHERE Sync = 1 AND Status = 1
          --WorkflowStatusId = 2 AND
        </commandText>
      </dataCommand>
      <dataCommand name="GetLGPaymentByKey" type="Text">
        <commandText>
          SELECT * FROM LGPayment
          WHERE PaymentId = @PaymentId
        </commandText>
        <parameters>
          <param key="PaymentId" name="@PaymentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LGPayment" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NSSLGPaymentOrderDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLGPaymentOrderDetailByPaymentId" type="Text">
        <commandText>
          SELECT * FROM LGPaymentOrderDetail
          WHERE PaymentId = @PaymentId AND Status = 1
        </commandText>
        <parameters>
          <param key="PaymentId" name="@PaymentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LGPaymentOrderDetail" />
    </tableMappings>
  </dataSetAdapter>

</dataOperations>
