<?xml version="1.0" encoding="utf-8" ?>
<dataOperations dataSource="isam">
  <dataSetAdapter name="NTInvoiceApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetNTInvoiceByKey" type="Text">
        <commandText>
          SELECT *
          FROM NTInvoice WITH (NOLOCK)
          WHERE (@InvoiceId=-1 and Status=1)
          OR InvoiceId = @InvoiceId
        </commandText>
        <parameters>
          <param key="InvoiceId" name="@InvoiceId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceByRefNo" type="Text">
        <commandText>
          SELECT *
          FROM NTInvoice WITH (NOLOCK)
          WHERE (@RefNo = NSLInvoiceNo)
        </commandText>
        <parameters>
          <param key="RefNo" name="@RefNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceByProcurementRequestId" type="Text">
        <commandText>
          SELECT *
          FROM NTInvoice WHERE ProcurementRequestId = @ProcurementRequestId
        </commandText>
        <parameters>
          <param key="ProcurementRequestId" name="@ProcurementRequestId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceList" type="Text">
        <commandText>
          <![CDATA[
          SELECT TOP 200  i.* FROM NTInvoice i WITH (NOLOCK)
			    LEFT JOIN NSLDB..AccountFinancialCalender afc WITH (NOLOCK) ON i.InvoiceDate BETWEEN afc.StartDate AND afc.EndDate AND AppId=9
          WHERE
		  --  (OfficeId @OfficeList) 
          (OfficeId @OfficeList or (@IncludePayByHK = 1 AND 1 @OfficeList AND IsPayByHK = 1))
          AND ((@UserId <> -1 AND ApproverId = @UserId) OR 
               (@UserId <> -1 AND SubmittedBy = @UserId) OR 
            (@DepartmentId = -1 OR DeptId IN (@DepartmentId, CASE WHEN @DepartmentId = 224 THEN 10 ELSE @DepartmentId END) OR 
            (EXISTS(SELECT NTApproverId FROM NTApprover WHERE NTApproverId = @UserId) 
            AND DeptId IN (SELECT OfficeStructureId FROM NSLDB..OfficeStructure WHERE ParentId = @DepartmentId 
                          AND OfficeStructureTypeId = 10 AND Status = 1))))
		  
          AND (@InvoiceDateFrom IS NULL OR InvoiceDate BETWEEN @InvoiceDateFrom AND @InvoiceDateTo)
          AND (@FiscalYear = -1 OR (afc.BudgetYear=@FiscalYear AND afc.Period BETWEEN @FiscalPeriodFrom AND @FiscalPeriodTo))
          AND (@DueDateFrom IS NULL OR DueDate BETWEEN @DueDateFrom AND @DueDateTo)
          AND (@SettlementDateFrom IS NULL OR SettlementDate BETWEEN @SettlementDateFrom AND @SettlementDateTo)
          AND (@InvoiceNoTo = '' OR InvoiceNo BETWEEN @InvoiceNoFrom AND @InvoiceNoTo)
          AND (@CustomerNoTo = '' OR CustomerNo BETWEEN @CustomerNoFrom AND @CustomerNoTo)
          AND (@NSLRefNoTo = '' OR NSLInvoiceNo BETWEEN @NSLRefNoFrom AND @NSLRefNoTo)
          AND (@VendorId = -1 OR NTVendorId = @VendorId)
          --AND (@WorkflowStatusId = -1 OR WorkflowStatusId = @WorkflowStatusId)
          AND (-1 @WorkflowStatusIdList or WorkflowStatusId @WorkflowStatusIdList)
          AND (@PaymentDateFrom IS NULL OR PaymentFromDate>=@PaymentDateFrom OR PaymentToDate>=@PaymentDateFrom)
          AND (@PaymentDateTo IS NULL OR PaymentFromDate<=@PaymentDateTo OR PaymentToDate<=@PaymentDateTo)
          AND (@CurrencyId = -1 OR CurrencyId = @CurrencyId)
          AND (@PaymentMethodId = -1 OR PaymentMethodId = @PaymentMethodId)
		      AND (@DCIndicator = '' OR DCIndicator = @DCIndicator)
		      AND (@FirstApproverId = -1 OR AccountFirstApproverId = @FirstApproverId)
          AND (@ExpenseTypeId = -1 OR @ExpenseTypeId IN (SELECT ExpenseTypeId FROM NTInvoiceDetail WHERE InvoiceId = i.InvoiceId AND Status = 1))
          AND i.Status = 1
          AND (@SubmittedBy = -1 OR i.SubmittedBy = @SubmittedBy)
          ORDER BY InvoiceDate DESC, NSLInvoiceNo
          ]]>
        </commandText>
        <parameters>
          <param key="OfficeList" name="@OfficeList" type="Arrayint" direction="Input" />
          <param key="ExpenseTypeId" name="@ExpenseTypeId" type="Int" direction="Input" />
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriodFrom" name="@FiscalPeriodFrom" type="Int" direction="Input" />
          <param key="FiscalPeriodTo" name="@FiscalPeriodTo" type="Int" direction="Input" />
          <param key="InvoiceDateFrom" name="@InvoiceDateFrom" type="DateTime" direction="Input" />
          <param key="InvoiceDateTo" name="@InvoiceDateTo" type="DateTime" direction="Input" />
          <param key="DueDateFrom" name="@DueDateFrom" type="DateTime" direction="Input" />
          <param key="DueDateTo" name="@DueDateTo" type="DateTime" direction="Input" />
          <param key="SettlementDateFrom" name="@SettlementDateFrom" type="DateTime" direction="Input" />
          <param key="SettlementDateTo" name="@SettlementDateTo" type="DateTime" direction="Input" />
          <param key="InvoiceNoFrom" name="@InvoiceNoFrom" type="varchar" direction="Input" />
          <param key="InvoiceNoTo" name="@InvoiceNoTo" type="varchar" direction="Input" />
          <param key="CustomerNoFrom" name="@CustomerNoFrom" type="varchar" direction="Input" />
          <param key="CustomerNoTo" name="@CustomerNoTo" type="varchar" direction="Input" />
          <param key="NSLRefNoFrom" name="@NSLRefNoFrom" type="varchar" direction="Input" />
          <param key="NSLRefNoTo" name="@NSLRefNoTo" type="varchar" direction="Input" />
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
          <param key="WorkflowStatusIdList" name="@WorkflowStatusIdList" type="Arrayint" direction="Input" />
          <param key="PaymentDateFrom" name="@PaymentDateFrom" type="DateTime" direction="Input" />
          <param key="PaymentDateTo" name="@PaymentDateTo" type="DateTime" direction="Input" />
          <param key="CurrencyId" name="@CurrencyId" type="Int" direction="Input" />
          <param key="PaymentMethodId" name="@PaymentMethodId" type="Int" direction="Input" />
          <param key="DepartmentId" name="@DepartmentId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="FirstApproverId" name="@FirstApproverId" type="Int" direction="Input" />
          <param key="IncludePayByHK" name="@IncludePayByHK" type="int" direction="Input" />
          <param key="DCIndicator" name="@DCIndicator" type="varchar" direction="Input" />
          <param key="SubmittedBy" name="@SubmittedBy" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetPendingForApprovalInvoiceList" type="Text">
        <commandText>
          SELECT * FROM NTInvoice
          WHERE WorkflowStatusId = 1
          --AND (ModifiedOn BETWEEN @StartDate AND @EndDate OR ModifiedOn BETWEEN DATEADD(d, -2, @StartDate) AND DATEADD(d, -2, @EndDate))
          AND InvoiceId = 52742
          ORDER BY ApproverId
        </commandText>
        <parameters>
          <param key="StartDate" name="@StartDate" type="DateTime" direction="Input" />
          <param key="EndDate" name="@EndDate" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetIntercommRechargeInvoiceList" type="Text">
        <commandText>
          <![CDATA[
          SELECT DISTINCT a.* FROM NTInvoice a INNER JOIN NTInvoiceDetail b
          ON a.InvoiceId @InvoiceIdList AND a.InvoiceId = b.InvoiceId AND b.Status = 1 AND b.IsRecharge = 1 AND b.InvoiceDetailTypeId = 3 AND b.CompanyId = 1 AND a.CompanyId = 1
          AND a.OfficeId <> b.OfficeId
          INNER JOIN NSLDB..Office c ON b.OfficeId = c.OfficeId AND c.OfficeCode = @OfficeCode
          ]]>
        </commandText>
        <parameters>
          <param key="InvoiceIdList" name="@InvoiceIdList" type="Arrayint" direction="Input" />
          <param key="OfficeCode" name="@OfficeCode" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetIntercommRechargeOfficeList" type="Text">
        <commandText>
          <![CDATA[
          SELECT DISTINCT b.OfficeId AS OfficeId FROM NTInvoice a INNER JOIN NTInvoiceDetail b
          ON a.InvoiceId @InvoiceIdList AND a.InvoiceId = b.InvoiceId AND b.Status = 1 AND b.IsRecharge = 1 AND b.InvoiceDetailTypeId = 3 AND b.CompanyId = 1 AND a.CompanyId = 1
          AND a.OfficeId <> b.OfficeId
          ]]>
        </commandText>
        <parameters>
          <param key="InvoiceIdList" name="@InvoiceIdList" type="Arrayint" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetDebitNoteRechargeInvoiceList" type="Text">
        <commandText>
          SELECT DISTINCT a.* FROM NTInvoice a INNER JOIN NTInvoiceDetail b
          ON a.InvoiceId = b.InvoiceId AND b.Status = 1 AND b.IsRecharge = 1
          INNER JOIN NTRechargeDCNote c ON b.RechargeDCNoteId = c.RechargeDCNoteId AND c.RechargeDCNoteId @RechargeDCNoteIdList AND c.ToCompanyId = 1
          INNER JOIN NSLDB..Office d ON d.OfficeId = c.ToOfficeId AND d.OfficeCode = @OfficeCode
        </commandText>
        <parameters>
          <param key="RechargeDCNoteIdList" name="@RechargeDCNoteIdList" type="Arrayint" direction="Input" />
          <param key="OfficeCode" name="@OfficeCode" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceListByRechargeDCNoteId" type="Text">
        <commandText>
          SELECT DISTINCT a.* FROM NTInvoice a INNER JOIN NTInvoiceDetail b
          ON a.InvoiceId = b.InvoiceId AND b.Status = 1 AND b.RechargeDCNoteId = @RechargeDCNoteId
        </commandText>
        <parameters>
          <param key="RechargeDCNoteId" name="@RechargeDCNoteId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceListByVendorId" type="Text">
        <commandText>
          SELECT * FROM NTInvoice
          WHERE NTVendorId = @NTVendorId AND Status = 1
        </commandText>
        <parameters>
          <param key="NTVendorId" name="@NTVendorId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceListByVendorId" type="Text">
        <commandText>
          SELECT * FROM NTInvoice
          WHERE NTVendorId = @NTVendorId AND Status = 1
        </commandText>
        <parameters>
          <param key="NTVendorId" name="@NTVendorId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceListByVendorId" type="Text">
        <commandText>
          SELECT * FROM NTInvoice
          WHERE NTVendorId = @NTVendorId AND Status = 1
        </commandText>
        <parameters>
          <param key="NTVendorId" name="@NTVendorId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceListByInvoiceNoAndVendorAccountCode" type="Text">
        <commandText>
          <![CDATA[
          SELECT i.* FROM NTInvoice i
          INNER JOIN NTVendor v ON v.NTVendorId = i.NTVendorId
          WHERE  
          (v.EPVendorCode =  @EpicorSupplierId)
          AND (@InvoiceId = 0 OR i.InvoiceId <> @InvoiceId)
          AND ((@InvoiceNo <> '' AND i.InvoiceNo = @InvoiceNo) OR (@InvoiceNo = '' AND i.InvoiceNo = @InvoiceNo AND i.CustomerNo = @CustomerNo AND i.InvoiceDate = @InvoiceDate))
          AND i.WorkflowStatusId <> 9 AND i.Status = 1
          ]]>
        </commandText>
        <parameters>
          <param key="InvoiceId" name="@InvoiceId" type="int" direction="Input" />
          <param key="EpicorSupplierId" name="@EpicorSupplierId" type="varchar" direction="Input" />
          <param key="InvoiceNo" name="@InvoiceNo" type="varchar" direction="Input" />
          <param key="CustomerNo" name="@CustomerNo" type="varchar" direction="Input" />
          <param key="InvoiceDate" name="@InvoiceDate" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetMaxNTInvoiceId" type="Text">
        <commandText>
          SELECT MAX(InvoiceId)
          FROM NTInvoice WITH (NOLOCK)
        </commandText>
      </dataCommand>
      <dataCommand name="GetMaxInvoiceNo" type="Text">
        <commandText>
          SELECT MAX(NSLInvoiceNo) FROM NTInvoice WHERE NSLInvoiceNo LIKE @InvoicePrefix + '%'
        </commandText>
        <parameters>
          <param key="InvoicePrefix" name="@InvoicePrefix" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTInvoiceCurrency" type="Text">
        <commandText>
          SELECT Distinct CurrencyId FROM NTInvoice WHERE Status=1 order by 1
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTInvoice" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="NTInvoiceDetailApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetNTInvoiceDetailByKey" type="Text">
        <commandText>
          SELECT *
          FROM NTInvoiceDetail WITH (NOLOCK)
          WHERE (@InvoiceDetailId = -1 and Status = 1)
          OR InvoiceDetailId = @InvoiceDetailId
        </commandText>
        <parameters>
          <param key="InvoiceId" name="@InvoiceDetailId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTInvoiceDetailListByInvoiceIdAndType" type="Text">
        <commandText>
          SELECT *
          FROM NTInvoiceDetail WITH (NOLOCK)
          WHERE
          InvoiceId = @InvoiceId
          AND InvoiceDetailTypeId @InvoiceDetailTypeList
          AND Status = 1
          ORDER BY InvoiceDetailId
        </commandText>
        <parameters>
          <param key="InvoiceId" name="@InvoiceId" type="Int" direction="Input" />
          <param key="InvoiceDetailTypeList" name="@InvoiceDetailTypeList" type="Arrayint" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceDetailListForRechargeDCNote" type="Text">
        <commandText>
          <![CDATA[
          SELECT nid.* FROM NTInvoice ni
          INNER JOIN NTInvoiceDetail nid ON nid.InvoiceId = ni.InvoiceId
          LEFT JOIN NTExpenseType et ON nid.ExpenseTypeId = et.ExpenseTypeId 
          WHERE
			    nid.Status = 1
			    AND nid.IsRecharge = 1 
			    AND (nid.InvoiceDetailTypeId IN (4,5,6,7,8,9,10,11) OR (nid.InvoiceDetailTypeId = 3 AND (nid.CompanyId <> ni.CompanyId OR (nid.IsPayByHK = 1 AND nid.CompanyId <> 1))))
			    AND nid.RechargeDCNoteId IS NULL
			    AND ni.WorkflowStatusId IN (6,8)
			    AND (nid.ExpenseTypeId is null OR et.SunAccountCode NOT IN ('1311303', '1311307'))
			    AND ((CASE WHEN ISNULL(nid.IntercommOfficeId,-1) <> -1 AND ni.OfficeId <> nid.IntercommOfficeId THEN nid.IntercommOfficeId ELSE ni.OfficeId END = @OfficeId AND nid.IsPayByHK = 0) OR (@OfficeId=1 AND nid.IsPayByHK = 1))
			    AND (@CompanyId=-1 OR (case when nid.IsPaybyHK = 1 THEN 1 ELSE ni.CompanyId end = @CompanyId))
			    AND nid.Amount <> 0
          AND NOT (ni.CompanyId = 2 AND ni.OfficeId = 2) -- 2014-03-31 By Michael Lau
          ORDER BY nid.VendorId, nid.CustomerId, nid.RechargeCurrencyId
          ]]>
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="CompanyId" name="@CompanyId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceDetailListForRechargeDCNoteByInvoiceId" type="Text">
        <commandText>
          <![CDATA[
          SELECT d.* FROM NTInvoiceDetail d WITH (NOLOCK) 
          INNER JOIN NTInvoice i WITH (NOLOCK) ON i.InvoiceId = d.InvoiceId
          WHERE 
          d.InvoiceId = @InvoiceId AND d.IsRecharge = 1 AND 
          (d.InvoiceDetailTypeId IN (4,5,6,7,8,9,10,11) OR (d.InvoiceDetailTypeId = 3 AND (d.CompanyId <> i.CompanyId OR (d.IsPayByHK = 1 AND d.CompanyId <> 1))))
          AND d.Status = 1
          ]]>
        </commandText>
        <parameters>
          <param key="InvoiceId" name="@InvoiceId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceDetailListForFixedAssetByInvoiceId" type="Text">
        <commandText>
          <![CDATA[
          SELECT d.* FROM NTInvoiceDetail d WITH (NOLOCK) 
          INNER JOIN NTInvoice i WITH (NOLOCK) ON i.InvoiceId = d.InvoiceId AND d.InvoiceId = @InvoiceId
          INNER JOIN NTExpenseType c ON d.ExpenseTypeId = c.ExpenseTypeId 
          INNER JOIN NSLDB..COAMapping m ON c.SunAccountCode = m.SunCode AND m.EpicorCode = '1225111'
          WHERE d.Status = 1
          ]]>
        </commandText>
        <parameters>
          <param key="InvoiceId" name="@InvoiceId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceDetailListByRechargeDCNoteId" type="Text">
        <commandText>
          SELECT nid.* FROM NTInvoiceDetail nid WHERE nid.Status = 1 AND RechargeDCNoteId =@RechargeDCNoteId
        </commandText>
        <parameters>
          <param key="RechargeDCNoteId" name="@RechargeDCNoteId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTInvoiceTradingAFDetailListByContractDeliveryNo" type="Text">
        <commandText>
          SELECT nid.* FROM NTInvoiceDetail nid INNER JOIN NTExpenseType b ON nid.ExpenseTypeId = b.ExpenseTypeId AND nid.Status = 1 AND b.SunAccountCode = '1452028' AND nid.ContractNo = @ContractNo AND nid.DeliveryNo = @DeliveryNo
        </commandText>
        <parameters>
          <param key="ContractNo" name="@ContractNo" type="varchar" direction="Input" />
          <param key="DeliveryNo" name="@DeliveryNo" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetMaxNTInvoiceDetailId" type="Text">
        <commandText>
          SELECT MAX(InvoiceDetailId)
          FROM NTInvoiceDetail WITH (NOLOCK)
        </commandText>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTInvoiceDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTInvoiceDetailForSettlementApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNTInvoiceDetailForSettlementByInvoiceId" type="Text">
        <commandText>
          <![CDATA[
          SELECT
				    ni.NSLInvoiceNo,ni.InvoiceNo, ni.CustomerNo, ni.InvoiceDate, 
				    ni.OfficeId, ni.CompanyId, ni.isPayByHK, ni.NTVendorId, ni.PaymentMethodId, ni.SettlementBankAccountId,
				    BankAccount_SUNAccountCode=ba.SunAccountCode, BankAccount_Description=ba.AccountNo,
				    ExpenseType_SUNAccountCode=coa.EpicorCode, xt.ExpenseType, 
				    VendorAccountCode = v.SunAccountCode, v.VendorName,
				    CurrencyCode = (select CurrencyCode from Currency where currencyId=ni.CurrencyId),
				    --nid.Amount, nid.Vat,
				    Amount = nid.Amount * (case when DCIndicator='C' then -1 else 1 end), 
				    Vat = nid.Vat * (case when DCIndicator='C' then -1 else 1 end),
				    ChequeNo = isnull(ni.ChequeNo,''),
				    Approver = (select DisplayName from NSLDB..UserInfo WITH (NOLOCK) WHERE UserId=ApproverId),
				    T0Code = isnull(case when xt.IsOfficeCode=1 then (select T0Code from NSLDB..CompanyOfficeMapping where OfficeId=ni.OfficeId and CompanyId=ni.CompanyId) else '' end, ''),
				    T1Code = isnull(case when xt.IsDepartmentCode=1 then (select Code from NSLDB..OfficeStructure where OfficeStructureId=nid.CostCenterId) else '' end, ''),
				    T2Code = isnull(case when xt.IsProductCode=1 then (select Code from NSLDB..OfficeStructure where OfficeStructureId=nid.ProductTeamId) else '' end, ''),
				    T3Code = isnull(case when xt.IsStaffCode=1 then (select SunStaffCode from NSLDB..UserInfo where UserId=nid.UserId) else '' end, ''),
				    T4Code = '',
				    T5Code = isnull(case when xt.IsSeasonCode=1 then (select replace(left(ltrim(Code),3),'/','')+right(rtrim(Code),2) from NSLDB..Season where SeasonId=nid.SeasonId)
									     when xt.IsDevSampleCostType=1 then (select Code from NTDevSampleCostType where DevSampleCostTypeId=nid.DevSampleCostTypeId)
									     else '' end, ''),
				    T6Code = '',
				    T7Code = '',
				    T8Code = '',
				    T9Code = isnull(case when ni.InvoiceNo is not null and ni.InvoiceNo<>'' then ni.InvoiceNo else ni.CustomerNo end, ''),
				    AccountFirstApprover = isnull((select DisplayName from nsldb..UserInfo where UserId=ni.AccountFirstApproverId), ''),
				    AccountFirstApprovedOn, 
				    RechargeParty = (case when nid.InvoiceDetailTypeId=3
									    then (select OfficeCode from Office where OfficeId=nid.OfficeId)
									    else (case when nid.InvoiceDetailTypeId = 1 then ''
									               when nid.InvoiceDetailTypeId in (4,5,6,7,8,9) 
											    then isnull((select VendorName from ntVendor where NTVendorId=nid.vendorId),'')
											    else 'Others'
											    end)
									    end),
            st.Code + ' - ' + st.Description AS CostCenter,
            nid.ItemDescription1 AS ItemDescription,
            nid.InvoiceDetailId
		      FROM NTInvoice AS ni WITH (NOLOCK)
			      INNER JOIN NTInvoiceDetail AS nid WITH (NOLOCK) ON nid.InvoiceId = ni.InvoiceId and nid.status=1
			      INNER JOIN NTVendor AS v WITH (NOLOCK) ON v.NTVendorId=ni.NTVendorId
			      INNER JOIN NTExpenseType AS xt WITH (NOLOCK) ON xt.ExpenseTypeId=nid.ExpenseTypeId
            INNER JOIN nsldb.dbo.COAMapping AS coa WITH (NOLOCK) ON xt.SUNAccountCode=coa.SunCode
			      LEFT  JOIN NSLBankAccount AS ba WITH (NOLOCK) ON ba.NSLBankAccountId=ni.SettlementBankAccountId
            LEFT JOIN NSLDB..OfficeStructure st ON nid.CostCenterId = st.OfficeStructureId
          WHERE (ni.InvoiceId @InvoiceIdList)
          ORDER BY v.VendorName, ni.InvoiceId
          ]]>
        </commandText>
        <parameters>
          <param key="InvoiceIdList" name="@InvoiceIdList" type="Arrayint" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTInvoiceSettlement" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="NTRechargeDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNTRechargeDetailByKey" type="Text">
        <commandText>
          SELECT * FROM NTRechargeDetail WITH (NOLOCK)
          WHERE
          (@RechargeDetailId = -1 AND Status = 1)
          OR RechargeDetailId = @RechargeDetailId
        </commandText>
        <parameters>
          <param key="RechargeDetailId" name="@RechargeDetailId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTRechargeDetailListByInvoiceId" type="Text">
        <commandText>
          SELECT *
          FROM NTRechargeDetail WITH (NOLOCK)
          WHERE
          InvoiceId = @InvoiceId
          AND Status = 1
        </commandText>
        <parameters>
          <param key="InvoiceId" name="@InvoiceId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxNTRechargeDetailId" type="Text">
        <commandText>
          SELECT MAX(RechargeDetailId)
          FROM NTRechargeDetail WITH (NOLOCK)
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTRechargeDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTExpenseTypeApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetNTExpenseTypeByKey" type="Text">
        <commandText>
          SELECT t.*, cm.EpicorCode
          FROM NTExpenseType t WITH (NOLOCK)
          LEFT JOIN NSLDB..COAMapping cm WITH (NOLOCK) ON cm.SunCode = t.SUNAccountCode AND cm.Status = 1
          WHERE (@ExpenseTypeId=-1 and t.Status=1)
          or ExpenseTypeId = @ExpenseTypeId
          ORDER BY ExpenseType
        </commandText>
        <parameters>
          <param key="ExpenseTypeId" name="@ExpenseTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTExpenseTypeByOfficeId" type="Text">
        <commandText>
          SELECT t.*, cm.EpicorCode FROM NTExpenseType t WITH (NOLOCK)
          LEFT JOIN NSLDB..COAMapping cm WITH (NOLOCK) ON cm.SunCode = t.SUNAccountCode AND cm.Status = 1
          WHERE t.Status = 1
          AND (@OfficeId = -1  OR OfficeId = @OfficeId)
          AND cm.SunCode IS NOT NULL
          ORDER BY cm.EpicorCode
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTExpenseTypeByNTVendorId" type="Text">
        <commandText>
          SELECT et.*, cm.EpicorCode FROM NTExpenseType et
          INNER JOIN NTVendorExpenseTypeMapping m on m.ExpenseTypeId = et.ExpenseTypeId
          LEFT JOIN NSLDB..COAMapping cm WITH (NOLOCK) ON cm.SunCode = et.SUNAccountCode AND cm.Status = 1
          WHERE
          et.Status = 1 and m.Status = 1 and m.NTVendorId = @NTVendorId
          ORDER BY ExpenseType
        </commandText>
        <parameters>
          <param key="NTVendorId" name="@NTVendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTExpenseType" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTVendorApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetNTVendorByKey" type="Text">
        <commandText>
          SELECT *
          FROM NTVendor WITH (NOLOCK)
          WHERE (@VendorId=-1 and Status=1)
          or NTVendorId = @VendorId
        </commandText>
        <parameters>
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTVendorByEPVendorCode" type="Text">
        <commandText>
          SELECT *
          FROM NTVendor WITH (NOLOCK)
          WHERE (EPVendorCode = @EPVendorCode AND Status = 1)
          AND ((@EnforceEmail = 1 AND EAdviceEmail IS NOT NULL)
          OR (@EnforceEmail = 0))
        </commandText>
        <parameters>
          <param key="EPVendorCode" name="@EPVendorCode" type="varchar" direction="Input" />
          <param key="EnforceEmail" name="@EnforceEmail" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTVendorByName" type="Text">
        <commandText>
          SELECT *
          FROM NTVendor WITH (NOLOCK)
          WHERE Status = 1
          AND VendorName LIKE  @VendorName + '%'
          AND (@WorkflowStatusId = -1 OR WorkflowStatusId = @WorkflowStatusId)
          AND (@OfficeId = -1 OR OfficeId = @OfficeId)
          ORDER BY VendorName
        </commandText>
        <parameters>
          <param key="VendorName" name="@VendorName" type="varchar" direction="Input" />
          <param key="WorkflowStatusId" name="@WorkflowStatusId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTVendorList" type="Text">
        <commandText>
          SELECT * FROM NTVendor AS a WITH (NOLOCK)
          WHERE Status = 1
          AND (@OfficeId = -1 OR OfficeId = @OfficeId)
          AND (@NTVendorId = -1 OR NTVendorId = @NTVendorId)
          AND (@ExpenseTypeId = -1 OR @ExpenseTypeId IN (SELECT ExpenseTypeId FROM NTVendorExpenseTypeMapping WHERE NTVendorId = a.NTVendorId AND Status = 1 ))
          AND (@WorkflowStatusId = -1 OR WorkflowStatusId = @WorkflowStatusId)
          ORDER BY VendorName
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="NTVendorId" name="@NTVendorId" type="Int" direction="Input" />
          <param key="ExpenseTypeId" name="@ExpenseTypeId" type="Int" direction="Input" />
          <param key="WorkflowStatusId" name="@WorkflowStatusId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTVendorReport" type="Text">
        <commandText>
          SELECT  VendorName, Address, c.[Name] AS Country, Telephone, Fax, WorkflowStatusId
          FROM NTVendor AS a WITH (NOLOCK)
          INNER JOIN NSLDB..Country c ON c.CountryId = a.CountryId
          WHERE Status = 1
          AND (@OfficeId = -1 OR OfficeId = @OfficeId)
          AND (@NTVendorId = -1 OR NTVendorId = @NTVendorId)
          AND (@ExpenseTypeId = -1 OR @ExpenseTypeId IN (SELECT ExpenseTypeId FROM NTVendorExpenseTypeMapping WHERE NTVendorId = a.NTVendorId AND Status = 1 ))
          AND (@WorkflowStatusId = -1 OR WorkflowStatusId = @WorkflowStatusId)
          ORDER BY VendorName
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="NTVendorId" name="@NTVendorId" type="Int" direction="Input" />
          <param key="ExpenseTypeId" name="@ExpenseTypeId" type="Int" direction="Input" />
          <param key="WorkflowStatusId" name="@WorkflowStatusId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxNTVendorId" type="Text">
        <commandText>
          SELECT MAX(NTVendorId) FROM NTVendor WITH (NOLOCK)
        </commandText>
      </dataCommand>
      <dataCommand name="GetEpicorVendorCodeSequenceNo" type="Text">
        <commandText>
          SELECT top 1 SequenceNo = Substring(v.EpVendorCode,3,5) + 1
          FROM ntvendor as v
          WHERE (v.EpVendorCode is not null and len(v.EpVendorCode)=8)
          AND (v.EpVendorCode LIKE '%'+@Suffix and Substring(v.EpVendorCode,3,5) NOT LIKE '%[^0-9]%')
          ORDER BY SequenceNo DESC
        </commandText>
        <parameters>
          <param key="Suffix" name="@Suffix" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTVendor" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTVendorExpenseTypeMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNTVendorExpenseTypeMappingByKey" type="Text">
        <commandText>
          SELECT * FROM NTVendorExpenseTypeMapping WITH (NOLOCK)
          WHERE NTVendorId = @NTVendorId AND ExpenseTypeId = @ExpenseTypeId
        </commandText>
        <parameters>
          <param key="NTVendorId" name="@NTVendorId" type="Int" direction="Input" />
          <param key="ExpenseTypeId" name="@ExpenseTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTVendorExpenseTypeMappingByNTVendorId" type="Text">
        <commandText>
          SELECT * FROM NTVendorExpenseTypeMapping m WITH (NOLOCK)
          INNER JOIN NTExpenseType et WITH (NOLOCK) ON et.ExpenseTypeId = m.ExpenseTypeId
          WHERE NTVendorId = @NTVendorId AND m.Status = 1
          ORDER BY et.ExpenseType
        </commandText>
        <parameters>
          <param key="NTVendorId" name="@NTVendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTVendorExpenseTypeMapping" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTActionHistoryApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetNTActionHistoryByKey" type="Text">
        <commandText>
          SELECT *
          FROM NTActionHistory WITH (NOLOCK)
          WHERE ActionHistoryId = @ActionHistoryId
        </commandText>
        <parameters>
          <param key="ActionHistoryId" name="@ActionHistoryId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTActionHistoryList" type="Text">
        <commandText>
          SELECT * FROM NTActionHistory WITH (NOLOCK)
          WHERE
          (@InvoiceId = -1 OR InvoiceId = @InvoiceId)
          AND (@NTVendorId = -1 OR NTVendorId = @NTVendorId)
          ORDER BY ActionOn DESC
        </commandText>
        <parameters>
          <param key="InvoiceId" name="@InvoiceId" type="Int" direction="Input" />
          <param key="NTVendorId" name="@NTVendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxNTActionHistoryId" type="Text">
        <commandText>
          SELECT MAX(ActionHistoryId)
          FROM NTActionHistory WITH (NOLOCK)
        </commandText>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTActionHistory" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTRechargeDCNoteApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNTRechargeDCNoteByKey" type="Text">
        <commandText>
          SELECT * FROM NTRechargeDCNote WITH (NOLOCK) WHERE RechargeDCNoteId = @RechargeDCNoteId
        </commandText>
        <parameters>
          <param key="RechargeDCNoteId" name="@RechargeDCNoteId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTRechargeDCNoteByDCNoteNo" type="Text">
        <commandText>
          SELECT * FROM NTRechargeDCNote WITH (NOLOCK) WHERE RechargeDCNoteNo = @DCNoteNo
        </commandText>
        <parameters>
          <param key="DCNoteNo" name="@DCnoteNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxNTRechargeDCNoteId" type="Text">
        <commandText>
          SELECT MAX(RechargeDCNoteId) FROM NTRechargeDCNote WITH (NOLOCK)
        </commandText>
      </dataCommand>
      <dataCommand name="GetNTRechargeDCNoteList" type="Text">
        <commandText>
          <![CDATA[
          SELECT * FROM NTRechargeDCNote 
              WHERE OfficeId @OfficeList
              AND RechargeDCNoteDate >= @FromDate AND RechargeDCNoteDate < @ToDate
              AND Status = 1
          ]]>
        </commandText>
        <parameters>
          <param key="OfficeList" name="@OfficeList" type="ArrayInt" direction="Input" />
          <param key="FromDate" name="@FromDate" type="DateTime" direction="Input" />
          <param key="ToDate" name="@ToDate" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTRechargeDCNoteInvoiceList" type="Text">
        <commandText>
          <![CDATA[
          SELECT d.InvoiceId, InvoiceNo = (select InvoiceNo from NTInvoice with (nolock) where InvoiceId=d.InvoiceId),
				  n.* 
				  FROM NTRechargeDCNote AS n
				  INNER JOIN NTInvoiceDetail AS d ON d.RechargeDCNoteId=n.RechargeDCNoteId AND d.Status=1
                WHERE n.OfficeId @OfficeList
				  AND n.RechargeDCNoteDate >= @FromDate AND n.RechargeDCNoteDate < @ToDate
				  AND n.Status = 1
			    ORDER BY n.RechargeDCNoteNo
          ]]>
        </commandText>
        <parameters>
          <param key="OfficeList" name="@OfficeList" type="ArrayInt" direction="Input" />
          <param key="FromDate" name="@FromDate" type="DateTime" direction="Input" />
          <param key="ToDate" name="@ToDate" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTRechargeDCNote" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTRechargeDCNoteNoParamApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetRechargeDCNoteNoParamByKey" type="Text">
        <commandText>
          SELECT * FROM NTRechargeDCNoteNoParam WITH (NOLOCK)
          WHERE
          FiscalYear = @FiscalYear
          AND Period = @Period
          AND OfficeId = @OfficeId
          AND DebitCreditIndicator = @DebitCreditIndicator
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="int" direction="Input" />
          <param key="Period" name="@Period" type="int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
          <param key="DebitCreditIndicator" name="@DebitCreditIndicator" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTRechargeDCNoteNoParam" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NonTradeExpenseReportApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNonTradeExpenseStatementList" type="Text">
        <commandText>
          <![CDATA[
          SELECT
              ni.InvoiceId,
              ni.NSLInvoiceNo,
              ni.InvoiceNo,
              ni.InvoiceDate,
              nd.Amount,
              ni.DueDate,
              ni.SettlementDate,
              Currency = (SELECT CurrencyCode FROM Currency WHERE CurrencyId=ni.CurrencyId),
              PaymentMethod = (SELECT PaymentMethod FROM NTPaymentMethod WHERE PaymentMethodId=ni.PaymentMethodId),
              OfficeCode = (SELECT OfficeCode FROM Office WHERE OfficeId=ni.OfficeId),
              VendorName = (SELECT VendorName FROM NTVendor WHERE NTVendorId=ni.NTVendorId),
              WorkflowStatus = (SELECT Description FROM workflowStatus WHERE WorkflowStatusId=ni.WorkflowStatusId and RecordTypeId = 5),
              SubmittedBy = (SELECT DisplayName FROM nsldb..UserInfo WHERE UserId=ni.CreatedBy),
              et.ExpenseType
          FROM NTInvoice as ni 
          INNER JOIN NTInvoiceDetail nd ON ni.InvoiceId = nd.InvoiceId AND nd.Status = 1
          INNER JOIN NTExpenseType et ON nd.ExpenseTypeId = et.ExpenseTypeId
          WHERE ni.Status <> 0
              AND ((@InvoiceDateFrom IS NULL AND @InvoiceDateTo IS NULL) OR ni.InvoiceDate BETWEEN @InvoiceDateFrom AND @InvoiceDateTo)
              AND ((@DueDateFrom IS NULL AND @DueDateTo IS NULL) OR ni.DueDate BETWEEN @DueDateFrom AND @DueDateTo)
              AND ((ISNULL(@NSRefNoFrom,'')='' AND ISNULL(@NSRefNoTo,'')='') OR ni.NSLInvoiceNo BETWEEN @NSRefNoFrom AND @NSRefNoTo)
              AND (@NTVendorId = -1 OR ni.NTVendorId = @NTVendorId)
              AND (ni.OfficeId @OfficeIdList)
              AND (ni.WorkflowStatusId @WorkflowStatusIdList)
              
          ]]>
        </commandText>
        <parameters>
          <param key="InvoiceDateFrom" name="@InvoiceDateFrom" type="DateTime" direction="Input" />
          <param key="IOnvoiceDateTo" name="@InvoiceDateTo" type="DateTime" direction="Input" />
          <param key="DuDateFrom" name="@DueDateFrom" type="DateTime" direction="Input" />
          <param key="DueDateTo" name="@DueDateTo" type="DateTime" direction="Input" />
          <param key="NSRefNoFrom" name="@NSRefNoFrom" type="varchar" direction="Input" />
          <param key="NSRefNoTo" name="@NSRefNoTo" type="varchar" direction="Input" />
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="NTVendorId" name="@NTVendorId" type="int" direction="Input" />
          <param key="WorflowStatusIdList" name="@WorkflowStatusIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NonTradeExpenseReport" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTMonthEndStatusApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNTMonthEndStatusByKey" type="Text">
        <commandText>
          SELECT * FROM NTMonthEndStatus
          WHERE RecordId = @RecordId
        </commandText>
        <parameters>
          <param key="RecordId" name="@RecordId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetCurrentNTMonthEndStatusList" type="Text">
        <commandText>
          SELECT * FROM NTMonthEndStatus
          WHERE
          OfficeId @OfficeIdList
          AND Status IN (1, 2)
          ORDER BY OfficeId
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTMonthEndStatusByOfficeIdAndPeriod" type="Text">
        <commandText>
          SELECT * FROM NTMonthEndStatus
          WHERE
          OfficeId = @OfficeId
          AND FiscalYear = @FiscalYear
          AND FiscalPeriod = @FiscalPeriod
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetActiveNTMonthEndStatusList" type="Text">
        <commandText>
          <![CDATA[
          SELECT * FROM NTMonthEndStatus
          WHERE
          OfficeId = @OfficeId
          AND Status > 0
          AND (FiscalYear = @FiscalYear OR @FiscalYear = -1)
          AND (FiscalPeriod = @Period OR @Period = -1)
          ORDER BY FiscalYear, FiscalPeriod
          ]]>
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="Period" name="@Period" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTMonthEndStatus" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTSunInterfaceQueueApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNTSunInterfaceQueueList" type="Text">
        <commandText>
          SELECT TOP 50 a.* FROM NTSunInterfaceQueue a
          WHERE a.Status = 0
        </commandText>
      </dataCommand>

      <dataCommand name="GetRecentNTSunInterfaceQueueList" type="Text">
        <commandText>
          SELECT TOP 500 * FROM NTSunInterfaceQueue ORDER BY QueueId DESC
        </commandText>
      </dataCommand>

      <dataCommand name="GetNTSunInterfaceQueueByKey" type="Text">
        <commandText>
          SELECT * FROM NTSunInterfaceQueue WHERE QueueId = @QueueId
        </commandText>
        <parameters>
          <param key="QueueId" name="@QueueId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTSunInterfaceQueueByCriteria" type="Text">
        <commandText>
          SELECT * FROM NTSunInterfaceQueue WHERE (SourceId = @SourceId OR @SourceId = -1)
          AND SunInterfaceTypeId = @SunInterfaceTypeId
          AND (CategoryId = @CategoryId OR @CategoryId = -1)
          AND FiscalYear = @FiscalYear
          AND Period = @Period
          AND OfficeId = @OfficeId
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="Period" name="@Period" type="Int" direction="Input" />
          <param key="CategoryId" name="@CategoryId" type="Int" direction="Input" />
          <param key="SunInterfaceTypeId" name="@SunInterfaceTypeId" type="Int" direction="Input" />
          <param key="SourceId" name="@SourceId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetMaxNTSunInterfaceQueueId" type="Text">
        <commandText>
          SELECT MAX(QueueId) FROM NTSunInterfaceQueue
        </commandText>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTSunInterfaceQueue" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NSLBankAccountApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNSLBankAccountByKey" type="Text">
        <commandText>
          SELECT * FROM NSLBankAccount
          WHERE NSLBankAccountId = @Key
        </commandText>
        <parameters>
          <param key="Key" name="@Key" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNSLBankAccountByOfficeId" type="Text">
        <commandText>
          SELECT 	*
          FROM NSLBankAccount
          WHERE status = 1
          and (-1 @OfficeIdList or OfficeId @OfficeIdList)
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNSLBankAccount" type="Text">
        <commandText>
          SELECT 	*
          FROM NSLBankAccount AS ba
          WHERE status = 1
          and (-1 @OfficeIdList or OfficeId @OfficeIdList)
          and (-1 @CurrencyIdList or CurrencyId @CurrencyIdList)
          ORDER BY T0Code
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="CurrencyIdList" name="@CurrencyIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NSLBankAccount" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTApproverApt" populateCommands="false">

    <selectCommand>
      <dataCommand name="GetNTApproverByKey" type="Text">
        <commandText>
          SELECT * FROM NTApprover WITH (NOLOCK)
          WHERE OfficeId = @OfficeId
          AND NTApproverId = @UserId
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
          <param key="UserId" name="@UserId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTApproverListByOfficeId" type="Text">
        <commandText>
          SELECT a.* FROM NTApprover a WITH (NOLOCK)
          INNER JOIN NSLDB..UserInfo ui ON ui.UserId = a.NTApproverId AND ui.Status = 'A'
          WHERE a.OfficeId @OfficeIdList
          AND a.Status = 1
          ORDER BY a.OfficeId
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTApprover" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTRoleApt" populateCommands="false">

    <selectCommand>
      <dataCommand name="GetNTRoleList" type="Text">
        <commandText>
          SELECT * FROM NTRole
        </commandText>
      </dataCommand>
      <dataCommand name="GetNTRoleByKey" type="Text">
        <commandText>
          SELECT * FROM NTRole WHERE RoleId = @RoleId
        </commandText>
        <parameters>
          <param key="RoleId" name="@RoleId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTRole" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTUserRoleAccessApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNTUserOfficeList" type="Text">
        <commandText>
          <![CDATA[
				SELECT *
					FROM NTUserRoleAccess WITH (NOLOCK)
					WHERE Status=1
						AND (UserId=-1 OR @UserId=-1 OR UserId = @UserId)
						AND (RoleId=-1 OR @RoleId=-1 OR RoleId = @RoleId)
						AND (CompanyId=-1 OR @CompanyId=-1 OR CompanyId = @CompanyId)
				]]>
        </commandText>
        <parameters>
          <param key="UserId" name="@UserId" type="int" direction="Input" />
          <param key="RoleId" name="@RoleId" type="int" direction="Input" />
          <param key="CompanyId" name="@CompanyId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTUserCompanyList" type="Text">
        <commandText>
          <![CDATA[
				SELECT *
					FROM NTUserRoleAccess WITH (NOLOCK)
					WHERE Status=1
						AND (UserId=-1 OR @UserId=-1 OR UserId = @UserId)
						AND (RoleId=-1 OR @RoleId=-1 OR RoleId = @RoleId)
						AND (OfficeId=-1 OR @OfficeId=-1 OR OfficeId = @OfficeId)
				]]>
        </commandText>
        <parameters>
          <param key="UserId" name="@UserId" type="int" direction="Input" />
          <param key="RoleId" name="@RoleId" type="int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTUserList" type="Text">
        <commandText>
          <![CDATA[
					SELECT *
						FROM NTUserRoleAccess WITH (NOLOCK)
						WHERE Status=1
							AND (OfficeId=-1 OR @OfficeId=-1 OR OfficeId = @OfficeId)
							AND (RoleId=-1 OR @RoleId=-1 OR RoleId = @RoleId)
							AND (CompanyId=-1 OR @CompanyId=-1 OR CompanyId = @CompanyId)
					]]>
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
          <param key="RoleId" name="@RoleId" type="int" direction="Input" />
          <param key="CompanyId" name="@CompanyId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetNTUserRoleAccessByKey" type="Text">
        <commandText>
          <![CDATA[
					SELECT *
						FROM NTUserRoleAccess WITH (NOLOCK)
						WHERE RoleId = @RoleId AND CompanyId = @CompanyId AND OfficeId = @OfficeId AND UserId = @UserId
					]]>
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
          <param key="RoleId" name="@RoleId" type="int" direction="Input" />
          <param key="CompanyId" name="@CompanyId" type="int" direction="Input" />
          <param key="UserId" name="@UserId" type="int" direction="Input" />
        </parameters>
      </dataCommand>


      <!--
		<dataCommand name="GetNTSuperUserList" type="Text">
			<commandText>
				<![CDATA[
					SELECT *
						FROM NTUserRoleAccess WITH (NOLOCK)
						WHERE Status=1
							AND (OfficeId=-1 AND RoleId=-1 AND CompanyId=-1)
							AND (@UserId=-1 OR UserId = @UserId)
					]]>
			</commandText>
			<parameters>
				<param key="UserId" name="@UserId" type="int" direction="Input" />
			</parameters>
		</dataCommand>
		-->
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTUserRoleAccess" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTExpenseNatureApt" populateCommands="false">

    <selectCommand>
      <dataCommand name="GetNTExpenseNatureList" type="Text">
        <commandText>
          SELECT DISTINCT c.* FROM NTVendorExpenseTypeMapping a INNER JOIN NTExpenseType b ON a.ExpenseTypeId = b.ExpenseTypeId AND a.Status = 1 AND b.Status = 1
          AND a.NTVendorId = @NTVendorId
          INNER JOIN NTExpenseNature c ON b.NatureId = c.NatureId AND c.Status = 1
        </commandText>
        <parameters>
          <param key="NTVendorId" name="@NTVendorId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTExpenseNatureByKey" type="Text">
        <commandText>
          SELECT * FROM NTExpenseNature WHERE NatureId = @NatureId
        </commandText>
        <parameters>
          <param key="NatureId" name="@NatureId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTExpenseNature" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NTEpicorSegmentValueApt"  populateCommands="false">
    <selectCommand>
      <dataCommand name="GetNTEpicorSegmentValueByKey" type="Text">
        <commandText>
          SELECT * FROM NTEpicorSegmentValue WHERE SegmentValueId = @Key
        </commandText>
        <parameters>
          <param key="Key" name="@Key" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNTEpicorSegmentValueBySegmentField" type="Text">
        <commandText>
          SELECT * FROM NTEpicorSegmentValue WHERE SegmentField = @SegmentField AND Status = 1
        </commandText>
      </dataCommand>
      <parameters>
        <param key="SegmentField" name="@SegmentField" type="int" direction="Input" />
      </parameters>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NTEpicorSegmentValue" />
    </tableMappings>
  </dataSetAdapter>

</dataOperations>
