<?xml version="1.0" encoding="utf-8" ?>
<dataOperations dataSource="nsldb">
  <dataSetAdapter name="UserInfoApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAll" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo WITH (NOLOCK)
          WHERE Status = 'A'
          ORDER BY DisplayName
        </commandText>
      </dataCommand>
      <dataCommand name="GetUserInfoById" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo
          WHERE UserId=@userid
        </commandText>
        <parameters>
          <param key="UserId" name="@userid" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserInfoByLogin" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo WITH (NOLOCK)
          WHERE (LoginName=@loginname)
          AND (Status = 'A')
          ORDER BY DisplayName
        </commandText>
        <parameters>
          <param key="LoginName" name="@loginname" type="varchar" size="100" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserInfoByEmail" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo WITH (NOLOCK)
          WHERE (Email=@email)
          AND (Status = 'A')
          ORDER BY DisplayName
        </commandText>
        <parameters>
          <param key="Email" name="@email" type="varchar" size="100" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserInfoByWindowLoginName" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo WITH (NOLOCK)
          WHERE (WindowLoginName=@name)
          AND (Status = 'A')
          ORDER BY DisplayName
        </commandText>
        <parameters>
          <param key="Name" name="@name" type="varchar" size="100" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserInfoByCitrixLoginName" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo WITH (NOLOCK)
          WHERE (CitrixLoginName=@name)
          AND (Status = 'A')
          ORDER BY DisplayName
        </commandText>
        <parameters>
          <param key="Name" name="@name" type="varchar" size="100" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserInfoByProductCodeId" type="Text">
        <commandText>
          SELECT DISTINCT a.*
          FROM UserInfo a WITH (NOLOCK) INNER JOIN
          UserSeasonOfficeStructure u WITH (NOLOCK) ON u.UserId = a.UserId
          WHERE (OfficeStructureId = @ProductCodeId)
          AND (a.Status = 'A')
          ORDER BY a.DisplayName
        </commandText>
        <parameters>
          <param key="ProductCodeId" name="@ProductCodeId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserListByUserSeasonOfficeStructureCriteria" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo WITH (NOLOCK)
          WHERE UserId IN (
          SELECT s.UserId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK) INNER JOIN
          UserInfo u WITH (NOLOCK) ON u.UserId=s.UserId
          WHERE (@UserId = -1 OR s.UserId = @UserId)
          AND (OfficeStructureId @OfficeStructureIds)
          AND (@OfficeStructureTypeId = -1 OR s.OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@SeasonId = -1 OR s.SeasonId = @SeasonId)
          AND (@UserStatus='%' OR u.Status = @UserStatus)
          AND (s.Status = 1)
          )
        </commandText>
        <parameters>
          <param key="OfficeStructureIds" name="@OfficeStructureIds" type="ArrayInt" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserListByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo WITH (NOLOCK)
          WHERE (@UserId = 0 OR UserId = @UserId)
          AND (Status = @Status OR @Status = '')
          AND (DisplayName LIKE '%' + @Name + '%' OR @Name = '')
          AND (UserId IN
          (SELECT UserId
          FROM UserSeasonOfficeStructure a WITH (NOLOCK) INNER JOIN
          OfficeStructure b WITH (NOLOCK) ON a.OfficeStructureId = b.OfficeStructureId
          WHERE a.OfficeStructureTypeId = @OfficeStructureTypeId
          AND (@OfficeStructureId = 0 OR a.OfficeStructureId = @OfficeStructureId)
          AND (@OfficeId = 0 OR b.OfficeId = @OfficeId)
          AND (a.Status = 1)
          AND (b.Status = 1)))
          ORDER BY DisplayName
        </commandText>
        <parameters>
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="Name" name="@Name" type="Varchar" direction="Input" />
          <param key="Status" name="@Status" type="Varchar" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetProductManagerList" type="Text">
        <commandText>
          SELECT ui.*
          FROM UserInfo ui WITH (NOLOCK) INNER JOIN
          UserGradeRelation ugr WITH (NOLOCK) ON ugr.UserId = ui.UserId
          WHERE (@OfficeId = -1 OR ugr.OfficeId = @OfficeId)
          AND (ugr.GradeName = 'ProductManager')
          ORDER BY ui.DisplayName
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserListByCriteriaForUserPopulate" type="Text">
        <commandText>
          SELECT *
          FROM UserInfo WITH (NOLOCK)
          WHERE (Status IN ('A', 'O')) AND (UserId @StaffList)
        </commandText>
        <parameters>
          <param key="StaffList" name="@StaffList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserListByUserPositionId" type="Text">
        <commandText>
          SELECT DISTINCT a.*
          FROM UserInfo a WITH (NOLOCK) INNER JOIN
          UserProfileRequest u WITH (NOLOCK) ON u.UserId = a.UserId
          WHERE (u.UserPositionId = @UserPositionId)
          AND (a.Status = 'A')
          ORDER BY a.DisplayName
        </commandText>
        <parameters>
          <param key="UserPositionId" name="@UserPositionId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMMListByProductDepartmentId" type="Text">
        <commandText>
          SELECT DISTINCT a.*
          FROM UserInfo a WITH (NOLOCK) INNER JOIN
          UserSeasonOfficeStructure b WITH (NOLOCK) ON a.UserApplicationRole = 1 AND (a.Status = 'A') AND (b.OfficeStructureId = @ProductDepartmentId) AND a.UserId = b.UserId
          AND b.Status = 1 AND b.OfficeStructureTypeId = 60
        </commandText>
        <parameters>
          <param key="ProductDepartmentId" name="@ProductDepartmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMMListByProductTeamId" type="Text">
        <commandText>
          SELECT DISTINCT a.*
          FROM UserInfo a WITH (NOLOCK) INNER JOIN
          UserSeasonOfficeStructure b WITH (NOLOCK) ON a.UserApplicationRole = 1 AND (a.Status = 'A') AND (b.OfficeStructureId = @ProductTeamId) AND a.UserId = b.UserId
          AND b.Status = 1 AND b.OfficeStructureTypeId = 50 AND b.Status = 1
          INNER JOIN OfficeStructure d ON b.OfficeStructureId = d.OfficeStructureId AND d.Status = 1
          INNER JOIN UserSeasonOfficeStructure c ON a.UserId = c.UserId AND c.Status = 1 AND c.OfficeStructureTypeId = 10
          INNER JOIN OfficeStructure e ON c.OfficeStructureId = e.OfficeStructureId AND d.Status = 1
          WHERE CASE WHEN e.OfficeId IN (1,4,19) THEN 1 WHEN e.OfficeId IN (3, 14) THEN 3 ELSE e.OfficeId END = CASE WHEN d.OfficeId IN (1,4,19) THEN 1 WHEN d.OfficeId IN (3,14) THEN 3 ELSE d.OfficeId END
        </commandText>
        <parameters>
          <param key="ProductTeamId" name="@ProductTeamId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxUserId" type="Text">
        <commandText>
          <![CDATA[
					SELECT MAX(UserId) FROM UserInfo
					WHERE UserId <> 99999
					]]>
        </commandText>
      </dataCommand>
      <!--dataCommand name="GetUserListFromUserSeasonOfficeStructureByUserId_old" type="Text">
				<commandText>
						SELECT UserId, DisplayName
						 FROM UserInfo
						WHERE
						UserId IN
						(
							SELECT userSeasonOfficeStructure.UserId FROM userSeasonOfficeStructure
							INNER JOIN userSeasonOfficeStructure ProductCode ON ProductCode.Status = 1
								AND ProductCode.OfficeStructureId = userSeasonOfficeStructure.OfficeStructureId
								AND (ProductCode.OfficeStructureTypeId = @OfficeStructureTypeId)
								AND @UserId IN (ProductCode.UserId, -1)
								AND @SeasonId IN (ProductCode.SeasonId, -1)
							WHERE userSeasonOfficeStructure.Status = 1
						)

						ORDER BY DisplayName
				</commandText>
				<parameters>
					<param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
					<param key="UserId" name="@UserId" type="Int" direction="Input" />
					<param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
				</parameters>
			</dataCommand-->
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UserInfo" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="UserSecurityLevelApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="getUserSecurityLevelByLevel" type="Text">
        <commandText>
          SELECT *
          FROM UserSecurityLevel WITH (NOLOCK)
          WHERE SecurityLevel=@SecurityLevel
        </commandText>
        <parameters>
          <param key="SecurityLevel" name="@SecurityLevel" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UserSecurityLevel" />
    </tableMappings>
  </dataSetAdapter>
  <!--Special Apt-->
  <dataSetAdapter name="UserSelectionApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetUserSelectionByKey" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo with (nolock)
          WHERE UserId = @UserId
        </commandText>
        <parameters>
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionListByOfficeJobNature" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo WITH (NOLOCK)
          WHERE UserId IN (
          SELECT s.UserId FROM UserSeasonOfficeStructure s WITH (NOLOCK)
          INNER JOIN UserInfo u WITH (NOLOCK) ON u.UserId = s.UserId AND s.OfficeStructureTypeId = 10 INNER JOIN
          OfficeStructure os WITH (NOLOCK) ON s.OfficeStructureId = os.OfficeStructureId AND s.OfficeStructureTypeId = os.OfficeStructureTypeId
          WHERE (s.Status = 1)
          AND (os.OfficeId @OfficeIdList)
          AND (u.JobNatureId @JobNatureIdList)
          AND (@UserStatus IN ('%', u.Status))
          )
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="JobNatureIdList" name="@JobNatureIdList" type="ArrayInt" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionListByProductCodeIdJobNature" type="Text">
        <commandText>
          SELECT DISTINCT a.UserId, a.DisplayName, a.Email
          FROM UserInfo a WITH (NOLOCK)
          INNER JOIN UserSeasonOfficeStructure u with (nolock) ON u.UserId = a.UserId AND u.Status = 1
          WHERE OfficeStructureId = @ProductCodeId
          AND (a.status = 'A')
          AND (a.JobNatureId @JobNatureIdList)
          ORDER BY DisplayName
        </commandText>
        <parameters>
          <param key="ProductCodeId" name="@ProductCodeId" type="int" direction="Input" />
          <param key="JobNatureIdList" name="@JobNatureIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionListByProductCodeIdRoleId" type="Text">
        <commandText>
          SELECT DISTINCT a.UserId, a.DisplayName, a.Email
          FROM UserInfo a WITH (NOLOCK)
          WHERE a.UserId in
          (Select UserRole.UserId from UserRole with (nolock) Where UserRole.RoleId @RoleIdList)
          AND (a.status = 'A')
          AND Exists	(
          Select top 1 u.UserId from UserSeasonOfficeStructure u with (nolock)
          where u.UserId = a.UserId
          And u.OfficeStructureId = @ProductCodeId
          And u.Status = 1
          )

          ORDER BY a.DisplayName
        </commandText>
        <parameters>
          <param key="ProductCodeId" name="@ProductCodeId" type="int" direction="Input" />
          <param key="RoleIdList" name="@RoleIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionByUserSeasonOfficeStructureCriteria" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo WITH (NOLOCK)
          WHERE UserId IN (
          SELECT s.UserId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK)
          INNER JOIN UserInfo u WITH (NOLOCK) ON u.UserId=s.UserId
          WHERE (OfficeStructureId @OfficeStructureIds)
          AND (@OfficeStructureTypeId IN (-1, s.OfficeStructureTypeId))
          AND (@UserId IN (-1, s.UserId))
          AND (@SeasonId IN (-1, s.SeasonId))
          AND (@UserStatus IN ('%', u.Status))
          AND (u.JobNatureId @JobNatureIdList)
          AND (u.DisplayName LIKE '%' + @Name + '%' OR @Name = '')
          AND (s.Status = 1)
          )
        </commandText>
        <parameters>
          <param key="OfficeStructureIds" name="@OfficeStructureIds" type="ArrayInt" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
          <param key="Name" name="@Name" type="varchar" direction="Input" />
          <param key="JobNatureIdList" name="@JobNatureIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionByUserSeasonOfficeStructureCriteriaAndTerminationDate" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo WITH (NOLOCK)
          WHERE UserId IN (
          SELECT s.UserId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK)
          INNER JOIN UserInfo u WITH (NOLOCK) ON u.UserId=s.UserId
          WHERE (OfficeStructureId @OfficeStructureIds)
          AND (@OfficeStructureTypeId IN (-1, s.OfficeStructureTypeId))
          AND (@UserId IN (-1, s.UserId))
          AND (@SeasonId IN (-1, s.SeasonId))
          AND (@UserStatus IN ('%', u.Status) OR (@TerminationDateAfter IS NULL OR (u.Status = 'I' AND u.ModifiedOn > @TerminationDateAfter)))
          AND (u.JobNatureId @JobNatureIdList)
          AND (u.DisplayName LIKE '%' + @Name + '%' OR @Name = '')
          AND (s.Status = 1)
          )
          ORDER BY DisplayName
        </commandText>
        <parameters>
          <param key="OfficeStructureIds" name="@OfficeStructureIds" type="ArrayInt" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
          <param key="Name" name="@Name" type="varchar" direction="Input" />
          <param key="JobNatureIdList" name="@JobNatureIdList" type="ArrayInt" direction="Input" />
          <param key="TerminationDateAfter" name="@TerminationDateAfter" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionByUserIdList" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo WITH (NOLOCK)
          WHERE (Status = 'A')
          AND (UserId @UserIdList)
        </commandText>
        <parameters>
          <param key="UserIdList" name="@UserIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionByName" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo with (nolock)
          WHERE (Status = 'A')
          AND (JobNatureId @JobNatureIdList)
          AND (DisplayName LIKE '%' + @Name + '%' OR @Name = '')
        </commandText>
        <parameters>
          <param key="Name" name="@Name" type="varchar" direction="Input" />
          <param key="JobNatureIdList" name="@JobNatureIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionByNameAndOfficeId" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo WITH (NOLOCK)
          WHERE UserId IN
          (SELECT a.UserId
          FROM UserSeasonOfficeStructure a WITH (NOLOCK)
          INNER JOIN OfficeStructure b WITH (NOLOCK) ON a.OfficeStructureId = b.OfficeStructureId
          WHERE (@OfficeId IN (b.OfficeId, -1))
          AND (b.Status = 1)
          AND (a.Status = 1))
          AND (Status = 'A')
          AND (JobNatureId @JobNatureIdList)
          AND (DisplayName LIKE '%' + @Name + '%' OR @Name = '')
        </commandText>
        <parameters>
          <param key="Name" name="@Name" type="varchar" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
          <param key="JobNatureIdList" name="@JobNatureIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionListFromUserSeasonOfficeStructureByUserIdAndName" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo WITH (NOLOCK)
          WHERE UserId IN
          (SELECT UserId
          FROM UserSeasonOfficeStructure WITH (NOLOCK)
          WHERE OfficeStructureId IN
          (SELECT OfficeStructureId
          FROM SeasonOfficeStructure WITH (NOLOCK)
          WHERE (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@SeasonId IN (SeasonId, -1))
          AND (Status=1))
          AND (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@UserId IN (UserId, -1))
          AND (Status = 1))
          AND (JobNatureId @JobNatureIdList)
          AND (@Status IN ('', '%', Status) )
          AND (DisplayName LIKE '%' + @Name + '%')
          ORDER BY DisplayName
        </commandText>
        <!--commandText>
					SELECT UserInfo.UserId, UserInfo.DisplayName, UserInfo.Email

					FROM UserInfo
						INNER JOIN (
							SELECT DISTINCT UserSeasonOfficeStructure.UserId
							FROM UserSeasonOfficeStructure

							INNER JOIN UserSeasonOfficeStructure ProductCode ON ProductCode.Status = 1
								AND ProductCode.OfficeStructureId = UserSeasonOfficeStructure.OfficeStructureId
								AND (ProductCode.OfficeStructureTypeId = @OfficeStructureTypeId)
								AND @UserId IN (ProductCode.UserId, -1)

							INNER JOIN SeasonOfficeStructure Season (index = IDX_OfficeStructureIdOfficeStructureTypeIdSeasonId) ON Season.status=1
								AND @SeasonId IN (Season.SeasonId, -1)
								AND ProductCode.OfficeStructureId = Season.OfficeStructureId
								AND (ProductCode.OfficeStructureTypeId = @OfficeStructureTypeId)

							WHERE UserSeasonOfficeStructure.Status = 1
						) t ON UserInfo.Userid = t.Userid

					WHERE JobNatureId @JobNatureIdList
						AND (@Status IN ('', '%', Status) )
						AND (UserInfo.DisplayName LIKE '%' + @Name + '%')
					ORDER BY DisplayName
				</commandText-->
        <parameters>
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="JobNatureIdList" name="@JobNatureIdList" type="ArrayInt" direction="Input" />
          <param key="Status" name="@Status" type="Varchar" direction="Input" />
          <param key="Name" name="@Name" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSelectionListFromUserSeasonOfficeStructureByUserId" type="Text">
        <commandText>
          SELECT UserId, DisplayName, Email
          FROM UserInfo WITH (NOLOCK)
          WHERE UserId IN
          (SELECT UserId
          FROM UserSeasonOfficeStructure WITH (NOLOCK)
          WHERE OfficeStructureId IN
          (SELECT OfficeStructureId
          FROM SeasonOfficeStructure WITH (NOLOCK)
          WHERE (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@SeasonId IN (SeasonId, -1))
          AND (Status=1))
          AND (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@UserId IN (UserSeasonOfficeStructure.UserId, -1))
          AND (Status = 1))
          AND (JobNatureId @JobNatureIdList)
          AND (@Status IN ('', '%', Status))
          ORDER BY DisplayName
        </commandText>
        <!--
					SELECT UserInfo.UserId, UserInfo.DisplayName, UserInfo.Email

					FROM UserInfo
						INNER JOIN (
							SELECT DISTINCT UserSeasonOfficeStructure.UserId
							FROM UserSeasonOfficeStructure

							INNER JOIN UserSeasonOfficeStructure ProductCode ON ProductCode.Status = 1
								AND ProductCode.OfficeStructureId = UserSeasonOfficeStructure.OfficeStructureId
								AND (ProductCode.OfficeStructureTypeId = @OfficeStructureTypeId)
								AND @UserId IN (ProductCode.UserId, -1)

							INNER JOIN SeasonOfficeStructure Season (index = IDX_OfficeStructureIdOfficeStructureTypeIdSeasonId) ON Season.status=1
								AND @SeasonId IN (Season.SeasonId, -1)
								AND ProductCode.OfficeStructureId = Season.OfficeStructureId
								AND (ProductCode.OfficeStructureTypeId = @OfficeStructureTypeId)

							WHERE UserSeasonOfficeStructure.Status = 1
						) t ON UserInfo.Userid = t.Userid

					WHERE JobNatureId @JobNatureIdList
						AND (@Status IN ('', '%', Status) )
					ORDER BY DisplayName

						SELECT UserId, DisplayName
						 FROM UserInfo
						WHERE
						UserId IN
						(
							SELECT UserSeasonOfficeStructure.UserId FROM UserSeasonOfficeStructure
							INNER JOIN UserSeasonOfficeStructure ProductCode ON ProductCode.Status = 1
								AND ProductCode.OfficeStructureId = UserSeasonOfficeStructure.OfficeStructureId
								AND (ProductCode.OfficeStructureTypeId = @OfficeStructureTypeId)
								AND @UserId IN (ProductCode.UserId, -1)
							INNER JOIN SeasonOfficeStructure Season ON Season.status=1
								AND @SeasonId IN (Season.SeasonId, -1)
								AND ProductCode.OfficeStructureId = Season.OfficeStructureId
								AND (ProductCode.OfficeStructureTypeId = @OfficeStructureTypeId)
							WHERE UserSeasonOfficeStructure.Status = 1
						)
						AND JobNatureId @JobNatureIdList
						AND (Status = @Status OR @Status = '')

						ORDER BY DisplayName
				-->
        <!--
				SELECT UserId, DisplayName
						 FROM UserInfo
						WHERE
						UserId IN
						(
							SELECT userSeasonOfficeStructure.UserId FROM userSeasonOfficeStructure
							INNER JOIN userSeasonOfficeStructure ProductCode ON ProductCode.Status = 1
								AND ProductCode.OfficeStructureId = userSeasonOfficeStructure.OfficeStructureId
								AND (ProductCode.OfficeStructureTypeId = @OfficeStructureTypeId)
								AND @UserId IN (ProductCode.UserId, -1)
								AND @SeasonId IN (ProductCode.SeasonId, -1)
							WHERE userSeasonOfficeStructure.Status = 1
						)
						ORDER BY DisplayName

				-->
        <parameters>
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="JobNatureIdList" name="@JobNatureIdList" type="ArrayInt" direction="Input" />
          <param key="Status" name="@Status" type="Varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UserSelection" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="PositionApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetPositions" type="Text">
        <commandText>
          SELECT *
          FROM Position WITH (NOLOCK)
          WHERE (Status = 1)
          ORDER BY Description
        </commandText>
      </dataCommand>
      <dataCommand name="GetPositionById" type="Text">
        <commandText>
          SELECT *
          FROM Position WITH (NOLOCK)
          WHERE (PositionId=@id)
          AND (Status = 1)
          ORDER BY Description
        </commandText>
        <parameters>
          <param key="PositionId" name="@id" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Position" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ChinaGBTestExemptionApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetChinaGBTestExemption" type="Text">
        <commandText>
          <![CDATA[
          SELECT *
          FROM ChinaGBTestExemption WITH (NOLOCK)
          WHERE (Status = 1)
          AND (SeasonId = @SeasonId OR SeasonId = -1)
          AND (ProductTeamId = @ProductTeamId OR ProductTeamId = -1)
          AND (VendorId = @VendorId OR VendorId = -1)
          AND (UKSubGroup IS NULL OR UKSubGroup = '' OR UKSubGroup = @UKSubGroup)
          AND (ProductId = @ProductId OR ProductId = -1)
          ]]>
        </commandText>
        <parameters>
          <param key="SeasonId" name="@SeasonId" type="int" direction="Input" />
          <param key="ProductTeamId" name="@ProductTeamId" type="int" direction="Input" />
          <param key="VendorId" name="@VendorId" type="int" direction="Input" />
          <param key="UKSubGroup" name="@UKSubGroup" type="varchar" direction="Input" />
          <param key="ProductId" name="@ProductId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ChinaGBTestExemption" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="AccountCodeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAccountCodeListByType" type="Text">
        <commandText>
          SELECT *
          FROM AccountCode WITH (NOLOCK)
          WHERE (Type=@Type)
          AND (IsCurrent=1)
          ORDER BY Code
        </commandText>
        <parameters>
          <param key="Type" name="@Type" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAccountCodeById" type="Text">
        <commandText>
          SELECT *
          FROM AccountCode with (nolock)
          WHERE (AccountCodeId=@AccountCodeId)
          AND (@IsCurrent = -1 OR IsCurrent = @IsCurrent)
        </commandText>
        <parameters>
          <param key="AccountCodeId" name="@AccountCodeId" type="int" direction="Input" />
          <param key="IsCurrent" name="@IsCurrent" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AccountCode" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="CountryApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCountryListByType" type="Text">
        <commandText>
          SELECT *
          FROM Country WITH (NOLOCK)
          ORDER BY Name
        </commandText>
      </dataCommand>
      <dataCommand name="GetCountryById" type="Text">
        <commandText>
          SELECT *
          FROM Country with (nolock)
          WHERE CountryId=@CountryId
        </commandText>
        <parameters>
          <param key="CountryId" name="@CountryId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Country" />
    </tableMappings>
  </dataSetAdapter>





  <dataSetAdapter name="CityApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCityDefByKey" type="Text">
        <commandText>
          SELECT *
          FROM City WITH (NOLOCK)
          WHERE CityId = @CityId
          AND Status = 1
          order by CityCode
        </commandText>
        <parameters>
          <param key="CityId" name="@CityId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetCityList" type="Text">
        <commandText>
          SELECT *
          FROM City WITH (NOLOCK)
          WHERE Status = 1
          order by CityCode
        </commandText>
      </dataCommand>

      <dataCommand name="GetCityListByCountryId" type="Text">
        <commandText>
          SELECT *
          FROM City WITH (NOLOCK)
          WHERE status = 1 and (@CountryId = -1 or CountryId = @CountryId)
          order by CityCode
        </commandText>
        <parameters>
          <param key="CountryId" name="@CountryId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetCityListByCityCode" type="Text">
        <commandText>
          SELECT *
          FROM City WITH (NOLOCK)
          WHERE status = 1 and CityCode = @CityCode
          order by CityDesc
        </commandText>
        <parameters>
          <param key="CityCode" name="@CityCode" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="City" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="CurrencyApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCurrencyListByType" type="Text">
        <commandText>
          SELECT *
          FROM Currency WITH (NOLOCK)
          ORDER BY CurrencyCode
        </commandText>
      </dataCommand>
      <dataCommand name="GetCurrencyById" type="Text">
        <commandText>
          SELECT *
          FROM Currency with (nolock)
          WHERE CurrencyId=@CurrencyId
        </commandText>
        <parameters>
          <param key="CurrencyId" name="@CurrencyId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetCurrencyByCurrencyCode" type="Text">
        <commandText>
          SELECT *
          FROM Currency WITH (NOLOCK)
          WHERE CurrencyCode=@CurrencyCode
        </commandText>
        <parameters>
          <param key="CurrencyCode" name="@CurrencyCode" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Currency" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="SeasonApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetSeasonListByType" type="Text">
        <commandText>
          SELECT SeasonId, Code, Description
          FROM Season WITH (NOLOCK)
          WHERE (Status=1)
          ORDER BY SeasonId desc
        </commandText>
      </dataCommand>
      <dataCommand name="GetCurrentSeasonListByType" type="Text">
        <commandText>
          SELECT SeasonId, Code, Description
          FROM Season WITH (NOLOCK)
          WHERE SUBSTRING(Code, 4, 5) >= YEAR(GETDATE()) - 1
          ORDER BY seasonId desc
        </commandText>
      </dataCommand>
      <dataCommand name="GetSeasonById" type="Text">
        <commandText>
          SELECT SeasonId, Code, Description
          FROM Season with (nolock)
          WHERE SeasonId=@SeasonId
        </commandText>
        <parameters>
          <param key="SeasonId" name="@SeasonId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetSeasonByCode" type="Text">
        <commandText>
          SELECT SeasonId, Code, Description
          FROM Season with (nolock)
          WHERE Code=@SeasonCode
        </commandText>
        <parameters>
          <param key="SeasonCode" name="@SeasonCode" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetSeasonListByUserSeasonOfficeStructureCriteria" type="Text">
        <commandText>
          SELECT SeasonId, Code, Description
          FROM Season WITH (NOLOCK)
          WHERE SeasonId IN (
          SELECT Sea.SeasonId
          FROM SeasonOfficeStructure Sea WITH (NOLOCK)
          WHERE @OfficeStructureId IN (-1, Sea.OfficeStructureId)
          AND Sea.OfficeStructureId IN
          (
          SELECT OfficeStructureId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK)
          WHERE (@UserId IN (-1, s.UserId))
          AND (@OfficeStructureId IN (-1, s.OfficeStructureId))
          AND (@OfficeStructureTypeId IN (-1 , s.OfficeStructureTypeId))
          AND (@Status IN (-1, s.Status))
          AND EXISTS
          (SELECT TOP 1 UserId
          FROM UserInfo u WITH (NOLOCK)
          WHERE u.UserId = s.UserId AND @UserStatus IN ('%', u.Status))
          )
          AND @OfficeStructureTypeId IN (-1, Sea.OfficeStructureTypeId)
          AND @SeasonId IN (-1, Sea.SeasonId)
          AND Sea.Status = 1
          )
        </commandText>
        <!--
						SELECT Sea.SeasonId FROM UserSeasonOfficeStructure s
						INNER JOIN UserInfo u ON
							(@UserStatus IN ('%', u.Status))
							AND u.UserId=s.UserId
						INNER JOIN SeasonOfficeStructure Sea ON
							Sea.Status=1
							AND @OfficeStructureTypeId IN (-1, Sea.OfficeStructureTypeId)
							AND @OfficeStructureId IN (-1, Sea.OfficeStructureId)
							AND @SeasonId IN (-1, Sea.SeasonId)
							AND Sea.OfficeStructureId = s.OfficeStructureId
						WHERE (@OfficeStructureId IN (-1, s.OfficeStructureId))
						AND (@OfficeStructureTypeId IN (-1, s.OfficeStructureTypeId))
						AND (@UserId IN (-1, s.UserId))
						AND (@Status IN (-1, s.Status))
						-->
        <!--commandText>
					SELECT * FROM Season
					WHERE SeasonId IN (
						SELECT s.SeasonId FROM UserSeasonOfficeStructure s
						JOIN UserInfo u ON u.UserId=s.UserId
						WHERE (@officeStructureId = -1 OR s.OfficeStructureId = @OfficeStructureId)
						AND (@OfficeStructureTypeId = -1 OR s.OfficeStructureTypeId = @OfficeStructureTypeId)
						AND (@UserId = -1 OR s.UserId = @UserId)
						AND (@SeasonId = -1 OR s.SeasonId = @SeasonId)
						AND (@Status = -1 OR s.Status = @Status)
						AND (@UserStatus='%' OR u.Status = @UserStatus)
					)
				</commandText-->
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="Status" name="@Status" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Season" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="TimeDiffApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetTimeDiffByOffice" type="Text">
        <commandText>
          SELECT *
          FROM TimeDiff with (nolock)
          WHERE OfficeId = @OfficeId
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="TimeDiff" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="LocationApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLocationList" type="Text">
        <commandText>
          SELECT *
          FROM Location WITH (NOLOCK)
          WHERE (@Status='0' OR Status=@Status)
          AND (@CountryId=0 OR CountryId=@CountryId)
          ORDER BY Name
        </commandText>
        <parameters>
          <param key="CountryId" name="@CountryId" type="int" direction="Input" />
          <param key="Status" name="@Status" type="varchar" size="10" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetLocationListByZone" type="Text">
        <commandText>
          SELECT *
          FROM Location WITH (NOLOCK)
          WHERE (@Status='0' OR Status=@Status)
          AND (@ZoneId=0 OR ZoneId=@ZoneId)
          ORDER BY Name
        </commandText>
        <parameters>
          <param key="ZoneId" name="@ZoneId" type="int" direction="Input" />
          <param key="Status" name="@Status" type="varchar" size="10" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetLocationListByStatus" type="Text">
        <commandText>
          SELECT *
          FROM Location WITH (NOLOCK)
          WHERE (CountryId IN
          (SELECT CountryId
          FROM Location with (nolock)
          WHERE (@Status='0' OR Status=@Status)))
          AND (LocationId @LocationIds)
          ORDER BY Name
        </commandText>
        <parameters>
          <param key="Status" name="@Status" type="varchar" size="10" direction="Input" />
          <param key="LocationIds" name="@LocationIds" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetLocationById" type="Text">
        <commandText>
          SELECT *
          FROM Location with (nolock)
          WHERE LocationId=@LocationId
        </commandText>
        <parameters>
          <param key="LocationId" name="@LocationId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetLocationListById" type="Text">
        <commandText>
          SELECT *
          FROM Location WITH (NOLOCK)
          WHERE LocationId @LocationIds
        </commandText>
        <parameters>
          <param key="LocationIds" name="@LocationIds" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Location" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="LocationCodeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLocationCodeById" type="Text">
        <commandText>
          SELECT *
          FROM LocationCode with (nolock)
          WHERE LocationId=@LocationId
        </commandText>
        <parameters>
          <param key="LocationId" name="@LocationId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LocationCode" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="ZoneApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetZoneById" type="Text">
        <commandText>
          SELECT *
          FROM Zone with (nolock)
          WHERE ZoneId=@ZoneId
        </commandText>
        <parameters>
          <param key="ZoneId" name="@ZoneId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetZoneList" type="Text">
        <commandText>
          SELECT *
          FROM Zone
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Zone" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="CountryOfOriginApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCountryOfOriginList" type="Text">
        <commandText>
          SELECT *
          FROM CountryOfOrigin WITH (NOLOCK)
          ORDER BY Name
        </commandText>
      </dataCommand>

      <dataCommand name="GetCountryOfOriginByKey" type="Text">
        <commandText>
          SELECT *
          FROM CountryOfOrigin with (nolock)
          WHERE CountryOfOriginId=@CountryOfOriginId
        </commandText>
        <parameters>
          <param key="CountryOfOriginId" name="@CountryOfOriginId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetCountryOfOriginByCode" type="Text">
        <commandText>
          SELECT * FROM CountryOfOrigin WITH (NOLOCK)
          WHERE Code = @Code
        </commandText>
        <parameters>
          <param key="Code" name="@Code" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="CountryOfOrigin" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="OfficeStructureAccountCodeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetOfficeStructureAccountCodeByKey" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructureAccountCode with (nolock)
          WHERE OfficeStructureId = @OfficeStructureId
        </commandText>
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="OfficeStructureAccountCode" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="OfficeStructureApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetOfficeStructureByKey" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure with (nolock)
          WHERE OfficeStructureId = @OfficeStructureId
        </commandText>
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeStructureByName" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure WITH (NOLOCK)
          WHERE (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@Name='' OR Description LIKE @Name+'%')
          AND (Status = 1)
          ORDER BY Code, Description
        </commandText>
        <parameters>
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="Name" name="@Name" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeStructureByCode" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure WITH (NOLOCK)
          WHERE (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@Code='' OR Code LIKE @Code+'%')
          AND (Status = 1)
          ORDER BY Code, Description
        </commandText>
        <parameters>
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="Code" name="@Code" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeStructureByKeyWithExactMatch" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure WITH (NOLOCK)
          WHERE (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (OfficeId = @OfficeId)
          AND (Code = @Code)
          AND (Status = 1)
          ORDER BY Code, Description
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="Code" name="@Code" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeStructureByStructType" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure WITH (NOLOCK)
          WHERE (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (OfficeId = @OfficeId)
          AND (OfficeRegionId = @OfficeRegionId)
          AND (Status = 1)
          ORDER BY Code, Description
        </commandText>
        <parameters>
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="OfficeRegionId" name="@OfficeRegionId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeStructureListByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure WITH (NOLOCK)
          WHERE (@OfficeStructureTypeId IN (-1, OfficeStructureTypeId))
          AND (@OfficeId IN (-1, OfficeId))
          AND (ParentId @ParentIds)
          AND (@OfficeRegionId IN (-1, OfficeRegionId))
          AND (@OfficeDivisionId IN (-1, OfficeDivisionId))
          AND (@IsNodeDefault IN (-1, IsNodeDefault))
          AND (@Status IN (-1, Status))
          ORDER BY Code, Description
        </commandText>
        <!--
					SELECT * FROM OfficeStructure WHERE
					(OfficeStructureId = @OfficeStructureId OR @OfficeStructureId = -1) AND
					(@OfficeStructureTypeId = -1 OR OfficeStructureTypeId = @OfficeStructureTypeId) AND
					(@ParentId = -1 OR ParentId = @ParentId) AND
					(@OfficeRegionId = -1 OR OfficeRegionId = @OfficeRegionId) AND
					(@OfficeDivisionId = -1 OR OfficeDivisionId = @OfficeDivisionId) AND
					(@OfficeId = -1 OR OfficeId = @OfficeId) AND
					(@StructureLevel = -1 OR StructureLevel = @StructureLevel) AND
					(@SeqNo = -1 OR SeqNo = @SeqNo) AND
					(@Status = -1 OR Status = @Status) AND
					(@IsNodeDefault = -1 OR IsNodeDefault = @IsNodeDefault)
					ORDER BY Code, Description
				-->
        <parameters>
          <!--param key="OfficeStructureId" name="@OfficeStructureId" type="int" direction="Input" /-->
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="int" direction="Input" />
          <param key="ParentIds" name="@ParentIds" type="ArrayInt" direction="Input" />
          <param key="OfficeRegionId" name="@OfficeRegionId" type="int" direction="Input" />
          <param key="OfficeDivisionId" name="@OfficeDivisionId" type="int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
          <!--param key="StructureLevel" name="@StructureLevel" type="int" direction="Input" /-->
          <!--param key="SeqNo" name="@SeqNo" type="int" direction="Input" /-->
          <param key="Status" name="@Status" type="int" direction="Input" />
          <param key="IsNodeDefault" name="@IsNodeDefault" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeStructureListByUserSeasonOfficeStructureCriteria" type="Text">

        <commandText>

          SELECT Distinct OfficeStructure.*

          FROM OfficeStructure WITH (NOLOCK)

          INNER JOIN SeasonOfficeStructure WITH (NOLOCK) on OfficeStructure.OfficeStructureId = SeasonOfficeStructure.OfficeStructureId
          AND (@OfficeStructureTypeId = -1 or SeasonOfficeStructure.OfficeStructureTypeId = @OfficeStructureTypeId)
          AND ( @SeasonId = -1 or SeasonId = @SeasonId  )
          AND SeasonOfficeStructure.Status = 1

          INNER JOIN UserSeasonOfficeStructure WITH (NOLOCK) on OfficeStructure.OfficeStructureId = UserSeasonOfficeStructure.OfficeStructureId
          AND (@UserId = -1 or UserSeasonOfficeStructure.UserId = @UserId)
          AND (@OfficeStructureTypeId = -1 or UserSeasonOfficeStructure.OfficeStructureTypeId = @OfficeStructureTypeId)
          AND UserSeasonOfficeStructure.Status = 1

          INNER JOIN UserInfo WITH (NOLOCK) on UserInfo.UserId = UserSeasonOfficeStructure.UserId and (@UserStatus = UserInfo.Status or @UserStatus = '%')

          WHERE (OfficeStructure.OfficeStructureId @OfficeStructureIds)
          AND (@OfficeId = -1 or OfficeStructure.OfficeId = @OfficeId)
          AND (ParentId @ParentIds)


        </commandText>

        <!--commandText>
        	SELECT *
					FROM OfficeStructure WITH (NOLOCK)
					WHERE (OfficeStructureId @OfficeStructureIds)
					AND OfficeStructureId IN
					(
						SELECT OfficeStructureId
						FROM UserSeasonOfficeStructure s WITH (NOLOCK)
						WHERE (@UserId IN (-1, s.UserId))
						AND (s.OfficeStructureId @OfficeStructureIds)
						AND (@OfficeStructureTypeId IN (-1 , s.OfficeStructureTypeId))
						AND (s.Status = 1)
						AND EXISTS
							(SELECT TOP 1 UserId
							FROM UserInfo u WITH (NOLOCK)
							WHERE u.UserId = s.UserId AND @UserStatus IN ('%', u.Status))
					)
					AND OfficeStructureId IN
					(
						SELECT OfficeStructureId
						FROM SeasonOfficeStructure WITH (NOLOCK)
						WHERE (OfficeStructureId @OfficeStructureIds)
						AND (@OfficeStructureTypeId IN (-1 , OfficeStructureTypeId))
						AND @SeasonId IN (-1, SeasonId)
						AND (Status = 1)
					)
					AND (@OfficeId IN (-1, OfficeId))
					AND (ParentId @ParentIds)
					AND (Status = 1)
				</commandText-->
        <!--commandText>
					WHERE OfficeStructureId IN
					(
						SELECT s.OfficeStructureId FROM UserSeasonOfficeStructure s
						INNER JOIN UserInfo u ON
							@UserStatus IN ('%', u.Status)
							AND @UserId IN (-1, u.UserId)
							AND u.UserId=s.UserId
						INNER JOIN SeasonOfficeStructure Sea ON
							Sea.Status =1
							AND (Sea.OfficeStructureId @OfficeStructureIds)
							AND @SeasonId IN (-1, Sea.SeasonId)
							AND @OfficeStructureTypeId IN (-1, Sea.OfficeStructureTypeId)
							AND Sea.OfficeStructureId=s.OfficeStructureId
						WHERE (s.OfficeStructureId @OfficeStructureIds)
						AND (@OfficeStructureTypeId IN (-1 , s.OfficeStructureTypeId))
						AND (@UserId IN (-1, s.UserId))
						AND s.Status = 1
					)

					SELECT * FROM OfficeStructure
					WHERE OfficeStructureId IN (
						SELECT s.OfficeStructureId FROM UserSeasonOfficeStructure s
						JOIN UserInfo u ON u.UserId=s.UserId
						WHERE (OfficeStructureId @OfficeStructureIds)
						AND (@OfficeStructureTypeId = -1 OR s.OfficeStructureTypeId = @OfficeStructureTypeId)
						AND (@UserId = -1 OR s.UserId = @UserId)
						AND (@seasonId = -1 OR s.SeasonId = @SeasonId)
						AND s.Status = 1
						AND (@UserStatus='%' OR u.Status = @UserStatus)
					) AND (@OfficeId=-1 OR OfficeId=@OfficeId)
					AND (@ParentId = -1 OR ParentId = @ParentId)
				</commandText-->
        <parameters>
          <param key="OfficeStructureIds" name="@OfficeStructureIds" type="ArrayInt" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="ParentIds" name="@ParentIds" type="ArrayInt" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>


      <dataCommand name="GetProductDeptListByUserSeasonOfficeStructureCriteria" type="Text">
        <commandText>
          Select * FROM OfficeStructure WITH (NOLOCK)
          WHERE OfficeStructureId IN
          (
          SELECT ParentId
          FROM OfficeStructure WITH (NOLOCK)
          WHERE OfficeStructureId IN
          (
          SELECT OfficeStructureId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK)

          WHERE (@UserId IN (-1, s.UserId))
          AND (s.OfficeStructureTypeId = 50)
          AND (s.Status = 1)
          AND EXISTS
          (SELECT TOP 1 UserId
          FROM UserInfo u WITH (NOLOCK)
          WHERE u.UserId = s.UserId AND @UserStatus IN ('%', u.Status))
          )

          AND OfficeStructureId IN
          (
          SELECT OfficeStructureId
          FROM SeasonOfficeStructure s WITH (NOLOCK)
          WHERE (s.OfficeStructureTypeId = 50)
          AND @SeasonId IN (-1, s.SeasonId)
          AND (s.Status = 1)
          )
          AND (@OfficeId IN (-1, OfficeId))

          AND (Status = 1)
          )
        </commandText>

        <parameters>
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>


      <dataCommand name="GetProductCodeListWithUserSeasonOfficeStructureByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure WITH (NOLOCK)
          WHERE OfficeStructureId IN
          (
          SELECT OfficeStructureId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK)
          WHERE (@UserId IN (-1, s.UserId))
          AND (s.OfficeStructureTypeId = 50)
          AND (s.Status = 1)
          AND EXISTS
          (SELECT TOP 1 UserId
          FROM UserInfo u
          WHERE u.UserId = s.UserId AND u.Status = 'A')
          )
          AND OfficeStructureId IN
          (
          SELECT OfficeStructureId
          FROM SeasonOfficeStructure WITH (NOLOCK)
          WHERE (OfficeStructureTypeId = 50)
          AND (@SeasonId IN (-1, SeasonId))
          AND (Status = 1)
          )
          AND (@OfficeId IN (-1, OfficeId))
          AND (@ParentId IN (-1, ParentId))
          AND (@Description='' OR Description LIKE @Description+'%' OR Code LIKE @Description+'%')
          AND (Status = 1)
          ORDER BY CASE WHEN Description LIKE '%(DO NOT USE)%' THEN 2 ELSE 1 END ASC, Code
          --ORDER BY Code
        </commandText>
        <!--commandText>
					SELECT * FROM OfficeStructure
					WHERE OfficeStructureId IN (
						SELECT s.OfficeStructureId FROM UserSeasonOfficeStructure s
						INNER JOIN UserInfo u ON
							u.Status = 'A'
							AND @UserId IN (-1, u.UserId)
							AND u.UserId=s.UserId
						INNER JOIN SeasonOfficeStructure Sea ON
							Sea.Status =1
							AND @SeasonId IN (-1, Sea.SeasonId)
							AND (Sea.OfficeStructureTypeId = 50)
							AND Sea.OfficeStructureId=s.OfficeStructureId
						WHERE (s.OfficeStructureTypeId = 50)
						AND (@UserId IN (-1, s.UserId))
						AND s.Status = 1
					)
					AND (@OfficeId IN (-1, OfficeId))
					AND (@ParentId IN (-1, ParentId))
					AND (@Description='' OR Description LIKE @Description+'%' OR Code LIKE @Description+'%')
					AND Status = 1
					ORDER BY Code
				</commandText-->
        <parameters>
          <param key="ParentId" name="@ParentId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="Description" name="@Description" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetProductCodeListWithSeasonOfficeStructureByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure WITH (NOLOCK)
          WHERE OfficeStructureId IN (
          SELECT Sea.OfficeStructureId
          FROM SeasonOfficeStructure Sea WITH (NOLOCK)
          WHERE (Sea.OfficeStructureTypeId = 50)
          AND (@SeasonId IN (-1, Sea.SeasonId))
          AND (Sea.Status =1)
          )
          AND (@OfficeId IN (-1, OfficeId))
          AND (@ParentId IN (-1, ParentId))
          AND (@Description='' OR Description LIKE @Description+'%' OR Code LIKE @Description+'%')
          AND (Status = 1)
          ORDER BY CASE WHEN Description LIKE '%(DO NOT USE)%' THEN 2 ELSE 1 END ASC, Code
          --ORDER BY Code
        </commandText>
        <parameters>
          <param key="ParentId" name="@ParentId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="Description" name="@Description" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetOfficeStructureByCodeAndOfficeId" type="Text">
        <commandText>
          SELECT *
          FROM OfficeStructure WITH (NOLOCK)
          WHERE (OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@Code='' OR (Code LIKE @Code+'%' OR Description LIKE @Code + '%'))
          AND (@OfficeId =-1 OR OfficeId = @OfficeId)
          AND (Status = 1)
          ORDER BY Code, Description
        </commandText>
        <parameters>
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="Code" name="@Code" type="varchar" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetProductGroupList" type="Text">
        <commandText>
          SELECT DISTINCT code FROM OfficeStructure
          WHERE OfficeStructureId IN
          (
          SELECT OfficeStructureId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK)
          WHERE (@UserId IN (-1, s.UserId))
          AND (s.OfficeStructureTypeId = 50)
          AND (s.Status = 1)
          AND EXISTS
          (SELECT TOP 1 UserId
          FROM UserInfo u
          WHERE u.UserId = s.UserId AND u.Status = 'A')
          )
          AND (Status = 1)
          ORDER BY Code
        </commandText>
        <parameters>
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="OfficeStructure" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="UserOfficeStructureHeadApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetHeadByOfficeStructureId" type="Text">
        <commandText>
          SELECT *
          FROM UserOfficeStructureHead with (nolock)
          WHERE OfficeStructureId = @OfficeStructureId
          AND OfficeStructureTypeId = @OfficeStructureTypeId
          AND Status = 1
        </commandText>
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetHeadListByOfficeStructureId" type="Text">
        <commandText>
          SELECT *
          FROM UserOfficeStructureHead WITH (NOLOCK)
          WHERE OfficeStructureTypeId = @OfficeStructureTypeId
          AND Status = 1
        </commandText>
        <parameters>
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetHeadByUserId" type="Text">
        <commandText>
          SELECT *
          FROM UserOfficeStructureHead with (nolock)
          WHERE UserId = @UserId
          AND OfficeStructureTypeId = @OfficeStructureTypeId
          AND Status = 1
        </commandText>
        <parameters>
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UserOfficeStructureHead" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="UserSeasonOfficeStructureApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetUserSeasonOfficeStructureByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM UserSeasonOfficeStructure WITH (NOLOCK)
          WHERE UserSeasonOfficeStructureId IN (
          SELECT s.UserSeasonOfficeStructureId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK) INNER JOIN
          UserInfo u WITH (NOLOCK) ON (@UserStatus IN ('%', u.Status)) AND (@UserId IN (-1, s.UserId)) AND u.UserId=s.UserId
          WHERE (@OfficeStructureId IN (-1, s.OfficeStructureId))
          AND (@OfficeStructureTypeId IN (-1, s.OfficeStructureTypeId))
          AND (@Status IN (-1, s.Status))
          )
        </commandText>
        <!--
				<commandText>
					SELECT * FROM UserOfficeStructure
					WHERE UserOfficeStructureId IN (
						SELECT s.UserOfficeStructureId FROM UserOfficeStructure s
						INNER JOIN UserInfo u ON
							(@UserStatus IN ('%', u.Status))
							AND (@UserId IN (-1, s.UserId))
							AND u.UserId=s.UserId
						INNER JOIN SeasonOfficeStructure sea ON
							(@OfficeStructureTypeId IN (-1, Sea.OfficeStructureTypeId))
							AND (@OfficeStructureId IN (-1, Sea.OfficeStructureId))
							AND (@SeasonId IN (-1, sea.SeasonId))
							AND sea.OfficeStructureId=s.OfficeStructureId
						WHERE (@OfficeStructureId IN (-1, s.OfficeStructureId))
						AND (@OfficeStructureTypeId IN (-1, s.OfficeStructureTypeId))
						AND (@Status IN (-1, s.Status))
					)
				</commandText>
				7/8/2005 kenneth
									SELECT * FROM UserOfficeStructure
					WHERE UserOfficeStructureId IN (
						SELECT s.UserOfficeStructureId FROM UserOfficeStructure s
						JOIN UserInfo u ON u.UserId=s.UserId
						WHERE (@officeStructureId = -1 OR s.OfficeStructureId = @OfficeStructureId)
						AND (@OfficeStructureTypeId = -1 OR s.OfficeStructureTypeId = @OfficeStructureTypeId)
						AND (@UserId = -1 OR s.UserId = @UserId)
						AND (@SeasonId = -1 OR s.SeasonId = @SeasonId)
						AND (@Status = -1 OR s.Status = @Status)
						AND (@UserStatus='%' OR u.Status = @UserStatus)
					)
				-->
        <!--
									SELECT * FROM UserSeasonOfficeStructure
					WHERE UserSeasonOfficeStructureId IN (
						SELECT s.UserSeasonOfficeStructureId FROM UserSeasonOfficeStructure s
						JOIN UserInfo u ON u.UserId=s.UserId
						WHERE (@officeStructureId = -1 OR s.OfficeStructureId = @OfficeStructureId)
						AND (@OfficeStructureTypeId = -1 OR s.OfficeStructureTypeId = @OfficeStructureTypeId)
						AND (@UserId = -1 OR s.UserId = @UserId)
						AND (@seasonId = -1 OR s.SeasonId = @SeasonId)
						AND s.Status = 1
						AND (@UserStatus='%' OR u.Status = @UserStatus)
					)
				-->
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="Status" name="@Status" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSeasonOfficeStructureList" type="Text">
        <commandText>
          SELECT *
          FROM UserSeasonOfficeStructure WITH (NOLOCK)
          WHERE (@UserId = -1 OR UserId = @UserId)
          AND (@officeStructureId = -1 OR OfficeStructureId = @OfficeStructureId)
          AND (@OfficeStructureTypeId = -1 OR OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@seasonId = -1 OR SeasonId = @SeasonId)
          AND (Status = 1)
          ORDER BY UserId, OfficeStructureTypeId, OfficeStructureId, SeasonId
        </commandText>
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserSeasonOfficeStructureByKey" type="Text">
        <commandText>
          SELECT *
          FROM UserSeasonOfficeStructure
          WHERE UserSeasonOfficeStructureId = @Key
        </commandText>
        <parameters>
          <param key="Key" name="@Key" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UserSeasonOfficeStructure" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="MonthEndStatusApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMonthEndStatusByOfficeId" type="Text">
        <commandText>
          SELECT *
          FROM MonthEndStatus with (nolock)
          WHERE (OfficeId = @OfficeId)
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="MonthEndStatus" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="OfficeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMaxOfficeId" type="Text">
        <commandText>
          SELECT MAX(OfficeId)
          FROM Office
        </commandText>
      </dataCommand>
      <dataCommand name="GetOfficeByKey" type="Text">
        <commandText>
          SELECT *
          FROM Office with (nolock)
          WHERE (OfficeId = @OfficeId)
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeListByKey" type="Text">
        <commandText>
          SELECT *
          FROM Office WITH (NOLOCK)
          WHERE (OfficeId @OfficeIds)
          AND (Status = 1)
          ORDER BY Description
        </commandText>
        <parameters>
          <param key="OfficeIds" name="@OfficeIds" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeListByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM Office WITH (NOLOCK)
          WHERE (@OfficeDivisionId = -1 OR OfficeDivisionId = @OfficeDivisionId)
          AND (@LocationId = -1 OR LocationId = @LocationId)
          AND (@Status = -1 OR Status = @Status)
          ORDER BY Description
        </commandText>
        <parameters>
          <param key="OfficeDivisionId" name="@OfficeDivisionId" type="Int" direction="Input" />
          <param key="LocationId" name="@LocationId" type="Int" direction="Input" />
          <param key="Status" name="@Status" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeListByUserSeasonOfficeStructureCriteria" type="Text">
        <commandText>
          SELECT *
          FROM Office WITH (NOLOCK)
          WHERE OfficeId IN
          (
          SELECT os.OfficeId
          FROM OfficeStructure os WITH (NOLOCK)
          INNER JOIN UserSeasonOfficeStructure as uo WITh (NOLOCK) ON uo.OfficeStructureId = os.OfficeStructureId AND uo.Status = 1
          INNER JOIN UserInfo as u WITH (NOLOCK) ON u.UserId = uo.Userid
          INNER JOIN SeasonOfficeStructure as so WITH (NOLOCK) ON so.OfficeStructureId=os.OfficeStructureId AND so.Status=1
          WHERE (os.Status=1)
          AND @OfficeStructureTypeId IN (-1, os.OfficeStructureTypeId)
          AND (os.OfficeStructureId @OfficeStructureIds)
          AND (@UserId IN (-1, uo.UserId))
          AND (@UserStatus IN ('%', u.Status))
          AND @SeasonId IN (-1, so.SeasonId)
          )
          ORDER BY OfficeId
          <!--SELECT *
					FROM Office WITH (NOLOCK)
					WHERE OfficeId IN
					(
						SELECT os.OfficeId
						FROM OfficeStructure os WITH (NOLOCK)
						WHERE (os.OfficeStructureId @OfficeStructureIds)
						AND os.OfficeStructureId IN
						(
							SELECT OfficeStructureId
							FROM UserSeasonOfficeStructure s WITH (NOLOCK)
							WHERE (@UserId IN (-1, s.UserId))
							AND (s.OfficeStructureId @OfficeStructureIds)
							AND (@OfficeStructureTypeId IN (-1 , s.OfficeStructureTypeId))
							AND (s.Status = 1)
							AND EXISTS
								(SELECT UserId
								FROM UserInfo u WITH (NOLOCK)
								WHERE u.UserId = s.UserId AND @UserStatus IN ('%', u.Status))
						)
						AND os.OfficeStructureId IN
						(
							SELECT OfficeStructureId
							FROM SeasonOfficeStructure WITH (NOLOCK)
							WHERE (OfficeStructureId @OfficeStructureIds)
							AND (@OfficeStructureTypeId IN (-1 , OfficeStructureTypeId))
							AND @SeasonId IN (-1, SeasonId)
							AND (Status = 1)
						)
						AND @OfficeStructureTypeId IN (-1, os.OfficeStructureTypeId)
						AND (os.Status=1)
					)-->
        </commandText>
        <!--commandText>
					SELECT * FROM Office
					WHERE OfficeId IN (
						SELECT os.OfficeId FROM UserSeasonOfficeStructure s
						INNER JOIN UserInfo u ON
							(@UserId IN (-1, u.UserId))
							AND (@UserStatus IN ('%', u.Status))
							AND u.UserId=s.UserId
						INNER JOIN OfficeStructure os ON
							@OfficeStructureTypeId IN (-1, os.OfficeStructureTypeId)
							AND os.OfficeStructureId=s.OfficeStructureId
							AND os.Status=1
						INNER JOIN SeasonOfficeStructure Sea ON
							@SeasonId IN (-1, Sea.SeasonId)
							AND @OfficeStructureTypeId IN (-1, Sea.OfficeStructureTypeId)
							AND Sea.OfficeStructureId = S.OfficeStructureId
							AND Sea.Status=1
							and s.status=1
						WHERE (os.OfficeStructureId @OfficeStructureIds)
						AND (@UserId IN (-1, s.UserId))
					)
				</commandText-->
        <parameters>
          <param key="OfficeStructureIds" name="@OfficeStructureIds" type="ArrayInt" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Office" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="OfficeGroupApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetOfficeGroupByKey" type="Text">
        <commandText>
          SELECT *
          FROM OfficeGroup with (nolock)
          WHERE OfficeGroupId = @OfficeGroupId
        </commandText>
        <parameters>
          <param key="OfficeGroupId" name="@OfficeGroupId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="OfficeGroup" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="OfficeDivisionApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMaxOfficeDivisionId" type="Text">
        <commandText>
          SELECT MAX(OfficeDivisionId)
          FROM OfficeDivision
        </commandText>
      </dataCommand>
      <dataCommand name="GetOfficeDivisionByKey" type="Text">
        <commandText>
          SELECT *
          FROM OfficeDivision
          WHERE OfficeDivisionId = @OfficeDivisionId
        </commandText>
        <parameters>
          <param key="OfficeDivisionId" name="@OfficeDivisionId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOfficeDivsionListByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM OfficeDivision with (nolock)
          WHERE (@OfficeRegionId = -1 OR LocationId = @OfficeRegionId)
          AND (@Status = -1 OR Status = @Status)
        </commandText>
        <parameters>
          <param key="OfficeRegionId" name="@OfficeRegionId" type="Int" direction="Input" />
          <param key="Status" name="@Status" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="OfficeDivision" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="NotificationTypeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMaxNotificationTypeId" type="Text">
        <commandText>
          SELECT MAX(NotificationTypeId)
          FROM NotificationType
        </commandText>
      </dataCommand>
      <dataCommand name="GetNotificationTypeByKey" type="Text">
        <commandText>
          SELECT *
          FROM NotificationType
          WHERE NotificationTypeId = @NotificationTypeId
        </commandText>
        <parameters>
          <param key="NotificationTypeId" name="@NotificationTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNotificationTypeList" type="Text">
        <commandText>
          SELECT *
          FROM NotificationType WITH (NOLOCK)
          WHERE Status = 1
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NotificationType" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="NotificationGroupApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMaxNotificationGroupId" type="Text">
        <commandText>
          SELECT MAX(NotificationGroupId)
          FROM NotificationGroup
        </commandText>
      </dataCommand>
      <dataCommand name="GetNotificationGroupByKey" type="Text">
        <commandText>
          SELECT *
          FROM NotificationGroup
          WHERE NotificationGroupId = @NotificationGroupId
        </commandText>
        <parameters>
          <param key="NotificationGroupId" name="@NotificationGroupId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNotificationGroupListByNotificationTypeId" type="Text">
        <commandText>
          SELECT *
          FROM NotificationGroup WITH (NOLOCK)
          WHERE Status = 1
          AND NotificationTypeId = @NotificationTypeId
        </commandText>
        <parameters>
          <param key="NotificationTypeId" name="@NotificationTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNotificationGroupListByAppId" type="Text">
        <commandText>
          SELECT *
          FROM NotificationGroup WITH (NOLOCK)
          WHERE Status = 1
          AND AppId = @AppId
        </commandText>
        <parameters>
          <param key="AppId" name="@AppId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NotificationGroup" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="NotificationGroupUserMapApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMaxNotificationGroupUserMapId" type="Text">
        <commandText>
          SELECT MAX(NotificationGroupUserMapId)
          FROM NotificationGroupUserMap
        </commandText>
      </dataCommand>
      <dataCommand name="GetNotificationGroupUserMapByKey" type="Text">
        <commandText>
          SELECT *
          FROM NotificationGroupUserMap
          WHERE NotificationGroupUserMapId = @NotificationGroupUserMapId
        </commandText>
        <parameters>
          <param key="NotificationGroupUserMapId" name="@NotificationGroupUserMapId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNotificationGroupUserMapListByNotificationGroupId" type="Text">
        <commandText>
          SELECT *
          FROM NotificationGroupUserMap WITH (NOLOCK)
          WHERE Status = 1
          AND NotificationGroupId = @NotificationGroupId
        </commandText>
        <parameters>
          <param key="NotificationGroupId" name="@NotificationGroupId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNotificationGroupUserMapListByUserId" type="Text">
        <commandText>
          SELECT *
          FROM NotificationGroupUserMap WITH (NOLOCK)
          WHERE Status = 1
          AND UserId = @UserId
        </commandText>
        <parameters>
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NotificationGroupUserMap" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="NotificationActionApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMaxNotificationActionId" type="Text">
        <commandText>
          SELECT MAX(NotificationActionId)
          FROM NotificationAction
        </commandText>
      </dataCommand>
      <dataCommand name="GetNotificationActionByKey" type="Text">
        <commandText>
          SELECT *
          FROM NotificationAction
          WHERE NotificationActionId = @NotificationActionId
        </commandText>
        <parameters>
          <param key="NotificationActionId" name="@NotificationActionId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNotificationActionListByAppID" type="Text">
        <commandText>
          SELECT *
          FROM NotificationAction WITH (NOLOCK)
          WHERE Status = 1
          AND AppId = @AppId
        </commandText>
        <parameters>
          <param key="AppId" name="@AppId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NotificationAction" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="NotificationActionDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMaxNotificationActionDetailId" type="Text">
        <commandText>
          SELECT MAX(NotificationActionDetailId)
          FROM NotificationActionDetail
        </commandText>
      </dataCommand>
      <dataCommand name="GetNotificationActionDetailByKey" type="Text">
        <commandText>
          SELECT *
          FROM NotificationActionDetail
          WHERE NotificationActionDetailId = @NotificationActionDetailId
        </commandText>
        <parameters>
          <param key="NotificationActionDetailId" name="@NotificationActionDetailId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetNotificationActionDetailListByNotificationActionId" type="Text">
        <commandText>
          SELECT *
          FROM NotificationActionDetail WITH (NOLOCK)
          WHERE NotificationActionId = @NotificationActionId
          AND Status = 1
        </commandText>
        <parameters>
          <param key="NotificationActionId" name="@NotificationActionId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NotificationActionDetail" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="ValueRangeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetMaxValueRangeId" type="Text">
        <commandText>
          SELECT MAX(ValueRangeId)
          FROM ValueRange
        </commandText>
      </dataCommand>
      <dataCommand name="GetValueRangeByKey" type="Text">
        <commandText>
          SELECT *
          FROM ValueRange with (nolock)
          WHERE ValueRangeId = @ValueRangeId
        </commandText>
        <parameters>
          <param key="ValueRangeId" name="@ValueRangeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetValueRangeByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM ValueRange WITH (NOLOCK)
          WHERE (ValueRangeTypeId = @ValueRangeTypeId)
          AND (OfficeStructureId = @OfficeStructureId OR @OfficeStructureId = -1)
          AND (Param1 = @Param1 OR @Param1 = -1)
          AND (Param2 = @Param2 OR @Param2 = -1)
          AND (Status = 1)
        </commandText>
        <parameters>
          <param key="ValueRangeTypeId" name="@ValueRangeTypeId" type="Int" direction="Input" />
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="Param1" name="@Param1" type="Int" direction="Input" />
          <param key="Param2" name="@Param2" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ValueRange" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="SeasonOfficeStructureApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetSeasonOfficeStructureByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM SeasonOfficeStructure WITH (NOLOCK)
          WHERE OfficeStructureId IN
          (
          SELECT s.OfficeStructureId
          FROM UserSeasonOfficeStructure s WITH (NOLOCK) INNER JOIN
          UserInfo u WITH (NOLOCK) ON u.UserId=s.UserId
          WHERE (@UserId = -1 OR s.UserId = @UserId)
          AND (@officeStructureId = -1 OR s.OfficeStructureId = @OfficeStructureId)
          AND (@OfficeStructureTypeId = -1 OR s.OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (s.Status = 1)
          AND (@UserStatus='%' OR u.Status = @UserStatus)
          )
          AND (@seasonId = -1 OR SeasonId = @SeasonId)
          AND (Status = 1)
        </commandText>
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetSeasonOfficeStructureList" type="Text">
        <commandText>
          SELECT *
          FROM SeasonOfficeStructure WITH (NOLOCK)
          WHERE (@officeStructureId = -1 OR OfficeStructureId = @OfficeStructureId)
          AND (@OfficeStructureTypeId = -1 OR OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@SeasonId = -1 OR SeasonId = @SeasonId)
          AND (Status = 1)
          ORDER BY OfficeStructureTypeId, OfficeStructureId, SeasonId
        </commandText>
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetSeasonOfficeStructureByKey" type="Text">
        <commandText>
          SELECT *
          FROM SeasonOfficeStructure
          WHERE SeasonOfficeStructureId = @Key
        </commandText>
        <parameters>
          <param key="Key" name="@Key" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="SeasonOfficeStructure" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="UserOfficeStructureApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetUserOfficeStructureByCriteria" type="Text">
        <commandText>
          SELECT s.*
          FROM UserOfficeStructure s WITH (NOLOCK) INNER JOIN
          UserInfo u WITH (NOLOCK) ON u.UserId=s.UserId
          WHERE (@UserId = -1 OR s.UserId = @UserId)
          AND (@officeStructureId = -1 OR s.OfficeStructureId = @OfficeStructureId)
          AND (@OfficeStructureTypeId = -1 OR s.OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@Status = -1 OR s.Status = @Status)
          AND (@UserStatus='%' OR u.Status = @UserStatus)
        </commandText>
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="UserStatus" name="@UserStatus" type="varchar" direction="Input" />
          <param key="Status" name="@Status" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserOfficeStructureList" type="Text">
        <commandText>
          SELECT *
          FROM UserOfficeStructure WITH (NOLOCK)
          WHERE (@UserId = -1 OR UserId = @UserId)
          AND (@officeStructureId = -1 OR OfficeStructureId = @OfficeStructureId)
          AND (@OfficeStructureTypeId = -1 OR OfficeStructureTypeId = @OfficeStructureTypeId)
          AND (@Status = -1 OR s.Status = @Status)
          ORDER BY UserId, OfficeStructureTypeId, OfficeStructureId
        </commandText>
        <parameters>
          <param key="OfficeStructureId" name="@OfficeStructureId" type="Int" direction="Input" />
          <param key="OfficeStructureTypeId" name="@OfficeStructureTypeId" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
          <param key="Status" name="@Status" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetUserOfficeStructureByKey" type="Text">
        <commandText>
          SELECT *
          FROM UserOfficeStructure
          WHERE UserOfficeStructureId = @Key
        </commandText>
        <parameters>
          <param key="Key" name="@Key" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UserOfficeStructure" />
    </tableMappings>
  </dataSetAdapter>
  <!--AccountFinancialCalenderApt-->
  <dataSetAdapter name="AccountFinancialCalenderApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAccountPeriodByYear_Period" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialCalender with (nolock)
          WHERE (BudgetYear = @BudgetYear OR @BudgetYear = -1)
          AND (Period = @Period OR @Period = -1)
          AND (AppId = @AppId)
        </commandText>
        <parameters>
          <param key="BudgetYear" name="@BudgetYear" type="Int" direction="Input" />
          <param key="Period" name="@Period" type="Int" direction="Input" />
          <param key="AppId" name="@AppId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAccountPeriodByDate" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialCalender WITH (NOLOCK)
          WHERE @Date BETWEEN StartDate AND EndDate
          AND (AppId = @AppId)
        </commandText>
        <parameters>
          <param key="Date" name="@Date" type="DateTime" direction="Input" />
          <param key="AppId" name="@AppId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAllBudgetYear" type="Text">
        <commandText>
          SELECT DISTINCT BudgetYear
          FROM AccountFinancialCalender WITH (NOLOCK)
          WHERE (AppId = @AppId)
          ORDER BY BudgetYear desc
        </commandText>
        <parameters>
          <param key="AppId" name="@AppId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AccountFinancialCalender" />
    </tableMappings>
  </dataSetAdapter>
  <!--PeriodWeekInfoApt-->
  <dataSetAdapter name="PeriodWeekInfoApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetPeriodWeekInfoByDate" type="Text">
        <commandText>
          SELECT * FROM
          f_getPeriodWeekInfoByDate(@Date)
        </commandText>
        <parameters>
          <param key="Date" name="@Date" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="PeriodWeekInfo" />
    </tableMappings>
  </dataSetAdapter>
  <!--ProductLineApt-->
  <dataSetAdapter name="ProductLineApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetProductLineById" type="Text">
        <commandText>
          SELECT *
          FROM ProductLine with (nolock)
          WHERE (ProductLineId = @ProductLineId)
          AND (Status = 1)
        </commandText>
        <parameters>
          <param key="ProductLineId" name="@ProductLineId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetProductLineList" type="Text">
        <commandText>
          SELECT *
          FROM ProductLine WITH (NOLOCK)
          WHERE (Status = 1)
          ORDER BY ProductLineDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetProductLineDescendingList" type="Text">
        <commandText>
          SELECT *
          FROM ProductLine WITH (NOLOCK)
          WHERE (Status = 1)
          ORDER BY ProductLineDesc DESC
        </commandText>
      </dataCommand>
      <dataCommand name="GetProductLineByProductTeamId" type="Text">
        <commandText>
          SELECT *
          FROM ProductLine WITH (NOLOCK)
          WHERE Status = 1
          AND ProductLineId IN
          (
          SELECT ProductLineId
          FROM ProductLineMapping WITH (NOLOCK)
          WHERE Status = 1
          AND ProductTeamCode IN
          (
          SELECT Code
          FROM OfficeStructure WITH (NOLOCK)
          WHERE Status = 1
          AND OfficeStructureTypeId = 50
          AND OfficeStructureId = @ProductTeamId
          )
          )
        </commandText>
        <parameters>
          <param key="ProductTeamId" name="@ProductTeamId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetProductLineByProductTeamCode" type="Text">
        <commandText>
          SELECT *
          FROM ProductLine WITH (NOLOCK)
          WHERE Status = 1
          AND ProductLineId IN
          (
          SELECT ProductLineId
          FROM ProductLineMapping WITH (NOLOCK)
          WHERE Status = 1
          AND ProductTeamCode = @ProductTeamCode
          )
        </commandText>
        <parameters>
          <param key="ProductTeamCode" name="@ProductTeamCode" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ProductLine" />
    </tableMappings>
  </dataSetAdapter>
  <!--ProductLineMappingApt-->
  <dataSetAdapter name="ProductLineMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetProductLineMappingByProductLineId" type="Text">
        <commandText>
          SELECT *
          FROM ProductLineMapping WITH (NOLOCK)
          WHERE Status = 1
          AND ProductLineId = @ProductLineId
        </commandText>
        <parameters>
          <param key="ProductLineId" name="@ProductLineId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ProductLineMapping" />
    </tableMappings>
  </dataSetAdapter>
  <!--ProductLineProductCodeIdMappingApt-->
  <dataSetAdapter name="ProductLineProductCodeIdMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetProductLineProductCodeIdMappingByProductLineId" type="Text">
        <commandText>
          SELECT OfficeStructureId AS ProductTeamId, *
          FROM ProductLineMapping a WITH (NOLOCK)
          INNER JOIN OfficeStructure b WITH (NOLOCK) ON b.Code = a.ProductTeamCode
          WHERE a.Status = 1
          AND b.Status = 1
          AND a.ProductLineId = @ProductLineId
          AND b.OfficeId = @OfficeId
        </commandText>
        <parameters>
          <param key="ProductLineId" name="@ProductLineId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ProductLineProductCodeIdMapping" />
    </tableMappings>
  </dataSetAdapter>
  <!--AccountFinancialProductDivisionApt-->
  <dataSetAdapter name="AccountFinancialProductDivisionApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAccountFinancialProductDivisionById" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductDivision with (nolock)
          WHERE Status = 1
          AND AccountFinancialProductDivisionId = @AccountFinancialProductDivisionId
        </commandText>
        <parameters>
          <param key="AccountFinancialProductDivisionId" name="@AccountFinancialProductDivisionId"
						type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAccountFinancialProductDivisionList" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductDivision WITH (NOLOCK)
          WHERE (Status = 1)
          ORDER BY DisplaySeq
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AccountFinancialProductDivision" />
    </tableMappings>
  </dataSetAdapter>
  <!--AccountFinancialProductGroupApt-->
  <dataSetAdapter name="AccountFinancialProductGroupApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAccountFinancialProductGroupById" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductGroup with (nolock)
          WHERE Status = 1
          AND AccountFinancialProductGroupId = @AccountFinancialProductGroupId
        </commandText>
        <parameters>
          <param key="AccountFinancialProductGroupId" name="@AccountFinancialProductGroupId" type="Int"
						direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAccountFinancialProductGroupByDivId" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductGroup WITH (NOLOCK)
          WHERE Status = 1
          AND (AccountFinancialProductDivisionId = @AccountFinancialProductDivisionId or @AccountFinancialProductDivisionId=-1)
        </commandText>
        <parameters>
          <param key="AccountFinancialProductDivisionId" name="@AccountFinancialProductDivisionId"
						type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAccountFinancialProductGroupList" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductGroup WITH (NOLOCK)
          WHERE (Status = 1)
          ORDER BY AccountFinancialProductDivisionId, DisplaySeq
        </commandText>
      </dataCommand>
      <dataCommand name="GetAccountFinancialProductGroupListByProductTeamList" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductGroup WITH (NOLOCK)
          WHERE (Status = 1)
          AND AccountFinancialProductGroupId in
          (
          SELECT AccountFinancialProductGroupId
          FROM AccountFinancialProductGroupMapping WITH (NOLOCK)
          WHERE Status = 1 AND ProductCodeId @ProductTeamList
          )
          ORDER BY AccountFinancialProductDivisionId, DisplaySeq
        </commandText>
        <parameters>
          <param key="ProductTeamList" name="@ProductTeamList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAccountFinancialProductGroupByProductTeamId" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductGroup WITH (NOLOCK)
          WHERE (Status = 1)
          AND AccountFinancialProductGroupId in
          (
          SELECT AccountFinancialProductGroupId
          FROM AccountFinancialProductGroupMapping WITH (NOLOCK)
          WHERE Status = 1 AND ProductCodeId = @ProductTeamId
          )
        </commandText>
        <parameters>
          <param key="ProductTeamId" name="@ProductTeamId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AccountFinancialProductGroup" />
    </tableMappings>
  </dataSetAdapter>
  <!--AccountFinancialProductGroupMappingApt-->
  <dataSetAdapter name="AccountFinancialProductGroupMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAccountFinancialProductGroupMappingByAccountFinancialProductGroupId" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductGroupMapping WITH (NOLOCK)
          WHERE Status = 1
          AND AccountFinancialProductGroupId = @AccountFinancialProductGroupId
          AND ProductCodeId IN
          (SELECT OfficeStructureId
          FROM OfficeStructure WITH (NOLOCK)
          WHERE Status = 1 AND (OfficeId = @OfficeId OR @OfficeId = -1))
        </commandText>
        <parameters>
          <param key="AccountFinancialProductGroupId" name="@AccountFinancialProductGroupId" type="Int"
						direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAccountFinancialProductGroupMappingByProductTeamId" type="Text">
        <commandText>
          SELECT *
          FROM AccountFinancialProductGroupMapping WITH (NOLOCK)
          WHERE Status = 1
          AND ProductCodeId = @ProductTeamId
        </commandText>
        <parameters>
          <param key="ProductTeamId" name="@ProductTeamId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetAccountFinancialProductGroupMappingByAccountFinancialProductDivisionId"
				type="Text">
        <commandText>
          SELECT a.*
          FROM AccountFinancialProductGroupMapping a WITH (NOLOCK)
          INNER JOIN accountFinancialProductGroup g WITH (NOLOCK) ON a.accountFinancialProductGroupId = g.accountFinancialProductGroupId
          WHERE a.Status = 1
          AND g.status = 1
          AND g.accountFinancialProductDivisionId = @AccountFinancialProductDivisionId
          AND ProductCodeId IN
          (SELECT OfficeStructureId
          FROM OfficeStructure WITH (NOLOCK)
          WHERE Status = 1 AND OfficeId = @OfficeId)
        </commandText>
        <parameters>
          <param key="AccountFinancialProductDivisionId" name="@AccountFinancialProductDivisionId"
						type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetRecordCountByProductCodeId" type="Text">
        <commandText>
          SELECT COUNT(AccountFinancialProductGroupMappingID)
          FROM AccountFinancialProductGroupMapping WITH (NOLOCK)
          WHERE (ProductCodeId = @ProductCodeId)
          AND (Status = 1)
        </commandText>
        <parameters>
          <param key="ProductCodeId" name="@ProductCodeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AccountFinancialProductGroupMapping" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="PaymentTermApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetPaymentTermList" type="Text">
        <commandText>
          SELECT *
          FROM PaymentTerm WITH (NOLOCK)
          WHERE Status = 1
          ORDER BY PaymentTermDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetPaymentTermByKey" type="Text">
        <commandText>
          SELECT *
          FROM PaymentTerm
          WHERE PaymentTermId = @PaymentTermId
        </commandText>
        <parameters>
          <param key="PaymentTermId" name="@PaymentTermId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="PaymentTerm" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="DesignSourceApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetDesignSourceList" type="Text">
        <commandText>
          SELECT *
          FROM DesignSource WITH (NOLOCK)
          WHERE Status = 1
          ORDER BY SeqNo
        </commandText>
      </dataCommand>
      <dataCommand name="GetDesignSourceByKey" type="Text">
        <commandText>
          SELECT *
          FROM DesignSource WITH (NOLOCK)
          WHERE DesignSourceId = @DesignSourceId
        </commandText>
        <parameters>
          <param key="DesignSourceId" name="@DesignSourceId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="DesignSource" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="DesignerApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetDesignerList" type="Text">
        <commandText>
          SELECT *
          FROM Designer WITH (NOLOCK)
          WHERE (Status = 1)
          ORDER BY DesignerName
        </commandText>
      </dataCommand>
      <dataCommand name="GetDesignerListByName" type="Text">
        <commandText>
          SELECT *
          FROM Designer WITH (NOLOCK)
          WHERE (Status = 1)
          AND (@DesignerName='' OR DesignerName LIKE @DesignerName+'%')
          AND (@DesignSourceId = -1 OR DesignSourceId = @DesignSourceId)
          ORDER BY DesignerName
        </commandText>
        <parameters>
          <param key="DesignerName" name="@DesignerName" type="varchar" direction="Input" />
          <param key="DesignSourceId" name="@DesignSourceId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetDesignerByKey" type="Text">
        <commandText>
          SELECT *
          FROM Designer with (nolock)
          WHERE DesignerId = @DesignerId
        </commandText>
        <parameters>
          <param key="DesignerId" name="@DesignerId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Designer" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="CompanyApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCompanyByKey" type="Text">
        <commandText>
          SELECT *
          FROM Company WITH (NOLOCK)
          WHERE CompanyId = @CompanyId
        </commandText>
        <parameters>
          <param key="CompanyId" name="@CompanyId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetCompanyList" type="Text">
        <commandText>
          SELECT c.*
          FROM Company c WITH (NOLOCK)
          INNER JOIN CompanyOfficeMapping m WITH (NOLOCK) ON m.CompanyId = c.CompanyId AND m.Status = 1
          WHERE
          (@OfficeId = -1 OR m.OfficeId = @OfficeId)
          AND c.Status = 1
          ORDER BY IsDefault DESC, CompanyName
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Company" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="CompanyOfficeMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="getCompanyOfficeMappingByCriteria" type="Text">
        <commandText>
          SELECT *
          FROM CompanyOfficeMapping WITH (NOLOCK)
          WHERE
          CompanyId = @CompanyId
          AND OfficeId = @OfficeId
          AND Status = 1
        </commandText>
        <paramters>
          <param key="CompanyId" name="@CompanyId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </paramters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="CompanyOfficeMapping" />
    </tableMappings>
  </dataSetAdapter>
  <dataSetAdapter name="AccountDatabaseApt"  populateCommands="false">
    <selectCommand>
      <dataCommand name="getAccountDatabaseByKey" type="Text">
        <commandText>
          SELECT *
          FROM AccountDatabase
          WHERE AccountDBId = @AccountDBId
        </commandText>
        <parameters>
          <param key="AccountDBId" name="@AccountDBId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AccountDatabase" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="SystemParamApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetSystemParamByKey" type="Text">
        <commandText>
          SELECT * FROM SystemParam WHERE ParameterId = @ParameterId
        </commandText>
        <parameters>
          <param key="ParameterId" name="@ParameterId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetSystemParamByName" type="Text">
        <commandText>
          SELECT * FROM SystemParam WHERE ParameterName = @ParameterName
        </commandText>
        <parameters>
          <param key="ParameterName" name="@ParameterName" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="SystemParam" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="COAMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetEpicorCOA" type="Text">
        <commandText>
          SELECT * FROM COAMapping WHERE SunCode = @SunCOA AND Status = 1
        </commandText>
        <parameters>
          <param key="SunCOA" name="@SunCOA" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetSUNCOA" type="Text">
        <commandText>
          SELECT * FROM COAMapping WHERE EpicorCode = @EpicorCOA AND Status = 1
        </commandText>
        <parameters>
          <param key="EpicorCOA" name="@EpicorCOA" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="COAMapping" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LogoCOAMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLogoCOA" type="Text">
        <commandText>
          SELECT * FROM LogoCOAMapping WHERE EpicorCode = @EpicorCOA AND Status = 1
        </commandText>
        <parameters>
          <param key="EpicorCOA" name="@EpicorCOA" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LogoCOAMapping" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="CurrentAccountMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCurrentAccountCOA" type="Text">
        <commandText>
          SELECT * FROM CurrentAccountMapping WHERE ((OfficeId1 = @OfficeId1 AND OfficeId2 = @OfficeId2) OR (OfficeId1 = @OfficeId2 AND OfficeId2 = @OfficeId1)) AND Status = 1
        </commandText>
        <parameters>
          <param key="OfficeId1" name="@OfficeId1" type="Int" direction="Input" />
          <param key="OfficeId2" name="@OfficeId2" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="CurrentAccountMapping" />
    </tableMappings>
  </dataSetAdapter>

</dataOperations>