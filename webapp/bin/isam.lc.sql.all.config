<?xml version="1.0" encoding="utf-8" ?>
<dataOperations dataSource="isam">
  <dataSetAdapter name="LCApplicationApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLCApplicationByKey" type="Text">
        <commandText>
          SELECT * FROM LCApplication
          WHERE LCApplicationId = @LCApplicationId
        </commandText>
        <parameters>
          <param key="LCApplicationId" name="@LCApplicationId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxLCApplicationId" type="Text">
        <commandText>
          SELECT MAX(LCApplicationId) FROM LCApplication
        </commandText>
      </dataCommand>
      <dataCommand name="GetMaxLCApplicationNo" type="Text">
        <commandText>
          SELECT MAX(LCApplicationNo) FROM LCApplication
        </commandText>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCApplication" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LCApplicationShipmentDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLCApplicationShipmentDetail" type="Text">
        <commandText>
          SELECT * FROM LCApplicationShipmentDetail
          WHERE Status = 1
          AND ShipmentId = @ShipmentId
          AND SplitShipmentId = @SplitShipmentId
          AND LCApplicationId = @LCApplicationId
          ORDER BY ShipmentId, SplitShipmentId, ShipmentDetailId
        </commandText>
        <parameters>
          <param key="LCApplicationId" name="@LCApplicationId" type="Int" direction="Input" />
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
          <param key="SplitShipmentId" name="@SplitShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCShipmentDetailByShipmentId" type="Text">
        <commandText>
          <![CDATA[
          SELECT * FROM
          (
          SELECT 
              LCApplicationId=-1,
              Status=1,
              s.ShipmentId, 
              SplitShipmentId = (case when @SplitShipmentId is null or @SplitShipmentId <=0 THEN 0 ELSE ssd.SplitShipmentId end), 
              ShipmentDetailId = (case when @SplitShipmentId is null or @SplitShipmentId <=0 THEN sd.ShipmentDetailId ELSE ssd.ShipmentDetailId end),
		      SizeOptionId = (case when @SplitShipmentId is null or @SplitShipmentId <=0 THEN sd.SizeOptionId ELSE ssd.SizeOptionId end),
		      Colour = sd.Colour,
              POQty = (case when @SplitShipmentId is null or @SplitShipmentId <=0 THEN sd.POQty ELSE ssd.POQty end),
		      ReducedSupplierGmtPrice = (case when @SplitShipmentId is null or @SplitShipmentId <=0 THEN sd.ReducedSupplierGmtPrice ELSE ssd.ReducedSupplierGmtPrice end)
          FROM
              Shipment as s 
              INNER JOIN ShipmentDetail as sd ON sd.ShipmentId=s.ShipmentId AND sd.Status=1
		      LEFT JOIN SplitShipment as ss ON ss.ShipmentId=s.ShipmentId AND ss.Status=1 AND ss.IsVirtualSetSplit=0 AND ss.SplitShipmentId = @SplitShipmentId
              LEFT JOIN SplitShipmentDetail as ssd ON ssd.SplitShipmentId=ss.SplitShipmentId AND ssd.Status=1 
					and ssd.ShipmentDetailid = sd.ShipmentDetailId
          WHERE s.ShipmentId = @ShipmentId
          ) as x
          ORDER BY ShipmentId, SplitShipmentId, ShipmentDetailId, ReducedSupplierGmtPrice, SizeOptionId
        ]]>
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
          <param key="SplitShipmentId" name="@SplitShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCApplicationShipmentDetail" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="LCApplicationShipmentApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLCApplicationShipmentByKey" type="Text">
        <commandText>
          SELECT *
          FROM LCApplicationShipment
          WHERE LCApplicationId = @LCApplicationId
          AND ShipmentId = @ShipmentId
          AND SplitShipmentId = @SplitShipmentId
        </commandText>
        <parameters>
          <param key="LCApplicationId" name="@LCApplicationId" type="Int" direction="Input" />
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
          <param key="SplitShipmentId" name="@SplitShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCApplicationShipmentByShipmentId" type="Text">
        <commandText>
          <![CDATA[
          SELECT *
          FROM LCApplicationShipment
          WHERE Status = 1 AND WorkflowStatusId<>5
              AND ShipmentId = @ShipmentId
              AND (@SplitShipmentId=-1 or SplitShipmentId = @SplitShipmentId)
          ]]>
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
          <param key="SplitShipmentId" name="@SplitShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCApplicationShipmentByLCApplicationId" type="Text">
        <commandText>
          <![CDATA[
          SELECT *
          FROM LCApplicationShipment
          WHERE LCApplicationId = @LCApplicationId AND Status = 1 AND WorkflowStatusId<>5
          ]]>
        </commandText>
        <parameters>
          <param key="LCApplicationId" name="@LCApplicationId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCApplicationShipment" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LCShipmentApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetLCShipment" type="Text">
        <commandText>
          <![CDATA[

		SELECT 
			x.ShipmentId, x.SplitShipmentId, x.ContractId, 
			x.ContractNo, x.DeliveryNo, x.SplitSuffix,
              
			x.OfficeId, x.ProductId, x.ItemNo,
			x.CustomerId, x.CustomerDestinationId, x.CustomerAtWarehouseDate, 
			x.SupplierAtWarehouseDate, x.VendorId, x.PaymentTermId,  
			BankBranchId = case when l.ShipmentId is not null 
                        		then l.BankBranchId
				                ELSE (CASE WHEN NULLIF(LTRIM(RTRIM(x.LCNo)),'') IS NOT NULL 
					                        THEN 0 -- unknown
					                        ELSE (SELECT (case when count(bb.BankBranchId)>1 THEN 0 ELSE max(bb.BankBranchId) end)
                          			            from  VendorBankMapping vb 
			                                        inner join BankBranch as bb ON bb.BankBranchId = vb.BankBranchId AND bb.Status=1
			                                        where  vb.Status=1 AND vb.VendorId = x.VendorId )
					                        end)
								end,
			x.TermOfPurchaseId, x.PurchaseLocationId,
			x.CountryOfOriginId, x.ShipmentPortId, 
			x.ShipmentMethodId, x.PackingMethodId, x.PackingUnitId,

			CurrencyId = x.BuyCurrencyId,
			x.ShipmentTotalPOAmount,
			x.TotalPOQty, 
			TotalPOAmt = (case when l.ShipmentId is null THEN x.ShipmentTotalPOAmount ELSE isnull(l.TotalPOAmt,0) end),
			x.QACommissionPercent, 
			x.VendorPaymentDiscountPercent,
			x.LabTestIncome,
			x.ShipmentWorkflowStatusId, 

			LCApplicationId = ISNULL(l.LCApplicationId, 0),
			WorkflowStatusId = ISNULL(l.WorkflowStatusId, 0),
			LCBatchId = ISNULL(l.LCBatchId, 0),
			Status = isnull(l.Status,-1),
              
			LCNo = x.LCNo,
			LCIssueDate = x.LCIssueDate,
			LCExpiryDate = x.LCExpiryDate,
			LCAmt = x.LCAmt,
			OtherShipmentIdWithLCNo = ISNULL(OtherShipmentIdWithLCNo, oss.ShipmentId),
			OtherSplitShipmentIdWithLCNo
		FROM
          (
			SELECT 
				c.ContractNo, s.DeliveryNo, SplitSuffix='', c.ContractId,
				s.ShipmentId, SplitShipmentId = 0, c.CustomerId, c.OfficeId,
				c.ProductId, c.PackingMethodId, c.PackingUnitId, s.VendorId, s.CountryOfOriginId,
				s.ShipmentMethodId, s.ShipmentPortId,
				CustomerAtWarehouseDate = s.CustomerAtWarehouseDate,
				SupplierAtWarehouseDate = s.SupplierAtWarehouseDate,
				s.TotalPOQty, ShipmentTotalPOAmount=s.TotalPOSupplierGmtAmtAfterDiscount,
				s.QACommissionPercent, s.VendorPaymentDiscountPercent, s.LabTestIncome, 
				s.CustomerDestinationId, ShipmentWorkflowStatusId=s.WorkflowStatusId,
				p.ItemNo, s.BuyCurrencyId,
				s.TermOfPurchaseId,
				s.PurchaseLocationId,
				s.PaymentTermId,

				LCNo = i.LCNo,
				LCIssueDate = i.LCIssueDate,
				LCExpiryDate = i.LCExpiryDate,
				LCAmt = i.LCAmt,
				OtherShipmentIdWithLCNo = (SELECT TOP 1 i0.ShipmentId
											FROM Invoice AS i0 WITH (NOLOCK)
												INNER JOIN Shipment AS s0 WITH (NOLOCK) ON i0.ShipmentId=s0.ShipmentId AND s0.Status=1 AND i0.Status = 1
											WHERE s0.ContractId=s.ContractId
												AND s0.ShipmentId <> s.ShipmentId
												AND RTRIM(i0.LCNo) <> '' 
											ORDER BY 1),
				OtherSplitShipmentIdWithLCNo = NULL
				--ContractLCIssued = 
			FROM Contract c WITH (NOLOCK) 
				INNER JOIN Shipment s WITH (NOLOCK) ON c.ContractId = s.ContractId AND s.Status = 1 AND s.WorkFlowStatusId IN (6, 7, 8)
									AND s.PaymentTermId in (SELECT PaymentTermId from  PaymentTerm WITH (NOLOCK) WHERE Status=1 AND LCPaymentTermRequestFlag = 1)
				INNER JOIN PaymentTerm pt WITH (NOLOCK) ON pt.PaymentTermId = s.PaymentTermId AND pt.Status=1 AND pt.LCPaymentTermRequestFlag = 1
				INNER JOIN Product p WITH (NOLOCK) ON p.ProductId = c.ProductId AND p.Status=1
				INNER JOIN Invoice i WITH (NOLOCK) ON i.ShipmentId=s.ShipmentId AND i.status=1 
				LEFT OUTER JOIN LCApplicationShipment ls WITH (NOLOCK) ON ls.ShipmentId = s.ShipmentId AND ISNULL(ls.SplitShipmentId,0) = 0 AND ls.Status = 1
				LEFT OUTER JOIN LCApplication AS l WITH (NOLOCK) ON l.LCApplicationId=ls.LCApplicationId AND l.Status=1
			WHERE (SplitCount = 0 OR s.IsVirtualSetSplit = 1) AND c.Status = 1
				AND (ls.ShipmentId is not null or not(s.IsMockShopSample=1 or s.IsPressSample=1))  -- not include Mock Shop Sample and Press Sample
				--AND s.CustomerDestinationId not in (SELECT CustomerDestinationId from CustomerDestination where UTurnOrder=1)	-- Not incluce UT order
				--AND (c.OfficeId not in (1,2) or s.CustomerDestinationId not in (SELECT CustomerDestinationId from CustomerDestination where UTurnOrder=1))	-- Not incluce UT order in HK & SH office (suggest to amended by Toby)
				AND s.TermOfPurchaseId <> 5
				AND c.CustomerId not in (3,4,8,9)		-- Not incluce Middle East, Japan, CHOICE AND Lipsy
				AND (c.OfficeId @OfficeIdList)
				AND (c.ProductTeamId @ProductTeamIdList)
              
				AND (@LCAppSubmitStatus is null or (@LCAppSubmitStatus = case when ls.LCApplicationId IS NULL AND (i.LCNo IS NULL or i.LCNo='') THEN 0 ELSE 1 end))
				AND (@ItemNo IS NULL OR p.ItemNo = @ItemNo)
				AND (@CountryOfOriginId IS NULL OR s.CountryOfOriginId = @CountryOfOriginId)
				AND (@FromAtWarehouseDate IS NULL OR s.SupplierAtWarehouseDate >= @FromAtWarehouseDate)
				AND (@ToAtWarehouseDate IS NULL OR s.SupplierAtWarehouseDate <= @ToAtWarehouseDate)
				AND (@VendorId IS NULL OR s.VendorId = @VendorId)
				AND (@FromLCApplicationDate IS NULL OR l.CreatedOn >= @FromLCApplicationDate)
				AND (@ToLCApplicationDate IS NULL OR l.CreatedOn < (@ToLCApplicationDate+1))
				AND (@FromLCApplicationNo IS NULL OR l.LCApplicationNo >= @FromLCApplicationNo)
				AND (@ToLCApplicationNo IS NULL OR l.LCApplicationNo <= @ToLCApplicationNo)
            
        UNION
          
			SELECT
				c.ContractNo, s.DeliveryNo, ss.SplitSuffix, c.ContractId,
				s.ShipmentId, ss.SplitShipmentId, c.CustomerId, c.OfficeId, 
				ss.ProductId, c.PackingMethodId, ss.PackingUnitId, ss.VendorId, ss.CountryOfOriginId,
				s.ShipmentMethodId, s.ShipmentPortId, 
				CustomerAtWarehouseDate = s.CustomerAtWarehouseDate,
				SupplierAtWarehouseDate = ss.SupplierAtWarehouseDate, 
				ss.TotalPOQty, ShipmentTotalPOAmount=ss.TotalPOSupplierGmtAmtAfterDiscount,
				ss.QACommissionPercent, ss.VendorPaymentDiscountPercent, ss.LabTestIncome, 
				s.CustomerDestinationId, ShipmentWorkflowStatusId = s.WorkflowStatusId,
				p.ItemNo, ss.BuyCurrencyId,
				s.TermOfPurchaseId,
				s.PurchaseLocationId,
				ss.PaymentTermId,

				LCNo = ss.LCNo,
				LCIssueDate = ss.LCIssueDate,
				LCExpiryDate = ss.LCExpiryDate,
				LCAmt = ss.LCAmt,
				OtherShipmentIdWithLCNo = NULL,
				OtherSplitShipmentIdWithLCNo = (SELECT TOP 1 ss0.SplitShipmentId 
												FROM Shipment AS s0  WITH (NOLOCK)
													INNER JOIN SplitShipment AS ss0 WITH (NOLOCK) ON ss0.ShipmentId=s0.ShipmentId AND ss0.IsVirtualSetSplit=0 AND ss0.Status=1 AND s0.Status=1
												WHERE s0.ContractId = s.ContractId 
													AND ss0.SplitSuffix = ss.SplitSuffix
													AND ss0.SplitShipmentId <> ss.SplitShipmentId
													AND RTRIM(ss0.LCNo) <> '' 
												ORDER BY 1)

			FROM Contract c WITH (NOLOCK) 
				INNER JOIN Shipment s WITH (NOLOCK) ON c.ContractId = s.ContractId AND s.Status = 1 AND s.WorkflowStatusId IN (6,7,8) -- <> 9
				INNER JOIN SplitShipment ss WITH (NOLOCK) ON ss.ShipmentId = s.ShipmentId AND ISNULL(ss.IsVirtualSetSplit,0) = 0 AND ss.status=1 
								-- AND (@OutstandingShipmentOnly=0 or (ss.LCNo is null or ss.LCNo='')) --ISNULL(ss.LCNo,'') = ''
									AND ss.PaymentTermId in (SELECT PaymentTermId from  PaymentTerm WITH (NOLOCK) WHERE Status=1 AND LCPaymentTermRequestFlag = 1)
				INNER JOIN PaymentTerm pt WITH (NOLOCK) ON pt.PaymentTermId = ss.PaymentTermId AND pt.LCPaymentTermRequestFlag = 1 AND pt.status=1
				INNER JOIN Product p WITH (NOLOCK) ON p.ProductId = ss.ProductId AND p.Status = 1
				LEFT OUTER JOIN LCApplicationShipment as ls WITH (NOLOCK) ON ls.SplitShipmentId = ss.SplitShipmentId AND ls.Status = 1
				LEFT OUTER JOIN LCApplication AS l WITH (NOLOCK) ON l.LCApplicationId=ls.LCApplicationId AND l.Status=1
			WHERE NOT (SplitCount = 0 OR s.IsVirtualSetSplit = 1) AND c.status = 1
				--AND s.CustomerDestinationId not in (SELECT CustomerDestinationId from CustomerDestination where UTurnOrder=1)	-- Not incluce UT order
				--AND (c.OfficeId not in (1,2) or s.CustomerDestinationId not in (SELECT CustomerDestinationId from CustomerDestination where UTurnOrder=1))	-- Not incluce UT order in HK & SH office (suggest to amended by Toby)
				AND s.TermOfPurchaseId <> 5
				
				AND c.CustomerId not in (3,4,8,9)		-- Not incluce Middle East, Japan, CHOICE AND Lipsy
				AND (ls.SplitShipmentId is not null or not(s.IsMockShopSample=1 or s.IsPressSample=1))  -- not include Mock Shop Sample and Press Sample

				AND (@LCAppSubmitStatus is null or (@LCAppSubmitStatus = case when ls.LCApplicationId IS NULL AND (ss.LCNo IS NULL or ss.LCNo='') THEN 0 ELSE 1 end))
				AND (@ItemNo IS NULL or p.ItemNo = @ItemNo)
				AND (@CountryOfOriginId IS NULL OR ss.CountryOfOriginId = @CountryOfOriginId)
				AND (@FromAtWarehouseDate IS NULL OR ss.SupplierAtWarehouseDate >= @FromAtWarehouseDate)
				AND (@ToAtWarehouseDate IS NULL OR ss.SupplierAtWarehouseDate <= @ToAtWarehouseDate)
				AND (@VendorId IS NULL OR ss.VendorId = @VendorId)
				AND (c.OfficeId @OfficeIdList)
				AND (c.ProductTeamId @ProductTeamIdList)
				AND (@FromLCApplicationDate IS NULL OR l.CreatedOn >= @FromLCApplicationDate)
				AND (@ToLCApplicationDate IS NULL OR l.CreatedOn < (@ToLCApplicationDate+1))
				AND (@FromLCApplicationNo IS NULL OR l.LCApplicationNo >= @FromLCApplicationNo)
				AND (@ToLCApplicationNo IS NULL OR l.LCApplicationNo <= @ToLCApplicationNo)
		) x
		LEFT JOIN LCApplicationShipment as l WITH (NOLOCK) ON l.ShipmentId=x.ShipmentId AND l.Status=1
		LEFT JOIN SplitShipment as oss WITH (NOLOCK) ON oss.SplitShipmentId=x.SplitShipmentId
		ORDER BY ContractNo, DeliveryNo, x.SplitSuffix
          ]]>
        </commandText>
        <parameters>
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
          <param key="ItemNo" name="@ItemNo" type="varchar" direction="Input" />
          <param key="CountryOfOriginId" name="@CountryOfOriginId" type="Int" direction="Input" />
          <param key="FromAtWarehouseDate" name="@FromAtWarehouseDate" type="Datetime" direction="Input" />
          <param key="ToAtWarehouseDate" name="@ToAtWarehouseDate" type="Datetime" direction="Input" />
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="input"/>
          <param key="ProductTeamIdList" name="@ProductTeamIdList" type="ArrayInt" direction="input"/>
          <param key="FromLCApplicationDate" name="@FromLCApplicationDate" type="Datetime" direction="Input" />
          <param key="ToLCApplicationDate" name="@ToLCApplicationDate" type="Datetime" direction="Input" />
          <param key="FromLCApplicationNo" name="@FromLCApplicationNo" type="int" direction="Input" />
          <param key="ToLCApplicationNo" name="@ToLCApplicationNo" type="int" direction="Input" />
          <param key="LCAppSubmitStatus" name="@LCAppSubmitStatus" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCApplicationShipmentByCriteria" type="Text">
        <commandText>
          <![CDATA[

          SELECT 
				ls.ShipmentId, ls.SplitShipmentId, 
				s.ContractId, c.ContractNo, s.DeliveryNo, SplitSuffix = isnull(ss.SplitSuffix,''), 

				c.OfficeId, ls.ProductId, ItemNo = (SELECT ItemNo FROM Product WHERE ProductId = ls.ProductId),
				ls.CustomerId, ls.CustomerDestinationId, ls.CustomerAtWarehouseDate, 
				ls.SupplierAtWarehouseDate, ls.VendorId, ls.PaymentTermId,
				VendorName = (SELECT Name from NSLINDUSTRY..Vendor where VendorId = ls.VendorId),
				ls.BankBranchId, 

				ls.TermOfPurchaseId, ls.PurchaseLocationId,
				ls.CountryOfOriginId, ls.ShipmentPortId,  
				ls.ShipmentMethodId, ls.PackingMethodId, ls.PackingUnitId,

				CurrencyId=ls.CurrencyId,
				ShipmentTotalPOAmount = (CASE WHEN ls.SplitShipmentId > 0 THEN ss.TotalPOSupplierGmtAmtAfterDiscount ELSE s.TotalPOSupplierGmtAmtAfterDiscount END),
				ls.TotalPOQty, ls.TotalPOAmt, 
				ls.QACommissionPercent, ls.VendorPaymentDiscountPercent, ls.LabTestIncome,
				ShipmentWorkflowStatusId = s.WorkflowStatusId,
          	            
          	            
				ls.LCApplicationId, 
				ls.WorkflowStatusId,
				LCBatchId = ISNULL(ls.LCBatchId, 0),
				ls.Status, 

				LCNo = ISNULL((CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCNo ELSE i.LCNo END), ''),
				LCIssueDate = (CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCIssueDate ELSE i.LCIssueDate END),
				LCExpiryDate = (CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCExpiryDate ELSE i.LCExpiryDate END),
				LCAmt = ISNULL((CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCAmt ELSE i.LCAmt END), 0),
				LcCancellationDate,
				OtherShipmentIdWithLCNo = (CASE WHEN ss.SplitShipmentId IS NOT NULL THEN NULL
												ELSE (SELECT TOP 1 i0.ShipmentId 
														FROM Invoice AS i0 WITH (NOLOCK)
															INNER JOIN Shipment AS s0 WITH (NOLOCK) ON i0.ShipmentId=s0.ShipmentId AND s0.Status=1 AND i0.Status = 1
														WHERE s0.ContractId=s.ContractId
															AND s0.ShipmentId <> s.ShipmentId
															AND RTRIM(i0.LCNo) <> '' 
														ORDER BY 1)
												END),
				OtherSplitShipmentIdWithLCNo = (CASE WHEN ss.SplitShipmentId IS NULL THEN NULL
													ELSE (SELECT TOP 1 ss0.SplitShipmentId 
															FROM Shipment AS s0  WITH (NOLOCK)
																INNER JOIN SplitShipment AS ss0 WITH (NOLOCK) ON ss0.ShipmentId=s0.ShipmentId AND ss0.IsVirtualSetSplit=0 AND ss0.Status=1 AND s0.Status=1
															WHERE s0.ContractId = s.ContractId 
																AND ss0.SplitSuffix = ss.SplitSuffix
																AND ss0.SplitShipmentId <> ss.SplitShipmentId
																AND RTRIM(ss0.LCNo) <> '' 
															ORDER BY 1)
													END)
          FROM  LCApplicationShipment AS ls WITH (NOLOCK)
                INNER JOIN LCApplication AS l WITH (NOLOCK) ON l.LcApplicationId = ls.LcApplicationId AND l.Status = 1
		        INNER JOIN Shipment AS s WITH (NOLOCK) ON s.ShipmentId=ls.ShipmentId AND s.Status=1
                INNER JOIN Contract AS c WITH (NOLOCK) ON c.ContractId=s.ContractId AND c.Status = 1
                LEFT JOIN Invoice AS i WITH (NOLOCK) ON i.ShipmentId=s.ShipmentId AND i.Status = 1
                LEFT JOIN SplitShipment AS ss WITH (NOLOCK) ON ss.SplitShipmentId = ls.SplitShipmentId AND ss.Status = 1 AND ISNULL(ss.IsVirtualSetSplit, 0) = 0 
          WHERE ls.Status=1 
            	AND (@VendorId IS NULL OR @VendorId=ls.VendorId)
                AND (@FromLCAppNo IS NULL OR l.LcApplicationNo >= CONVERT(int, @FromLCAppNo))
                AND (@ToLCAppNo IS NULL OR l.LcApplicationNo <= CONVERT(int, @ToLCAppNo))
                AND (@FromLCAppDate IS NULL OR l.CreatedOn >= @FromLCAppDate)
                AND (@ToLCAppDate IS NULL OR l.CreatedOn - 1 < @ToLCAppDate)
                AND (c.OfficeId @OfficeIdList)
                AND (c.DeptId @DeptIdList)
                AND (c.ProductTeamId @ProdTeamIdList)
                AND (ls.WorkflowStatusId @LCWorkflowStatusIdList) 
          ORDER BY
			  c.officeId, VendorName, l.LCApplicationNo, ls.CustomerAtWarehouseDate, c.ContractNo, s.DeliveryNo, ss.SplitSuffix
          ]]>
        </commandText>
        <parameters>
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="DepartmentIdList" name="@DeptIdList" type="ArrayInt" direction="Input" />
          <param key="ProductTeamIdList" name="@ProdTeamIdList" type="ArrayInt" direction="Input" />
          <param key="FromLCAppliationNo" name="@FromLCAppNo" type="varchar" direction="Input" />
          <param key="ToLCAppliationNo" name="@ToLCAppNo" type="varchar" direction="Input" />
          <param key="FromLCApplicationDate" name="@FromLCAppDate" type="Datetime" direction="Input" />
          <param key="ToLCApplicationDate" name="@ToLCAppDate" type="Datetime" direction="Input" />
          <param key="LCWorkflowStatusIdList" name="@LCWorkflowStatusIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCApplicationShipmentByLCBatchId" type="Text">
        <commandText>
          <![CDATA[
          SELECT
					ls.ShipmentId, ls.SplitShipmentId, 
					s.ContractId, c.ContractNo, s.DeliveryNo, SplitSuffix = isnull(ss.SplitSuffix,''),

					c.OfficeId, ls.ProductId, ItemNo = (SELECT ItemNo FROM Product WHERE ProductId = ls.ProductId),
					ls.CustomerId, ls.CustomerDestinationId, ls.CustomerAtWarehouseDate, 
					ls.SupplierAtWarehouseDate, ls.VendorId, ls.PaymentTermId,
					VendorName = (SELECT Name from NSLINDUSTRY..Vendor where VendorId = ls.VendorId),
					ls.BankBranchId, 

					ls.TermOfPurchaseId, ls.PurchaseLocationId,
					ls.CountryOfOriginId, ls.ShipmentPortId,  
					ls.ShipmentMethodId, ls.PackingMethodId, ls.PackingUnitId, 

					CurrencyId=ls.CurrencyId,
					ShipmentTotalPOAmount = (CASE WHEN ls.SplitShipmentId > 0 THEN ss.TotalPOSupplierGmtAmtAfterDiscount ELSE s.TotalPOSupplierGmtAmtAfterDiscount END),
					ls.TotalPOQty, ls.TotalPOAmt, 
					ls.QACommissionPercent, ls.VendorPaymentDiscountPercent, ls.LabTestIncome,
					ShipmentWorkflowStatusId = s.WorkflowStatusId,
          	            
          	            
					ls.LCApplicationId, 
					ls.WorkflowStatusId,
					LCBatchId = ISNULL(ls.LCBatchId, 0),
					ls.Status, 

					LCNo = ISNULL((CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCNo ELSE i.LCNo END), ''),
					LCIssueDate = (CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCIssueDate ELSE i.LCIssueDate END),
					LCExpiryDate = (CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCExpiryDate ELSE i.LCExpiryDate END),
					LCAmt = ISNULL((CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCAmt ELSE i.LCAmt END), 0),
					LcCancellationDate,
					OtherShipmentIdWithLCNo = (CASE WHEN ss.SplitShipmentId IS NOT NULL THEN NULL
												ELSE (SELECT TOP 1 i0.ShipmentId 
														FROM Invoice AS i0 WITH (NOLOCK)
															INNER JOIN Shipment AS s0 WITH (NOLOCK) ON i0.ShipmentId=s0.ShipmentId AND s0.Status=1 AND i0.Status = 1
														WHERE s0.ContractId=s.ContractId
															AND s0.ShipmentId <> s.ShipmentId
															AND RTRIM(i0.LCNo) <> '' 
														ORDER BY 1)
												END),
					OtherSplitShipmentIdWithLCNo = (CASE WHEN ss.SplitShipmentId IS NULL THEN NULL
													ELSE (SELECT TOP 1 ss0.SplitShipmentId 
															FROM Shipment AS s0  WITH (NOLOCK)
																INNER JOIN SplitShipment AS ss0 WITH (NOLOCK) ON ss0.ShipmentId=s0.ShipmentId AND ss0.IsVirtualSetSplit=0 AND ss0.Status=1 AND s0.Status=1
															WHERE s0.ContractId = s.ContractId 
																AND ss0.SplitSuffix = ss.SplitSuffix
																AND ss0.SplitShipmentId <> ss.SplitShipmentId
																AND RTRIM(ss0.LCNo) <> '' 
															ORDER BY 1)
													END)

          FROM  LCApplicationShipment AS ls WITH (NOLOCK)
                INNER JOIN LCApplication AS l WITH (NOLOCK) ON l.LcApplicationId = ls.LcApplicationId AND l.Status = 1
		        INNER JOIN Shipment AS s WITH (NOLOCK) ON s.ShipmentId=ls.ShipmentId AND s.Status=1
                INNER JOIN Contract AS c WITH (NOLOCK) ON c.ContractId=s.ContractId AND c.Status = 1
                LEFT JOIN Invoice AS i WITH (NOLOCK) ON i.ShipmentId=s.ShipmentId AND i.Status = 1
                LEFT JOIN SplitShipment AS ss WITH (NOLOCK) ON ss.SplitShipmentId = ls.SplitShipmentId AND ss.Status = 1 AND ISNULL(ss.IsVirtualSetSplit, 0) = 0 
          WHERE ls.Status = 1
            --AND ls.WorkflowStatusId IN (3, 4) -- APPLIED or COMPLETED
              AND (ls.LCBatchId = @LCBatchId)
          ORDER BY 
              ls.LCApplicationId DESC, c.ContractNo, s.DeliveryNo, ss.SplitSuffix
          ]]>
        </commandText>
        <parameters>
          <param key="LCBatchId" name="@LCBatchId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCApplicationShipmentByContractNo" type="Text">
        <commandText>
          <![CDATA[

          SELECT 
				s.ShipmentId, 
				SplitShipmentId = ISNULL(ss.SplitShipmentId, 0),
				s.ContractId, c.ContractNo, s.DeliveryNo, SplitSuffix = isnull(ss.SplitSuffix,''), 

				c.OfficeId, 
				ProductId = ISNULL(ls.ProductId,0), 
				ItemNo = ISNULL((SELECT ItemNo FROM Product WHERE ProductId = ls.ProductId),''),
				CustomerId = ISNULL(ls.CustomerId, 0),
				CustomerDestinationId = ISNULL(ls.CustomerDestinationId, 0),
				CustomerAtWarehouseDate = ISNULL(ls.CustomerAtWarehouseDate, ''),
				SupplierAtWarehouseDate = ISNULL(ls.SupplierAtWarehouseDate, ''),
				VendorId = ISNULL(ls.VendorId, 0),
				PaymentTermId = ISNULL(ls.PaymentTermId, 0),
				VendorName = ISNULL((SELECT Name from NSLINDUSTRY..Vendor where VendorId = ls.VendorId),''),
				BankBranchId = ISNULL(ls.BankBranchId, 0),

				TermOfPurchaseId = ISNULL(ls.TermOfPurchaseId, 0),
				PurchaseLocationId = ISNULL(ls.PurchaseLocationId, 0),
				CountryOfOriginId = ISNULL(ls.CountryOfOriginId, 0),
				ShipmentPortId = ISNULL(ls.ShipmentPortId, 0),
				ShipmentMethodId = ISNULL(ls.ShipmentMethodId, 0),
				PackingMethodId = ISNULL(ls.PackingMethodId, 0),
				PackingUnitId = ISNULL(ls.PackingUnitId, 0),

				CurrencyId = ISNULL(ls.CurrencyId, 0),
				ShipmentTotalPOAmount = ISNULL((CASE WHEN ls.SplitShipmentId > 0 THEN ss.TotalPOSupplierGmtAmtAfterDiscount ELSE s.TotalPOSupplierGmtAmtAfterDiscount END), 0),
				TotalPOQty = ISNULL(ls.TotalPOQty, 0),
				TotalPOAmt  = ISNULL(ls.TotalPOAmt, 0),
				QACommissionPercent = ISNULL(ls.QACommissionPercent, 0),
				VendorPaymentDiscountPercent = ISNULL(ls.VendorPaymentDiscountPercent, 0),
				LabTestIncome = ISNULL(ls.LabTestIncome, 0),
				ShipmentWorkflowStatusId = s.WorkflowStatusId,
          	            
          	            
				LCApplicationId = ISNULL(ls.LCApplicationId, 0),
				WorkflowStatusId = ISNULL(ls.WorkflowStatusId, 0),
				LCBatchId = ISNULL(ls.LCBatchId, 0),
				Status = ISNULL(ls.Status, 0),

				LCNo = ISNULL((CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCNo ELSE i.LCNo END), ''),
				LCIssueDate = (CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCIssueDate ELSE i.LCIssueDate END), 
				LCExpiryDate = (CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCExpiryDate ELSE i.LCExpiryDate END),
				LCAmt = ISNULL((CASE WHEN ls.SplitShipmentId > 0 THEN ss.LCAmt ELSE i.LCAmt END), 0),
				LcCancellationDate,
				OtherShipmentIdWithLCNo = (CASE WHEN ss.SplitShipmentId IS NOT NULL THEN NULL
												ELSE (SELECT TOP 1 i0.ShipmentId 
														FROM Invoice AS i0 WITH (NOLOCK)
															INNER JOIN Shipment AS s0 WITH (NOLOCK) ON i0.ShipmentId=s0.ShipmentId AND s0.Status=1 AND i0.Status = 1
														WHERE s0.ContractId=s.ContractId
															AND s0.ShipmentId <> s.ShipmentId
															AND RTRIM(i0.LCNo) <> '' 
														ORDER BY 1)
												END),
				OtherSplitShipmentIdWithLCNo = (CASE WHEN ss.SplitShipmentId IS NULL THEN NULL
													ELSE (SELECT TOP 1 ss0.SplitShipmentId 
															FROM Shipment AS s0  WITH (NOLOCK)
																INNER JOIN SplitShipment AS ss0 WITH (NOLOCK) ON ss0.ShipmentId=s0.ShipmentId AND ss0.IsVirtualSetSplit=0 AND ss0.Status=1 AND s0.Status=1
															WHERE s0.ContractId = s.ContractId 
																AND ss0.SplitSuffix = ss.SplitSuffix
																AND ss0.SplitShipmentId <> ss.SplitShipmentId
																AND RTRIM(ss0.LCNo) <> '' 
															ORDER BY 1)
													END)
          FROM  Contract AS c WITH (NOLOCK)
		        INNER JOIN Shipment AS s WITH (NOLOCK) ON c.ContractId=s.ContractId AND s.Status=1 AND c.Status = 1
                INNER JOIN Invoice AS i WITH (NOLOCK) ON i.ShipmentId=s.ShipmentId AND i.Status = 1
                LEFT JOIN LCApplicationShipment AS ls WITH (NOLOCK) ON ls.ShipmentId=s.ShipmentId AND ls.Status=1
                LEFT JOIN LCApplication AS l WITH (NOLOCK) ON l.LcApplicationId = ls.LcApplicationId AND l.Status = 1
                LEFT JOIN SplitShipment AS ss WITH (NOLOCK) ON ss.SplitShipmentId = ls.SplitShipmentId AND ss.Status = 1 AND ISNULL(ss.IsVirtualSetSplit, 0) = 0 
          WHERE (@ContractNo IS NULL OR @ContractNo=c.ContractNo)
          ORDER BY 
              c.ContractNo, s.DeliveryNo, ss.SplitSuffix
          ]]>
        </commandText>
        <parameters>
          <param key="ContractNo" name="@ContractNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCShipment" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LCAdvancePaymentApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetLCAdvancePaymentList" type="Text">
        <commandText>
          <![CDATA[
				SELECT c.ContractNo, s.DeliveryNo, s.VendorId, c.ProductId, s.SupplierAtWarehouseDate, 
					s.TotalPoQty, s.TotalShippedQty, s.TotalShippedAmt, i.InvoiceDate, s.WorkflowStatusId as ShippmentStatusId, 
					i.ApDate, i.LCNo, i.LCIssueDate, i.LCExpiryDate,
					LCApplicationNo = ISNULL(la.LCApplicationNo,0), 
					LCBatchNo = ISNULL(lb.LCBatchNo,0), 
					PaymentNo = COALESCE(ap.PaymentNo, nap.PaymentNo,''), 
					ActualDeductAmt = COALESCE(od.ActualDeductAmt, nod.ActualDeductAmt, 0),
					ExpectedDeductAmt = COALESCE(od.ExpectedDeductAmt, nod.ExpectedDeductAmt, 0), 
					NSLRefNo = COALESCE(ap.FLRefNo, nap.NSLRefNo, ''), 

					PaymentId = ISNULL(ap.PaymentId, nap.PaymentId), 
					AdvancePaymentCreationDate = ISNULL(od.CreatedOn,nod.CreatedOn),
					NSSOrderDetailCreationDate = nod.CreatedOn,
					s.ShipmentId, s.PaymentTermId
					,PaymentDeductionAmtInLC = ls.DeducedFabricCost
					,AdvancePaymentStatusId = COALESCE(ap.WorkflowStatusId, nap.WorkflowStatusId,-1)
					,ApprovedDate = (CASE WHEN ap.WorkflowStatusId IS NOT NULL THEN ap.ApprovedDate ELSE nap.ApprovedDate END)
					,RejectDate = (CASE WHEN ap.WorkflowStatusId IS NOT NULL THEN ap.RejectDate ELSE nap.RejectDate END)
					,SubmittedDate = (CASE WHEN ap.SubmittedDate IS NOT NULL THEN nap.SubmittedDate ELSE nap.SubmittedDate END)
				INTO #LCAdvPay
				FROM Shipment as s  WITH (NOLOCK)
					INNER JOIN Contract as c WITH (NOLOCK) on c.ContractId = s.ContractId and c.Status = 1
					INNER JOIN Invoice as i  WITH (NOLOCK) on i.ShipmentId = s.ShipmentId and i.Status = 1
					INNER JOIN Product as p WITH (NOLOCK) on p.ProductId = c.ProductId
					LEFT JOIN LCApplicationShipment as ls WITH (NOLOCK) on ls.ShipmentId = s.ShipmentId and ls.Status = 1 AND ls.WorkflowStatusId NOT IN (5)		-- Not Rejected
					LEFT JOIN LCApplication as la WITH (NOLOCK) on la.LCApplicationId = ls.LCApplicationId and la.Status = 1
					LEFT JOIN LCBatch as lb WITH (NOLOCK) on lb.LCBatchId = ls.LCBatchId and lb.Status = 1
					LEFT JOIN vw_NSS_AdvancePaymentOrderDetail as nod on nod.ShipmentId = s.ShipmentId and nod.Status = 1
					LEFT JOIN vw_NSS_AdvancePayment as nap on nap.PaymentId = nod.PaymentId and nap.Status = 1 
					LEFT JOIN AdvancePaymentOrderDetail as od on od.shipmentId=s.shipmentId and od.status=1 and (od.PaymentId = nod.PaymentId or (nod.PaymentId is null and od.PaymentId is not null))
					LEFT JOIN AdvancePayment as ap on ap.PaymentId=isnull(od.PaymentId,nap.PaymentId) and ap.status = 1
				WHERE s.Status = 1

					--AND apod.ActualDeductAmt>0
					AND (@VendorId IS NULL OR s.VendorId = @VendorId)
					AND (@ItemNo IS NULL OR p.ItemNo = @ItemNo)
					AND (@ContractNo IS NULL OR c.ContractNo = @ContractNo)
					AND (c.OfficeId @OfficeIdList)
					AND (c.ProductTeamId @ProductTeamIdList)
					AND (@FromAtWarehouseDate IS NULL OR s.SupplierAtWarehouseDate >= @FromAtWarehouseDate)
					AND (@ToAtWarehouseDate IS NULL OR s.SupplierAtWarehouseDate <= @ToAtWarehouseDate)
					AND (@FromLCIssueDate IS NULL OR i.LCIssueDate >= @FromLCIssueDate)
					AND (@ToLCIssueDate IS NULL OR i.LCIssueDate <= @ToLCIssueDate)
					AND (@FromLCNo IS NULL OR i.LCNo >= @FromLCNo)
					AND (@ToLCNo   IS NULL OR i.LCNo <= @ToLCNo  )
					AND (@FromLCBatchNo IS NULL OR lb.LCBatchNo >= @FromLCBatchNo)
					AND (@ToLCBatchNo IS NULL OR lb.LCBatchNo <= @ToLCBatchNo)
					AND ((@FromAdvancePaymentNo IS NULL AND @ToAdvancePaymentNo IS NULL) 
						OR (ap.PaymentNo BETWEEN ISNULL(@FromAdvancePaymentNo,@ToAdvancePaymentNo) AND ISNULL(@ToAdvancePaymentNo,@FromAdvancePaymentNo)) 
						OR (nap.PaymentNo BETWEEN ISNULL(@FromAdvancePaymentNo,@ToAdvancePaymentNo) AND ISNULL(@ToAdvancePaymentNo,@FromAdvancePaymentNo)))
					AND ((@FromNSLRefNo IS NULL AND @ToNSLRefNo IS NULL) 
						OR (nap.NSLRefNo BETWEEN ISNULL(@FromNSLRefNo,@ToNSLRefNo) AND ISNULL(@ToNSLRefNo,@FromNSLRefNO))
						OR (ap.FLRefNo BETWEEN ISNULL(@FromNSLRefNo,@ToNSLRefNo) AND ISNULL(@ToNSLRefNo,@FromNSLRefNO)))
					--AND (@FromApprovalDate IS NULL OR ap.ApprovedDate >= @FromApprovalDate)
					--AND (@ToApprovalDate IS NULL OR ap.ApprovedDate <= @ToApprovalDate)
					AND (@IsC19Order IS NULL OR ap.IsC19=@IsC19Order OR nap.IsC19=@IsC19Order)
					AND (  (@FromActionDate IS NULL AND @ToActionDate IS NULL)
						OR ((ap.WorkflowStatusId IS NOT NULL AND
							 ( (ap.WorkflowStatusId=1 AND ap.SubmittedDate	>= @FromActionDate AND ap.SubmittedDate < @ToActionDate+1)
							 OR (ap.WorkflowStatusId=2 AND ap.ApprovedDate	>= @FromActionDate AND ap.ApprovedDate	< @ToActionDate+1)
							 OR (ap.WorkflowStatusId=3 AND ap.RejectDate		>= @FromActionDate AND ap.RejectDate	< @ToActionDate+1)
							 ))
							 OR
							 (ap.WorkflowStatusId IS NULL AND nap.WorkflowStatusId IS NOT NULL AND
							 ( (nap.WorkflowStatusId=1 AND nap.SubmittedDate	>= @FromActionDate AND nap.SubmittedDate < @ToActionDate+1)
							 OR (nap.WorkflowStatusId=2 AND nap.ApprovedDate	>= @FromActionDate AND nap.ApprovedDate	< @ToActionDate+1)
							 OR (nap.WorkflowStatusId=3 AND nap.RejectDate		>= @FromActionDate AND nap.RejectDate	< @ToActionDate+1)
							 ))
							)
						)

				SELECT y.* 
				FROM (SELECT ShipmentId, LCApplicationNo=ISNULL(MAX(LCApplicationNo),0) FROM #LCAdvPay GROUP BY ShipmentId) AS x
					LEFT JOIN #LcAdvPay AS y ON y.ShipmentId = x.ShipmentId and ISNULL(y.LCApplicationNo,0) = x.LCApplicationNo
				ORDER BY convert(date,ApprovedDate), PaymentNo, ContractNo, DeliveryNo
          ]]>
        </commandText>
        <parameters>
          <param key="VendorId" name="@VendorId" type="int" direction="Input" />
          <param key="ItemNo" name="@ItemNo" type="varchar" direction="Input" />
          <param key="ContractNo" name="@ContractNo" type="varchar" direction="Input" />
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="ProductTeamIdList" name="@ProductTeamIdList" type="ArrayInt" direction="Input" />
          <param key="FromAtWarehouseDate" name="@FromAtWarehouseDate" type="datetime" direction="Input" />
          <param key="ToAtWarehouseDate" name="@ToAtWarehouseDate" type="datetime" direction="Input" />
          <param key="FromLCIssueDate" name="@FromLCIssueDate" type="datetime" direction="Input" />
          <param key="ToLCIssueDate" name="@ToLCIssueDate" type="datetime" direction="Input" />
          <param key="FromLCNo" name="@FromLCNo" type="varchar" direction="Input" />
          <param key="ToLCNo" name="@ToLCNo" type="varchar" direction="Input" />
          <param key="FromLCBatchNo" name="@FromLCBatchNo" type="int" direction="Input" />
          <param key="ToLCBatchNo" name="@ToLCBatchNo" type="int" direction="Input" />
          <param key="FromAdvancePaymentNo" name="@FromAdvancePaymentNo" type="varchar" direction="Input" />
          <param key="ToAdvancePaymentNo" name="@ToAdvancePaymentNo" type="varchar" direction="Input" />
          <param key="FromNSLRefNo" name="@FromNSLRefNo" type="varchar" direction="Input" />
          <param key="ToNSLRefNo" name="@ToNSLRefNo" type="varchar" direction="Input" />
          <param key="FromActionDate" name="@FromActionDate" type="datetime" direction="Input" />
          <param key="ToActionDate" name="@ToActionDate" type="datetime" direction="Input" />
          <param key="IsC19Order" name="@IsC19Order" type="int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCAdvancePayment" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LCBatchApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetLCBatchByKey" type="Text">
        <commandText>
          SELECT * FROM LCBatch
          WHERE LCBatchId = @LCBatchId
        </commandText>
        <parameters>
          <param key="LCBatchId" name="@LCBatchId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCBatchByCriteria" type="Text">
        <commandText>
          SELECT * FROM LCBatch
          WHERE LCBatchId = @LCBatchId
          LCBatchNo = @LCBatchNo
          IssuingBankId = @IssuingBankId
          GroupId = @GroupId
          CreatedBy = @CreatedBy
        </commandText>
        <parameters>
          <param key="LCBatchId" name="@LCBatchId" type="Int" direction="Input" />
          <param key="LCBatchNo" name="@LCBatchNo" type="Int" direction="Input" />
          <param key="IssuingBankId" name="@IssuingBankId" type="Int" direction="Input" />
          <param key="GroupId" name="@GroupId" type="Int" direction="Input" />
          <param key="CreatedBy" name="@CreatedBy" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCBatchByShipmentId" type="Text">
        <commandText>
          SELECT lb.*
          FROM LCBatch as lb
          INNER JOIN LCApplicationShipment as ls ON ls.LCBatchId=lb.LCBatchId AND ls.Status=1
          WHERE ls.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetMaxLCBatchNo" type="Text">
        <commandText>
          SELECT NextLcBatchNo = ISNULL(MAX(lcbatchno), MAX(sp.MinLcBatchNo))
          FROM (SELECT MinLCBatchNo = MAX((CONVERT(int, ParameterValue) ) % 100 * 10000)
          FROM SystemParameter
          WHERE ParameterName = 'FISCAL_YEAR'
          ) AS sp
          LEFT JOIN lcbatch AS lb ON lb.lcBatchNo-sp.MinLcBatchNo BETWEEN 0 AND 9999
        </commandText>
      </dataCommand>

      <dataCommand name="GetMaxLCBatchId" type="Text">
        <commandText>
          SELECT ISNULL(MAX(LCBatchId),0) FROM LCBatch AS lb
        </commandText>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCBatch" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LCBatchSummaryApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetLCBatchSummaryByKey" type="Text">
        <commandText>
          <![CDATA[
          SELECT
	            x.LCBatchId, x.LCBatchNo, x.CreatedOn, x.CreatedBy, x.IssuingBankId, x.GroupId, x.Status,
              x.OfficeId, x.VendorId, x.CurrencyId 
		          ,WorkflowStatusId = MIN(x.WorkflowStatusId)
              ,NoOfShipment = COUNT(distinct l.ShipmentId)
              ,TotalPOAmount = SUM(x.TotalPoAmt)
          FROM (SELECT 
                			ls.ShipmentId, ls.SplitShipmentId,
                      lb.LCBatchId, lb.LCBatchNo, lb.CreatedOn, lb.CreatedBy, lb.IssuingBankId, lb.GroupId, lb.Status,
				              OfficeId = (SELECT OfficeId FROM Contract AS C INNER JOIN Shipment AS s ON c.ContractId=s.ContractId AND s.ShipmentId=ls.ShipmentId),
 		                  VendorId = ls.VendorId, 
 		                  CurrencyId = ls.CurrencyId, 
					            ls.TotalPoAmt,
		                  ls.WorkflowStatusId
                FROM LCApplication AS l WITH (NOLOCK) 
                    INNER JOIN LCApplicationShipment AS ls WITH (NOLOCK) ON ls.LCApplicationId = l.LCApplicationId AND ls.Status = 1 
--	  	              INNER JOIN LCApplicationShipmentDetail AS lsd WITH (NOLOCK) ON lsd.LCApplicationId= ls.LCApplicationId AND lsd.ShipmentId=ls.ShipmentId AND lsd.SplitShipmentId=ls.SplitShipmentId lsd.Status=1
                    INNER JOIN LCBatch AS lb WITH (NOLOCK) ON lb.LCBatchid = ls.LCBatchId AND lb.Status = 1 
                WHERE l.Status = 1  
						AND ls.WorkflowStatusId NOT IN (6)	-- is not Cancelled
              			AND lb.LCBatchId = @LCBatchId 
            ) AS x	
	          INNER JOIN LCApplicationShipment AS l WITH (NOLOCK) ON l.ShipmentId=x.ShipmentId AND l.SplitShipmentId = x.SplitShipmentId AND l.Status = 1
--	          INNER JOIN LCApplicationShipment AS l WITH (NOLOCK) ON l.LCBatchId = x.LCBatchId AND l.Status = 1
-- 	          INNER JOIN ShipmentForLCApplication AS s WITH (NOLOCK) ON s.ShipmentId = l.ShipmentId --AND s.Status = 1
-- 	          LEFT JOIN SplitShipmentForLCApplication AS ss WITH (NOLOCK) ON ss.SplitShipmentId = l.SplitShipmentId --AND ss.Status = 1
         GROUP BY
	          x.LCBatchId, x.LCBatchNo, x.CreatedOn, x.CreatedBy, x.IssuingBankId, x.GroupId, x.Status,
            x.OfficeId, x.VendorId, x.CurrencyId 
         ORDER BY 
            x.lcbatchNo DESC
        ]]>
        </commandText>
        <parameters>
          <param key="LCBatchId" name="@LCBatchId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCBatchSummaryByCriteria" type="Text">
        <commandText>
          <![CDATA[
          -- For the LC batch with 'APPLIED' or 'COMPLETED' status only
          SELECT 
	            x.LCBatchId, x.LCBatchNo, x.CreatedOn, x.CreatedBy, x.IssuingBankId, x.GroupId, x.Status,
              x.OfficeId, x.VendorId, x.CurrencyId 
		          ,WorkflowStatusId = MIN(x.WorkflowStatusId)
              ,NoOfShipment = COUNT(distinct las.ShipmentId)
              -- ,TotalPOAmount = SUM(case WHEN ISNULL(l.SplitShipmentId, 0) <= 0 THEN s.TotalPOSupplierGmtAmtAfterDiscount ELSE ss.TotalPOSupplierGmtAmtAfterDiscount END)
		          ,TotalPOAmount = SUM(las.TotalPoAmt)
          FROM ( SELECT --DISTINCT
                			ls.ShipmentId, ls.SplitShipmentId,
                      lb.LCBatchId, lb.LCBatchNo, lb.CreatedOn, lb.CreatedBy, lb.IssuingBankId, lb.GroupId, lb.Status,
              				OfficeId = c.OfficeId,
 		                  VendorId = ls.VendorId, CurrencyId = ls.CurrencyId, ls.WorkflowStatusId
                  FROM LCApplication AS l WITH (NOLOCK) 
                  INNER JOIN LCApplicationShipment AS ls WITH (NOLOCK) ON ls.LCApplicationId = l.LCApplicationId AND ls.WorkflowStatusId IN (3, 4) AND ls.Status = 1 
	                      AND (@VendorId IS NULL OR ls.VendorId = @VendorId) 
                        AND (@LCApprovalDateFrom IS NULL OR ls.LCApprovalDate >= @LCApprovalDateFrom) 
                        AND (@LCApprovalDateTo IS NULL OR ls.LCApprovalDate < (@LCApprovalDateTo+1))
                  INNER JOIN LCBatch AS lb WITH (NOLOCK) ON lb.LCBatchId = ls.LCBatchId AND lb.Status = 1 
                        AND (@LCBatchNoFrom IS NULL OR lb.LCBatchNo >= @LCBatchNoFrom) AND (@LCBatchNoTo IS NULL OR lb.LCBatchNo <= @LCBatchNoTo)
                  INNER JOIN Shipment AS s WITH (NOLOCK) ON s.shipmentId = ls.ShipmentId AND s.Status = 1
                  INNER JOIN Contract AS c WITH (NOLOCK) ON c.ContractId = s.ContractId AND c.Status=1
 							          AND c.OfficeId @OfficeIdList
                  INNER JOIN Invoice AS i WITH (NOLOCK) ON i.ShipmentId = s.ShipmentId AND i.Status = 1 
                  LEFT JOIN SplitShipment AS ss WITH (NOLOCK) ON ss.ShipmentId = ls.ShipmentId AND ss.SplitShipmentId = ls.SplitShipmentId AND ss.Status = 1
                  WHERE l.Status = 1  
             			      AND (@LCNoFrom IS NULL OR (ISNULL(ls.SplitShipmentId, 0) <= 0 AND i.LCNo>=@LCNoFrom) OR (ls.SplitShipmentId > 0 AND ss.LCNo>=@LCNoFrom) ) 
             			      AND (@LCNoTo   IS NULL OR (ISNULL(ls.SplitShipmentId, 0) <= 0 AND i.LCNo<=@LCNoTo  ) OR (ls.SplitShipmentId > 0 AND ss.LCNo<=@LCNoTo) ) 
            ) AS x	
	          INNER JOIN LCApplicationShipment AS las WITH (NOLOCK) ON las.ShipmentId=x.ShipmentId AND las.SplitShipmentId = x.SplitShipmentId AND las.Status = 1
--	          INNER JOIN LCApplicationShipment AS las WITH (NOLOCK) ON las.LCBatchId = x.LCBatchId AND las.Status = 1
         GROUP BY
	          x.LCBatchId, x.LCBatchNo, x.CreatedOn, x.CreatedBy, x.IssuingBankId, x.GroupId, x.Status,
            x.OfficeId, x.VendorId, x.CurrencyId 
         ORDER BY 
            x.lcbatchNo DESC
    ]]>
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
          <param key="LCBatchNoFrom" name="@LCBatchNoFrom" type="Int" direction="Input" />
          <param key="LCBatchNoTo" name="@LCBatchNoTo" type="Int" direction="Input" />
          <param key="LCApprovalDateFrom" name="@LCApprovalDateFrom" type="DateTime" direction="Input" />
          <param key="LCApprovalDateTo" name="@LCApprovalDateTo" type="DateTime" direction="Input" />
          <param key="LCNoFrom" name="@LCNoFrom" type="Varchar" direction="Input" />
          <param key="LCNoTo" name="@LCNoTo" type="Varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCBatchSummary" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LCBatchDetailApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetLCBatchDetailByLCBatchId" type="Text">
        <commandText>
          <![CDATA[
          SELECT  
              --LCApplicationId=-1, -- It is dummy value, include this field because it includes in the dataset structure
              LCApplicationId,
			  LCBatchId, 
              --ShipmentId=-1, -- It is dummy value, include this field because it includes in the dataset structure
			  ShipmentId,
              CustomerDestinationId, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, 
              ItemNo = (SELECT ItemNo from Product where ProductId=x.ProductId AND Status=1),
              PackingUnitId,
              POQty = SUM(POQty), 
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId,
              LCBatchNo,
              WorkflowStatusId
              ,BankBranchId, TermOfPurchaseId, PurchaseLocationId, PaymentTermId
              ,ProductTeamId=null
              ,ExpectedDeductAmt = SUM((CASE WHEN IsFirstPrice=1 THEN ExpectedDeductAmt ELSE 0 END))
              ,ActualDeductAmt = SUM((CASE WHEN IsFirstPrice=1 THEN ActualDeductAmt ELSE 0 END))
          FROM
          (
          SELECT ls.LCApplicationId, ls.LCBatchId, ls.ShipmentId,
              ls.CustomerDestinationId, cd.DestinationCode, ls.ShipmentMethodId, ls.CustomerId,
              ls.SupplierAtWarehouseDate, 
              ls.QACommissionPercent, ls.VendorPaymentDiscountPercent, ls.LabTestIncome, 
              ls.ProductId, ls.PackingUnitId,
              lsd.POQty, lsd.ReducedSupplierGmtPrice,
              ls.VendorId, ls.CurrencyId, lb.LCBatchNo, ls.WorkflowStatusId
              ,ls.BankBranchId, ls.TermOfPurchaseId, ls.PurchaseLocationId, ls.PaymentTermId
              ,ProductTeamId = (SELECT ProductTeamId 
                                  FROM Contract AS c WITH (NOLOCK)
                                      INNER JOIN Shipment AS s WITH (NOLOCK) ON s.ContractId=c.ContractId
                                  WHERE s.ShipmentId=ls.ShipmentId)
              ,ExpectedDeductAmt, ActualDeductAmt
			  ,IsFirstPrice = (CASE WHEN ShipmentDetailId = (SELECT TOP 1 ShipmentDetailId FROM LCApplicationShipmentDetail WHERE ShipmentId=ls.ShipmentId ORDER BY ReducedSupplierGmtPrice, ShipmentDetailId) 
									THEN 1 ELSE 0 END)
          FROM LCApplicationShipment AS ls WITH (NOLOCK) 
          		INNER JOIN LCApplicationShipmentDetail AS lsd WITH (NOLOCK) ON lsd.LCApplicationId=ls.LCApplicationId AND lsd.ShipmentId=ls.ShipmentId AND lsd.SplitShipmentId=ls.SplitShipmentId AND lsd.Status=1
              INNER JOIN CustomerDestination AS cd ON ls.CustomerDestinationId = cd.CustomerDestinationId
              LEFT JOIN LCBatch AS lb WITH (NOLOCK) ON lb.LCBatchId = ls.LCBatchId AND lb.Status = 1
              LEFT JOIN 
	            ( SELECT a.ShipmentId, ExpectedDeductAmt=SUM(ExpectedDeductAmt), ActualDeductAmt=SUM(ActualDeductAmt) 
					FROM AdvancePaymentOrderDetail AS a WITH (NOLOCK) 
					JOIN AdvancePayment AS ap WITH (NOLOCK) ON a.PaymentId = ap.PaymentId AND ap.PaymentTypeId = 1
					GROUP BY a.ShipmentId
				) AS apod ON apod.ShipmentId = ls.ShipmentId
          WHERE ls.Status = 1 
                  AND ls.LCBatchId = @LCBatchId
				  AND (ls.ShipmentId @ShipmentIdList)
          ) AS x
          GROUP BY
              LCApplicationId, 
              LCBatchId, 
              ShipmentId,
              CustomerDestinationId, DestinationCode, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, PackingUnitId,
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId, LCBatchNo, WorkflowStatusId
        		 ,BankBranchId, TermOfPurchaseId, PurchaseLocationId, PaymentTermId

          ORDER BY 
          -- ShipmentMethodId, 
              PurchaseLocationId,
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              DestinationCode, CustomerId, SupplierAtWarehouseDate,
              ItemNo, ReducedSupplierGmtPrice, POQty
        ]]>
        </commandText>
        <parameters>
          <param key="LCBatchId" name="@LCBatchId" type="Int" direction="Input" />
          <param key="ShipmentIdList" name="@ShipmentIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>


      <dataCommand name="GetLCBatchProductTeamDetailByLCBatchId" type="Text">
        <commandText>
          <![CDATA[
          SELECT  
              LCApplicationId=-1, -- It is dummy value, include this field because it includes in the dataset structure
              LCBatchId, 
              ShipmentId=-1, -- It is dummy value, include this field because it includes in the dataset structure
              CustomerDestinationId, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, 
              ItemNo = (SELECT ItemNo from Product where ProductId=x.ProductId AND Status=1),
              PackingUnitId,
              POQty = SUM(POQty), 
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId,
              LCBatchNo,
              WorkflowStatusId
              ,BankBranchId, TermOfPurchaseId, PurchaseLocationId, PaymentTermId
              ,ProductTeamId
          FROM
          (
          SELECT ls.LCApplicationId, ls.LCBatchId, ls.ShipmentId,
              ls.CustomerDestinationId, ls.ShipmentMethodId, ls.CustomerId,
              ls.SupplierAtWarehouseDate, 
              ls.QACommissionPercent, ls.VendorPaymentDiscountPercent, ls.LabTestIncome, 
              ls.ProductId, ls.PackingUnitId,
              --lsd.POQty, lsd.ReducedSupplierGmtPrice,
              POQty=0, ReducedSupplierGmtPrice=0,
              ls.VendorId, ls.CurrencyId, lb.LCBatchNo, ls.WorkflowStatusId
              ,ls.BankBranchId, ls.TermOfPurchaseId, ls.PurchaseLocationId, ls.PaymentTermId
              ,ProductTeamId = (SELECT ProductTeamId 
                                  FROM Contract AS c WITH (NOLOCK)
                                      INNER JOIN Shipment AS s WITH (NOLOCK) ON s.ContractId=c.ContractId
                                  WHERE s.ShipmentId=ls.ShipmentId)
          FROM LCApplicationShipment AS ls WITH (NOLOCK) 
          		--INNER JOIN LCApplicationShipmentDetail AS lsd WITH (NOLOCK) ON lsd.LCApplicationId=ls.LCApplicationId AND lsd.ShipmentId=ls.ShipmentId AND lsd.SplitShipmentId=ls.SplitShipmentId AND lsd.Status=1
              LEFT JOIN LCBatch AS lb WITH (NOLOCK) ON lb.LCBatchId = ls.LCBatchId AND lb.Status = 1
          WHERE ls.Status = 1 
                  AND ls.LCBatchId = @LCBatchId
          ) AS x
          GROUP BY
              --LCApplicationId, 
              LCBatchId, 
              --ShipmentId,
              CustomerDestinationId, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, PackingUnitId,
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId, LCBatchNo, WorkflowStatusId
        		 ,BankBranchId, TermOfPurchaseId, PurchaseLocationId, PaymentTermId, ProductTeamId

          ORDER BY 
          -- ShipmentMethodId, 
              PurchaseLocationId,
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              CustomerId, CustomerDestinationId
              ,SupplierAtWarehouseDate, ItemNo, ReducedSupplierGmtPrice, POQty
        ]]>
        </commandText>
        <parameters>
          <param key="LCBatchId" name="@LCBatchId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="getLCBatchDetailByApplicationIdList" type="Text">
        <commandText>
          <![CDATA[
          SELECT  
              LCApplicationId, LCBatchId, ShipmentId,
              CustomerDestinationId, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, 
              ItemNo = (SELECT ItemNo from Product where ProductId=x.ProductId AND Status=1),
              PackingUnitId,
              POQty = SUM(POQty), 
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId,
              LCBatchNo,
              WorkflowStatusId
              ,BankBranchId, TermOfPurchaseId, PurchaseLocationId, PaymentTermId
              ,ProductTeamId = (SELECT ProductTeamId 
                                  FROM Contract AS c WITH (NOLOCK)
                                      INNER JOIN Shipment AS s WITH (NOLOCK) ON s.ContractId=c.ContractId
                                  WHERE s.ShipmentId=x.ShipmentId)
          FROM
          (
          SELECT ls.LCApplicationId, ls.LCBatchId, ls.ShipmentId,
            ls.CustomerDestinationId, ls.ShipmentMethodId, ls.CustomerId,
            ls.SupplierAtWarehouseDate, 
            ls.QACommissionPercent, ls.VendorPaymentDiscountPercent, ls.LabTestIncome, 
            ls.ProductId, ls.PackingUnitId,
            lsd.POQty, lsd.ReducedSupplierGmtPrice,
            ls.VendorId, ls.CurrencyId,
            lb.LCBatchNo,
            ls.WorkflowStatusId
      		  ,ls.BankBranchId, ls.TermOfPurchaseId, ls.PurchaseLocationId, ls.PaymentTermId

          FROM LCApplicationShipment AS ls WITH (NOLOCK)
              INNER JOIN LCApplicationShipmentDetail AS lsd WITH (NOLOCK) ON lsd.LCApplicationId=ls.LCApplicationId AND lsd.ShipmentId=ls.ShipmentId AND lsd.SplitShipmentId=ls.SplitShipmentId AND lsd.Status=1
--           INNER JOIN ShipmentDetailForLCApplication AS sd WITH (NOLOCK) ON sd.ShipmentId = ls.ShipmentId --AND sd.Status = 1
--           INNER JOIN shipmentForLCApplication AS s WITH (NOLOCK) ON s.ShipmentId=ls.ShipmentId --AND s.Status = 1
--           INNER JOIN ContractForLCApplication AS c WITH (NOLOCK) ON c.ContractId=s.ContractId --AND c.Status = 1
          LEFT JOIN LCBatch AS lb WITH (NOLOCK) ON lb.LCBatchId = ls.LCBatchId AND lb.Status=1
          WHERE
              ls.Status = 1 
              AND ls.LCApplicationId @LCApplicationIdList
          ) AS x
          GROUP BY
              LCApplicationId, LCBatchId, ShipmentId,
              CustomerDestinationId, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, PackingUnitId,
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId, LCBatchNo,
              WorkflowStatusId
         		  ,BankBranchId, TermOfPurchaseId, PurchaseLocationId, PaymentTermId

          ORDER BY ShipmentMethodId, QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, CustomerId, CustomerDestinationId
        ]]>
        </commandText>
        <parameters>
          <param key="LCApplicationIdList" name="@LCApplicationIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>


      <dataCommand name="getLCBatchDetailByShipmentIdList" type="Text">
        <commandText>
          <![CDATA[
          SELECT  
              LCApplicationId, LCBatchId, ShipmentId,
              CustomerDestinationId, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, 
              ItemNo = (SELECT ItemNo from Product where ProductId=x.ProductId AND Status=1),
              PackingUnitId,
              POQty = SUM(POQty), 
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId,
              WorkflowStatusId, BankBranchId,
              TermOfPurchaseId, PurchaseLocationId, PaymentTermId
              ,ProductTeamId = (SELECT ProductTeamId 
                                  FROM Contract AS c WITH (NOLOCK)
                                      INNER JOIN Shipment AS s WITH (NOLOCK) ON s.ContractId=c.ContractId
                                  WHERE s.ShipmentId=x.ShipmentId)
          FROM
          (
              SELECT ls.LCApplicationId, ls.LCBatchId, ls.ShipmentId,
                  ls.CustomerDestinationId, ls.ShipmentMethodId, ls.CustomerId,
                  ls.SupplierAtWarehouseDate, 
                  ls.QACommissionPercent, ls.VendorPaymentDiscountPercent, ls.LabTestIncome, 
                  ls.ProductId, ls.PackingUnitId,
                  lsd.POQty, lsd.ReducedSupplierGmtPrice,
                  ls.VendorId, ls.CurrencyId,
                  lb.LCBatchNo,
                  ls.WorkflowStatusId, ls.BankBranchId,
		              ls.TermOfPurchaseId, ls.PurchaseLocationId, ls.PaymentTermId
              FROM LCApplicationShipment AS ls WITH (NOLOCK)
              		INNER JOIN LCApplicationShipmentDetail AS lsd WITH (NOLOCK) ON lsd.LCApplicationId=ls.LCApplicationId AND lsd.ShipmentId=ls.ShipmentId AND lsd.SplitShipmentId=ls.SplitShipmentId AND lsd.Status=1
--               INNER JOIN ShipmentDetailForLCApplication AS sd WITH (NOLOCK) ON sd.ShipmentId = ls.ShipmentId --AND sd.Status = 1
--               INNER JOIN shipmentForLCApplication AS s WITH (NOLOCK) ON s.ShipmentId=ls.ShipmentId --AND s.Status = 1
--               INNER JOIN ContractForLCApplication AS c WITH (NOLOCK) ON c.ContractId=s.ContractId --AND c.Status = 1
              LEFT JOIN LCBatch AS lb WITH (NOLOCK) ON lb.LCBatchId = ls.LCBatchId
              WHERE
                ls.Status = 1 
                AND  ((ls.WorkflowStatusId @WorkflowStatusIdList) AND (ls.ShipmentId @ShipmentIdList)) 
          ) AS x
          GROUP BY
              LCApplicationId, LCBatchId, ShipmentId,
              CustomerDestinationId, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, PackingUnitId,
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId, LCBatchNo,
              WorkflowStatusId, BankBranchId,
              TermOfPurchaseId, PurchaseLocationId, PaymentTermId
          ORDER BY LCBatchId, LCApplicationId, ShipmentId
        ]]>
        </commandText>
        <parameters>
          <param key="ShipmentIdList" name="@ShipmentIdList" type="ArrayInt" direction="Input" />
        </parameters>
        <parameters>
          <param key="SplitShipmentIdList" name="@SplitShipmentIdList" type="ArrayInt" direction="Input" />
        </parameters>
        <parameters>
          <param key="WorkflowStatusIdList" name="@WorkflowStatusIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>


      <dataCommand name="getLCBatchDetailForApplyByShipmentIdList" type="Text">
        <commandText>
          <![CDATA[
            SELECT ShipmentId, SplitShipmentId
            into #temp_OtherAppliedLCAppInRelatedBatch
            FROM LCApplicationShipment
            WHERE Status= 1 
              AND LCBatchId in 
                    ( SELECT LCBatchId
                          FROM lcApplicationShipment WITH (NOLOCK) 
                          WHERE status=1 AND WorkflowStatusId IN (3,4) -- APPLIED or COMPLETED
			                          AND ( (SplitShipmentId<=0 AND ShipmentId @ShipmentIdList)
			                                or (SplitShipmentId>0 AND SplitShipmentId @SplitShipmentIdList)
                                    )
                    )

          SELECT  
              --LCApplicationId, LCBatchId, ShipmentId,
			  LCApplicationId = -1 , LCBatchId, ShipmentId = -1,
              CustomerDestinationId, DestinationCode, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, 
              ItemNo = (SELECT ItemNo from Product where ProductId=x.ProductId AND Status=1),
              PackingUnitId,
              POQty = SUM(POQty), 
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId,
              WorkflowStatusId, BankBranchId,
              TermOfPurchaseId, PurchaseLocationId, PaymentTermId
			  ,ProductTeamId = null
			  ,ExpectedDeductAmt = SUM((CASE WHEN IsFirstPrice=1 THEN ExpectedDeductAmt ELSE 0 END))
			  ,ActualDeductAmt = SUM((CASE WHEN IsFirstPrice=1 THEN ActualDeductAmt ELSE 0 END))
          FROM
          (
              SELECT ls.LCApplicationId, ls.LCBatchId, ls.ShipmentId,
                  ls.CustomerDestinationId, cd.DestinationCode, ls.ShipmentMethodId, ls.CustomerId,
                  ls.SupplierAtWarehouseDate, 
                  ls.QACommissionPercent, ls.VendorPaymentDiscountPercent, ls.LabTestIncome, 
                  ls.ProductId, ls.PackingUnitId,
                  lsd.POQty, lsd.ReducedSupplierGmtPrice,
                  ls.VendorId, CurrencyId=ls.CurrencyId,
                  lb.LCBatchNo,
                  ls.WorkflowStatusId, ls.BankBranchId,
		              ls.TermOfPurchaseId, ls.PurchaseLocationId, ls.PaymentTermId
				  ,ExpectedDeductAmt, ActualDeductAmt
				  ,IsFirstPrice = (CASE WHEN ShipmentDetailId = (SELECT convert(int,substring(min(convert(varchar, 1000000+ReducedSupplierGmtPrice)+'-'+convert(varchar, ShipmentDetailId)),12,99)) 
																	FROM LCApplicationShipmentDetail with (nolock) 
																	WHERE ShipmentId=ls.ShipmentId ) 
										THEN 1 ELSE 0 END)
										
              FROM LCApplicationShipment AS ls WITH (NOLOCK)
                  INNER JOIN LCApplicationShipmentDetail AS lsd WITH (NOLOCK) ON lsd.LCApplicationId=ls.LCApplicationId AND lsd.ShipmentId=ls.ShipmentId AND lsd.SplitShipmentId=ls.SplitShipmentId AND lsd.Status=1
                  INNER JOIN CustomerDestination AS cd ON ls.CustomerDestinationId = cd.CustomerDestinationId
                  LEFT JOIN LCBatch AS lb WITH (NOLOCK) ON lb.LCBatchId = ls.LCBatchId
                  LEFT JOIN #temp_OtherAppliedLCAppInRelatedBatch as t WITH (NOLOCK) ON t.ShipmentId=ls.ShipmentId AND t.SplitShipmentId=ls.SplitShipmentId
				  LEFT JOIN 
					( SELECT a.ShipmentId, ExpectedDeductAmt=SUM(ExpectedDeductAmt), ActualDeductAmt=SUM(ActualDeductAmt) 
						FROM AdvancePaymentOrderDetail AS a WITH (NOLOCK) 
						JOIN AdvancePayment AS ap WITH (NOLOCK) ON a.PaymentId = ap.PaymentId AND ap.PaymentTypeId = 1
						GROUP BY a.ShipmentId
					) AS apod ON apod.ShipmentId = ls.ShipmentId
              WHERE
                ls.Status = 1  
                AND (   t.ShipmentId is not null
                      OR ((ls.WorkflowStatusId @WorkflowStatusIdList) AND isnull(ls.SplitShipmentId,-1) <= 0 AND (ls.ShipmentId @ShipmentIdList)) 
                      OR ((ls.WorkflowStatusId @WorkflowStatusIdList) AND isnull(ls.SplitShipmentId,-1) > 0 AND (ls.SplitShipmentId @SplitShipmentIdList))
                    )  
          ) AS x
          GROUP BY
              --LCApplicationId, LCBatchId, ShipmentId,
			  LCBatchId,
              CustomerDestinationId, DestinationCode, ShipmentMethodId, CustomerId,
              SupplierAtWarehouseDate, 
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              ProductId, PackingUnitId,
              ReducedSupplierGmtPrice,
              VendorId, CurrencyId, LCBatchNo,
              WorkflowStatusId, BankBranchId,
              TermOfPurchaseId, PurchaseLocationId, PaymentTermId
          ORDER BY LCBatchId, PaymentTermId, TermOfPurchaseId, PurchaseLocationId, 
                  --ShipmentMethodId, 
                  QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
                  DestinationCode, CustomerId, SupplierAtWarehouseDate,
                  ItemNo, ReducedSupplierGmtPrice, POQty


        ]]>
        </commandText>
        <parameters>
          <param key="ShipmentIdList" name="@ShipmentIdList" type="ArrayInt" direction="Input" />
        </parameters>
        <parameters>
          <param key="SplitShipmentIdList" name="@SplitShipmentIdList" type="ArrayInt" direction="Input" />
        </parameters>
        <parameters>
          <param key="WorkflowStatusIdList" name="@WorkflowStatusIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCBatchDetail" />
    </tableMappings>
  </dataSetAdapter>



  <dataSetAdapter name="LCReportApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetLCBatchControlReport" type="Text">
        <commandText>
          <![CDATA[
            SELECT 
	            x.LCBatchNo, x.LCBatchDate, x.LCApplicationNo, x.LCApplicationDate,
	            OfficeName = (SELECT RTRIM(replace(Description,'Office','')) from Office where OfficeId=x.OfficeId),
	            VendorName = (SELECT Name from NSLIndustry..Vendor where VendorId=x.VendorId),
	            CountryOfOrigin = (SELECT name from CountryOfOrigin where CountryOfOriginId=x.CountryOfOriginId),
	            CurrencyCode = (SELECT CurrencyCode from NSLDB..Currency where CurrencyId=x.CurrencyId),
	            BatchAmount = sum(x.TotalPoAmt),
	            LCNo = isnull(x.LCNo,''),
	            x.LCIssueDate,
	            x.LCExpiryDate
            from 
            (
            SELECT 
 	            lb.LCBatchNo, LCBatchDate = lb.CreatedOn, c.OfficeId, la.LCApplicationNo, LCApplicationDate = la.Createdon,
 	            VendorId = (case when las.SplitShipmentId<=0 THEN s.VendorId ELSE ss.VendorId end),
	            CountryOfOriginId = (case when las.SplitShipmentId<=0 THEN s.CountryOfOriginId ELSE ss.CountryOfOriginId end),
 	            CurrencyId = (case when las.SplitShipmentId<=0 THEN s.BuyCurrencyId ELSE ss.BUyCurrencyId end),
	            --TotalOrderAmt = (case when las.SplitShipmentId<=0 THEN s.TotalOrderAmt ELSE ss.TotalOrderAmt end),
              las.TotalPoAmt,
	            LCNo = (case when las.SplitShipmentId<=0 THEN i.LCNo ELSE ss.LCNo end),
	            LCIssueDate = (case when las.SplitShipmentId<=0 THEN i.LCIssueDate ELSE ss.LCIssueDate end),
	            LCExpiryDate = (case when las.SplitShipmentId<=0 THEN i.LCExpiryDate ELSE ss.LCExpiryDate end)
            from LCApplication as la
            inner join LCApplicationShipment as las on las.LCApplicationId = la.LCApplicationId AND las.Status=1
            inner join LCBatch as lb on lb.LCBatchId = las.LCBatchId AND lb.Status=1
            inner join Shipment as s on s.ShipmentId = las.ShipmentId AND s.Status=1
            inner join Contract as c on c.ContractId = s.ContractId AND c.Status=1
            inner join Invoice as i on i.ShipmentId = las.ShipmentId AND i.Status=1
            left join SplitShipment as ss on ss.SplitShipmentId=las.SplitShipmentId
            where la.Status=1 AND (ss.SplitShipmentId is null or ss.Status=1)
	            AND (@LCBatchNoFrom is null or @LCBatchNoTo is null or lb.LCBatchNo between @LCBatchNoFrom AND @LCBatchNoTo)
 	            AND (@LCBatchDateFrom is null or @LCBatchDateTo is null or (lb.CreatedOn >= @LCBatchDateFrom AND lb.CreatedOn < @LCBatchDateTo))
  	          AND (@LCIssueDateFrom is null or @LCIssueDateTo is null or (case when las.SplitShipmentId<=0 THEN i.LCIssueDate ELSE ss.LCIssueDate end) between @LCIssueDateFrom AND @LCIssueDateTo)
 	            AND (@LCExpiryDateFrom is null or @LCExpiryDateTo is null or (case when las.SplitShipmentId<=0 THEN i.LCExpiryDate ELSE ss.LCExpiryDate end) between @LCExpiryDateFrom AND @LCExpiryDateTo)
	            AND (@CoId is null or (case when las.SplitShipmentId<=0 THEN s.CountryOfOriginId ELSE ss.CountryOfOriginId end) = @CoId )
	            AND (@VendorId is null or (case when las.SplitShipmentId<=0 THEN s.VendorId ELSE ss.VendorId end)=@VendorId)
	            AND (c.OfficeId @OfficeIdList)
              AND (@HandlingOfficeId=-1 OR c.OfficeId<>17 OR s.SalesForecastSpecialGroupId = @HandlingOfficeId)
              AND (@LCApplicationNoFrom = -1 OR la.LCApplicationNo BETWEEN @LCApplicationNoFrom AND @LCApplicationNoTo)
              AND (@LCApplicationDateFrom IS NULL OR (la.CreatedOn >= @LCApplicationDateFrom AND la.CreatedOn < (@LCApplicationDateTo+1)))
              AND (@LCNoFrom IS NULL OR (case when las.SplitShipmentId<=0 THEN i.LCNo ELSE ss.LCNo end) between @LCNoFrom AND @LCNoTo)
            ) as x
           group by LCBatchNo, LCBatchDate, OfficeId, VendorId, CountryOfOriginId, CurrencyId, LCNo, LCIssueDate, LCExpiryDate, LCApplicationNo, LCApplicationDate
		      ORDER BY OfficeName, VendorName, LCApplicationDate
    ]]>
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="HandlingOfficeId" name="@HandlingOfficeId" type="Int" direction="Input" />
          <param key="CoId" name="@CoId" type="Int" direction="Input" />
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
          <param key="LCBatchNoFrom" name="@LCBatchNoFrom" type="Int" direction="Input" />
          <param key="LCBatchNoTo" name="@LCBatchNoTo" type="Int" direction="Input" />
          <param key="LCBatchDateFrom" name="@LCBatchDateFrom" type="DateTime" direction="Input" />
          <param key="LCBatchDateTo" name="@LCBatchDateTo" type="DateTime" direction="Input" />
          <param key="LCIssueDateFrom" name="@LCIssueDateFrom" type="DateTime" direction="Input" />
          <param key="LCIssueDateTo" name="@LCIssueDateTo" type="DateTime" direction="Input" />
          <param key="LCExpiryDateFrom" name="@LCExpiryDateFrom" type="DateTime" direction="Input" />
          <param key="LCExpiryDateTo" name="@LCExpiryDateTo" type="DateTime" direction="Input" />
          <param key="LCApplicationNoFrom" name="@LCApplicationNoFrom" type="int" direction="Input" />
          <param key="LCApplicationNoTo" name="@LCApplicationNoTo" type="int" direction="Input" />
          <param key="LCApplicationDateFrom" name="@LCApplicationDateFrom" type="DateTime" direction="Input" />
          <param key="LCApplicationDateTo" name="@LCApplicationDateTo" type="DateTime" direction="Input" />
          <param key="LCNoFrom" name="@LCNoFrom" type="varchar" direction="Input" />
          <param key="LCNoTo" name="@LCNoTo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>



      <dataCommand name="GetLCNewApplicationAllocationReport" type="Text">
        <commandText>
          <![CDATA[
            SELECT 
                x.OfficeId, 
                OfficeCode = (SELECT OfficeCode from Office where OfficeId=x.OfficeId),
                OfficeName = (SELECT rtrim(replace(Description,'Office','')) from Office where OfficeId=x.OfficeId),
                x.VendorId, VendorName = (SELECT name from NSLIndustry..Vendor where VendorId=x.VendorId),
	              CountryOfOriginName = (SELECT name from CountryOfOrigin WHERE CountryOfOriginId=x.CountryOfOriginId),
  	            CurrencyCode = (SELECT CurrencyCode from Currency where CurrencyId=x.CurrencyId),
	              TotalPOAmount = (x.TotalPoAmt),
	              TotalPOAmount_HKD = (round(x.TotalPoAmt * hk.ExchangeRate,2))
            from 
              (
                SELECT c.OfficeId, ls.ShipmentId, ls.SplitShipmentId, ls.VendorId, ls.CountryOfOriginId, ls.CurrencyId, ls.TotalPoAmt
                    from LCApplicationShipment as ls
	                      inner join Shipment as s on s.ShipmentId=ls.ShipmentId AND s.Status=1
                        inner join Contract as c on c.ContractId=s.ContractId AND c.Status=1
                    where ls.Status=1 AND ls.WorkflowStatusId=1 
              ) as x
              left join ExchangeRate as hk on hk.CurrencyId=x.CurrencyId AND hk.EffectiveTypeId=0 AND hk.ExchangeRateTypeId=2 AND hk.Status=1
         
          ]]>
        </commandText>
      </dataCommand>


      <dataCommand name="GetLCApplicationSummaryReport" type="Text">
        <commandText>
          <![CDATA[ 
        SELECT
            l.LCApplicationNo,
            LCApplicationCreatedBy = (SELECT DisplayName FROM NSLDB..UserInfo WHERE UserId=l.CreatedBy),
            LCApplicationCreatedOn = l.CreatedOn,
            OfficeDescription = (SELECT rtrim(replace(Description,'Office','')) FROM Office WITH (NOLOCK) WHERE OfficeId = c.OfficeId AND Status = 1),
            VendorName = (SELECT Name FROM NSLIndustry..Vendor WHERE VendorId = ls.VendorId),
            
            CASE WHEN ls.CustomerId IN (34,35) THEN (SELECT DestinationDesc FROM CustomerDestination WITH (NOLOCK) WHERE CustomerDestinationId = ls.CustomerDestinationId AND Status = 1)
	          ELSE (SELECT CustomerDesc FROM Customer WITH (NOLOCK) WHERE CustomerId = ls.CustomerId) END AS CustomerDesc,
            
            --CustomerDesc = (SELECT CustomerDesc FROM Customer WITH (NOLOCK) WHERE CustomerId = ls.CustomerId ),
            ItemNo = (SELECT ItemNo FROM Product WHERE ProductId = ls.ProductId),
            c.ContractNo,
            SplitSuffix = isnull((SELECT SplitSuffix FROM SplitShipment WITH (NOLOCK) WHERE SplitShipmentId = ls.SplitShipmentId AND Status = 1),''),
            s.DeliveryNo,
            CountryOfOriginName = (SELECT Name FROM CountryOfOrigin WITH (NOLOCK) WHERE CountryOfOriginId = ls.CountryOfOriginId),
            ls.CustomerAtWarehouseDate,
            CurrencyCode = (SELECT CurrencyCode FROM Currency WHERE CurrencyId = ls.CurrencyId),
            ls.TotalPOQty, ls.TotalPOAmt,
            WorkflowStatus = (SELECT Description FROM WorkflowStatus WHERE WorkflowStatusId = ls.WorkflowStatusId AND RecordTypeId = 2),
            LCBatchNo = (SELECT LCBatchNo FROM LCBatch WITH (NOLOCK) WHERE LCBatchId = ls.LCBatchId AND Status = 1),
            i.LCNo, i.LCIssueDate, i.LCExpiryDate, i.LCAmt
        FROM
            LCApplication AS l WITH (NOLOCK)
            INNER JOIN LCApplicationShipment AS ls WITH (NOLOCK) ON l.LCApplicationId = ls.LCApplicationId AND ls.Status = 1
            INNER JOIN Invoice AS i WITH (NOLOCK) ON ls.ShipmentId = i.ShipmentId AND i.Status = 1
            INNER JOIN Shipment AS s WITH (NOLOCK) ON ls.ShipmentId = s.ShipmentId  AND s.Status = 1
            INNER JOIN Contract AS c WITH (NOLOCK) ON s.ContractId = c.ContractId AND c.Status = 1
        WHERE
            l.Status = 1
            AND c.ProductTeamId in ( SELECT OfficeStructureId 
                                        FROM NSLDB..UserSeasonOfficeStructure 
                                        WHERE UserId=@UserId AND OfficeStructureTypeId=50 AND Status=1)
            AND (c.OfficeId @OfficeIdList)
            AND (@HandlingOfficeId=-1 OR c.OfficeId<>17 OR s.SalesForecastSpecialGroupId = @HandlingOfficeId)
            AND (ls.CustomerId @CustomerIdList)
            AND (@VendorId is NULL OR ls.VendorId = @VendorId)
            AND (@LCNoFrom IS NULL OR @LCNoTo IS NULL OR i.LCNo BETWEEN @LCNoFrom AND @LCNoTo)
            AND (@LCApplicationNoFrom IS NULL OR @LCApplicationNoTo IS NULL OR l.LCApplicationNo BETWEEN @LCApplicationNoFrom AND @LCApplicationNoTo)
            AND (@LCApplicationDateFrom IS NULL OR @LCApplicationDateTo IS NULL OR (l.CreatedOn >= @LCApplicationDateFrom AND l.CreatedOn < @LCApplicationDateTo+1))
			AND (@LCDetailUpdated = - 1 
				OR (@LCDetailUpdated = 1 AND i.LCNo<>'' AND i.LCExpiryDate IS NOT NULL AND i.LCAmt>0)
				OR (@LCDetailUpdated = 0  AND (i.LCNo is null OR i.LCNo='' OR i.LCExpiryDate IS NULL OR i.LCAmt <=0) )
				)
        ORDER BY
            l.LCApplicationNo, c.ContractNo, s.DeliveryNo
        ]]>
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="HandlingOfficeId" name="@HandlingOfficeId" type="Int" direction="Input" />
          <param key="CustomerIdList" name="@CustomerIdList" type="ArrayInt" direction="Input" />
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
          <param key="LCNoFrom" name="@LCNoFrom" type="varchar" direction="Input" />
          <param key="LCNoTo" name="@LCNoTo" type="varchar" direction="Input" />
          <param key="LCApplicationNoFrom" name="@LCApplicationNoFrom" type="Int" direction="Input" />
          <param key="LCApplicationNoTo" name="@LCApplicationNoTo" type="Int" direction="Input" />
          <param key="LCApplicationDateFrom" name="@LCApplicationDateFrom" type="DateTime" direction="Input" />
          <param key="LCApplicationDateTo" name="@LCApplicationDateTo" type="DateTime" direction="Input" />
          <param key="LCDetailUpdated" name="@LCDetailUpdated" type="Int" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>


    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCReport" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LCStatusReportApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetLCStatusReport" type="Text">
        <commandText>
          <![CDATA[
	            SELECT 
		            s.ShipmentId, c.ContractId, 
		            i.LCNo , i.LCBillRefNo,
		            i.LCAmt,
		            i.LCIssueDate ,
		            i.LCExpiryDate ,

		            c.OfficeId, c.CustomerId, 
					CustomerDestinationid=isnull(las.CustomerDestinationId, s.CustomerDestinationId), 
					c.ProductTeamId,
		            s.VendorId, 
		            c.ProductId, c.SeasonId,
		            SplitSuffix = '',
		            c.ContractNo, s.DeliveryNo, i.InvoicePrefix, i.InvoiceSeq, i.InvoiceYear,

		            s.SupplierAtWarehouseDate,
		            i.ActualAtWarehouseDate, i.IlsActualAtWarehouseDate,
		            s.TotalPoQty, c.PiecesPerPack, c.PackingUnitId,
		            s.BuyCurrencyId,
					TotalPoAmt = s.TotalPOSupplierGmtAmt,
		            s.QACommissionPercent, s.VendorPaymentDiscountPercent, s.LabTestIncome, 
					IsLCPaymentChecked = (case when i.IsLCPaymentChecked=1 THEN 1 ELSE 0 end),
		            SupplierInvoiceNo = (case when i.IsLCPaymentChecked=1 THEN i.SupplierInvoiceNo ELSE null end),
		            TotalShippedQty = (case when i.IsLCPaymentChecked=1 THEN s.TotalShippedQty ELSE null end),
		            TotalShippedAmt = (case when i.IsLCPaymentChecked=1 THEN s.TotalShippedAmt ELSE 0 end),
                LCPaymentDeduction = ISNull((Select sum(Amt*z.Factor) from ShipmentDeduction y 
                inner join PaymentDeductionType z 
                on y.DeductionType = z.DeductionTypeId
                Where y.shipmentId = s.shipmentId and y.Status = 1
                Group by y.shipmentId),0),
		            TotalShippedSupplierGmtAmtAfterDiscount = (case when i.IsLCPaymentChecked=1 THEN s.TotalShippedSupplierGmtAmtAfterDiscount
                ELSE 0 end),
		            LCPaymentCheckedDate = (case when i.IsLCPaymentChecked=1 THEN i.LCPaymentCheckedDate ELSE null end),
		            CountryOfOriginId = s.CountryOfOriginId,
                IsChinaGBTestRequired = isnull(s.IsChinaGBTestRequired,0),
				CASE WHEN lg.LGId IS NOT NULL AND i.InvoiceDate IS NOT NULL THEN DATEADD(d, 60, i.InvoiceDate) ELSE NULL END AS LGDate
          into #temp_LCStatus      
        	from 
              Shipment as s  with (nolock)
              inner join Contract as c with (nolock) on c.ContractId = s.ContractId AND c.Status=1 AND (s.IsChinaGBTestRequired = @IsChinaGBTestRequired OR @IsChinaGBTestRequired = -999)
              inner join Invoice as i with (nolock) on i.ShipmentId = s.ShipmentId AND i.Status=1
      	      left join LcApplicationShipment as las with (nolock) on las.ShipmentId=s.ShipmentId AND las.Status=1
		      left join LCBatch as lb with (nolock) on lb.LCBatchId = las.LCBatchId AND lb.Status=1
			  LEFT JOIN LGDetail as lgd ON lgd.ShipmentId=s.ShipmentId AND lgd.Status=1
			  LEFT JOIN LetterOfGuarantee as lg ON lg.LGId=lgd.LGId AND lg.Status=1

          where s.Status=1 
--              AND las.Status=1
              AND (las.ShipmentId is not null or not(s.IsMockShopSample=1 or s.IsPressSample=1))  -- not include Mock Shop Sample and Press Sample

              AND isnull(i.LCNo,'')<>''
          		AND (@LCBatchNoFrom is null or @LCBatchNoTo is null or lb.LCBatchNo between @LCBatchNoFrom AND @LCBatchNoTo)
              AND (@LCNoFrom is null or @LCNoTo is null or i.LCNo between @LCNoFrom AND @LCNoTo)
              AND (@LCBillRefNoFrom is null or @LCBillRefNoTo is null or i.LCBillRefNo between @LCBillRefNoFrom AND @LCBillRefNoTo)
  	          AND (@LCIssueDateFrom is null or @LCIssueDateTo is null or i.LCIssueDate between @LCIssueDateFrom AND @LCIssueDateTo)
 	            AND (@LCExpiryDateFrom is null or @LCExpiryDateTo is null or i.LCExpiryDate between @LCExpiryDateFrom AND @LCExpiryDateTo)
 	            AND (@LCPaymentCheckDateFrom is null or @LCPaymentCheckDateTo is null 
                    	  or (i.LCPaymentCheckedDate >= @LCPaymentCheckDateFrom AND i.LCPaymentCheckedDate < (@LCPaymentCheckDateTo + 1)) )
	            AND (@CoId is null or s.CountryOfOriginId = @CoId )
	            AND (@VendorId is null or s.VendorId=@VendorId)
 	            AND (c.OfficeId @OfficeIdList)
              AND (@HandlingOfficeId=-1 OR c.OfficeId<>17 OR s.SalesForecastSpecialGroupId = @HandlingOfficeId)
              AND (c.ProductTeamId @ProductTeamIdList)
union all
(
	            SELECT 
		            s.ShipmentId, c.ContractId, 
		            ss.LCNo, i.LCBillRefNo,
		            ss.LCAmt,
		            ss.LCIssueDate,
		            ss.LCExpiryDate,

		            c.OfficeId, c.CustomerId, 
					CustomerDestinationid=isnull(las.CustomerDestinationId, s.CustomerDestinationId), 
					c.ProductTeamId,
		            ss.VendorId,
		            ss.ProductId, c.SeasonId,
		            SplitSuffix = ss.SplitSuffix,
		            c.ContractNo, s.DeliveryNo, i.InvoicePrefix, i.InvoiceSeq, i.InvoiceYear,

		            SupplierAtWarehouseDate = ss.SupplierAtwarehouseDate, 
		            i.ActualAtWarehouseDate, i.IlsActualAtWarehouseDate,
		            s.TotalPoQty, c.PiecesPerPack, c.PackingUnitId,
		            ss.BuyCurrencyId,
                TotalPoAmt = ss.TotalPOSupplierGmtAmt,
		            ss.QACommissionPercent, ss.VendorPaymentDiscountPercent, ss.LabTestIncome, 
                IsLCPaymentChecked = (case when ss.IsLCPaymentChecked=1 THEN 1 ELSE 0 end),
		            SupplierInvoiceNo = (case when ss.IsLCPaymentChecked=1 THEN ss.SupplierInvoiceNo ELSE null end),
		            TotalShippedQty = (case when ss.IsLCPaymentChecked=1 THEN ss.TotalShippedQty ELSE null end),
		            TotalShippedAmt = (case when ss.IsLCPaymentChecked=1 THEN ss.TotalShippedAmt ELSE 0 end),
                LCPaymentDeduction = 0,
		            TotalShippedSupplierGmtAmtAfterDiscount = (case when ss.IsLCPaymentChecked=1 THEN ss.TotalShippedSupplierGmtAmtAfterDiscount ELSE 0 end),
		            LCPaymentCheckedDate = (case when ss.IsLCPaymentChecked=1 THEN ss.LCPaymentCheckedDate ELSE null end),
		            ss.CountryOfOriginId, 
					IsChinaGBTestRequired = isnull(s.IsChinaGBTestRequired,0),
				CASE WHEN lg.LGId IS NOT NULL AND i.InvoiceDate IS NOT NULL THEN DATEADD(d, 60, i.InvoiceDate) ELSE NULL END AS LGDate
        	from 
              Shipment as s with (nolock) 
              inner join Contract as c with (nolock) on c.ContractId = s.ContractId AND c.Status=1 AND (s.IsChinaGBTestRequired = @IsChinaGBTestRequired OR @IsChinaGBTestRequired = -999)
              inner join Invoice as i with (nolock) on i.ShipmentId = s.ShipmentId AND i.Status=1
              inner join SplitShipment as ss with (nolock) on ss.ShipmentId=s.ShipmentId AND ss.status=1 AND ss.IsVirtualSetSplit=0
	            left join LcApplicationShipment as las with (nolock) on las.ShipmentId=s.ShipmentId AND (las.SplitShipmentId=ss.SplitShipmentId or (ss.SplitShipmentId is null AND las.SplitShipmentId<=0)) AND las.Status=1
		        left join LCBatch as lb with (nolock) on lb.LCBatchId = las.LCBatchId AND lb.Status=1
				LEFT JOIN LGDetail as lgd ON lgd.SplitShipmentId=ss.SplitShipmentId AND lgd.Status=1
				LEFT JOIN LetterOfGuarantee as lg ON lg.LGId=lgd.LGId AND lg.Status=1

          where s.Status=1 
--              AND las.Status=1
              AND (las.ShipmentId is not null or not(s.IsMockShopSample=1 or s.IsPressSample=1))  -- not include Mock Shop Sample and Press Sample

              AND isnull(ss.LCNo,'')<>''
          		and (@LCBatchNoFrom is null or @LCBatchNoTo is null or lb.LCBatchNo between @LCBatchNoFrom AND @LCBatchNoTo)
              AND (@LCNoFrom is null or @LCNoTo is null or ss.LCNo between @LCNoFrom AND @LCNoTo)
              AND (@LCBillRefNoFrom is null or @LCBillRefNoTo is null or i.LCBillRefNo between @LCBillRefNoFrom AND @LCBillRefNoTo)
  	          AND (@LCIssueDateFrom is null or @LCIssueDateTo is null or ss.LCIssueDate between @LCIssueDateFrom AND @LCIssueDateTo)
 	            AND (@LCExpiryDateFrom is null or @LCExpiryDateTo is null or ss.LCExpiryDate between @LCExpiryDateFrom AND @LCExpiryDateTo)
 	            AND (@LCPaymentCheckDateFrom is null or @LCPaymentCheckDateTo is null 
	                    or ( (ss.LCPaymentCheckedDate >= @LCPaymentCheckDateFrom) AND (ss.LCPaymentCheckedDate < (@LCPaymentCheckDateTo + 1)))
	                  )     
	            AND (@CoId is null or ss.CountryOfOriginId = @CoId )
	            AND (@VendorId is null or ss.VendorId =@VendorId)
 	            AND (c.OfficeId @OfficeIdList)
              AND (@HandlingOfficeId=-1 OR c.OfficeId<>17 OR s.SalesForecastSpecialGroupId = @HandlingOfficeId)
              AND (c.ProductTeamId @ProductTeamIdList)

)


          SELECT 
        		  ShipmentId, ContractId, 
              LCNo, LCBillRefNo, LCIssueAmount=LCAmt, LCIssueDate, LCExpiryDate, 
		          LC_TotalSupplierInvoiceAmount = ( SELECT sum(TotalShippedSupplierGmtAmtAfterDiscount) 
                                              	    from #temp_LCStatus
			                                              where LCNo=x.LCNo 
                                                       AND isnull(LCIssueDate,0)=isnull(x.LCIssueDate,0) 
                                                       AND isnull(LCExpiryDate,0)=isnull(x.LCExpiryDate,0)
                                              ),
		          SplitSuffix,	ContractNo, DeliveryNo, InvoicePrefix, InvoiceSeq, InvoiceYear,
              POAtWarehouseDate = SupplierAtWarehouseDate, StockAtWarehouseDate = isnull(ActualAtWarehouseDate, ILSActualAtWarehouseDate),
		          POQty = TotalPoQty, TotalPoAmt,  
              QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome,
              SupplierInvoiceNo, ShippedQty=isnull(TotalShippedQty,0),
		          InvoiceAmount = TotalShippedAmt, SupplierInvoiceAmount = TotalShippedSupplierGmtAmtAfterDiscount,	
              LCPaymentDeduction,
              IsLCPaymentChecked, LCPaymentCheckedDate ,
		          OfficeCode = (SELECT OfficeCode from office where OfficeId=x.OfficeId),
		          OfficeDesc = (SELECT Description from office where OfficeId=x.OfficeId),
		          CustomerCode = (SELECT CustomerShortCode from customer where CustomerId=x.CustomerId),
              
              CASE WHEN x.CustomerId IN (34,35) THEN (SELECT DestinationDesc FROM CustomerDestination WITH (NOLOCK) WHERE CustomerDestinationId = x.CustomerDestinationId AND Status = 1)
	            ELSE (SELECT CustomerDesc FROM Customer WITH (NOLOCK) WHERE CustomerId = x.CustomerId) END AS CustomerDesc,
              
		          --CustomerDesc = (SELECT CustomerDesc from customer where CustomerId=x.CustomerId),
		          ItemNo = (SELECT ItemNo from Product where ProductId = x.ProductId),
		          CurrencyCode = (SELECT CurrencyCode from Currency where CurrencyId = x.BuyCurrencyId),
		          COCode = (SELECT Code from NSLDB..CountryOfOrigin where CountryOfOriginId = x.CountryOfOriginId),
		          COName = (SELECT Name from NSLDB..CountryOfOrigin where CountryOfOriginId = x.CountryOfOriginId),
		          VendorName = (SELECT Name from NSLIndustry..Vendor where VendorId = x.VendorId),
		          ProductTeamCode = (SELECT Code from NSLDB..OfficeStructure where OfficeStructureId=x.ProductTeamId),
		          PiecesPerPack, PackingUnitDesc = (SELECT PackingUnitDesc from PackingUnit where PackingUnitId = x.PackingUnitId),
				  x.CustomerId, x.ProductId, x.SeasonId, x.VendorId, 
				  IsChinaGBTestRequired=ISNULL(CONVERT(int,x.IsChinaGBTestRequired),0), ChinaGBTestResult=-1,
				  x.LGDate
          from 
            #temp_LCStatus as x
            --where x.shipmentid in (select shipmentid from cutoffsales as cos where cos.FiscalYear=2011 and cos.Period=4)
        
         
				]]>
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="HandlingOfficeId" name="@HandlingOfficeId" type="Int" direction="Input" />
          <param key="ProductTeamIdList" name="@ProductTeamIdList" type="ArrayInt" direction="Input" />
          <param key="CoId" name="@CoId" type="Int" direction="Input" />
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
          <param key="LCNoFrom" name="@LCNoFrom" type="varchar" direction="Input" />
          <param key="LCNoTo" name="@LCNoTo" type="varchar" direction="Input" />
          <param key="LCBillRefNoFrom" name="@LCBillRefNoFrom" type="varchar" direction="Input" />
          <param key="LCBillRefNoTo" name="@LCBillRefNoTo" type="varchar" direction="Input" />
          <param key="LCBatchNoFrom" name="@LCBatchNoFrom" type="Int" direction="Input" />
          <param key="LCBatchNoTo" name="@LCBatchNoTo" type="Int" direction="Input" />
          <param key="LCIssueDateFrom" name="@LCIssueDateFrom" type="DateTime" direction="Input" />
          <param key="LCIssueDateTo" name="@LCIssueDateTo" type="DateTime" direction="Input" />
          <param key="LCExpiryDateFrom" name="@LCExpiryDateFrom" type="DateTime" direction="Input" />
          <param key="LCExpiryDateTo" name="@LCExpiryDateTo" type="DateTime" direction="Input" />
          <param key="LCPaymentCheckDateFrom" name="@LCPaymentCheckDateFrom" type="DateTime" direction="Input" />
          <param key="LCPaymentCheckDateTo" name="@LCPaymentCheckDateTo" type="DateTime" direction="Input" />
          <param key="IsChinaGBTestRequired" name="@IsChinaGBTestRequired" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLCStatusReportForPaymentControl" type="Text">
        <commandText>
          <![CDATA[
	            SELECT 
		            s.ShipmentId, c.ContractId, 
		            i.LCNo , i.LCBillRefNo,
		            i.LCAmt,
		            i.LCIssueDate ,
		            i.LCExpiryDate ,

		            c.OfficeId, c.CustomerId, 
					CustomerDestinationid=isnull(las.CustomerDestinationId, s.CustomerDestinationId), 
					c.ProductTeamId, c.SeasonId,
		            s.VendorId, 
		            c.ProductId,
		            SplitSuffix = '',
		            c.ContractNo, s.DeliveryNo, i.InvoicePrefix, i.InvoiceSeq, i.InvoiceYear,

		            s.SupplierAtWarehouseDate,
		            i.ActualAtWarehouseDate, 
		            s.TotalPoQty, c.PiecesPerPack, c.PackingUnitId,
		            s.BuyCurrencyId,
                TotalPoAmt = s.TotalPOSupplierGmtAmt,
		            s.QACommissionPercent, s.VendorPaymentDiscountPercent, s.LabTestIncome, 
                IsLCPaymentChecked = (case when i.IsLCPaymentChecked=1 THEN 1 ELSE 0 end),
		            SupplierInvoiceNo = (case when i.IsLCPaymentChecked=1 THEN i.SupplierInvoiceNo ELSE null end),
		            TotalShippedQty = (case when i.IsLCPaymentChecked=1 THEN s.TotalShippedQty ELSE null end),
		            TotalShippedAmt = (case when i.IsLCPaymentChecked=1 THEN s.TotalShippedAmt ELSE 0 end),
                LCPaymentDeduction = ISNull((Select sum(Amt*z.Factor) from ShipmentDeduction y 
                inner join PaymentDeductionType z 
                on y.DeductionType = z.DeductionTypeId
                Where y.shipmentId = s.shipmentId AND y.Status = 1
                Group by y.shipmentId),0),
		            TotalShippedSupplierGmtAmtAfterDiscount = (case when i.IsLCPaymentChecked=1 THEN s.TotalShippedSupplierGmtAmtAfterDiscount ELSE 0 end),
		            LCPaymentCheckedDate = (case when i.IsLCPaymentChecked=1 THEN i.LCPaymentCheckedDate ELSE null end),
		            CountryOfOriginId = s.CountryOfOriginId, s.IsChinaGBTestRequired,
					CASE WHEN lg.LGId IS NOT NULL AND i.InvoiceDate IS NOT NULL THEN DATEADD(d, 60, i.InvoiceDate) ELSE NULL END AS LGDate
          into #temp_LCStatus      
        	from 
              Shipment as s 
              inner join Contract as c on c.ContractId = s.ContractId AND c.Status=1 
              inner join Invoice as i on i.ShipmentId = s.ShipmentId AND i.Status=1
              inner join ( select distinct ProductTeamId=pt.OfficeStructureId, pt.OfficeId, DepartmentCode=dp.Code, UserId = (SELECT TOP 1 UserId 
                                     from NSLDB..UserSeasonOfficeStructure AS uo 
					                            where (uo.OfficeStructureId=pt.ParentId or uo.OfficeStructureId=pt.OfficeStructureId) 
						                                and uo.UserId=@UserId and uo.Status=1)
			                  from NSLDB..OfficeStructure as pt 
			                      inner join NSLDB..OfficeStructure as dp on dp.OfficeStructureId=pt.ParentId and dp.Status=1
			                  where pt.status=1 AND pt.OfficeStructureTypeId = 50
		              ) as up on up.ProductTeamId=c.ProductTeamId
      	      left join LcApplicationShipment as las on las.ShipmentId=s.ShipmentId AND las.Status=1
		          left join LCBatch as lb on lb.LCBatchId = las.LCBatchId AND lb.Status=1
			  LEFT JOIN LGDetail as lgd ON lgd.ShipmentId=s.ShipmentId AND lgd.Status=1
			  LEFT JOIN LetterOfGuarantee as lg ON lg.LGId=lgd.LGId AND lg.Status=1
          where s.Status=1 
              AND (las.ShipmentId is not null or not(s.IsMockShopSample=1 or s.IsPressSample=1))  -- not include Mock Shop Sample and Press Sample
              AND isnull(i.LCNo,'')<>''
              -- AND (s.ShipmentId @ShipmentIdList)
 	            AND (i.LCPaymentCheckedDate is not null)
              AND (@LCNoFrom is null or @LCNoTo is null or i.LCNo between @LCNoFrom AND @LCNoTo)
              AND (@LCBillRefNo is null or i.LCBillRefNo=@LCBillRefNo)
	            AND (@VendorId is null or s.VendorId=@VendorId)
              
          union all
          (
	            SELECT 
		            s.ShipmentId, c.ContractId, 
		            ss.LCNo, i.LCBillRefNo,
		            ss.LCAmt,
		            ss.LCIssueDate,
		            ss.LCExpiryDate,

		            c.OfficeId, c.CustomerId, 
					CustomerDestinationid=isnull(las.CustomerDestinationId, s.CustomerDestinationId), 
					c.ProductTeamId, c.SeasonId,
		            ss.VendorId,
		            ss.ProductId,
		            SplitSuffix = ss.SplitSuffix,
		            c.ContractNo, s.DeliveryNo, i.InvoicePrefix, i.InvoiceSeq, i.InvoiceYear,

		            SupplierAtWarehouseDate = ss.SupplierAtwarehouseDate, 
		            i.ActualAtWarehouseDate, 
		            s.TotalPoQty, c.PiecesPerPack, c.PackingUnitId,
		            ss.BuyCurrencyId,
                TotalPoAmt = ss.TotalPOSupplierGmtAmt,
		            ss.QACommissionPercent, ss.VendorPaymentDiscountPercent, ss.LabTestIncome, 
                IsLCPaymentChecked = (case when ss.IsLCPaymentChecked=1 THEN 1 ELSE 0 end),
		            SupplierInvoiceNo = (case when ss.IsLCPaymentChecked=1 THEN ss.SupplierInvoiceNo ELSE null end),
		            TotalShippedQty = (case when ss.IsLCPaymentChecked=1 THEN ss.TotalShippedQty ELSE null end),
		            TotalShippedAmt = (case when ss.IsLCPaymentChecked=1 THEN ss.TotalShippedAmt ELSE 0 end),
                LCPaymentDeduction = 0,                
		            TotalShippedSupplierGmtAmtAfterDiscount = (case when ss.IsLCPaymentChecked=1 THEN ss.TotalShippedSupplierGmtAmtAfterDiscount ELSE 0 end),
		            LCPaymentCheckedDate = (case when ss.IsLCPaymentChecked=1 THEN ss.LCPaymentCheckedDate ELSE null end),
		            ss.CountryOfOriginId, s.IsChinaGBTestRequired,
					CASE WHEN lg.LGId IS NOT NULL AND i.InvoiceDate IS NOT NULL THEN DATEADD(d, 60, i.InvoiceDate) ELSE NULL END AS LGDate
        	from 
              Shipment as s 
              inner join Contract as c on c.ContractId = s.ContractId AND c.Status=1 
              inner join Invoice as i on i.ShipmentId = s.ShipmentId AND i.Status=1
              inner join SplitShipment as ss on ss.ShipmentId=s.ShipmentId AND ss.status=1 AND ss.IsVirtualSetSplit=0
              inner join ( select distinct ProductTeamId=pt.OfficeStructureId, pt.OfficeId, DepartmentCode=dp.Code, UserId = (SELECT TOP 1 UserId 
                                     from NSLDB..UserSeasonOfficeStructure AS uo 
					                            where (uo.OfficeStructureId=pt.ParentId or uo.OfficeStructureId=pt.OfficeStructureId) 
						                                and uo.UserId=@UserId and uo.Status=1)
			                  from NSLDB..OfficeStructure as pt 
			                      inner join NSLDB..OfficeStructure as dp on dp.OfficeStructureId=pt.ParentId and dp.Status=1
			                  where pt.status=1 AND pt.OfficeStructureTypeId = 50
		              ) as up on up.ProductTeamId=c.ProductTeamId
	            left join LcApplicationShipment as las on las.ShipmentId=s.ShipmentId AND (las.SplitShipmentId=ss.SplitShipmentId or (ss.SplitShipmentId is null AND las.SplitShipmentId<=0)) AND las.Status=1
		          left join LCBatch as lb on lb.LCBatchId = las.LCBatchId AND lb.Status=1
			  LEFT JOIN LGDetail as lgd ON lgd.SplitShipmentId=ss.SplitShipmentId AND lgd.Status=1
			  LEFT JOIN LetterOfGuarantee as lg ON lg.LGId=lgd.LGId AND lg.Status=1
				  
          where s.Status=1 
              AND (las.ShipmentId is not null or not(s.IsMockShopSample=1 or s.IsPressSample=1))  -- not include Mock Shop Sample and Press Sample
              AND isnull(ss.LCNo,'')<>''
              -- AND (s.ShipmentId @ShipmentIdList)
 	            AND (ss.LCPaymentCheckedDate is not null)     
              AND (@LCNoFrom is null or @LCNoTo is null or ss.LCNo between @LCNoFrom AND @LCNoTo)
              --AND (@LCBillRefNo is null or ss.LCBillRefNo=@LCBillRefNo)
	            AND (@VendorId is null or ss.VendorId =@VendorId)

          )

          SELECT 
        		  ShipmentId, ContractId, 
              LCNo, LCBillRefNo, LCIssueAmount=LCAmt, LCIssueDate, LCExpiryDate, 
		          LC_TotalSupplierInvoiceAmount = ( SELECT sum(TotalShippedSupplierGmtAmtAfterDiscount) 
                                              	    from #temp_LCStatus
			                                              where LCNo=x.LCNo 
                                                       AND isnull(LCIssueDate,0)=isnull(x.LCIssueDate,0) 
                                                       AND isnull(LCExpiryDate,0)=isnull(x.LCExpiryDate,0)
                                              ),
		          SplitSuffix,	ContractNo, DeliveryNo, InvoicePrefix, InvoiceSeq, InvoiceYear,
              POAtWarehouseDate = SupplierAtWarehouseDate, StockAtWarehouseDate = ActualAtWarehouseDate, 
		          POQty = TotalPoQty, TotalPoAmt,  QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, 
              SupplierInvoiceNo, ShippedQty=TotalShippedQty,
		          InvoiceAmount = TotalShippedAmt, SupplierInvoiceAmount = TotalShippedSupplierGmtAmtAfterDiscount,	
              LCPaymentDeduction,
              IsLCPaymentChecked, LCPaymentCheckedDate ,
		          OfficeCode = (SELECT OfficeCode from office where OfficeId=x.OfficeId),
		          OfficeDesc = (SELECT Description from office where OfficeId=x.OfficeId),
		          CustomerCode = (SELECT CustomerShortCode from customer where CustomerId=x.CustomerId),
              
              CASE WHEN x.CustomerId IN (34,35) THEN (SELECT DestinationDesc FROM CustomerDestination WITH (NOLOCK) WHERE CustomerDestinationId = x.CustomerDestinationId AND Status = 1)
	            ELSE (SELECT CustomerDesc FROM Customer WITH (NOLOCK) WHERE CustomerId = x.CustomerId) END AS CustomerDesc,
              
		          --CustomerDesc = (SELECT CustomerDesc from customer where CustomerId=x.CustomerId),
		          ItemNo = (SELECT ItemNo from Product where ProductId = x.ProductId),
		          CurrencyCode = (SELECT CurrencyCode from Currency where CurrencyId = x.BuyCurrencyId),
		          COCode = (SELECT Code from NSLDB..CountryOfOrigin where CountryOfOriginId = x.CountryOfOriginId),
		          COName = (SELECT Name from NSLDB..CountryOfOrigin where CountryOfOriginId = x.CountryOfOriginId),
		          VendorName = (SELECT Name from NSLIndustry..Vendor where VendorId = x.VendorId),
		          ProductTeamCode = (SELECT Code from NSLDB..OfficeStructure where OfficeStructureId=x.ProductTeamId),
		          PiecesPerPack, PackingUnitDesc = (SELECT PackingUnitDesc from PackingUnit where PackingUnitId = x.PackingUnitId),
				  x.CustomerId, x.ProductId, x.SeasonId, x.VendorId,
				  IsChinaGBTestRequired=ISNULL(CONVERT(int,x.IsChinaGBTestRequired),0), ChinaGBTestResult=-1,
				  x.LGDate
          from 
              #temp_LCStatus as x
				]]>
        </commandText>
        <parameters>
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
          <param key="LCNoFrom" name="@LCNoFrom" type="varchar" direction="Input" />
          <param key="LCNoTo" name="@LCNoTo" type="varchar" direction="Input" />
          <param key="LCBillRefNo" name="@LCBillRefNo" type="varchar" direction="Input" />
          <param key="UserId" name="@UserId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCStatusReport" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="OutstandingLCReportApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetOutstandingLCReport" type="Text">
        <commandText>
          <![CDATA[          
          SELECT
              Office = (SELECT OfficeCode FROM NSLDB..Office WHERE OfficeId = c.OfficeId),
              Merchandiser = (SELECT DisplayName FROM NSLDB..UserInfo WHERE UserId = c.MerchandiserId),
              ProductTeam = (SELECT Code FROM NSLDB..OfficeStructure WHERE OfficeStructureId = c.ProductTeamId),
              
              CASE WHEN c.CustomerId IN (34,35) THEN (SELECT DestinationDesc FROM CustomerDestination WITH (NOLOCK) WHERE CustomerDestinationId = s.CustomerDestinationId AND Status = 1)
	            ELSE (SELECT CustomerDesc FROM Customer WITH (NOLOCK) WHERE CustomerId = c.CustomerId) END AS Customer,
              
              --Customer = (SELECT CustomerCode FROM Customer WHERE CustomerId = c.CustomerId),
              Supplier = (SELECT [Name] FROM NSLIndustry..Vendor WHERE VendorId = s.VendorId),
              Product = (SELECT ItemNo FROM Product WHERE ProductId = c.ProductId),
              c.ContractNo, s.DeliveryNo, s.CustomerAtWarehouseDate, s.TotalPOQty,
              Unit = CONVERT(VARCHAR, c.PiecesPerPack) + ' / ' + (SELECT PackingUnitDesc FROM PackingUnit WHERE PackingUnitId = c.PackingUnitId),
              CO = (SELECT Name FROM CountryOfOrigin WHERE CountryOfOriginId = s.CountryOfOriginId),
              Destination = (SELECT DestinationDesc FROM CustomerDestination WHERE CustomerDestinationId = s.CustomerDestinationId),
              Currency = (SELECT CurrencyCode FROM Currency WHERE CurrencyId = s.BuyCurrencyId),
              s.TotalPOSupplierGmtAmt,
              ShipmentMethod = (SELECT ShipmentMethodDesc FROM ShipmentMethod WHERE ShipmentMethodId = s.ShipmentMethodId),
              Status = (SELECT Description FROM WorkflowStatus WHERE WorkflowStatusId = s.WorkflowStatusId AND RecordTypeId = 1)
          FROM SHIPMENT AS s
              INNER JOIN Contract AS c ON s.ContractId = c.ContractId AND c.Status = 1

          WHERE
              s.WorkflowStatusId <> 9
              AND s.PaymentTermId =2 AND (s.SplitCount = 0 OR s.IsVirtualSetSplit = 1) AND s.Status = 1
              AND not(s.IsMockShopSample=1 or s.IsPressSample=1)  -- not include Mock Shop Sample and Press Sample

              AND (NOT EXISTS(SELECT * FROM LCApplicationShipment WHERE ShipmentId = s.ShipmentId AND Status = 1)
              AND EXISTS(SELECT * FROM Invoice WHERE ShipmentId = s.ShipmentId AND LCNo IS NULL))
              --AND s.CustomerDestinationId not in (SELECT CustomerDestinationId from CustomerDestination where UTurnOrder=1)	-- Not incluce UT order
			  AND s.TermOfPurchaseId <> 5
              AND c.CustomerId not in (3,4,8,9)		-- Not incluce Middle East, Japan, CHOICE AND Lipsy

              AND (@vendorId = -1 OR s.VendorId = @vendorId)
              AND (@countryOfOriginId = -1 OR s.CountryOfOriginId = @countryOfOriginId)
              --AND ((@officeId = -1 AND c.OfficeId @officeIdList) OR c.OfficeId = @officeId)
              AND (c.OfficeId @officeIdList)
              AND (@HandlingOfficeId=-1 OR c.OfficeId<>17 OR s.SalesForecastSpecialGroupId = @HandlingOfficeId)
              AND c.ProductTeamId @productTeamList
              AND (@customerDestinationId = -1 OR s.CustomerDestinationId = @customerDestinationId)
              AND (@purchaseTermId = -1 OR s.TermOfPurchaseId = @purchaseTermId)
              AND (@customerAtWHDateFrom IS NULL OR (s.CustomerAtWarehouseDate BETWEEN @customerAtWHDateFrom AND @customerAtWHDateTo))

          UNION

          SELECT
              Office = (SELECT OfficeCode FROM NSLDB..Office WHERE OfficeId = c.OfficeId),
              Merchandiser = (SELECT DisplayName FROM NSLDB..UserInfo WHERE UserId = c.MerchandiserId),
              ProductTeam = (SELECT Code FROM NSLDB..OfficeStructure WHERE OfficeStructureId = c.ProductTeamId),
              
              CASE WHEN c.CustomerId IN (34,35) THEN (SELECT DestinationDesc FROM CustomerDestination WITH (NOLOCK) WHERE CustomerDestinationId = s.CustomerDestinationId AND Status = 1)
	            ELSE (SELECT CustomerDesc FROM Customer WITH (NOLOCK) WHERE CustomerId = c.CustomerId) END AS Customer,
              
              --Customer = (SELECT CustomerCode FROM Customer WHERE CustomerId = c.CustomerId),
              Supplier = (SELECT [Name] FROM NSLIndustry..Vendor WHERE VendorId = ss.VendorId),
              Product = (SELECT ItemNo FROM Product WHERE ProductId = ss.ProductId),
              ContractNo = c.ContractNo + ss.SplitSuffix , s.DeliveryNo, s.CustomerAtWarehouseDate, ss.TotalPOQty,
              Unit = CONVERT(VARCHAR, ss.PiecesPerPack) + '/' + (SELECT PackingUnitDesc FROM PackingUnit WHERE PackingUnitId = ss.PackingUnitId),
              CO = (SELECT Name FROM CountryOfOrigin WHERE CountryOfOriginId = ss.CountryOfOriginId),
              Destination = (SELECT DestinationDesc FROM CustomerDestination WHERE CustomerDestinationId = s.CustomerDestinationId),
              Currency = (SELECT CurrencyCode FROM Currency WHERE CurrencyId = ss.BuyCurrencyId),
              ss.TotalPOSupplierGmtAmt,
              ShipmentMethod = (SELECT ShipmentMethodDesc FROM ShipmentMethod WHERE ShipmentMethodId = s.ShipmentMethodId),
              Status = (SELECT Description FROM WorkflowStatus WHERE WorkflowStatusId = s.WorkflowStatusId AND RecordTypeId = 1)
          FROM SHIPMENT AS s
              INNER JOIN Contract AS c ON s.ContractId = c.ContractId AND c.Status = 1
              INNER JOIN SplitShipment AS ss ON ss.ShipmentId = s.ShipmentId AND ss.Status = 1
          WHERE
              s.WorkflowStatusId <> 9
              AND ss.PaymentTermId =2 AND (s.SplitCount > 0 AND ss.IsVirtualSetSplit = 0) AND s.Status = 1
              AND not(s.IsMockShopSample=1 or s.IsPressSample=1)  -- not include Mock Shop Sample and Press Sample

              AND (NOT EXISTS(SELECT * FROM LCApplicationShipment WHERE ShipmentId = ss.ShipmentId AND Status = 1)
              AND (ss.LCNo IS NULL))
              --AND s.CustomerDestinationId not in (SELECT CustomerDestinationId from CustomerDestination where UTurnOrder=1)	-- Not incluce UT order
			  AND s.TermOfPurchaseId <> 5
              AND c.CustomerId not in (3,4,8,9)		-- Not incluce Middle East, Japan, CHOICE AND Lipsy

              AND (@vendorId = -1 OR ss.VendorId = @vendorId)
              AND (@countryOfOriginId = -1 OR ss.CountryOfOriginId = @countryOfOriginId)
              --AND ((@officeId = -1 AND c.OfficeId @officeIdList) OR c.OfficeId = @officeId)
              AND (c.OfficeId @officeIdList)
              AND (@HandlingOfficeId=-1 OR c.OfficeId<>17 OR s.SalesForecastSpecialGroupId = @HandlingOfficeId)
              AND (c.ProductTeamId @productTeamList)
              AND (@customerDestinationId = -1 OR s.CustomerDestinationId = @customerDestinationId)
              AND (@purchaseTermId = -1 OR s.TermOfPurchaseId = @purchaseTermId)
              AND (@customerAtWHDateFrom IS NULL OR (s.CustomerAtWarehouseDate BETWEEN @customerAtWHDateFrom AND @customerAtWHDateTo))
        ]]>
        </commandText>
        <parameters>
          <param key="vendorId" name="@vendorId" type="int" direction="Input" />
          <param key="officeIdList" name="@officeIdList" type="ArrayInt" direction="Input" />
          <param key="handlingOfficeId" name="@handlingOfficeId" type="int" direction="Input" />
          <param key="productTeamList" name="@productTeamList" type="ArrayInt" direction="Input" />
          <param key="customerDestinationId" name="@customerDestinationId" type="int" direction="Input" />
          <param key="purchaseTermId" name="@purchaseTermId" type="int" direction="Input" />
          <param key="countryOfOriginId" name="@countryOfOriginId" type="int" direction="Input" />
          <param key="customerAtWHDateFrom" name="@customerAtWHDateFrom" type="DateTime" direction="Input" />
          <param key="customerAtWHDateTo" name="@customerAtWHDateTo" type="DateTime" direction="Input" />
        </parameters>

      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="OutstandingLCReport" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="OrdersForLCCancellationReportApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetOrdersForLCCancellationReport" type="Text">
        <commandText>
          <![CDATA[
          SELECT inv.ShipmentId, a.ContractNo, b.DeliveryNo, x.CustomerCode, b.CustomerAtWarehouseDate, c.SupplierAtWarehouseDate, c.LCApprovalDate, 
              d.name as Vendor, h.description AS Dept, i.code + ' - ' + i.description AS ProductTeam, f.CurrencyCode, c.TotalPOQty, c.TotalPOAmt, 
              CASE WHEN c.lcbatchid IS NOT NULL THEN CONVERT(VARCHAR, k.lcbatchno) ELSE 'N/A' END AS LCBatchNo,
              inv.LCNo, inv.LCBillRefNo, inv.LCIssueDate, inv.LCExpiryDate, inv.LCAmt, e.description AS WorkflowStatus,
              CASE WHEN ISNULL(p.no, o.no) IS NOT NULL AND p.no = o.no THEN 'YES' ELSE 'NO' END AS EbookingCancelled,
              CASE WHEN z.iscancelled = 1 THEN 'YES' ELSE 'NO' END AS UKILSCancelled
          FROM Contract a 
          INNER JOIN Shipment b on a.ContractId = b.ContractId AND a.Status = 1 AND b.Status = 1 AND b.PaymentTermId = 2
          INNER JOIN Invoice inv ON inv.ShipmentId = b.ShipmentId AND ISNULL(inv.LCNo,'') <> ''
          INNER JOIN NSLINDUSTRY..Vendor d ON b.VendorId = d.VendorId
          INNER JOIN WorkflowStatus e ON e.WorkflowStatusId = b.WorkflowStatusId AND e.RecordTypeId = 1
          INNER JOIN NSLDB..Currency f ON f.CurrencyId = b.BuyCurrencyId  
          INNER JOIN NSLDB..OfficeStructure h ON a.DeptId = h.OfficeStructureId
          INNER JOIN NSLDB..OfficeStructure i ON a.ProductTeamId = i.OfficeStructureId
          INNER JOIN Customer x ON x.CustomerId = a.CustomerId 
          LEFT JOIN LCApplicationShipment c ON b.ShipmentId = c.ShipmentId AND c.Status = 1
          LEFT JOIN LCBatch k ON k.LCBatchId = c.LCBatchId 
          LEFT JOIN ilsorderref z ON b.shipmentid = z.shipmentid 
          LEFT JOIN NSLDB02.NSS.dbo.vw_max_batchno_by_contractdlly o ON o.ContractNo = a.ContractNo AND o.DeliverySeq = b.DeliveryNo 
          LEFT JOIN NSLDB02.NSS.dbo.vw_max_batchno_by_contractdlly_cancelled_only p ON p.ContractNo = a.ContractNo AND p.DeliverySeq = b.DeliveryNo AND o.no = p.no
          
          WHERE 
              (CASE WHEN ISNULL(p.no, o.no) IS NOT NULL AND p.no = o.no THEN 'YES' ELSE 'NO' END = 'YES' 
                     OR
              CASE WHEN z.iscancelled = 1 THEN 'YES' ELSE 'NO' END = 'YES'
                     OR
              b.WorkflowStatusId IN (3,5,9))
              AND (@officeId = -1 OR a.OfficeId = @officeId)
              AND (@customerAtWHDateFrom IS NULL OR (b.CustomerAtWarehouseDate BETWEEN @customerAtWHDateFrom AND @customerAtWHDateTo))
              AND c.WorkflowStatusId <> 6
        ]]>
        </commandText>
        <parameters>
          <param key="officeId" name="@officeId" type="int" direction="Input" />
          <param key="customerAtWHDateFrom" name="@customerAtWHDateFrom" type="DateTime" direction="Input" />
          <param key="customerAtWHDateTo" name="@customerAtWHDateTo" type="DateTime" direction="Input" />
        </parameters>

      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="OrdersForLCCancellation" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="LCShipmentAmendmentReportApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetLCShipmentAmendmentReport" type="Text">
        <commandText>
          <![CDATA[
					DECLARE @StartDate datetime
					SET @StartDate = '2015-1-1'

					SELECT	
							LcNo=i.LCNo, 
							LcIssueDate=i.LCIssueDate, 
							LcExpiryDate=i.LCExpiryDate,
							LcApplicationNo = RIGHT( '00000' + CONVERT( varchar, l.LCApplicationNo), 6),
							LcBatchNo = 'LCB' + CONVERT( varchar, lb.LCBatchNo), 
							Office = o.OfficeCode,
							ContractNo = c.ContractNo, 
							DlyNo = s.DeliveryNo, 
							InvoiceNo = (CASE WHEN s.WorkflowStatusId = 8 THEN dbo.fn_formatInvoiceNo( i.InvoicePrefix, i.InvoiceSeq, i.InvoiceYear) ELSE '' END),
							InvoiceDate = (CASE WHEN s.WorkflowStatusId = 8 THEN i.InvoiceDate ELSE NULL END),

							ItemNo_Original = (CASE WHEN p.ItemNo <> pn.ItemNo THEN  p.ItemNo ELSE '' END ),
							ItemNo_New = (CASE WHEN p.ItemNo <> pn.ItemNo THEN  pn.ItemNo ELSE '' END ),
							Currency_Original = (CASE WHEN s.BuyCurrencyId <> ls.CurrencyId THEN cy.CurrencyCode ELSE '' END),
							Currency_New = (CASE WHEN s.BuyCurrencyId <> ls.CurrencyId THEN cyn.CurrencyCode ELSE '' END),
							UnitPrice_Original = NULL,
							UnitPrice_New = NULL,
							POAmt_Original = (CASE WHEN s.TotalPONetFOBAmtAfterDiscount <> ls.TotalPOAmt THEN ls.TotalPOAmt ELSE NULL END),
							POAmt_New = (CASE WHEN s.TotalPONetFOBAmtAfterDiscount <> ls.TotalPOAmt THEN s.TotalPONetFOBAmtAfterDiscount ELSE NULL END),
							POQty_Original = (CASE WHEN s.TotalPOQty <> ls.TotalPOQty THEN ls.TotalPOQty ELSE NULL END),
							POQty_New = (CASE WHEN s.TotalPOQty <> ls.TotalPOQty THEN s.TotalPOQty ELSE NULL END),
							VendorName_Original = (CASE WHEN s.VendorId <> ls.VendorId THEN v.Name ELSE '' END),
							VendorName_New = (CASE WHEN s.VendorId <> ls.VendorId THEN vn.Name ELSE '' END),
							--Insert by Toby on 20150716
							VendorChangedDate = (CASE WHEN s.VendorId <> ls.VendorId THEN al.ActionDate ELSE NULL END),
							
							PoAwhDate_Original = (CASE WHEN s.SupplierAtWarehouseDate <>  ls.SupplierAtWarehouseDate THEN ls.SupplierAtWarehouseDate ELSE NULL END),
							PoAwhDate_New = (CASE WHEN s.SupplierAtWarehouseDate <>  ls.SupplierAtWarehouseDate THEN s.SupplierAtWarehouseDate ELSE NULL END),
							Destination_Original = (CASE WHEN s.CustomerDestinationId <> ls.CustomerDestinationId THEN cd.DestinationDesc ELSE '' END),
							Destination_New = (CASE WHEN s.CustomerDestinationId <> ls.CustomerDestinationId THEN cdn.DestinationDesc ELSE '' END),
							--Customer_Original = (CASE WHEN c.CustomerId <> ls.CustomerId THEN cs.CustomerDesc ELSE '' END),
							--Customer_New = (CASE WHEN c.CustomerId <> ls.CustomerId THEN csn.CustomerDesc ELSE '' END),
							Customer_Original = (CASE WHEN c.CustomerId <> ls.CustomerId THEN (CASE WHEN ls.CustomerId IN (34,35) THEN cd.DestinationDesc ELSE cs.CustomerDesc END) ELSE '' END),
							Customer_New = (CASE WHEN c.CustomerId <> ls.CustomerId THEN (CASE WHEN c.CustomerId IN (34,45) THEN cdn.DestinationDesc ELSE csn.CustomerDesc END) ELSE '' END),
							ShipmentStatus = (CASE WHEN s.WorkflowStatusId = 9 THEN wk.Description ELSE '' END ),
							POCancelledDate = (CASE WHEN s.WorkflowStatusId = 9 THEN (SELECT MAX(CreatedOn) from nsldb02.nss.dbo.ShipmentActionHistory WHERE Shipmentid=s.ShipmentId and ActionTypeId=7) ELSE null END)
					FROM	LCBatch AS lb WITH (NOLOCK)
							INNER JOIN LCApplicationShipment AS ls WITH (NOLOCK) ON lb.LCBatchId = ls.LCBatchId AND lb.status = 1 AND ls.status = 1
							INNER JOIN LCApplication AS l WITH (NOLOCK) ON l.LCApplicationId = ls.LCApplicationId AND l.status = 1

							INNER JOIN Invoice AS i WITH (NOLOCK) ON i.ShipmentId = ls.ShipmentId
							INNER JOIN Shipment AS s WITH (NOLOCK) ON s.ShipmentId = ls.ShipmentId
							INNER JOIN Contract AS c WITH (NOLOCK) ON c.ContractId = s.ContractId
							INNER JOIN Office AS o WITH (NOLOCK) ON o.OfficeId = c.OfficeId
							INNER JOIN WorkflowStatus AS wk WITH (NOLOCK) ON wk.WorkflowStatusId = s.WorkflowStatusId AND wk.RecordTypeId = 1

							INNER JOIN Currency AS cy WITH (NOLOCK) ON cy.CurrencyId = ls.CurrencyId
							INNER JOIN NSLINDUSTRY.dbo.Vendor AS v ON v.VendorId = ls.VendorId
							INNER JOIN Customer AS cs WITH (NOLOCK) ON cs.CustomerId = ls.CustomerId
							INNER JOIN CustomerDestination AS cd WITH (NOLOCK) ON cd.CustomerDestinationId = ls.CustomerDestinationId
							INNER JOIN Product AS p WITH (NOLOCK) ON p.ProductId = ls.ProductId
							
							INNER JOIN Currency AS cyn WITH (NOLOCK) ON cyn.CurrencyId = s.BuyCurrencyId
							INNER JOIN NSLINDUSTRY.dbo.Vendor AS vn ON vn.VendorId = s.VendorId
							INNER JOIN Customer AS csn WITH (NOLOCK) ON csn.CustomerId = c.CustomerId
							INNER JOIN CustomerDestination AS cdn WITH (NOLOCK) ON cdn.CustomerDestinationId = s.CustomerDestinationId
							INNER JOIN Product AS pn WITH (NOLOCK) ON pn.ProductId = c.ProductId
							--Insert by Toby on 20150716
							LEFT JOIN ActionHistory AS al WITH (NOLOCK) ON al.ShipmentId = ls.ShipmentId
									 AND al.AmendmentTypeId = 14
									 AND al.Status = 1
									 AND al.Remark NOT LIKE '%To be%'

					WHERE	
							lb.CreatedOn >= @StartDate
							AND (s.WorkflowStatusId IN ( 9 )
								OR s.TotalPONetFOBAmtAfterDiscount <> ls.TotalPOAmt
								OR s.TotalPOQty <> ls.TotalPOQty
								OR s.VendorId <> ls.VendorId
								OR s.SupplierAtWarehouseDate <> ls.SupplierAtWarehouseDate
								OR p.ItemNo <> pn.ItemNo
								OR s.CustomerDestinationId <> ls.CustomerDestinationId
								OR ls.CustomerId <> c.CustomerId
								OR s.BuyCurrencyId <> ls.CurrencyId
								)     
							AND (@LCNoFrom is null or @LCNoTo is null or i.LCNo between @LCNoFrom AND @LCNoTo)
          					AND (@LCBatchNoFrom is null or @LCBatchNoTo is null or lb.LCBatchNo between @LCBatchNoFrom AND @LCBatchNoTo)
							AND (@LCApplicationNoFrom is null or @LCApplicationNoTo is null or l.LCApplicationNo between @LCApplicationNoFrom AND @LCApplicationNoTo)
  							AND (@LCIssueDateFrom is null or @LCIssueDateTo is null or i.LCIssueDate between @LCIssueDateFrom AND @LCIssueDateTo)
 							AND (@SupplierAwhDateFrom is null or @SupplierAwhDateTo is null or (s.SupplierAtWarehouseDate >= @SupplierAwhDateFrom AND s.SupplierAtWarehouseDate < (@SupplierAwhDateTo + 1)) )
 							AND (c.OfficeId @OfficeIdList)
							AND (@HandlingOfficeId=-1 OR c.OfficeId<>17 OR s.SalesForecastSpecialGroupId = @HandlingOfficeId)


				]]>
        </commandText>
        <parameters>
          <param key="LCNoFrom" name="@LCNoFrom" type="varchar" direction="Input" />
          <param key="LCNoTo" name="@LCNoTo" type="varchar" direction="Input" />
          <param key="LCBatchNoFrom" name="@LCBatchNoFrom" type="Int" direction="Input" />
          <param key="LCBatchNoTo" name="@LCBatchNoTo" type="Int" direction="Input" />
          <param key="LCApplicationNoFrom" name="@LCApplicationNoFrom" type="int" direction="Input" />
          <param key="LCApplicationNoTo" name="@LCApplicationNoTo" type="int" direction="Input" />
          <param key="LCIssueDateFrom" name="@LCIssueDateFrom" type="DateTime" direction="Input" />
          <param key="LCIssueDateTo" name="@LCIssueDateTo" type="DateTime" direction="Input" />
          <param key="SupplierAwhDateFrom" name="@SupplierAwhDateFrom" type="DateTime" direction="Input" />
          <param key="SupplierAwhDateTo" name="@SupplierAwhDateTo" type="DateTime" direction="Input" />
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
          <param key="HandlingOfficeId" name="@HandlingOfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="LCShipmentAmendment" />
    </tableMappings>
  </dataSetAdapter>

</dataOperations>
