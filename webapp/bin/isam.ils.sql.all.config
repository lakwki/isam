<?xml version="1.0" encoding="utf-8" ?>
<dataOperations dataSource="isam">
  <dataSetAdapter name="ILSDocumentApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSDocumentByKey" type="Text">
        <commandText>
          SELECT * FROM ILSDocument
          WHERE OrderRefId = @OrderRefId
          AND DocType = @DocType AND DocNo = @DocNo
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="DocType" name="@DocType" type="varchar" direction="Input" />
          <param key="DocNo" name="@DocNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSDocumentListByShipmentId" type="Text">
        <commandText>
          SELECT a.* FROM ILSDocument a
          INNER JOIN ILSOrderRef b ON a.OrderRefId = b.OrderRefId AND b.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSDocument" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSOrderCopyApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSOrderCopyByKey" type="Text">
        <commandText>
          SELECT * FROM ILSOrderCopy WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSOrderCopyWithPortAmendment" type="Text">
        <commandText>
          <![CDATA[
          SELECT a.* FROM ILSOrderCopy a WITH (NOLOCK)
          INNER JOIN ILSOrderRef z ON a.OrderRefId = z.OrderRefId AND a.IsValid = 1
          INNER JOIN Shipment c WITH (NOLOCK) ON z.ShipmentId = c.ShipmentId AND c.Status = 1
          INNER JOIN Contract b WITH (NOLOCK) ON c.ContractId = b.ContractId AND a.LastSentLoadingPort IS NOT NULL AND b.Status = 1
          INNER JOIN ShipmentPort d WITH (NOLOCK) ON c.ShipmentPortId = d.ShipmentPortId
          WHERE ISNULL(a.LastSentLoadingPort,'') <> d.OfficialCode
          ]]>
        </commandText>
      </dataCommand>
      <dataCommand name="GetILSOrderCopyWithOfficeAmendment" type="Text">
        <commandText>
          <![CDATA[
          SELECT a.* 
          FROM ILSOrderCopy a WITH (NOLOCK)
            INNER JOIN ILSOrderRef z ON a.OrderRefId = z.OrderRefId AND a.IsValid = 1
            INNER JOIN Shipment c WITH (NOLOCK) ON z.ShipmentId = c.ShipmentId AND c.Status = 1
            INNER JOIN Contract b WITH (NOLOCK) ON c.ContractId = b.ContractId AND a.LastSentOfficeCode IS NOT NULL AND b.Status = 1
            INNER JOIN Office d WITH (NOLOCK) ON b.OfficeId = d.OfficeId 
            LEFT JOIN Office AS s WITH (NOLOCK) ON s.OfficeId = c.SalesForecastSpecialGroupId
          WHERE ISNULL(a.LastSentOfficeCode,'') <> 
            --CASE WHEN d.OfficeCode <> 'TR' THEN d.OfficeCode ELSE CASE WHEN b.TradingAgencyId = 1 THEN 'TR' WHEN b.TradingAgencyId IN (2,4) THEN 'TV' END END
            	(CASE WHEN d.OfficeId NOT IN ( 9, 17, 19) THEN d.OfficeCode 
		                WHEN d.OfficeId = 19 THEN 'CA'
		                WHEN d.OfficeId = 17 THEN ISNULL( s.OfficeCode, 'DG' )
		            ELSE CASE WHEN b.TradingAgencyId = 1 THEN 'TR' WHEN b.TradingAgencyId IN ( 2, 4) THEN 'TV' END
		          END)
          ]]>
        </commandText>
      </dataCommand>

      <dataCommand name ="GetILSOrderCopyWithOriginCountryAmendment" type="Text">
        <commandText>
          <![CDATA[
          SELECT	a.* FROM ILSOrderCopy a WITH (NOLOCK)
		      INNER JOIN ILSOrderRef z ON a.OrderRefId = z.OrderRefId AND a.IsValid = 1
		      INNER JOIN Shipment c WITH (NOLOCK) ON z.ShipmentId = c.ShipmentId AND c.Status = 1
		      INNER JOIN Contract b WITH (NOLOCK) ON c.ContractId = b.ContractId AND a.LastSentOfficeCode IS NOT NULL AND b.Status = 1
		      INNER JOIN CountryOfOrigin d WITH (NOLOCK) ON c.CountryOfOriginId = d.CountryOfOriginId
          WHERE	ISNULL( a.LastSentOriginCountry, '') <> d.Code
          ]]>
        </commandText>
      </dataCommand>

      <dataCommand name="GetILSOrderCopyByShipmentId" type="Text">
        <commandText>
          SELECT a.* FROM ILSOrderCopy a
          INNER JOIN ILSOrderRef b ON a.OrderRefId = b.OrderRefId AND b.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSOrderCopy" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSOrderCopyDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSOrderCopyDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ILSOrderCopyDetail WHERE OrderRefId = @OrderRefId
          AND OptionNo = @OptionNo
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="OptionNo" name="@OptionNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSOrderCopyDetailList" type="Text">
        <commandText>
          SELECT * FROM ILSOrderCopyDetail WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSOrderCopyDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSPackingListApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSPackingListByKey" type="Text">
        <commandText>
          SELECT * FROM ILSPackingList WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOutstandingILSPackingList" type="Text">
        <commandText>
          <![CDATA[
          SELECT a.* FROM ILSPackingList a WITH (NOLOCK)
          INNER JOIN ILSOrderRef b WITH (NOLOCK) ON a.OrderRefId = b.OrderRefId AND a.IsUploaded = 0
          INNER JOIN Contract c WITH (NOLOCK) ON c.ContractNo = b.ContractNo
          INNER JOIN NSLDB..Office d ON d.OfficeId = c.OfficeId 
          INNER JOIN NSLDB..MonthEndStatus e ON d.OfficeId = e.OfficeId AND e.MonthEndStatusId <= 1
          --AND d.OfficeId = 7
          ]]>
        </commandText>
      </dataCommand>
      <dataCommand name="GetILSPackingListByShipmentId" type="Text">
        <commandText>
          SELECT a.* FROM ILSPackingList a
          INNER JOIN ILSOrderRef b ON a.OrderRefId = b.OrderRefId AND b.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSPackingList" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSPackingListDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSPackingListDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ILSPackingListDetail WHERE OrderRefId = @OrderRefId
          AND OptionNo = @OptionNo
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="OptionNo" name="@OptionNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSPackingListDetailList" type="Text">
        <commandText>
          SELECT * FROM ILSPackingListDetail WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSPackingListDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSPackingListCartonDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSPackingListCartonDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ILSPackingListCartonDetail WHERE OrderRefId = @OrderRefId
          AND OptionNo = @OptionNo AND SeqNo = @SeqNo
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="OptionNo" name="@OptionNo" type="varchar" direction="Input" />
          <param key="SeqNo" name="@SeqNo" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetILSPackingListCartonDetailList" type="Text">
        <commandText>
          SELECT * FROM ILSPackingListCartonDetail WHERE OrderRefId = @OrderRefId
          AND OptionNo = @OptionNo
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="OptionNo" name="@OptionNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetILSPackingListCartonDetailListByOrderRefId" type="Text">
        <commandText>
          SELECT * FROM ILSPackingListCartonDetail WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetMaxSeqNo" type="Text">
        <commandText>
          SELECT MAX(SeqNo) FROM ILSPackingListCartonDetail
          WHERE OrderRefId = @OrderRefId AND OptionNo = @OptionNo
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="OptionNo" name="@OptionNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSPackingListCartonDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSPackingListMixedCartonDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSPackingListMixedCartonDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ILSPackingListMixedCartonDetail WHERE OrderRefId = @OrderRefId
          AND CartonId = @CartonId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="CartonId" name="@CartonId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetILSPackingListMixedCartonDetailListByOrderRefId" type="Text">
        <commandText>
          SELECT * FROM ILSPackingListMixedCartonDetail WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSPackingListMixedCartonDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSCommissionInvoiceApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSCommissionInvoiceByKey" type="Text">
        <commandText>
          SELECT * FROM ILSCommissionInvoice WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSCommissionInvoice" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSCommissionInvoiceDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSCommissionInvoiceDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ILSCommissionInvoiceDetail WHERE OrderRefId = @OrderRefId AND SeqId = @SeqId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="SeqId" name="@SeqId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSCommissionInvoiceDetailList" type="Text">
        <commandText>
          SELECT * FROM ILSCommissionInvoiceDetail WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxSeqId" type="Text">
        <commandText>
          SELECT MAX(SeqId) FROM ILSCommissionInvoiceDetail
          WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSCommissionInvoiceDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSInvoiceApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSInvoiceByKey" type="Text">
        <commandText>
          SELECT * FROM ILSInvoice WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSReplacementInvoice" type="Text">
        <commandText>
          --SELECT TOP 1 a.* FROM ILSInvoice a INNER JOIN ILSInvoiceChangeHistory b ON a.OrderRefId = b.OrderRefId AND b.InvoiceNo = @InvoiceNo
          --ORDER BY SeqId DESC

          SELECT a.* FROM ILSInvoice a INNER JOIN ILSInvoiceChangeHistory b ON a.OrderRefId = b.OrderRefId AND b.InvoiceNo = @InvoiceNo
        </commandText>
        <parameters>
          <param key="InvoiceNo" name="@InvoiceNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSInvoiceByInvoiceNo" type="Text">
        <commandText>
          SELECT * FROM ILSInvoice WHERE InvoiceNo = @InvoiceNo
        </commandText>
        <parameters>
          <param key="InvoiceNo" name="@InvoiceNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetOutstandingILSInvoice" type="Text">
        <commandText>
          <![CDATA[
          SELECT * FROM ILSInvoice a WITH (NOLOCK)
          INNER JOIN ILSOrderRef b WITH (NOLOCK) ON a.OrderRefId = b.OrderRefId AND ISNULL(a.Status, 1500) = 1500 AND a.TotalAmt > 0
          INNER JOIN Contract c WITH (NOLOCK) ON c.ContractNo = b.ContractNo
          INNER JOIN NSLDB..Office d ON d.OfficeId = c.OfficeId 
          INNER JOIN NSLDB..MonthEndStatus e ON d.OfficeId = e.OfficeId AND e.MonthEndStatusId <= 1
          --AND d.OfficeId = 7
          ]]>
        </commandText>
      </dataCommand>
      <dataCommand name="GetILSInvoiceByShipmentId" type="Text">
        <commandText>
          SELECT a.* FROM ILSInvoice a
          INNER JOIN ILSOrderRef b ON a.OrderRefId = b.OrderRefId AND b.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSInvoiceResetList" type="Text">
        <commandText>
          SELECT a.* FROM ILSInvoice a
          INNER JOIN ILSOrderRef b ON a.OrderRefId = b.OrderRefId AND a.Status BETWEEN 1500 AND 1509
          INNER JOIN Shipment c ON b.ShipmentId = c.ShipmentId AND c.WorkflowStatusId IN (6, 7)
        </commandText>
        <parameters/>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSInvoice" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSInvoiceDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSInvoiceDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ILSInvoiceDetail WHERE OrderRefId = @OrderRefId
          AND OptionNo = @OptionNo
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="OptionNo" name="@OptionNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSInvoiceDetailList" type="Text">
        <commandText>
          SELECT * FROM ILSInvoiceDetail WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSInvoiceDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSInvoiceChangeHistoryApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSInvoiceChangeHistoryByKey" type="Text">
        <commandText>
          SELECT * FROM ILSInvoiceChangeHistory
          WHERE OrderRefId = @OrderRefId AND SeqId = @SeqId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="SeqId" name="@SeqId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetOutOfDateILSInvoiceChangeHistory" type="Text">
        <commandText>
          <![CDATA[
          SELECT * FROM ILSInvoiceChangeHistory WHERE OrderRefId = @OrderRefId
          AND SeqId <> @LatestSeqId
          ]]>
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="LatestSeqId" name="@LatestSeqId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetMaxSeqId" type="Text">
        <commandText>
          SELECT MAX(SeqId) FROM ILSInvoiceChangeHistory
          WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSInvoiceChangeHistory" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSCancelledInvoiceApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSCancelledInvoiceByKey" type="Text">
        <commandText>
          SELECT * FROM ILSCancelledInvoice WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSCancelledInvoiceByInvoiceNo" type="Text">
        <commandText>
          SELECT * FROM ILSCancelledInvoice WHERE InvoiceNo = @InvoiceNo
        </commandText>
        <parameters>
          <param key="InvoiceNo" name="@InvoiceNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSCancelledInvoiceByShipmentId" type="Text">
        <commandText>
          SELECT a.* FROM ILSCancelledInvoice a
          INNER JOIN ILSOrderRef b ON a.OrderRefId = b.OrderRefId AND b.ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSCancelledInvoice" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSCancelledInvoiceDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSCancelledInvoiceDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ILSCancelledInvoiceDetail WHERE OrderRefId = @OrderRefId
          AND OptionNo = @OptionNo
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="OptionNo" name="@OptionNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSCancelledInvoiceDetailList" type="Text">
        <commandText>
          SELECT * FROM ILSCancelledInvoiceDetail WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSCancelledInvoiceDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSCancelledInvoiceChangeHistoryApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSCancelledInvoiceChangeHistoryByKey" type="Text">
        <commandText>
          SELECT * FROM ILSCancelledInvoiceChangeHistory
          WHERE OrderRefId = @OrderRefId AND SeqId = @SeqId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="SeqId" name="@SeqId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetOutOfDateILSCancelledInvoiceChangeHistory" type="Text">
        <commandText>
          <![CDATA[
          SELECT * FROM ILSCancelledInvoiceChangeHistory WHERE OrderRefId = @OrderRefId
          AND SeqId <> @LatestSeqId
          ]]>
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
          <param key="LatestSeqId" name="@LatestSeqId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetMaxSeqId" type="Text">
        <commandText>
          SELECT MAX(SeqId) FROM ILSCancelledInvoiceChangeHistory
          WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSCancelledInvoiceChangeHistory" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSManifestApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSManifestByKey" type="Text">
        <commandText>
          SELECT * FROM ILSManifest
          WHERE ContainerNo = @ContainerNo AND LegId = @LegId
        </commandText>
        <parameters>
          <param key="ContainerNo" name="@ContainerNo" type="varchar" direction="Input" />
          <param key="LegId" name="@LegId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSManifestByMaxLegId" type="Text">
        <commandText>
          SELECT * FROM ILSManifest
          WHERE ContainerNo = @ContainerNo
          AND LegId = (SELECT Max(LegId) FROM ILSManifest WHERE ContainerNo = @ContainerNo)
        </commandText>
        <parameters>
          <param key="ContainerNo" name="@ContainerNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSManifestList" type="Text">
        <commandText>
          SELECT DISTINCT im.* FROM ILSManifest im
          INNER JOIN ILSManifestDetail imd ON imd.ContainerNo = im.ContainerNo AND imd.IsCancelled = 0
          INNER JOIN ILSOrderRef ior ON imd.OrderRefId = ior.OrderRefId
          WHERE
          (@VoyageNo = '' OR im.VoyageNo = @VoyageNo)
          AND (@DepartDate IS NULL OR DepartDate = @DepartDate)
          AND (@ContractNo = '' OR ior.ContractNo = @ContractNo)
          AND (@DepartPort = '' OR im.DepartPort = @DepartPort)
          AND (@VesselName = '' OR im.VesselName LIKE @VesselName)
          AND LegId = 1
        </commandText>
        <parameters>
          <param key="VoyageNo" name="@VoyageNo" type="varchar" direction="Input" />
          <param key="DepartDate" name="@DepartDate" type="Datetime" direction="Input" />
          <param key="ContractNo" name="@ContractNo" type="varchar" direction="Input" />
          <param key="DepartPort" name="@DepartPort" type="varchar" direction="Input" />
          <param key="VesselName" name="@VesselName" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSManifest" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSManifestDetailApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSManifestDetailByKey" type="Text">
        <commandText>
          SELECT * FROM ILSManifestDetail
          WHERE ContainerNo = @ContainerNo AND OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="ContainerNo" name="@ContainerNo" type="varchar" direction="Input" />
          <param key="OrderRefId" name="@OrderRefId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetILSManifestDetailByShipmentId" type="Text">
        <commandText>
          SELECT a.* FROM ILSManifestDetail a
          INNER JOIN ILSOrderRef b ON a.OrderRefId = b.OrderRefId AND a.IsCancelled = 0 AND b.ShipmentId = @ShipmentId
          INNER JOIN ILSManifest c ON a.ContainerNo = c.ContainerNo AND c.LegId = 1
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetILSManifestDetailList" type="Text">
        <commandText>
          SELECT * FROM ILSManifestDetail a
          INNER JOIN ILSManifest b ON a.ContainerNo = b.ContainerNo AND b.LegId = 1
          WHERE a.ContainerNo = @ContainerNo AND a.IsCancelled = 0
        </commandText>
        <parameters>
          <param key="ContainerNo" name="@ContainerNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSManifestDetail" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSCancelledOrderApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSCancelledOrderByKey" type="Text">
        <commandText>
          SELECT * FROM ILSCancelledOrder
          WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSCancelledOrderList" type="Text">
        <commandText>
          SELECT * FROM ILSCancelledOrder WHERE Status = 0
        </commandText>
      </dataCommand>
    </selectCommand>

    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSCancelledOrder" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSOrderRefApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSOrderRefByContractNoAndDeliveryNo" type="Text">
        <commandText>
          SELECT * FROM ILSOrderRef WHERE ContractNo = @ContractNo
          AND DeliveryNo = @DeliveryNo
        </commandText>
        <parameters>
          <param key="ContractNo" name="@ContractNo" type="varchar" direction="Input" />
          <param key="DeliveryNo" name="@DeliveryNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxOrderRefId" type="Text">
        <commandText>
          SELECT MAX(OrderRefId) FROM ILSOrderRef
        </commandText>
      </dataCommand>
      <dataCommand name="GetILSOrderRefByKey" type="Text">
        <commandText>
          SELECT * FROM ILSOrderRef WHERE OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSOrderRefByShipmentId" type="Text">
        <commandText>
          SELECT * FROM ILSOrderRef WHERE ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetILSOrderRefResetList" type="Text">
        <commandText>
          SELECT * FROM ILSOrderRef WHERE IsReset = 1
        </commandText>
        <parameters/>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSOrderRef" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSParamApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSParam" type="Text">
        <commandText>
          SELECT * FROM ILSParam WHERE ParamName = @ParamName
        </commandText>
        <parameters>
          <param key="ParamName" name="@ParamName" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetShipmentIdByContractNoAndDeliveryNo" type="Text">
        <commandText>
          SELECT ShipmentId FROM Shipment a INNER JOIN Contract b ON a.ContractId = b.ContractId
          AND a.Status = 1 AND b.Status = 1
          WHERE b.ContractNo = @ContractNo AND a.DeliveryNo = @DeliveryNo
        </commandText>
        <parameters>
          <param key="ContractNo" name="@ContractNo" type="varchar" direction="Input" />
          <param key="DeliveryNo" name="@DeliveryNo" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSParam" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSFileSentLogApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSFileSentLogByKey" type="Text">
        <commandText>
          SELECT * FROM ILSFileSentLog WHERE OutputFileNo = @FileNo
        </commandText>
        <parameters>
          <param key="FileNo" name="@FileNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <selectCommand>
      <dataCommand name="GetOutstandingILSFileSentLog" type="Text">
        <commandText>
          SELECT * FROM ILSFileSentLog WHERE CompletedOn IS NULL AND DATEDIFF(mi, CreatedOn, GETDATE()) > 30
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSFileSentLog" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSOrderCopyDiscrepancyApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSOrderCopyDiscrepancy" type="Text">
        <commandText>
          <![CDATA[
          SELECT x.OrderRefId, y.OptionNo AS OptionNo,
          cc.CurrencyCode AS CurrencyCode,
          w.ShipmentMethodOPSKey AS TransportMode, x.TransportMode AS ILSTransportMode,
          z.SellingPrice AS Price, y.Price AS ILSPrice,
          x.NextFreightPercent AS ILSNextPerc, CONVERT(int, CASE WHEN a.NUKAirFreightPaymentPercent + a.OtherAirFreightPaymentPercent + a.NSLAirFreightPaymentPercent + a.FTYAirFreightPaymentPercent = 0 THEN 999 ELSE a.NUKAirFreightPaymentPercent END) AS NEXTPerc,
          x.SupplierFreightPercent AS ILSSupplierPerc, CONVERT(int, CASE WHEN a.NUKAirFreightPaymentPercent + a.OtherAirFreightPaymentPercent + a.NSLAirFreightPaymentPercent + a.FTYAirFreightPaymentPercent = 0 THEN 999 ELSE a.OtherAirFreightPaymentPercent + a.NSLAirFreightPaymentPercent + a.FTYAirFreightPaymentPercent END) AS SupplierPerc
          FROM ILSOrderCopy x WITH (NOLOCK) 
          INNER JOIN ILSOrderCopyDetail y WITH (NOLOCK) ON x.OrderRefId = y.OrderRefId AND x.Fileno = @FileNo
          INNER JOIN ILSOrderRef io WITH (NOLOCK) ON x.OrderRefId = io.OrderRefId
          INNER JOIN Shipment a WITH (NOLOCK) ON a.ShipmentId = io.ShipmentId AND a.Status = 1 AND a.WorkflowStatusId NOT IN (8, 9)
          INNER JOIN Contract b WITH (NOLOCK) ON a.ContractId = b.ContractId AND b.Status = 1
          INNER JOIN ShipmentDetail z WITH (NOLOCK) ON a.ShipmentId = z.ShipmentId AND z.Status = 1
          INNER JOIN SizeOption o WITH (NOLOCK) ON z.SizeOptionId = o.SizeOptionId AND o.Status = 1 AND o.SizeOptionNo = y.OptionNo
          --AND (x.OrderRefId <> 969615 OR (x.OrderRefId = 969615 AND o.SizeDesc LIKE '%Yrs%' ))
          INNER JOIN ShipmentMethod w WITH (NOLOCK) ON a.ShipmentMethodId = w.ShipmentMethodId
          INNER JOIN NSLDB..Currency cc ON a.SellCurrencyId = cc.CurrencyId
          WHERE (
          y.Price <> z.SellingPrice OR
          w.ShipmentMethodOPSKey <> x.TransportMode OR
          ((x.SupplierFreightPercent <> CONVERT(int, CASE WHEN a.NUKAirFreightPaymentPercent + a.OtherAirFreightPaymentPercent + a.NSLAirFreightPaymentPercent + a.FTYAirFreightPaymentPercent = 0 THEN 999 ELSE a.OtherAirFreightPaymentPercent + a.NSLAirFreightPaymentPercent + a.FTYAirFreightPaymentPercent END)
          OR x.NextFreightPercent <>  CONVERT(int, CASE WHEN a.NUKAirFreightPaymentPercent + a.OtherAirFreightPaymentPercent + a.NSLAirFreightPaymentPercent + a.FTYAirFreightPaymentPercent = 0 THEN 999 ELSE a.NUKAirFreightPaymentPercent END))
          AND w.ShipmentMethodOPSKey = x.TransportMode
          AND x.TransportMode IN ('X','A'))
          )
          ORDER BY 1,2,3
          ]]>
        </commandText>
        <parameters>
          <param key="FileNo" name="@FileNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSOrderCopyDiscrepancy" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="ILSOrderCopyOriginApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSOrderCopyOrigin" type="Text">
        <commandText>
          <![CDATA[
          SELECT a.OrderRefId, 
                 REPLACE(b.NSLPONo, '/' + io.ContractNo, '') AS OriginContract, 
                 --CASE WHEN d.OfficeCode <> 'TR' THEN d.OfficeCode ELSE CASE WHEN b.TradingAgencyId = 1 THEN 'TR' WHEN b.TradingAgencyId IN (2,4) THEN 'TV' END END AS OfficeCode, 
                 CASE WHEN d.OfficeId NOT IN ( 9, 17, 19) THEN d.OfficeCode
                    WHEN d.OfficeId = 19 THEN 'CA'
                    WHEN d.OfficeId = 17 THEN ISNULL( s.OfficeCode, 'DG')
                    ELSE CASE WHEN b.TradingAgencyId = 1 THEN 'TR' WHEN b.TradingAgencyId IN ( 2, 4) THEN 'TV' END  END AS OfficeCode,
                 ISNULL(e.OfficialCode,'') AS PortCode, 
                 dbo.fn_getDocTypes(c.ShipmentId) AS RequiredDocs, 
                 dbo.fn_getQuotaCats(c.ShipmentId) AS QuotaCats,
                 ISNULL(co.Code, '') AS OriginCountry
          FROM ILSOrderCopy a WITH (NOLOCK) 
          INNER JOIN ILSOrderRef io WITH (NOLOCK) ON a.OrderRefId = io.OrderRefId AND ISNULL(a.IsValid, 0) = 0 AND a.FileNo <> @fileNo
          INNER JOIN Shipment c WITH (NOLOCK) ON io.ShipmentId = c.ShipmentId AND c.Status = 1
          INNER JOIN Contract b WITH (NOLOCK) ON c.ContractId = b.ContractId and b.Status = 1 
          INNER JOIN Office d WITH (NOLOCK) ON b.OfficeId = d.OfficeId
          LEFT JOIN ShipmentPort e WITH (NOLOCK) ON c.ShipmentPortId = e.ShipmentPortId
          LEFT JOIN CountryOfOrigin co WITH (NOLOCK) ON co.CountryOfOriginId = c.CountryOfOriginId
          LEFT JOIN Office AS s WITH (NOLOCK) ON s.OfficeId = c.SalesForecastSpecialGroupId
          -- WHERE b.OfficeId IN (1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16)
          ORDER BY 1,2,3,4           
          ]]>
        </commandText>
        <parameters>
          <param key="FileNo" name="@FileNo" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMissingILSOrderCopyOrigin" type="Text">
        <commandText>
          <![CDATA[
          SELECT z.OrderRefId, REPLACE(y.NSLPONO, '/' + y.ContractNo, '') AS OriginContract,
                 --CASE WHEN d.OfficeCode <> 'TR' THEN d.OfficeCode ELSE CASE WHEN y.TradingAgencyId = 1 THEN 'TR' WHEN y.TradingAgencyId IN (2,4) THEN 'TV' END END AS OfficeCode, 
                 CASE WHEN d.OfficeId NOT IN ( 9, 17, 19 ) THEN d.OfficeCode
                      WHEN d.OfficeId = 19 THEN 'CA'
                      WHEN d.OfficeId = 17 THEN ISNULL( s.OfficeCode, 'DG')
                      ELSE CASE WHEN y.TradingAgencyId = 1 THEN 'TR' WHEN y.TradingAgencyId IN ( 2, 4 ) THEN 'TV' END
                 END AS OfficeCode,
                 ISNULL(p.OfficialCode,'') AS PortCode, 
                 dbo.fn_getDocTypes(x.ShipmentId) AS RequiredDocs, 
                 dbo.fn_getQuotaCats(x.ShipmentId) AS QuotaCats,
                 ISNULL( co.Code, '') AS OriginCountry
          FROM ILSPackingList a WITH (NOLOCK)
            INNER JOIN ILSOrderRef z WITH (NOLOCK) ON a.OrderRefId = z.OrderRefId 
            INNER JOIN Shipment x WITH (NOLOCK) ON x.ShipmentId = z.ShipmentId AND x.CustomerDestinationId NOT IN (4,5)
            INNER JOIN Invoice i WITH (NOLOCK) ON x.ShipmentId = i.ShipmentId AND i.IsSelfBilledOrder = 1
            INNER JOIN Contract y WITH (NOLOCK) ON x.ContractId = y.ContractId
            INNER JOIN Office d WITH (NOLOCK) ON y.OfficeId = d.OfficeId 
            LEFT JOIN ShipmentPort p WITH (NOLOCK) ON x.ShipmentPortId = p.ShipmentPortId 
            LEFT JOIN ILSInvoice c WITH (NOLOCK) ON a.OrderRefId = c.OrderRefId 
            LEFT JOIN ILSOrderCopy b WITH (NOLOCK) ON a.OrderRefId = b.OrderRefId
            LEFT JOIN CountryOfOrigin AS co WITH (NOLOCK) ON co.CountryOfOriginId = x.CountryOfOriginId
            LEFT JOIN Office AS s WITH (NOLOCK) ON s.OfficeId = x.SalesForecastSpecialGroupId
          WHERE c.OrderRefId IS NULL
          AND b.OrderRefId IS NULL
          --AND (b.OrderRefId IS NULL OR (b.IsValid = 1 AND b.LastSentLoadingPort IS NULL AND LastSentOfficeCode IS NULL AND LastSentQuota IS NULL AND LastSentDocType IS NULL AND LastSentOriginCountry IS NULL))
          AND z.OrderRefId NOT IN (216172)
          AND DATEDIFF(yy, a.CreateDate, GETDATE()) <= 2
          ]]>
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSOrderCopyOrigin" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSUnitPriceMatrixApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSUnitPriceMatrix" type="Text">
        <commandText>
          <![CDATA[
          SELECT x.SizeOptionNo AS NSLOptionNo, x.SizeDesc AS NSLSizeDesc, x.SellingPrice AS NSLPrice, 
                       x.ShippedQty AS NSLQty, y.OptionNo AS NUKOptionNo, y.OptionDesc AS NUKSizeDesc, 
                       y.Price AS NUKPrice, y.Qty AS NUKQty, x.NetFOBPrice as FOBPrice
          FROM
          (
          SELECT a.ShipmentId, b.SizeOptionNo, a.SellingPrice, a.ShippedQty, b.SizeDesc  , a.NetFOBPrice
          FROM ShipmentDetail AS a
          INNER JOIN SizeOption AS b ON b.SizeOptionId = a.SizeOptionId and a.Status = 1
          WHERE a.ShipmentId = @ShipmentId AND a.ShippedQty <> 0
          ) AS x
          FULL OUTER JOIN
          (
          SELECT c.ShipmentId, d.OptionNo, d.Price, d.Qty, e.OptionDesc
          FROM ILSOrderRef AS c
          INNER JOIN ILSInvoiceDetail AS d ON c.OrderRefId = d.OrderRefId
          INNER JOIN ILSPackingListDetail e ON d.OrderRefId = e.OrderRefId AND d.OptionNo = e.OptionNo
          WHERE c.ShipmentId = @ShipmentId AND d.Qty <> 0
          ) AS y ON x.SizeOptionNo = y.OptionNo 
          ORDER BY 1
          ]]>
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSUnitPriceMatrix" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSQCCApprovalApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSQCCApproval" type="Text">
        <commandText>
          /*
          SELECT c.OrderRefId, c.ShipmentId,
          a.CompletedTime, CASE WHEN a.IsFactoryInspection = 1 THEN a.ArrivingTime ELSE a.StartTime END AS StartTime,
          a.ContractId, MAX(a.InspectionId) AS InspectionId,
          (SELECT CASE WHEN IsPass = 1 THEN '05' ELSE '06' END FROM [NS-DB01].QCIS.dbo.Inspection WHERE ContractId = a.ContractId AND InspectionId = MAX(a.InspectionId) AND Status = 1) AS Status
          FROM [NS-DB01].QCIS.dbo.Inspection a
          INNER JOIN [NS-DB01].QCIS.dbo.Contract b ON a.ContractId = b.ContractId AND a.Status = 1 AND b.Status = 1 AND a.IsSentToILS = 1 AND a.IsPass IN (0,1)
          INNER JOIN ILSOrderRef c ON b.ContractNo = c.ContractNo AND b.UKDeliveryNo = c.DeliveryNo
          GROUP BY
          c.OrderRefId, c.ShipmentId,
          a.CompletedTime, CASE WHEN a.IsFactoryInspection = 1 THEN a.ArrivingTime ELSE a.StartTime END,
          a.ContractId
          */

          SELECT  x.OrderRefId
          , x.ShipmentId
          , MAX(y.CompletedTime) AS CompletedTime
          , MAX(CASE WHEN y.IsFactoryInspection = 1 THEN y.ArrivingTime ELSE y.StartTime END) AS StartTime
          , x.ContractId
          , MAX(y.InspectionId) AS InspectionId
          , (SELECT CASE WHEN IsPass = 1 THEN '05' ELSE '06' END FROM [NS-DB01].QCIS.dbo.Inspection WHERE ContractId = x.ContractId AND InspectionId = MAX(y.InspectionId) AND Status = 1) AS Status
          FROM
          (
          SELECT  c.OrderRefId
          , c.ShipmentId
          , MAX(a.ContractId) AS ContractId
          FROM [NS-DB01].QCIS.dbo.Inspection a
          INNER JOIN [NS-DB01].QCIS.dbo.Contract b ON a.ContractId = b.ContractId AND a.Status = 1 AND b.Status = 1 AND a.IsSentToILS = 1 AND a.IsPass IN (0,1)
          INNER JOIN ILSOrderRef c ON b.ContractNo = c.ContractNo AND b.UKDeliveryNo = c.DeliveryNo
          GROUP BY c.OrderRefId, c.ShipmentId
          ) x
          INNER JOIN [NS-DB01].QCIS.dbo.Inspection y ON x.ContractId = y.ContractId AND y.Status = 1
          INNER JOIN ILSOrderRef z ON x.OrderRefId = z.OrderRefId
          GROUP BY x.OrderRefId, x.ShipmentId, x.ContractId
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSQCCApproval" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSMessageResultApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSMessageResultByKey" type="Text">
        <commandText>
          SELECT * FROM ILSMessageResult WHERE FileNo = @FileNo AND OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="FileNo" name="@FileNo" type="varchar" direction="Input" />
          <param key="OrderRefId" name="@OrderRefId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSMessageResult" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSErrorApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSErrorByKey" type="Text">
        <commandText>
          SELECT * FROM ILSError WHERE ErrorNo = @ErrorNo
        </commandText>
        <parameters>
          <param key="ErrorNo" name="@ErrorNo" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSError" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="ILSMonthEndLogApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSMonthEndLogByKey" type="Text">
        <commandText>
          SELECT * FROM ILSMonthEndLog WHERE FileNo = @FileNo AND OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="FileNo" name="@FileNo" type="varchar" direction="Input" />
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSMonthEndLog" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ILSMonthEndShipmentApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetILSMonthEndShipmentByKey" type="Text">
        <commandText>
          SELECT * FROM ILSMonthEndShipment WHERE  OrderRefId = @OrderRefId
        </commandText>
        <parameters>
          <param key="OrderRefId" name="@OrderRefId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ILSMonthEndShipment" />
    </tableMappings>
  </dataSetAdapter>

</dataOperations>