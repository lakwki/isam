<?xml version="1.0" encoding="utf-8" ?>
<dataOperations dataSource="isam">
  <dataSetAdapter name="CFNonTradeApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetElectricityConsumption" type="Text">
        <commandText>
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, SUM(a.NoOfUnitConsumed) AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 1
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4102301', '4102303')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId AND c.UtilityProviderTypeId = 1
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetWaterConsumption" type="Text">
        <commandText>
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, ISNULL(SUM(a.NoOfUnitConsumed), 0) *  0.00378541178 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 2
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4102301', '4102303')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId AND c.UtilityProviderTypeId = 2
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId IN (3, 9)
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4102301', '4102303')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId AND c.UtilityProviderTypeId = 2
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, ISNULL(SUM(a.NoOfUnitConsumed), 0) / 1000.0 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 8
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4102301', '4102303')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId AND c.UtilityProviderTypeId = 2
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetCompanyPetrolMileage" type="Text">
        <commandText>
          <![CDATA[
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 
          'Mile' as Unit, ISNULL(SUM(a.NoOfUnitConsumed),0) NoOfUnitConsumed, 
          ISNULL(SUM(a.NoOfUnitConsumed), 0) *  0.62137119 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 5 AND a.FuelTypeId = 1
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4104312', '4104336')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 
          'Litre' as Unit, ISNULL(SUM(a.NoOfUnitConsumed),0) NoOfUnitConsumed, 
          ISNULL(SUM(a.NoOfUnitConsumed), 0) *  10 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 8 AND a.FuelTypeId = 1
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4104312', '4104336')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 
          'Kilometer' as Unit, ISNULL(SUM(a.NoOfUnitConsumed),0) NoOfUnitConsumed, 
          ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 6  AND a.FuelTypeId = 1
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4104312', '4104336')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId

          -- AND Raymond Info From TEMS

          UNION ALL
          SELECT 'TEMS' AS Type, o.OfficeId, CONVERT(varchar, c.ClaimId) AS InvoiceNo, c.PaymentDate AS InvoiceDate, ui.DisplayName AS PartyName, z.Description as Unit, ei.Distance AS NoOfUnitConsumed,
          (ei.Distance * case ei.DistanceUnit when 1 then 1 when 2 then 0.62137119 when 3 then 10 else 0 end) as NoOfUnit
          from [NS-DB03].ECS.dbo.Claim c
          inner join [NS-DB03].ECS.dbo.ClaimLocation cl on c.ClaimId = cl.ClaimId
          inner join [NS-DB03].ECS.dbo.ExpenseItem ei on cl.ClaimLocationId = ei.ClaimLocationId and (ei.ExpenseTypeId = 17)
          inner join nsldb..AccountFinancialCalender fc on c.FromDate between fc.StartDate and fc.EndDate and fc.AppId = 1
          inner join nsldb..UserInfo ui on c.ClaimantId = ui.UserId
          inner join nsldb..Office o on c.OfficeId = o.OfficeId
          inner join [NS-DB03].ECS.dbo.distanceunit z on ei.DistanceUnit = z.DistanceUnitId
          where 1=1
          and not c.WorkflowStatus in (1, 3, 5, 9)
          and fc.BudgetYear = @FiscalYear
          and fc.Period = @FiscalPeriod
          and (c.OfficeId = @OfficeId or @OfficeId = -1)
          and (ei.OwnerTypeId = 1)
          and (ei.FuelTypeId = 1)
          and (
          (1 = 1 and c.WorkflowStatus in (7, 10))
          or (1 = 0 and not c.WorkflowStatus in (7, 10))
          or (1 = -1)
          )
          and ei.Distance <> 0

          union ALL

          SELECT 'TEMS' AS Type, o.OfficeId, CONVERT(varchar, c.LocalClaimId) AS InvoiceNo, c.PaymentDate AS InvoiceDate, ui.DisplayName AS PartyName, z.Description as Unit, ei.Distance AS NoOfUnitConsumed,
          (ei.Distance * case ei.DistanceUnit when 1 then 1 when 2 then 0.62137119 when 3 then 10 else 0 end) as NoOfUnit
          from [NS-DB03].ECS.dbo.LocalClaim c
          inner join [NS-DB03].ECS.dbo.LocalExpenseItem ei on c.LocalClaimId = ei.LocalClaimId and (ei.ExpenseTypeId = 17)
          inner join nsldb..AccountFinancialCalender fc on ei.FromDate between fc.StartDate and fc.EndDate and fc.AppId = 1
          inner join nsldb..UserInfo ui on c.ClaimantId = ui.UserId
          inner join nsldb..Office o on c.OfficeId = o.OfficeId
          inner join [NS-DB03].ECS.dbo.distanceunit z on ei.DistanceUnit = z.DistanceUnitId
          where 1=1
          and not c.WorkflowStatus in (1, 3, 5, 9)
          and fc.BudgetYear = @FiscalYear
          and fc.Period = @FiscalPeriod
          and (c.OfficeId = @OfficeId or @OfficeId = -1)
          and (ei.OwnerTypeId = 1)
          and (ei.FuelTypeId = 1)
          and (
          (1 = 1 and c.WorkflowStatus in (7, 10))
          or (1 = 0 and not c.WorkflowStatus in (7, 10))
          or (1 = -1)
          )
          and ei.Distance <> 0

          order by 1, 2
          ]]>

        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetCompanyDieselMileage" type="Text">
        <commandText>
          <![CDATA[
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 
          'Mile' as unit, ISNULL(SUM(a.NoOfUnitConsumed),0) NoOfUnitConsumed, 
          ISNULL(SUM(a.NoOfUnitConsumed), 0) *  0.62137119 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 5 AND a.FuelTypeId = 2
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4104312', '4104336')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 
          'Litre' as unit, ISNULL(SUM(a.NoOfUnitConsumed),0) NoOfUnitConsumed, 
          ISNULL(SUM(a.NoOfUnitConsumed), 0) *  10 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 8 AND a.FuelTypeId = 2
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4104312', '4104336')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 
          'Kilometer' as unit, ISNULL(SUM(a.NoOfUnitConsumed),0) NoOfUnitConsumed, 
          ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 6  AND a.FuelTypeId = 2
          INNER JOIN NTExpenseType d ON a.ExpenseTypeId = d.ExpenseTypeId AND d.SunAccountCode IN ('4104312', '4104336')
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 'Mile' AS Unit, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnitConsumed, ISNULL(SUM(a.NoOfUnitConsumed), 0) *  0.62137119 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 5 AND a.FuelTypeId = 2
          INNER JOIN NTExpenseType z ON z.ExpenseTypeId = a.ExpenseTypeId AND z.SunAccountCode = '4104310'
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 'Litre' AS Unit, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnitConsumed, ISNULL(SUM(a.NoOfUnitConsumed), 0) *  10 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 8 AND a.FuelTypeId = 2
          INNER JOIN NTExpenseType z ON z.ExpenseTypeId = a.ExpenseTypeId AND z.SunAccountCode = '4104310'
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 'Kilometer' AS Unit, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnitConsumed, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 6 AND a.FuelTypeId = 2
          INNER JOIN NTExpenseType z ON z.ExpenseTypeId = a.ExpenseTypeId AND z.SunAccountCode = '4104310'
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId

          -- AND Raymond Info From TEMS

          UNION ALL
          SELECT 'TEMS' AS Type, o.OfficeId, CONVERT(varchar, c.ClaimId) AS InvoiceNo, c.PaymentDate AS InvoiceDate, ui.DisplayName AS PartyName, z.Description as Unit, ei.Distance AS NoOfUnitConsumed,
          (ei.Distance * case ei.DistanceUnit when 1 then 1 when 2 then 0.62137119 when 3 then 10 else 0 end) as NoOfUnit
          from [NS-DB03].ECS.dbo.Claim c
          inner join [NS-DB03].ECS.dbo.ClaimLocation cl on c.ClaimId = cl.ClaimId
          inner join [NS-DB03].ECS.dbo.ExpenseItem ei on cl.ClaimLocationId = ei.ClaimLocationId and (ei.ExpenseTypeId = 17)
          inner join nsldb..AccountFinancialCalender fc on c.FromDate between fc.StartDate and fc.EndDate and fc.AppId = 1
          inner join nsldb..UserInfo ui on c.ClaimantId = ui.UserId
          inner join nsldb..Office o on c.OfficeId = o.OfficeId
          inner join [NS-DB03].ECS.dbo.distanceunit z on ei.DistanceUnit = z.DistanceUnitId
          where 1=1
          and not c.WorkflowStatus in (1, 3, 5, 9)
          and fc.BudgetYear = @FiscalYear
          and fc.Period = @FiscalPeriod
          and (c.OfficeId = @OfficeId or @OfficeId = -1)
          and (ei.OwnerTypeId = 1)
          and (ei.FuelTypeId = 2)
          and (
          (1 = 1 and c.WorkflowStatus in (7, 10))
          or (1 = 0 and not c.WorkflowStatus in (7, 10))
          or (1 = -1)
          )
          and ei.Distance <> 0

          union ALL

          SELECT 'TEMS' AS Type, o.OfficeId, CONVERT(varchar, c.LocalClaimId) AS InvoiceNo, c.PaymentDate AS InvoiceDate, ui.DisplayName AS PartyName, z.Description as Unit, ei.Distance AS NoOfUnitConsumed,
          (ei.Distance * case ei.DistanceUnit when 1 then 1 when 2 then 0.62137119 when 3 then 10 else 0 end) as NoOfUnit
          from [NS-DB03].ECS.dbo.LocalClaim c
          inner join [NS-DB03].ECS.dbo.LocalExpenseItem ei on c.LocalClaimId = ei.LocalClaimId and (ei.ExpenseTypeId = 17)
          inner join nsldb..AccountFinancialCalender fc on ei.FromDate between fc.StartDate and fc.EndDate and fc.AppId = 1
          inner join nsldb..UserInfo ui on c.ClaimantId = ui.UserId
          inner join nsldb..Office o on c.OfficeId = o.OfficeId
          inner join [NS-DB03].ECS.dbo.distanceunit z on ei.DistanceUnit = z.DistanceUnitId
          where 1=1
          and not c.WorkflowStatus in (1, 3, 5, 9)
          and fc.BudgetYear = @FiscalYear
          and fc.Period = @FiscalPeriod
          and (c.OfficeId = @OfficeId or @OfficeId = -1)
          and (ei.OwnerTypeId = 1)
          and (ei.FuelTypeId = 2)
          and (
          (1 = 1 and c.WorkflowStatus in (7, 10))
          or (1 = 0 and not c.WorkflowStatus in (7, 10))
          or (1 = -1)
          )
          and ei.Distance <> 0

          order by 1, 2
          ]]>
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetCarRental" type="Text">
        <commandText>
          <![CDATA[
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 'Mile' AS Unit, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnitConsumed, ISNULL(SUM(a.NoOfUnitConsumed), 0) *  0.62137119 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 5 AND a.FuelTypeId = 1
          INNER JOIN NTExpenseType z ON z.ExpenseTypeId = a.ExpenseTypeId AND z.SunAccountCode = '4104310'
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 'Litre' AS Unit, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnitConsumed, ISNULL(SUM(a.NoOfUnitConsumed), 0) *  10 AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 8 AND a.FuelTypeId = 1
          INNER JOIN NTExpenseType z ON z.ExpenseTypeId = a.ExpenseTypeId AND z.SunAccountCode = '4104310'
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId
          UNION ALL
          SELECT 'Non-Trade' AS Type, b.OfficeId, b.InvoiceNo, b.InvoiceDate, c.VendorName AS PartyName, 'Kilometer' AS Unit, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnitConsumed, ISNULL(SUM(a.NoOfUnitConsumed), 0) AS NoOfUnit FROM NTInvoiceDetail a
          INNER JOIN NTInvoice b ON a.InvoiceId = b.InvoiceId AND a.Status = 1
          AND (@OfficeId = -1 OR b.OfficeId = @OfficeId)
          AND b.Status = 1 AND b.IsSUNInterfaced = 1 AND b.FiscalYear = @FiscalYear AND b.FiscalPeriod = @FiscalPeriod
          AND a.ConsumptionUnitId = 6 AND a.FuelTypeId = 1
          INNER JOIN NTExpenseType z ON z.ExpenseTypeId = a.ExpenseTypeId AND z.SunAccountCode = '4104310'
          INNER JOIN NTVendor c ON b.NTVendorId = c.NTVendorId
          GROUP BY b.InvoiceNo, b.InvoiceDate, c.VendorName, b.OfficeId

          -- AND TEMS

          UNION ALL
          SELECT 'TEMS' AS Type, o.OfficeId, CONVERT(varchar, c.ClaimId) AS InvoiceNo, c.PaymentDate AS InvoiceDate, ui.DisplayName AS PartyName, z.Description as Unit, ei.Distance AS NoOfUnitConsumed,
          (ei.Distance * case ei.DistanceUnit when 1 then 1 when 2 then 0.62137119 else 0 end) as NoOfUnit
          from [NS-DB03].ECS.dbo.Claim c
          inner join [NS-DB03].ECS.dbo.ClaimLocation cl on c.ClaimId = cl.ClaimId
          inner join [NS-DB03].ECS.dbo.ExpenseItem ei on cl.ClaimLocationId = ei.ClaimLocationId and (ei.ExpenseTypeId = 16)
          inner join nsldb..AccountFinancialCalender fc on c.FromDate between fc.StartDate and fc.EndDate and fc.AppId = 1
          inner join nsldb..UserInfo ui on c.ClaimantId = ui.UserId
          inner join nsldb..Office o on c.OfficeId = o.OfficeId
          inner join [NS-DB03].ECS.dbo.distanceunit z on ei.DistanceUnit = z.DistanceUnitId
          where 1=1
          and not c.WorkflowStatus in (1, 3, 5, 9)
          and fc.BudgetYear = @FiscalYear
          and fc.Period = @FiscalPeriod
          and (c.OfficeId = @OfficeId or @OfficeId = -1)
          and (ei.OwnerTypeId = -1)
          and (ei.FuelTypeId = -1)
          and (
          (1 = 1 and c.WorkflowStatus in (7, 10))
          or (1 = 0 and not c.WorkflowStatus in (7, 10))
          or (1 = -1)
          )
          and ei.Distance <> 0

          UNION ALL
          SELECT 'TEMS' AS Type, o.OfficeId, CONVERT(varchar, c.ClaimId) AS InvoiceNo, c.PaymentDate AS InvoiceDate, ui.DisplayName AS PartyName, z.Description as Unit, ei.Distance AS NoOfUnitConsumed,
          (ei.Distance * case ei.DistanceUnit when 1 then 1 when 2 then 0.62137119 else 0 end) as NoOfUnit
          from [NS-DB03].ECS.dbo.Claim c
          inner join [NS-DB03].ECS.dbo.ClaimLocation cl on c.ClaimId = cl.ClaimId
          inner join [NS-DB03].ECS.dbo.ExpenseItem ei on cl.ClaimLocationId = ei.ClaimLocationId and (ei.ExpenseTypeId = 16)
          inner join nsldb..AccountFinancialCalender fc on c.FromDate between fc.StartDate and fc.EndDate and fc.AppId = 1
          inner join nsldb..UserInfo ui on c.ClaimantId = ui.UserId
          inner join nsldb..Office o on c.OfficeId = o.OfficeId
          inner join [NS-DB03].ECS.dbo.distanceunit z on ei.DistanceUnit = z.DistanceUnitId
          where 1=1
          and not c.WorkflowStatus in (1, 3, 5, 9)
          and fc.BudgetYear = @FiscalYear
          and fc.Period = @FiscalPeriod
          and (c.OfficeId = @OfficeId or @OfficeId = -1)
          and (ei.OwnerTypeId = -1)
          and (ei.FuelTypeId = -1)
          and (
          (1 = 1 and c.WorkflowStatus in (7, 10))
          or (1 = 0 and not c.WorkflowStatus in (7, 10))
          or (1 = -1)
          )
          and ei.Distance <> 0
          ]]>
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetAirTravelLong" type="Text">
        <commandText>
          EXEC [NS-DB03].ECS.dbo.sp_GetTravelHaulType @FiscalYear, @FiscalPeriod,  @OfficeId, 2, 1 --@IsPaid
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetAirTravelShort" type="Text">
        <commandText>
          EXEC [NS-DB03].ECS.dbo.sp_GetTravelHaulType @FiscalYear, @FiscalPeriod,  @OfficeId, 1, 1 --@IsPaid
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetTaxi" type="Text">
        <commandText>
          EXEC [NS-DB03].ECS.dbo.sp_GetTravelHaulTransType @FiscalYear, @FiscalPeriod, @OfficeId, -1, 'taxi', 1 --@IsPaid
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetBus" type="Text">
        <commandText>
          EXEC [NS-DB03].ECS.dbo.sp_GetTravelHaulTransType @FiscalYear, @FiscalPeriod, @OfficeId, -1, 'bus', 1 --@IsPaid
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetTrain" type="Text">
        <commandText>
          EXEC [NS-DB03].ECS.dbo.sp_GetTravelHaulTransType @FiscalYear, @FiscalPeriod, @OfficeId, -1, 'train', 1 --@IsPaid
        </commandText>
        <parameters>
          <param key="FiscalYear" name="@FiscalYear" type="Int" direction="Input" />
          <param key="FiscalPeriod" name="@FiscalPeriod" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
  </dataSetAdapter>

</dataOperations>
