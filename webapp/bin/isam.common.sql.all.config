<?xml version="1.0" encoding="utf-8" ?>
<dataOperations dataSource="isam">

  <dataSetAdapter name="AirFreightPaymentTypeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetAirFreightPaymentTypeList" type="Text">
        <commandText>
          SELECT * FROM AirFreightPaymentType WITH (NOLOCK) WHERE Status = 1 ORDER BY AirFreightPaymentTypeDesc
        </commandText>
      </dataCommand>

      <dataCommand name="GetAirFreightPaymentTypeByKey" type="Text">
        <commandText>
          SELECT * FROM AirFreightPaymentType WITH (NOLOCK) WHERE AirFreightPaymentTypeId = @AirFreightPaymentTypeId
        </commandText>
        <parameters>
          <param key="AirFreightPaymentTypeId" name="@AirFreightPaymentTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="AirFreightPaymentType" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="UKDiscountReasonApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetUKDiscountReasonList" type="Text">
        <commandText>
          SELECT * FROM UKDiscountReason WITH (NOLOCK) WHERE Status = 1 ORDER BY UKDiscountReason
        </commandText>
      </dataCommand>
      <dataCommand name="GetUKDiscountReasonByKey" type="Text">
        <commandText>
          SELECT * FROM UKDiscountReason WITH (NOLOCK) WHERE UKDiscountReasonId = @UKDiscountReasonId
        </commandText>
        <parameters>
          <param key="UKDiscountReasonId" name="@UKDiscountReasonId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UKDiscountReason" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="CustomerTypeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCustomerTypeList" type="Text">
        <commandText>
          SELECT * FROM CustomerType WITH (NOLOCK) WHERE Status = 1 ORDER BY CustomerTypeDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetCustomerTypeByKey" type="Text">
        <commandText>
          SELECT * FROM CustomerType WITH (NOLOCK) WHERE CustomerTypeId = @CustomerTypeId
        </commandText>
        <parameters>
          <param key="CustomerTypeId" name="@CustomerTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="CustomerType" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="StaffApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetStaffList" type="Text">
        <commandText>
          SELECT * FROM [NS-DB04].NSLPortal.dbo.StaffDirectories
          WHERE (StaffLastName + ' ' + StaffFirstName LIKE '%' + @Name + '%'
          OR StaffFirstName + ' ' + StaffLastName LIKE '%' + @Name + '%')
          ORDER BY StaffFirstName
        </commandText>
        <parameters>
          <param key="Name" name="@Name" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="StaffDirectories" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="OtherCostTypeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetOtherCostTypeList" type="Text">
        <commandText>
          SELECT * FROM OtherCostType WITH (NOLOCK) WHERE Status = 1 ORDER BY OtherCostTypeDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetOtherCostTypeByKey" type="Text">
        <commandText>
          SELECT * FROM OtherCostType WITH (NOLOCK) WHERE OtherCostTypeId = @OtherCostTypeId
        </commandText>
        <parameters>
          <param key="OtherCostTypeId" name="@OtherCostTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="OtherCostType" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="PackingMethodApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetPackingMethodList" type="Text">
        <commandText>
          SELECT * FROM PackingMethod WITH (NOLOCK) WHERE Status = 1 ORDER BY PackingMethodDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetPackingMethodByKey" type="Text">
        <commandText>
          SELECT * FROM PackingMethod WITH (NOLOCK) WHERE PackingMethodId = @PackingMethodId
        </commandText>
        <parameters>
          <param key="PackingMethodId" name="@PackingMethodId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="PackingMethod" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="PackingUnitApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetPackingUnitList" type="Text">
        <commandText>
          SELECT * FROM PackingUnit WITH (NOLOCK) WHERE Status = 1 ORDER BY PackingUnitDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetPackingUnitByKey" type="Text">
        <commandText>
          SELECT * FROM PackingUnit WITH (NOLOCK) WHERE PackingUnitId = @PackingUnitId
        </commandText>
        <parameters>
          <param key="PackingUnitId" name="@PackingUnitId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="PackingUnit" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="PurchaseLocationApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetPurchaseLocationList" type="Text">
        <commandText>
          SELECT * FROM PurchaseLocation WITH (NOLOCK) WHERE Status = 1 ORDER BY PurchaseLocationDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetPurchaseLocationByKey" type="Text">
        <commandText>
          SELECT * FROM PurchaseLocation WITH (NOLOCK) WHERE PurchaseLocationId = @PurchaseLocationId
        </commandText>
        <parameters>
          <param key="PurchaseLocationId" name="@PurchaseLocationId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="PurchaseLocation" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ShipmentMethodApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetShipmentMethodList" type="Text">
        <commandText>
          SELECT * FROM ShipmentMethod WITH (NOLOCK) WHERE Status = 1 ORDER BY ShipmentMethodDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetShipmentMethodByKey" type="Text">
        <commandText>
          SELECT * FROM ShipmentMethod WITH (NOLOCK) WHERE ShipmentMethodId = @ShipmentMethodId
        </commandText>
        <parameters>
          <param key="ShipmentMethodId" name="@ShipmentMethodId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ShipmentMethod" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ShipmentCountryApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetShipmentCountryList" type="Text">
        <commandText>
          SELECT * FROM ShipmentCountry WITH (NOLOCK) WHERE Status = 1 ORDER BY ShipmentCountryDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetShipmentCountryByKey" type="Text">
        <commandText>
          SELECT * FROM ShipmentCountry WITH (NOLOCK) WHERE ShipmentCountryId = @ShipmentCountryId
        </commandText>
        <parameters>
          <param key="ShipmentCountryId" name="@ShipmentCountryId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ShipmentCountry" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ShipmentPortApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetShipmentPortByShipmentCountryId" type="Text">
        <commandText>
          SELECT * FROM ShipmentPort WITH (NOLOCK)
          WHERE Status = 1 AND
          (@ShipmentCountryId=-1 OR ShipmentCountryId=@ShipmentCountryId)
          ORDER BY ShipmentPortDesc
        </commandText>
        <parameters>
          <param key="ShipmentCountryId" name="@ShipmentCountryId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetShipmentPortByKey" type="Text">
        <commandText>
          SELECT * FROM ShipmentPort WITH (NOLOCK) WHERE ShipmentPortId = @ShipmentPortId
        </commandText>
        <parameters>
          <param key="ShipmentPortId" name="@ShipmentPortId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetShipmentPortList" type="Text">
        <commandText>
          SELECT * FROM ShipmentPort WITH (NOLOCK)
          WHERE Status = 1
          ORDER BY ShipmentPortDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetShipmentPortByCode" type="Text">
        <commandText>
          SELECT * FROM ShipmentPort WITH (NOLOCK) WHERE
          OfficialCode = @OfficialCode
          AND Status = 1
        </commandText>
        <parameters>
          <param key="OfficialCode" name="@OfficialCode"  type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ShipmentPort" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="TermOfPurchaseApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetTermOfPurchaseList" type="Text">
        <commandText>
          SELECT * FROM TermOfPurchase WITH (NOLOCK) WHERE Status = 1 ORDER BY TermOfPurchaseDesc
        </commandText>
      </dataCommand>
      <dataCommand name="GetTermOfPurchaseByKey" type="Text">
        <commandText>
          SELECT * FROM TermOfPurchase WITH (NOLOCK) WHERE TermOfPurchaseId = @TermOfPurchaseId
        </commandText>
        <parameters>
          <param key="TermOfPurchaseId" name="@TermOfPurchaseId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="TermOfPurchase" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="QuotaCategoryApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetQuotaCategoryList" type="Text">
        <commandText>
          SELECT * FROM QuotaCategory WITH (NOLOCK) WHERE Status = 1
        </commandText>
      </dataCommand>
      <dataCommand name="GetQuotaCategoryByKey" type="Text">
        <commandText>
          SELECT * FROM QuotaCategory WITH (NOLOCK) WHERE QuotaCategoryId = @QuotaCategoryId
        </commandText>
        <parameters>
          <param key="QuotaCategoryId" name="@QuotaCategoryId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="QuotaCategory" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="QuotaCategoryGroupApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetQuotaCategoryGroupList" type="Text">
        <commandText>
          SELECT * FROM QuotaCategoryGroup WITH (NOLOCK) WHERE Status = 1 ORDER BY QuotaCategoryGroupOPSKey
        </commandText>
      </dataCommand>
      <dataCommand name="GetQuotaCategoryGroupByKey" type="Text">
        <commandText>
          SELECT * FROM QuotaCategoryGroup WITH (NOLOCK) WHERE QuotaCategoryGroupId = @QuotaCategoryGroupId
        </commandText>
        <parameters>
          <param key="QuotaCategoryGroupId" name="@QuotaCategoryGroupId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="QuotaCategoryGroup" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="StandardMSCourierChargeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetStandardMSCourierCharge" type="Text">
        <commandText>
          SELECT * FROM StandardMSCourierCharge WHERE Status = 1
          AND OfficeId = @OfficeId
          AND DeptId = @DeptId
          AND CurrencyId = @CurrencyId
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="DeptId" name="@DeptId" type="Int" direction="Input" />
          <param key="CurrencyId" name="@CurrencyId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="StandardMSCourierCharge" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="CustomerApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCustomerByKey" type="Text">
        <commandText>
          SELECT * FROM Customer WHERE CustomerId = @CustomerId
        </commandText>
        <parameters>
          <param key="CustomerId" name="@CustomerId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetCustomerList" type="Text">
        <commandText>
          SELECT * FROM Customer WITH (NOLOCK) WHERE (@IsPaymentRequired = -1 OR IsPaymentRequired = @IsPaymentRequired) and  Status = 1
        </commandText>
        <parameters>
          <param key="IsPaymentRequired" name="@IsPaymentRequired" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Customer" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="TradingAgencyApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetTradingAgencyList" type="Text">
        <commandText>
          SELECT * FROM TradingAgency
        </commandText>
      </dataCommand>
      <dataCommand name="GetTradingAgencyByKey" type="Text">
        <commandText>
          SELECT * FROM TradingAgency WHERE TradingAgencyId = @TradingAgencyId
        </commandText>
        <parameters>
          <param key="TradingAgencyId" name="@TradingAgencyId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="TradingAgency" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="CustomerDestinationApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCustomerDestinationList" type="Text">
        <commandText>
          SELECT * FROM CustomerDestination WHERE Status = 1
        </commandText>
      </dataCommand>
      <dataCommand name="GetCustomerDestinationByCustomerId" type="Text">
        <commandText>
          SELECT * FROM CustomerDestination WITH (NOLOCK)
          WHERE (CustomerId = @CustomerId or @CustomerId = -1)
          AND Status = 1
        </commandText>
        <parameters>
          <param key="CustomerId" name="@CustomerId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetCustomerDestinationByKey" type="Text">
        <commandText>
          SELECT * FROM CustomerDestination WHERE CustomerDestinationId = @CustomerDestinationId
        </commandText>
        <parameters>
          <param key="CustomerDestinationId" name="@CustomerDestinationId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetCustomerDestinationByShipmentId" type="Text">
        <commandText>
          SELECT cust.* FROM CustomerDestination cust inner join shipment s on cust.CustomerDestinationId=s.CustomerDestinationId WHERE s.status=1 and ShipmentId = @ShipmentId
        </commandText>
        <parameters>
          <param key="ShipmentId" name="@ShipmentId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="CustomerDestination" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ExchangeRateApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetExchangeRate" type="Text">
        <commandText>
          SELECT * FROM ExchangeRate WITH (NOLOCK) WHERE ExchangeRateTypeId = @ExchangeRateTypeId
          AND CurrencyId = @CurrencyId AND (@EffectiveTypeId = -1 OR EffectiveTypeId = @EffectiveTypeId)
          AND @EffectiveDate BETWEEN EffectiveDateFrom AND EffectiveDateTo
        </commandText>
        <parameters>
          <param key="ExchangeRateTypeId" name="@ExchangeRateTypeId" type="Int" direction="Input" />
          <param key="CurrencyId" name="@CurrencyId" type="Int" direction="Input" />
          <param key="EffectiveTypeId" name="@EffectiveTypeId" type="Int" direction="Input" />
          <param key="EffectiveDate" name="@EffectiveDate" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetCurrentExchangeRate" type="Text">
        <commandText>
          SELECT * FROM ExchangeRate WITH (NOLOCK) WHERE ExchangeRateTypeId = @ExchangeRateTypeId
          AND CurrencyId = @CurrencyId AND EffectiveTypeId = 0
        </commandText>
        <parameters>
          <param key="ExchangeRateTypeId" name="@ExchangeRateTypeId" type="Int" direction="Input" />
          <param key="CurrencyId" name="@CurrencyId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetExchangeRateByDateLatest" type="Text">
        <commandText>
          <![CDATA[
					SELECT TOP 1 *
					FROM ExchangeRate WITH (NOLOCK)
					WHERE CurrencyId = @CurrencyId
						AND ExchangeRateTypeId = @ExchangeRateTypeId
						AND EffectiveDateFrom <= @EffectiveDate
						AND Status = 1
					ORDER BY EffectiveDateFrom DESC
					]]>
        </commandText>
        <parameters>
          <param key="CurrencyId" name="@CurrencyId" type="int" direction="Input" />
          <param key="ExchangeRateTypeId" name="@ExchangeRateTypeId" type="int" direction="Input" />
          <param key="EffectiveDate" name="@EffectiveDate" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ExchangeRate" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ThirdPartyAgencyApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetThirdPartyAgencyList" type="Text">
        <commandText>
          SELECT * FROM ThirdPartyAgency WITH (NOLOCK)
          WHERE Status = 1
          ORDER BY ThirdPartyAgencyId
        </commandText>
      </dataCommand>
      <dataCommand name="GetThirdPartyAgencyKey" type="Text">
        <commandText>
          SELECT * FROM ThirdPartyAgency WITH (NOLOCK)
          WHERE ThirdPartyAgencyId = @ThirdPartyAgencyId
        </commandText>
        <parameters>
          <param key="ThirdPartyAgencyId" name="@ThirdPartyAgencyId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ThirdPartyAgency" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="ReportUserRoleAccessApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetReportUserRoleAccessList" type="Text">
        <commandText>
          SELECT * FROM ReportUserRoleAccess WITH (NOLOCK)
          WHERE ReportName = @ReportName
          AND UserId = @UserId
        </commandText>
        <parameters>
          <param key="ReportName" name="@ReportName" type="varchar" direction="Input" />
          <param key="UserId" name="@UserId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ReportUserRoleAccess" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="GetCartonTypeApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCartonTypeList" type="Text">
        <commandText>
          SELECT * FROM NSLDB..CartonType WITH (NOLOCK)
          WHERE
          Status = 1 and
          (@PackingMethodId=-1 or PackingMethodId=@PackingMethodId)
          ORDER BY CartonTypeId
        </commandText>
        <parameters>
          <param key="PackingMethodId" name="@PackingMethodId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetCartonTypeByKey" type="Text">
        <commandText>
          SELECT * FROM vw_CartonType WITH (NOLOCK) WHERE CartonTypeId = @CartonTypeId
        </commandText>
        <parameters>
          <param key="CartonTypeId" name="@CartonTypeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="CartonType" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="QuarterlyExchangeRateApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetQuarterlyExchangeRate" type="Text">
        <commandText>
          select * from QuarterlyExchangeRate
          where
          fromCurrencyId = @FromCurrencyId
          and toCurrencyId = @ToCurrencyId
          and @EffectiveDate between isnull(effectiveDateFrom, '1900-01-01')
          and isnull(effectiveDateTo, '9999-12-31')
          and status = 1
        </commandText>
        <parameters>
          <param key="FromCurrencyId" name="@FromCurrencyId" type="Int" direction="Input" />
          <param key="ToCurrencyId" name="@ToCurrencyId" type="Int" direction="Input" />
          <param key="EffectiveDate" name="@EffectiveDate" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="QuarterlyExchangeRate" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="UTurnOrderParameterApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetUTurnOrderParameter" type="Text">
        <commandText>
          select * from UTurnOrderParameter
          where
          ParameterTypeId = @ParameterTypeId
          and left(@EffectiveDate, 11) between isnull(effectiveDateFrom, '1900-01-01') and isnull(effectiveDateTo, '9999-12-31')
          and status = 1
        </commandText>
        <parameters>
          <param key="ParameterTypeId" name="@ParameterTypeId" type="Int" direction="Input" />
          <param key="EffectiveDate" name="@EffectiveDate" type="DateTime" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UTurnOrderParameter" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ReportOfficeGroupApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetReportOfficeGroupList" type="Text">
        <commandText>
          SELECT * FROM ReportOfficeGroup
        </commandText>
      </dataCommand>

      <dataCommand name="GetReportOfficeGroupByKey" type="Text">
        <commandText>
          SELECT * FROM ReportOfficeGroup WHERE OfficeGroupId = @OfficeGroupId
        </commandText>
        <parameters>
          <param key="OfficeGroupId" name="@OfficeGroupId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetReportOfficeGroupListByAccessibleOfficeIdList" type="Text">
        <commandText>
          SELECT * FROM ReportOfficeGroup WHERE OfficeGroupId NOT IN
          (SELECT a.OfficeGroupId FROM ReportOfficeGroup a INNER JOIN ReportOfficeGroupMapping b ON a.OfficeGroupId = b.OfficeGroupId
          WHERE b.OfficeId @OfficeIdList)
        </commandText>
        <parameters>
          <param key="OfficeIdList" name="@OfficeIdList" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ReportOfficeGroup" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="ReportOfficeGroupMappingApt" populateCommands="false">
    <selectCommand>

      <dataCommand name="GetReportOfficeGroupMappingByKey" type="Text">
        <commandText>
          SELECT * FROM ReportOfficeGroupMapping WHERE OfficeGroupId = @OfficeGroupId AND OfficeId = @OfficeId
        </commandText>
        <parameters>
          <param key="OfficeGroupId" name="@OfficeGroupId" type="Int" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetReportOfficeGroupMappingByGroupId" type="Text">
        <commandText>
          SELECT * FROM ReportOfficeGroupMapping WHERE OfficeGroupId = @OfficeGroupId
        </commandText>
        <parameters>
          <param key="OfficeGroupId" name="@OfficeGroupId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="ReportOfficeGroupMapping" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="BankApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetBankList" type="Text">
        <commandText>
          SELECT * FROM Bank WHERE Status = 1
        </commandText>
      </dataCommand>

      <dataCommand name="GetBankByKey" type="Text">
        <commandText>
          SELECT * FROM Bank WHERE BankId = @BankId
        </commandText>
        <parameters>
          <param key="BankId" name="@BankId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetBankListByVendorId" type="Text">
        <commandText>
          SELECT b.* FROM VendorBankMapping a INNER JOIN Bank b ON a.BankId = b.BankId
          AND a.Status = 1 AND b.Status = 1 AND a.VendorId = @VendorId
        </commandText>
        <parameters>
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxBankId" type="Text">
        <commandText>
          SELECT MAX(BankId) FROM Bank
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Bank" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="BankBranchApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetBankBranchListByBankId" type="Text">
        <commandText>
          SELECT * FROM BankBranch WHERE BankId = @BankId AND Status = 1
        </commandText>
        <parameters>
          <param key="BankId" name="@BankId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetBankBranchByKey" type="Text">
        <commandText>
          SELECT * FROM BankBranch WHERE BankBranchId = @BankBranchId
        </commandText>
        <parameters>
          <param key="BankBranchId" name="@BankBranchId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetBankBranchByVendorId" type="Text">
        <commandText>
          SELECT b.*
          FROM VendorBankMapping a
          INNER JOIN BankBranch b ON a.BankBranchId = b.BankBranchId
          AND b.Status = 1 AND a.Status = 1 AND a.VendorId = @VendorId
          INNER JOIN Bank c ON c.BankId = a.BankId and c.Status=1
        </commandText>
        <parameters>
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxBankBranchId" type="Text">
        <commandText>
          SELECT MAX(BankBranchId) FROM BankBranch
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="BankBranch" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="VendorBankMappingApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetVendorBankMappingByVendorId" type="Text">
        <commandText>
          SELECT * FROM VendorBankMapping
          WHERE VendorId = @VendorId
        </commandText>
        <parameters>
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>

  </dataSetAdapter>

  <dataSetAdapter name="SystemParameterApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetSystemParameterByKey" type="Text">
        <commandText>
          SELECT * FROM SystemParameter WHERE ParameterId = @ParameterId
        </commandText>
        <parameters>
          <param key="ParameterId" name="@ParameterId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetSystemParameterByName" type="Text">
        <commandText>
          SELECT * FROM SystemParameter WHERE ParameterName = @ParameterName
        </commandText>
        <parameters>
          <param key="ParameterName" name="@ParameterName" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="SystemParameter" />
    </tableMappings>
  </dataSetAdapter>


  <dataSetAdapter name="UKFinalDestinationApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetUKFinalDestinationByCode" type="Text">
        <commandText>
          select * from UKFinalDestination
          where
          UKFinalDestinationCode = @DestinationCode
          and status = 1
        </commandText>
        <parameters>
          <param key="DestinationCode" name="@DestinationCode" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="UKFinalDestination" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="CurrencyForExchangeRateApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetCurrencyListForExchangeRate" type="Text">
        <commandText>
          SELECT DISTINCT cur.* FROM ExchangeRate er
          INNER JOIN Currency cur ON cur.CurrencyId = er.CurrencyId
        </commandText >
      </dataCommand>
      <dataCommand name="GetEffectiveCurrencyList" type="Text">
        <commandText>
          SELECT	DISTINCT ccy.CurrencyId, ccy.CurrencyCode
          FROM	Currency AS ccy WITH (NOLOCK)
          INNER JOIN ExchangeRate AS ex WITH (NOLOCK) ON ccy.CurrencyId = ex.CurrencyId
          AND EffectiveDateTo > '2013-02-01'
          ORDER BY ccy.CurrencyCode
        </commandText>
      </dataCommand>
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="Currency" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="FileUploadApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetFileUploadByKey" type="Text">
        <commandText>
          SELECT * FROM FileUpload WHERE FileId = @FileId AND Status = 1
        </commandText>
        <parameters>
          <param key="FileId" name="@FileId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetFileUploadByClaimId" type="Text">
        <commandText>
          SELECT * FROM FileUpload WHERE ClaimId = @ClaimId AND Status = 1
        </commandText>
        <parameters>
          <param key="ClaimId" name="@ClaimId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxFileId" type="Text">
        <commandText>
          SELECT MAX(FileId) FROM FileUpload
        </commandText>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="FileUpload" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="FileUploadLogApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetFileUploadLogByKey" type="Text">
        <commandText>
          SELECT * FROM FileUploadLog WITH (NOLOCK) WHERE RecordId = @RecordId
        </commandText>
        <parameters>
          <param key="RecordId" name="@RecordId" type="int" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetFileUploadLogByCriteria" type="Text">
        <commandText>
          SELECT * FROM FileUploadLog WITH (NOLOCK)
          WHERE
          Status = 1 AND IsUploaded = 0
          AND (@UserId = -1 OR SubmittedBy = @UserId)
          AND (@FileTypeId = -1 OR FileTypeId = @FileTypeId)
          AND (@FileName = '' OR FileName = @FileName)
        </commandText>
        <parameters>
          <param key="UserId" name="@UserId" type="int" direction="Input" />
          <param key="FileTypeId" name="@FileTypeId" type="int" direction="Input" />
          <param key="FileName" name="@FileName" type="varchar" direction="Input" />
        </parameters>
      </dataCommand>
      <dataCommand name="GetMaxFileUploadLogId" type="Text">
        <commandText>
          SELECT MAX(RecordId) FROM FileUploadLog
        </commandText>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="FileUploadLog" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="GenericDataSummaryApt">
    <selectCommand>
      <dataCommand name="GetOutstandingAdvancePaymentByCurrency" type="Text">
        <commandText>
          SELECT * FROM dbo.fn_getOSAdvancePaymentByCurrency(@VendorId, @OfficeId)
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetOutstandingUKClaimByCurrency" type="Text">
        <commandText>
          SELECT * FROM dbo.fn_OSUKClaimByCurrency(@VendorId, @OfficeId)
        </commandText>
        <parameters>
          <param key="OfficeId" name="@OfficeId" type="Int" direction="Input" />
          <param key="VendorId" name="@VendorId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="GenericDataSummary" />
    </tableMappings>
  </dataSetAdapter>

</dataOperations>
