<?xml version="1.0" encoding="utf-8" ?>
<dataOperations dataSource="nsled">
  <dataSetAdapter name="NSledRangePlanApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetRangePlanByCriteria" type="Text">
        <commandText>
          <![CDATA[

          SELECT MAX(r.RangePlanId) AS RangePlanId, MAX(r.ItemNo) AS ItemNo, MAX(r.Description) AS Description, MAX(u.Name) AS ProductTeamName, MAX(r.SeasonId) AS SeasonId,
          MAX(CAST(ISNULL(r.ActualSaleSeasonId,'999') AS varchar) + '-' + CAST(ISNULL(r.ActualSaleSeasonSplitId ,'999') AS varchar)) AS ActualSaleSeason,
          MAX(CAST(ISNULL(r.ExpectedSaleSeasonId,'999') AS varchar) + '-' + CAST(ISNULL(r.ExpectedSaleSeasonSplitId ,'999') AS varchar)) AS ExpectedSaleSeason,
          SUM(h.ShippedQty) AS TotalQty, SUM(h.ReducedSupplierGmtPrice * h.ShippedQty) AS TotalFOBCost, SUM(r.ActualFreightUSD * h.ShippedQty) AS ActualFreightUSD, MAX(g.BuyCurrencyId) AS SupplierCurrencyId,
          MIN(h.RetailSellingPrice) AS MinRetailSellingPrice, MAX(h.RetailSellingPrice) AS MaxRetailSellingPrice,
          SUM(h.ShippedQty * h.RetailSellingPrice * (0.7/(1+(ISNULL(d.VATRate,0)/100))*0.5 + 0.3*0.25/(1+(ISNULL(d.VATRate,0)/100))*0.6) ) AS TotalComm,
          SUM(FreightCPU * h.ShippedQty) AS TotalFreight, MAX(r.DutyPercent) AS DutyPercent, MAX(ISNULL(r.CustomerId, 1)) AS CustomerId,
          SUM(h.RetailSellingPrice * h.ShippedQty) AS TotalRetailAmt, MAX(r.ActualFreightUSD) AS ActualFreightUnitCostUSD,
          MIN(j.InvoiceDate) AS FirstInvoiceDate,
          MIN(j.ShipmentId) AS FirstShipmentId,
		      r.OfficeId,
          MAX(ISNULL(ud.Description,'N/A')) AS UKDept,
          MAX(r.ActualLaunchDate) AS ActualLaunchedDate,
          MAX(r.PlannedLaunchDate) AS PlannedLaunchedDate,
          MAX(r.Comment) AS Comment,
          MAX(CASE WHEN sc.UKSupplierCode IS NULL THEN 0 ELSE 1 END) AS IsDuty,
          MIN(ISNULL(ex3.ExchangeRate, 0)) AS USDExchangeRate,
          MIN(ISNULL(ex2.ExchangeRate, 0)) AS GBPExchangeRate,
          MIN(ISNULL(ex1.ExchangeRate, 0)) AS SupplierCurrencyExchangeRate,
          ISNULL(SUM(h.ReducedSupplierGmtPrice * h.ShippedQty * ex1.ExchangeRate / ex3.ExchangeRate), 0) AS TotalFOBCostInUSD,
          MAX(r.SellThruRemark) AS SellThruRemark,
          NULLIF(MIN(ISNULL(sl.FiscalYear * 100 + sl.Period, 999999)), -1) AS ShippedPeriod,
          MIN(g.CountryOfOriginId) AS CountryOfOriginId
          FROM [RangePlan] r WITH (NOLOCK) 
          INNER JOIN [RangePlanLatestVersionId] v ON r.RangePlanId = v.RangePlanId AND r.WorkflowStatusId NOT IN (40, 60) AND r.VersionId = v.VersionId AND (r.SeasonId = @SeasonId OR (@SeasonId = -1 AND IsRepeatItem = 0))
          AND (r.OfficeId @OfficeId)
				  AND (@ItemNo = '' OR r.ItemNo = @ItemNo)
		      INNER JOIN [UKProductTeam] u WITH (NOLOCK) ON u.UKProductTeamId = r.UKProductTeamId
          INNER JOIN [NS-DB04].ISAM.dbo.Product e WITH (NOLOCK) ON e.ItemNo = r.ItemNo AND e.Status = 1
          INNER JOIN [NS-DB04].ISAM.dbo.Contract f WITH (NOLOCK) ON f.ProductId = e.ProductId AND f.Status = 1 AND f.CustomerId IN (27,28,99) AND (f.OfficeId @OfficeId)
          INNER JOIN [NS-DB04].ISAM.dbo.Shipment g WITH (NOLOCK) ON f.ContractId = g.ContractId AND g.Status = 1 AND g.IsMockShopSample = 0 AND g.IsPressSample = 0 AND g.IsStudioSample = 0 AND g.WorkflowStatusId = 8
          INNER JOIN [NS-DB04].ISAM.dbo.Invoice j WITH (NOLOCK) ON g.ShipmentId = j.ShipmentId
          INNER JOIN [NS-DB04].ISAM.dbo.ShipmentDetail h WITH (NOLOCK) ON g.ShipmentId = h.ShipmentId AND h.Status = 1
          INNER JOIN [NS-DB04].ISAM.dbo.SizeOption i WITH (NOLOCK) ON i.SizeOptionId = h.SizeOptionId
          LEFT JOIN [UKDept] ud WITH (NOLOCK) ON ud.UKDeptId = r.UKDeptId
          LEFT JOIN [RangePlanDetail] d WITH (NOLOCK) ON d.RangePlanId = r.RangePlanId AND d.VersionId = r.VersionId AND d.Status = 1 AND LTRIM(RTRIM(d.SizeRange)) = LTRIM(RTRIM(i.SizeDesc)) AND h.SellingPrice = d.SupplierFOB AND h.RetailSellingPrice = d.RetailSellingPrice 
          LEFT JOIN [NS-DB04].ISAM.dbo.NSLedShipmentSeasonOverride seo ON seo.ShipmentId = g.ShipmentId
          LEFT JOIN [NS-DB04].ISAM.dbo.NSLedSelfBilledSupplierCode sc ON sc.UKSupplierCode = f.UKSupplierCode 
          LEFT JOIN [NS-DB04].ISAM.dbo.SunInterfaceLog sl WITH (NOLOCK) ON sl.SunInterfaceLogId = ISAM.dbo.fn_GetLatestActualSunInterfaceLogId(g.ShipmentId, 3)
          LEFT JOIN NSLDB.dbo.AccountFinancialCalender cal WITH (NOLOCK) ON cal.Period = sl.Period AND sl.FiscalYear = cal.BudgetYear AND cal.AppId = 13 AND cal.Status = 1
          --LEFT JOIN NSLDB.dbo.AccountFinancialCalender cal WITH (NOLOCK) ON sl.TransactionDate BETWEEN cal.StartDate AND cal.EndDate AND cal.AppId = 13 AND cal.Status = 1
          LEFT JOIN [NS-DB04].ISAM.dbo.ExchangeRate ex3 WITH (NOLOCK) on ex3.CurrencyId = 3 AND ex3.ExchangeRateTypeId = 1 AND cal.StartDate BETWEEN ex3.EffectiveDateFrom AND ex3.EffectiveDateTo
          LEFT JOIN [NS-DB04].ISAM.dbo.ExchangeRate ex2 WITH (NOLOCK) on ex2.CurrencyId = 2 AND ex2.ExchangeRateTypeId = 1 AND cal.StartDate BETWEEN ex2.EffectiveDateFrom AND ex2.EffectiveDateTo
          LEFT JOIN [NS-DB04].ISAM.dbo.ExchangeRate ex1 WITH (NOLOCK) on ex1.CurrencyId = g.BuyCurrencyId AND ex1.ExchangeRateTypeId = 1 AND cal.StartDate BETWEEN ex1.EffectiveDateFrom AND ex1.EffectiveDateTo
          
          WHERE [ISAM].dbo.fn_isValidNSLedShipmentByItemSeasonDeliveryDate(r.ItemNo, g.CustomeratWarehouseDate, ISNULL(seo.SeasonId, f.SeasonId), r.SeasonId) = 1
          --AND r.ItemNo IN ('823848', '157837') 
          GROUP BY r.OfficeId, r.ItemNo
		      HAVING (MAX(dbo.fn_getNSLedPhaseId(r.ActualSaleSeasonId, r.ActualSaleSeasonSplitId)) @PhaseId)
		  

          ]]>
        </commandText>
        <parameters>
          <param key="ItemNo" name="@ItemNo" type="varchar" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="ArrayInt" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="int" direction="Input" />
          <param key="PhaseId" name="@PhaseId" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetRangePlanActualFreightUnitCostInUSD" type="Text">
        <commandText>
          <![CDATA[

          SELECT MAX(r.ActualFreightUSD) AS ActualFreightUnitCostUSD
          FROM [RangePlan] r WITH (NOLOCK) 
          INNER JOIN [RangePlanLatestVersionId] v ON r.RangePlanId = v.RangePlanId AND r.WorkflowStatusId NOT IN (60) AND r.VersionId = v.VersionId AND (r.SeasonId = @SeasonId OR (@SeasonId = -1 AND IsRepeatItem = 0))
          AND (r.OfficeId @OfficeId)
				  AND (@ItemNo = '' OR r.ItemNo = @ItemNo)
          INNER JOIN [NS-DB04].ISAM.dbo.Product e WITH (NOLOCK) ON e.ItemNo = r.ItemNo AND e.Status = 1
          INNER JOIN [NS-DB04].ISAM.dbo.Contract f WITH (NOLOCK) ON f.ProductId = e.ProductId AND f.Status = 1 AND f.CustomerId IN (27,28,99)
          INNER JOIN [NS-DB04].ISAM.dbo.Shipment g WITH (NOLOCK) ON f.ContractId = g.ContractId AND g.Status = 1 AND g.WorkflowStatusId = 8 --AND g.IsMockShopSample = 0 AND g.IsPressSample = 0 AND g.IsStudioSample = 0
          LEFT JOIN [NS-DB04].ISAM.dbo.NSLedShipmentSeasonOverride seo ON seo.ShipmentId = g.ShipmentId
          LEFT JOIN [NS-DB04].ISAM.dbo.NSLedSelfBilledSupplierCode sc ON sc.UKSupplierCode = f.UKSupplierCode 
          
          WHERE [ISAM].dbo.fn_isValidNSLedShipmentByItemSeasonDeliveryDate(r.ItemNo, g.CustomeratWarehouseDate, ISNULL(seo.SeasonId, f.SeasonId), r.SeasonId) = 1
          GROUP BY r.OfficeId, r.ItemNo
		      HAVING (MAX(dbo.fn_getNSLedPhaseId(r.ActualSaleSeasonId, r.ActualSaleSeasonSplitId)) @PhaseId)

          ]]>
        </commandText>
        <parameters>
          <param key="ItemNo" name="@ItemNo" type="varchar" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="ArrayInt" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="int" direction="Input" />
          <param key="PhaseId" name="@PhaseId" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetRangePlanDutyPercent" type="Text">
        <commandText>
          <![CDATA[

          SELECT MAX(r.DutyPercent) AS DutyPercent 
          FROM [RangePlan] r WITH (NOLOCK) 
          INNER JOIN [RangePlanLatestVersionId] v ON r.RangePlanId = v.RangePlanId AND r.WorkflowStatusId NOT IN (60) AND r.VersionId = v.VersionId AND (r.SeasonId = @SeasonId OR (@SeasonId = -1 AND IsRepeatItem = 0))
          AND (r.OfficeId @OfficeId)
				  AND (@ItemNo = '' OR r.ItemNo = @ItemNo)
          INNER JOIN [NS-DB04].ISAM.dbo.Product e WITH (NOLOCK) ON e.ItemNo = r.ItemNo AND e.Status = 1
          INNER JOIN [NS-DB04].ISAM.dbo.Contract f WITH (NOLOCK) ON f.ProductId = e.ProductId AND f.Status = 1 AND f.CustomerId IN (27,28,99)
          INNER JOIN [NS-DB04].ISAM.dbo.Shipment g WITH (NOLOCK) ON f.ContractId = g.ContractId AND g.Status = 1 AND g.WorkflowStatusId = 8 --AND g.IsMockShopSample = 0 AND g.IsPressSample = 0 AND g.IsStudioSample = 0
          LEFT JOIN [NS-DB04].ISAM.dbo.NSLedShipmentSeasonOverride seo ON seo.ShipmentId = g.ShipmentId
          LEFT JOIN [NS-DB04].ISAM.dbo.NSLedSelfBilledSupplierCode sc ON sc.UKSupplierCode = f.UKSupplierCode 
          
          WHERE [ISAM].dbo.fn_isValidNSLedShipmentByItemSeasonDeliveryDate(r.ItemNo, g.CustomeratWarehouseDate, ISNULL(seo.SeasonId, f.SeasonId), r.SeasonId) = 1
          GROUP BY r.OfficeId, r.ItemNo
		      HAVING (MAX(dbo.fn_getNSLedPhaseId(r.ActualSaleSeasonId, r.ActualSaleSeasonSplitId)) @PhaseId)

          ]]>
        </commandText>
        <parameters>
          <param key="ItemNo" name="@ItemNo" type="varchar" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="ArrayInt" direction="Input" />
          <param key="SeasonId" name="@SeasonId" type="int" direction="Input" />
          <param key="PhaseId" name="@PhaseId" type="ArrayInt" direction="Input" />
        </parameters>
      </dataCommand>

      <dataCommand name="GetLatestRangePlanSeasonSplit" type="Text">
        <commandText>
          SELECT TOP 1 r.*,
          ActualSaleSeason = ISNULL((CAST(r.ActualSaleSeasonId AS varchar) + '-' + CAST(r.ActualSaleSeasonSplitId AS varchar)),'35-2')
          FROM [RangePlan] r
          INNER JOIN [RangePlanLatestVersionId] v ON r.VersionId = v.VersionId AND r.RangePlanId = v.RangePlanId AND r.WorkflowStatusId NOT IN (60)
          ORDER BY ActualSaleSeasonId DESC, ActualSaleSeasonSplitId DESC
        </commandText>
      </dataCommand>

      <dataCommand name="GetMinSeasonId" type="Text">
        <commandText>
          SELECT MIN(a.SeasonId) FROM RangePlan a INNER JOIN RangePlanLatestVersionId b ON a.ItemNo = @ItemNo AND a.OfficeId = @OfficeId AND a.RangePlanId = b.RangePlanId AND a.VersionId = b.VersionId AND a.Status = 1 AND a.WorkflowStatusId NOT IN (60)
        </commandText>
        <parameters>
          <param key="ItemNo" name="@ItemNo" type="varchar" direction="Input" />
          <param key="OfficeId" name="@OfficeId" type="int" direction="Input" />
        </parameters>  
      </dataCommand>
      
    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NSLedRangePlan" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NSledRangePlanPictureApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetRangePlanListPictureByKey" type="Text">
        <commandText>
          SELECT Picture, RangePlanPictureId
          FROM [RangePlanPicture]
          WHERE RangePlanId = @RangePlanId ORDER BY 2 DESC
        </commandText>
        <parameters>
          <param key="RangePlanId" name="@RangePlanId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NSLedRangePlanPicture" />
    </tableMappings>
  </dataSetAdapter>

  <dataSetAdapter name="NSledRangePlanSizeOptionApt" populateCommands="false">
    <selectCommand>
      <dataCommand name="GetRangePlanSizeOptionByKey" type="Text">
        <commandText>
          SELECT RangePlanDetailId, SizeRange, Qty
          FROM [RangePlanDetail] d
          JOIN [RangePlanLatestVersionId] v ON d.VersionId = v.VersionId AND d.RangePlanId = v.RangePlanId AND d.Status = 1
          WHERE d.RangePlanId = @RangePlanId
          ORDER BY RangePlanDetailId
        </commandText>
        <parameters>
          <param key="RangePlanId" name="@RangePlanId" type="Int" direction="Input" />
        </parameters>
      </dataCommand>

    </selectCommand>
    <tableMappings>
      <tableMapping sourceTable="Table" dataSetTable="NSLedRangePlanSizeOption" />
    </tableMappings>
  </dataSetAdapter>
</dataOperations>



