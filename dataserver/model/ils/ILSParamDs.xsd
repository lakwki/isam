<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ILSParamDs" targetNamespace="http://tempuri.org/ILSParamDs.xsd" xmlns:mstns="http://tempuri.org/ILSParamDs.xsd" xmlns="http://tempuri.org/ILSParamDs.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ISAMConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ISAMConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.com.next.isam.dataserver.Properties.Settings.GlobalReference.Default.ISAMConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ILSParamTableAdapter" GeneratorDataComponentClassName="ILSParamTableAdapter" Name="ILSParam" UserDataComponentName="ILSParamTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ISAMConnectionString (Settings)" DbObjectName="ISAM.dbo.ILSParam" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ILSParam] WHERE (([ParamName] = @Original_ParamName) AND ((@IsNull_ParamValue = 1 AND [ParamValue] IS NULL) OR ([ParamValue] = @Original_ParamValue)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ParamName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ParamName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ParamValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParamValue" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ParamValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParamValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ILSParam] ([ParamName], [ParamValue]) VALUES (@ParamName, @ParamValue);
SELECT ParamName, ParamValue FROM ILSParam WHERE (ParamName = @ParamName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ParamName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ParamName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ParamValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParamValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ParamName, ParamValue FROM dbo.ILSParam</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ILSParam] SET [ParamName] = @ParamName, [ParamValue] = @ParamValue WHERE (([ParamName] = @Original_ParamName) AND ((@IsNull_ParamValue = 1 AND [ParamValue] IS NULL) OR ([ParamValue] = @Original_ParamValue)));
SELECT ParamName, ParamValue FROM ILSParam WHERE (ParamName = @ParamName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ParamName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ParamName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ParamValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParamValue" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ParamName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ParamName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ParamValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParamValue" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ParamValue" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParamValue" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ParamName" DataSetColumn="ParamName" />
              <Mapping SourceColumn="ParamValue" DataSetColumn="ParamValue" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ILSParamDs" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="ILSParamDs" msprop:Generator_UserDSName="ILSParamDs" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ILSParam" msprop:Generator_UserTableName="ILSParam" msprop:Generator_RowDeletedName="ILSParamRowDeleted" msprop:Generator_TableClassName="ILSParamDataTable" msprop:Generator_RowChangedName="ILSParamRowChanged" msprop:Generator_RowClassName="ILSParamRow" msprop:Generator_RowChangingName="ILSParamRowChanging" msprop:Generator_RowEvArgName="ILSParamRowChangeEvent" msprop:Generator_RowEvHandlerName="ILSParamRowChangeEventHandler" msprop:Generator_TablePropName="ILSParam" msprop:Generator_TableVarName="tableILSParam" msprop:Generator_RowDeletingName="ILSParamRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ParamName" msprop:Generator_UserColumnName="ParamName" msprop:Generator_ColumnPropNameInRow="ParamName" msprop:Generator_ColumnVarNameInTable="columnParamName" msprop:Generator_ColumnPropNameInTable="ParamNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ParamValue" msprop:Generator_UserColumnName="ParamValue" msprop:Generator_ColumnPropNameInRow="ParamValue" msprop:Generator_ColumnVarNameInTable="columnParamValue" msprop:Generator_ColumnPropNameInTable="ParamValueColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ILSParam" />
      <xs:field xpath="mstns:ParamName" />
    </xs:unique>
  </xs:element>
</xs:schema>