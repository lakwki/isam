//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.dataserver.model.ils {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ILSOrderCopyDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ILSOrderCopyDs : global::System.Data.DataSet {
        
        private ILSOrderCopyDataTable tableILSOrderCopy;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ILSOrderCopyDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ILSOrderCopyDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ILSOrderCopy"] != null)) {
                    base.Tables.Add(new ILSOrderCopyDataTable(ds.Tables["ILSOrderCopy"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ILSOrderCopyDataTable ILSOrderCopy {
            get {
                return this.tableILSOrderCopy;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ILSOrderCopyDs cln = ((ILSOrderCopyDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ILSOrderCopy"] != null)) {
                    base.Tables.Add(new ILSOrderCopyDataTable(ds.Tables["ILSOrderCopy"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableILSOrderCopy = ((ILSOrderCopyDataTable)(base.Tables["ILSOrderCopy"]));
            if ((initTable == true)) {
                if ((this.tableILSOrderCopy != null)) {
                    this.tableILSOrderCopy.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ILSOrderCopyDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ILSOrderCopyDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableILSOrderCopy = new ILSOrderCopyDataTable();
            base.Tables.Add(this.tableILSOrderCopy);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeILSOrderCopy() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ILSOrderCopyDs ds = new ILSOrderCopyDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ILSOrderCopyRowChangeEventHandler(object sender, ILSOrderCopyRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ILSOrderCopyDataTable : global::System.Data.TypedTableBase<ILSOrderCopyRow> {
            
            private global::System.Data.DataColumn columnOrderRefId;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnTransportMode;
            
            private global::System.Data.DataColumn columnCountryOfOrigin;
            
            private global::System.Data.DataColumn columnDepartCountry;
            
            private global::System.Data.DataColumn columnExFactoryDate;
            
            private global::System.Data.DataColumn columnInWarehouseDate;
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnHangBox;
            
            private global::System.Data.DataColumn columnBuyingTerms;
            
            private global::System.Data.DataColumn columnFinalDest;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnNextFreightPercent;
            
            private global::System.Data.DataColumn columnSupplierFreightPercent;
            
            private global::System.Data.DataColumn columnArrivalPort;
            
            private global::System.Data.DataColumn columnFranchisePartnerCode;
            
            private global::System.Data.DataColumn columnRefurb;
            
            private global::System.Data.DataColumn columnFileNo;
            
            private global::System.Data.DataColumn columnImportDate;
            
            private global::System.Data.DataColumn columnLastImportDate;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnIsValid;
            
            private global::System.Data.DataColumn columnLastSentLoadingPort;
            
            private global::System.Data.DataColumn columnLastSentOfficeCode;
            
            private global::System.Data.DataColumn columnLastSentQuota;
            
            private global::System.Data.DataColumn columnLastSentDocType;
            
            private global::System.Data.DataColumn columnLastSentOriginCountry;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSOrderCopyDataTable() {
                this.TableName = "ILSOrderCopy";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ILSOrderCopyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ILSOrderCopyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderRefIdColumn {
                get {
                    return this.columnOrderRefId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransportModeColumn {
                get {
                    return this.columnTransportMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryOfOriginColumn {
                get {
                    return this.columnCountryOfOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartCountryColumn {
                get {
                    return this.columnDepartCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExFactoryDateColumn {
                get {
                    return this.columnExFactoryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InWarehouseDateColumn {
                get {
                    return this.columnInWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HangBoxColumn {
                get {
                    return this.columnHangBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BuyingTermsColumn {
                get {
                    return this.columnBuyingTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinalDestColumn {
                get {
                    return this.columnFinalDest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NextFreightPercentColumn {
                get {
                    return this.columnNextFreightPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierFreightPercentColumn {
                get {
                    return this.columnSupplierFreightPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivalPortColumn {
                get {
                    return this.columnArrivalPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FranchisePartnerCodeColumn {
                get {
                    return this.columnFranchisePartnerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefurbColumn {
                get {
                    return this.columnRefurb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileNoColumn {
                get {
                    return this.columnFileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportDateColumn {
                get {
                    return this.columnImportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastImportDateColumn {
                get {
                    return this.columnLastImportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsValidColumn {
                get {
                    return this.columnIsValid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSentLoadingPortColumn {
                get {
                    return this.columnLastSentLoadingPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSentOfficeCodeColumn {
                get {
                    return this.columnLastSentOfficeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSentQuotaColumn {
                get {
                    return this.columnLastSentQuota;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSentDocTypeColumn {
                get {
                    return this.columnLastSentDocType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSentOriginCountryColumn {
                get {
                    return this.columnLastSentOriginCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSOrderCopyRow this[int index] {
                get {
                    return ((ILSOrderCopyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ILSOrderCopyRowChangeEventHandler ILSOrderCopyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ILSOrderCopyRowChangeEventHandler ILSOrderCopyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ILSOrderCopyRowChangeEventHandler ILSOrderCopyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ILSOrderCopyRowChangeEventHandler ILSOrderCopyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddILSOrderCopyRow(ILSOrderCopyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSOrderCopyRow AddILSOrderCopyRow(
                        int OrderRefId, 
                        string ItemNo, 
                        string ItemDesc, 
                        string TransportMode, 
                        string CountryOfOrigin, 
                        string DepartCountry, 
                        System.DateTime ExFactoryDate, 
                        System.DateTime InWarehouseDate, 
                        string SupplierCode, 
                        string SupplierName, 
                        string HangBox, 
                        string BuyingTerms, 
                        string FinalDest, 
                        string Currency, 
                        int NextFreightPercent, 
                        int SupplierFreightPercent, 
                        string ArrivalPort, 
                        string FranchisePartnerCode, 
                        string Refurb, 
                        string FileNo, 
                        System.DateTime ImportDate, 
                        System.DateTime LastImportDate, 
                        System.DateTime CreateDate, 
                        bool IsValid, 
                        string LastSentLoadingPort, 
                        string LastSentOfficeCode, 
                        string LastSentQuota, 
                        string LastSentDocType, 
                        string LastSentOriginCountry) {
                ILSOrderCopyRow rowILSOrderCopyRow = ((ILSOrderCopyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderRefId,
                        ItemNo,
                        ItemDesc,
                        TransportMode,
                        CountryOfOrigin,
                        DepartCountry,
                        ExFactoryDate,
                        InWarehouseDate,
                        SupplierCode,
                        SupplierName,
                        HangBox,
                        BuyingTerms,
                        FinalDest,
                        Currency,
                        NextFreightPercent,
                        SupplierFreightPercent,
                        ArrivalPort,
                        FranchisePartnerCode,
                        Refurb,
                        FileNo,
                        ImportDate,
                        LastImportDate,
                        CreateDate,
                        IsValid,
                        LastSentLoadingPort,
                        LastSentOfficeCode,
                        LastSentQuota,
                        LastSentDocType,
                        LastSentOriginCountry};
                rowILSOrderCopyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowILSOrderCopyRow);
                return rowILSOrderCopyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSOrderCopyRow FindByOrderRefId(int OrderRefId) {
                return ((ILSOrderCopyRow)(this.Rows.Find(new object[] {
                            OrderRefId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ILSOrderCopyDataTable cln = ((ILSOrderCopyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ILSOrderCopyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOrderRefId = base.Columns["OrderRefId"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnTransportMode = base.Columns["TransportMode"];
                this.columnCountryOfOrigin = base.Columns["CountryOfOrigin"];
                this.columnDepartCountry = base.Columns["DepartCountry"];
                this.columnExFactoryDate = base.Columns["ExFactoryDate"];
                this.columnInWarehouseDate = base.Columns["InWarehouseDate"];
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnHangBox = base.Columns["HangBox"];
                this.columnBuyingTerms = base.Columns["BuyingTerms"];
                this.columnFinalDest = base.Columns["FinalDest"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnNextFreightPercent = base.Columns["NextFreightPercent"];
                this.columnSupplierFreightPercent = base.Columns["SupplierFreightPercent"];
                this.columnArrivalPort = base.Columns["ArrivalPort"];
                this.columnFranchisePartnerCode = base.Columns["FranchisePartnerCode"];
                this.columnRefurb = base.Columns["Refurb"];
                this.columnFileNo = base.Columns["FileNo"];
                this.columnImportDate = base.Columns["ImportDate"];
                this.columnLastImportDate = base.Columns["LastImportDate"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnIsValid = base.Columns["IsValid"];
                this.columnLastSentLoadingPort = base.Columns["LastSentLoadingPort"];
                this.columnLastSentOfficeCode = base.Columns["LastSentOfficeCode"];
                this.columnLastSentQuota = base.Columns["LastSentQuota"];
                this.columnLastSentDocType = base.Columns["LastSentDocType"];
                this.columnLastSentOriginCountry = base.Columns["LastSentOriginCountry"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOrderRefId = new global::System.Data.DataColumn("OrderRefId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderRefId);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnTransportMode = new global::System.Data.DataColumn("TransportMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportMode);
                this.columnCountryOfOrigin = new global::System.Data.DataColumn("CountryOfOrigin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryOfOrigin);
                this.columnDepartCountry = new global::System.Data.DataColumn("DepartCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartCountry);
                this.columnExFactoryDate = new global::System.Data.DataColumn("ExFactoryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExFactoryDate);
                this.columnInWarehouseDate = new global::System.Data.DataColumn("InWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInWarehouseDate);
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnHangBox = new global::System.Data.DataColumn("HangBox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHangBox);
                this.columnBuyingTerms = new global::System.Data.DataColumn("BuyingTerms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyingTerms);
                this.columnFinalDest = new global::System.Data.DataColumn("FinalDest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalDest);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnNextFreightPercent = new global::System.Data.DataColumn("NextFreightPercent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextFreightPercent);
                this.columnSupplierFreightPercent = new global::System.Data.DataColumn("SupplierFreightPercent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierFreightPercent);
                this.columnArrivalPort = new global::System.Data.DataColumn("ArrivalPort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalPort);
                this.columnFranchisePartnerCode = new global::System.Data.DataColumn("FranchisePartnerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFranchisePartnerCode);
                this.columnRefurb = new global::System.Data.DataColumn("Refurb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefurb);
                this.columnFileNo = new global::System.Data.DataColumn("FileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNo);
                this.columnImportDate = new global::System.Data.DataColumn("ImportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDate);
                this.columnLastImportDate = new global::System.Data.DataColumn("LastImportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastImportDate);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnIsValid = new global::System.Data.DataColumn("IsValid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsValid);
                this.columnLastSentLoadingPort = new global::System.Data.DataColumn("LastSentLoadingPort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSentLoadingPort);
                this.columnLastSentOfficeCode = new global::System.Data.DataColumn("LastSentOfficeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSentOfficeCode);
                this.columnLastSentQuota = new global::System.Data.DataColumn("LastSentQuota", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSentQuota);
                this.columnLastSentDocType = new global::System.Data.DataColumn("LastSentDocType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSentDocType);
                this.columnLastSentOriginCountry = new global::System.Data.DataColumn("LastSentOriginCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSentOriginCountry);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOrderRefId}, true));
                this.columnOrderRefId.AllowDBNull = false;
                this.columnOrderRefId.Unique = true;
                this.columnItemNo.AllowDBNull = false;
                this.columnItemNo.MaxLength = 20;
                this.columnItemDesc.AllowDBNull = false;
                this.columnItemDesc.MaxLength = 50;
                this.columnTransportMode.AllowDBNull = false;
                this.columnTransportMode.MaxLength = 5;
                this.columnCountryOfOrigin.AllowDBNull = false;
                this.columnCountryOfOrigin.MaxLength = 2;
                this.columnDepartCountry.AllowDBNull = false;
                this.columnDepartCountry.MaxLength = 5;
                this.columnExFactoryDate.AllowDBNull = false;
                this.columnInWarehouseDate.AllowDBNull = false;
                this.columnSupplierCode.AllowDBNull = false;
                this.columnSupplierCode.MaxLength = 10;
                this.columnSupplierName.AllowDBNull = false;
                this.columnSupplierName.MaxLength = 50;
                this.columnHangBox.AllowDBNull = false;
                this.columnHangBox.MaxLength = 5;
                this.columnBuyingTerms.AllowDBNull = false;
                this.columnBuyingTerms.MaxLength = 10;
                this.columnFinalDest.AllowDBNull = false;
                this.columnFinalDest.MaxLength = 10;
                this.columnCurrency.AllowDBNull = false;
                this.columnCurrency.MaxLength = 5;
                this.columnNextFreightPercent.AllowDBNull = false;
                this.columnSupplierFreightPercent.AllowDBNull = false;
                this.columnArrivalPort.MaxLength = 5;
                this.columnFranchisePartnerCode.MaxLength = 4;
                this.columnRefurb.AllowDBNull = false;
                this.columnRefurb.MaxLength = 1;
                this.columnFileNo.AllowDBNull = false;
                this.columnFileNo.MaxLength = 10;
                this.columnImportDate.AllowDBNull = false;
                this.columnCreateDate.AllowDBNull = false;
                this.columnIsValid.AllowDBNull = false;
                this.columnLastSentLoadingPort.MaxLength = 10;
                this.columnLastSentOfficeCode.MaxLength = 2;
                this.columnLastSentQuota.MaxLength = 50;
                this.columnLastSentDocType.MaxLength = 50;
                this.columnLastSentOriginCountry.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSOrderCopyRow NewILSOrderCopyRow() {
                return ((ILSOrderCopyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ILSOrderCopyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ILSOrderCopyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ILSOrderCopyRowChanged != null)) {
                    this.ILSOrderCopyRowChanged(this, new ILSOrderCopyRowChangeEvent(((ILSOrderCopyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ILSOrderCopyRowChanging != null)) {
                    this.ILSOrderCopyRowChanging(this, new ILSOrderCopyRowChangeEvent(((ILSOrderCopyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ILSOrderCopyRowDeleted != null)) {
                    this.ILSOrderCopyRowDeleted(this, new ILSOrderCopyRowChangeEvent(((ILSOrderCopyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ILSOrderCopyRowDeleting != null)) {
                    this.ILSOrderCopyRowDeleting(this, new ILSOrderCopyRowChangeEvent(((ILSOrderCopyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveILSOrderCopyRow(ILSOrderCopyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ILSOrderCopyDs ds = new ILSOrderCopyDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ILSOrderCopyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ILSOrderCopyRow : global::System.Data.DataRow {
            
            private ILSOrderCopyDataTable tableILSOrderCopy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ILSOrderCopyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableILSOrderCopy = ((ILSOrderCopyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrderRefId {
                get {
                    return ((int)(this[this.tableILSOrderCopy.OrderRefIdColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.OrderRefIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemNo {
                get {
                    return ((string)(this[this.tableILSOrderCopy.ItemNoColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemDesc {
                get {
                    return ((string)(this[this.tableILSOrderCopy.ItemDescColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransportMode {
                get {
                    return ((string)(this[this.tableILSOrderCopy.TransportModeColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.TransportModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryOfOrigin {
                get {
                    return ((string)(this[this.tableILSOrderCopy.CountryOfOriginColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.CountryOfOriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DepartCountry {
                get {
                    return ((string)(this[this.tableILSOrderCopy.DepartCountryColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.DepartCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExFactoryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableILSOrderCopy.ExFactoryDateColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.ExFactoryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InWarehouseDate {
                get {
                    return ((global::System.DateTime)(this[this.tableILSOrderCopy.InWarehouseDateColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.InWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierCode {
                get {
                    return ((string)(this[this.tableILSOrderCopy.SupplierCodeColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierName {
                get {
                    return ((string)(this[this.tableILSOrderCopy.SupplierNameColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HangBox {
                get {
                    return ((string)(this[this.tableILSOrderCopy.HangBoxColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.HangBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BuyingTerms {
                get {
                    return ((string)(this[this.tableILSOrderCopy.BuyingTermsColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.BuyingTermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FinalDest {
                get {
                    return ((string)(this[this.tableILSOrderCopy.FinalDestColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.FinalDestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Currency {
                get {
                    return ((string)(this[this.tableILSOrderCopy.CurrencyColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NextFreightPercent {
                get {
                    return ((int)(this[this.tableILSOrderCopy.NextFreightPercentColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.NextFreightPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SupplierFreightPercent {
                get {
                    return ((int)(this[this.tableILSOrderCopy.SupplierFreightPercentColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.SupplierFreightPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArrivalPort {
                get {
                    try {
                        return ((string)(this[this.tableILSOrderCopy.ArrivalPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivalPort\' in table \'ILSOrderCopy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSOrderCopy.ArrivalPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FranchisePartnerCode {
                get {
                    try {
                        return ((string)(this[this.tableILSOrderCopy.FranchisePartnerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FranchisePartnerCode\' in table \'ILSOrderCopy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSOrderCopy.FranchisePartnerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Refurb {
                get {
                    return ((string)(this[this.tableILSOrderCopy.RefurbColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.RefurbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileNo {
                get {
                    return ((string)(this[this.tableILSOrderCopy.FileNoColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.FileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ImportDate {
                get {
                    return ((global::System.DateTime)(this[this.tableILSOrderCopy.ImportDateColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.ImportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastImportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableILSOrderCopy.LastImportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastImportDate\' in table \'ILSOrderCopy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSOrderCopy.LastImportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableILSOrderCopy.CreateDateColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValid {
                get {
                    return ((bool)(this[this.tableILSOrderCopy.IsValidColumn]));
                }
                set {
                    this[this.tableILSOrderCopy.IsValidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastSentLoadingPort {
                get {
                    try {
                        return ((string)(this[this.tableILSOrderCopy.LastSentLoadingPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSentLoadingPort\' in table \'ILSOrderCopy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSOrderCopy.LastSentLoadingPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastSentOfficeCode {
                get {
                    try {
                        return ((string)(this[this.tableILSOrderCopy.LastSentOfficeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSentOfficeCode\' in table \'ILSOrderCopy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSOrderCopy.LastSentOfficeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastSentQuota {
                get {
                    try {
                        return ((string)(this[this.tableILSOrderCopy.LastSentQuotaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSentQuota\' in table \'ILSOrderCopy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSOrderCopy.LastSentQuotaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastSentDocType {
                get {
                    try {
                        return ((string)(this[this.tableILSOrderCopy.LastSentDocTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSentDocType\' in table \'ILSOrderCopy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSOrderCopy.LastSentDocTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastSentOriginCountry {
                get {
                    try {
                        return ((string)(this[this.tableILSOrderCopy.LastSentOriginCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSentOriginCountry\' in table \'ILSOrderCopy\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSOrderCopy.LastSentOriginCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivalPortNull() {
                return this.IsNull(this.tableILSOrderCopy.ArrivalPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivalPortNull() {
                this[this.tableILSOrderCopy.ArrivalPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFranchisePartnerCodeNull() {
                return this.IsNull(this.tableILSOrderCopy.FranchisePartnerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFranchisePartnerCodeNull() {
                this[this.tableILSOrderCopy.FranchisePartnerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastImportDateNull() {
                return this.IsNull(this.tableILSOrderCopy.LastImportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastImportDateNull() {
                this[this.tableILSOrderCopy.LastImportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSentLoadingPortNull() {
                return this.IsNull(this.tableILSOrderCopy.LastSentLoadingPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSentLoadingPortNull() {
                this[this.tableILSOrderCopy.LastSentLoadingPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSentOfficeCodeNull() {
                return this.IsNull(this.tableILSOrderCopy.LastSentOfficeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSentOfficeCodeNull() {
                this[this.tableILSOrderCopy.LastSentOfficeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSentQuotaNull() {
                return this.IsNull(this.tableILSOrderCopy.LastSentQuotaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSentQuotaNull() {
                this[this.tableILSOrderCopy.LastSentQuotaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSentDocTypeNull() {
                return this.IsNull(this.tableILSOrderCopy.LastSentDocTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSentDocTypeNull() {
                this[this.tableILSOrderCopy.LastSentDocTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSentOriginCountryNull() {
                return this.IsNull(this.tableILSOrderCopy.LastSentOriginCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSentOriginCountryNull() {
                this[this.tableILSOrderCopy.LastSentOriginCountryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ILSOrderCopyRowChangeEvent : global::System.EventArgs {
            
            private ILSOrderCopyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSOrderCopyRowChangeEvent(ILSOrderCopyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSOrderCopyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.dataserver.model.ils.ILSOrderCopyDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ILSOrderCopyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ILSOrderCopyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ILSOrderCopy";
            tableMapping.ColumnMappings.Add("OrderRefId", "OrderRefId");
            tableMapping.ColumnMappings.Add("ItemNo", "ItemNo");
            tableMapping.ColumnMappings.Add("ItemDesc", "ItemDesc");
            tableMapping.ColumnMappings.Add("TransportMode", "TransportMode");
            tableMapping.ColumnMappings.Add("CountryOfOrigin", "CountryOfOrigin");
            tableMapping.ColumnMappings.Add("DepartCountry", "DepartCountry");
            tableMapping.ColumnMappings.Add("ExFactoryDate", "ExFactoryDate");
            tableMapping.ColumnMappings.Add("InWarehouseDate", "InWarehouseDate");
            tableMapping.ColumnMappings.Add("SupplierCode", "SupplierCode");
            tableMapping.ColumnMappings.Add("SupplierName", "SupplierName");
            tableMapping.ColumnMappings.Add("HangBox", "HangBox");
            tableMapping.ColumnMappings.Add("BuyingTerms", "BuyingTerms");
            tableMapping.ColumnMappings.Add("FinalDest", "FinalDest");
            tableMapping.ColumnMappings.Add("Currency", "Currency");
            tableMapping.ColumnMappings.Add("NextFreightPercent", "NextFreightPercent");
            tableMapping.ColumnMappings.Add("SupplierFreightPercent", "SupplierFreightPercent");
            tableMapping.ColumnMappings.Add("ArrivalPort", "ArrivalPort");
            tableMapping.ColumnMappings.Add("FranchisePartnerCode", "FranchisePartnerCode");
            tableMapping.ColumnMappings.Add("Refurb", "Refurb");
            tableMapping.ColumnMappings.Add("FileNo", "FileNo");
            tableMapping.ColumnMappings.Add("ImportDate", "ImportDate");
            tableMapping.ColumnMappings.Add("LastImportDate", "LastImportDate");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("IsValid", "IsValid");
            tableMapping.ColumnMappings.Add("LastSentLoadingPort", "LastSentLoadingPort");
            tableMapping.ColumnMappings.Add("LastSentOfficeCode", "LastSentOfficeCode");
            tableMapping.ColumnMappings.Add("LastSentQuota", "LastSentQuota");
            tableMapping.ColumnMappings.Add("LastSentDocType", "LastSentDocType");
            tableMapping.ColumnMappings.Add("LastSentOriginCountry", "LastSentOriginCountry");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ILSOrderCopy] WHERE (([OrderRefId] = ?) AND ([ItemNo] = ?) AND ([ItemDesc] = ?) AND ([TransportMode] = ?) AND ([CountryOfOrigin] = ?) AND ([DepartCountry] = ?) AND ([ExFactoryDate] = ?) AND ([InWarehouseDate] = ?) AND ([SupplierCode] = ?) AND ([SupplierName] = ?) AND ([HangBox] = ?) AND ([BuyingTerms] = ?) AND ([FinalDest] = ?) AND ([Currency] = ?) AND ([NextFreightPercent] = ?) AND ([SupplierFreightPercent] = ?) AND ((? = 1 AND [ArrivalPort] IS NULL) OR ([ArrivalPort] = ?)) AND ((? = 1 AND [FranchisePartnerCode] IS NULL) OR ([FranchisePartnerCode] = ?)) AND ([Refurb] = ?) AND ([FileNo] = ?) AND ([ImportDate] = ?) AND ((? = 1 AND [LastImportDate] IS NULL) OR ([LastImportDate] = ?)) AND ([CreateDate] = ?) AND ([IsValid] = ?) AND ((? = 1 AND [LastSentLoadingPort] IS NULL) OR ([LastSentLoadingPort] = ?)) AND ((? = 1 AND [LastSentOfficeCode] IS NULL) OR ([LastSentOfficeCode] = ?)) AND ((? = 1 AND [LastSentQuota] IS NULL) OR ([LastSentQuota] = ?)) AND ((? = 1 AND [LastSentDocType] IS NULL) OR ([LastSentDocType] = ?)) AND ((? = 1 AND [LastSentOriginCountry] IS NULL) OR ([LastSentOriginCountry] = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OrderRefId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OrderRefId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TransportMode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TransportMode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CountryOfOrigin", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CountryOfOrigin", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DepartCountry", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DepartCountry", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ExFactoryDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExFactoryDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InWarehouseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SupplierCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SupplierName", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HangBox", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HangBox", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BuyingTerms", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BuyingTerms", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FinalDest", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinalDest", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Currency", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Currency", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NextFreightPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NextFreightPercent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SupplierFreightPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierFreightPercent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ArrivalPort", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ArrivalPort", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ArrivalPort", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ArrivalPort", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FranchisePartnerCode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FranchisePartnerCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FranchisePartnerCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FranchisePartnerCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Refurb", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Refurb", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FileNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FileNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastImportDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastImportDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastImportDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastImportDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CreateDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreateDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsValid", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsValid", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentLoadingPort", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentLoadingPort", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentLoadingPort", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentLoadingPort", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentOfficeCode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOfficeCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentOfficeCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOfficeCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentQuota", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentQuota", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentQuota", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentQuota", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentDocType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentDocType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentDocType", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentDocType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentOriginCountry", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOriginCountry", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentOriginCountry", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOriginCountry", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ILSOrderCopy] ([OrderRefId], [ItemNo], [ItemDesc], [TransportMode], [CountryOfOrigin], [DepartCountry], [ExFactoryDate], [InWarehouseDate], [SupplierCode], [SupplierName], [HangBox], [BuyingTerms], [FinalDest], [Currency], [NextFreightPercent], [SupplierFreightPercent], [ArrivalPort], [FranchisePartnerCode], [Refurb], [FileNo], [ImportDate], [LastImportDate], [CreateDate], [IsValid], [LastSentLoadingPort], [LastSentOfficeCode], [LastSentQuota], [LastSentDocType], [LastSentOriginCountry]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OrderRefId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OrderRefId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TransportMode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TransportMode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CountryOfOrigin", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DepartCountry", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DepartCountry", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ExFactoryDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExFactoryDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InWarehouseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SupplierCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SupplierName", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HangBox", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HangBox", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BuyingTerms", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BuyingTerms", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FinalDest", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinalDest", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Currency", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Currency", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NextFreightPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NextFreightPercent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SupplierFreightPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierFreightPercent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ArrivalPort", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ArrivalPort", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FranchisePartnerCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FranchisePartnerCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Refurb", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Refurb", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FileNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FileNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastImportDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastImportDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CreateDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreateDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsValid", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsValid", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentLoadingPort", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentLoadingPort", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentOfficeCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOfficeCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentQuota", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentQuota", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentDocType", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentDocType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentOriginCountry", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOriginCountry", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ILSOrderCopy] SET [OrderRefId] = ?, [ItemNo] = ?, [ItemDesc] = ?, [Transp" +
                "ortMode] = ?, [CountryOfOrigin] = ?, [DepartCountry] = ?, [ExFactoryDate] = ?, [" +
                "InWarehouseDate] = ?, [SupplierCode] = ?, [SupplierName] = ?, [HangBox] = ?, [Bu" +
                "yingTerms] = ?, [FinalDest] = ?, [Currency] = ?, [NextFreightPercent] = ?, [Supp" +
                "lierFreightPercent] = ?, [ArrivalPort] = ?, [FranchisePartnerCode] = ?, [Refurb]" +
                " = ?, [FileNo] = ?, [ImportDate] = ?, [LastImportDate] = ?, [CreateDate] = ?, [I" +
                "sValid] = ?, [LastSentLoadingPort] = ?, [LastSentOfficeCode] = ?, [LastSentQuota" +
                "] = ?, [LastSentDocType] = ?, [LastSentOriginCountry] = ? WHERE (([OrderRefId] =" +
                " ?) AND ([ItemNo] = ?) AND ([ItemDesc] = ?) AND ([TransportMode] = ?) AND ([Coun" +
                "tryOfOrigin] = ?) AND ([DepartCountry] = ?) AND ([ExFactoryDate] = ?) AND ([InWa" +
                "rehouseDate] = ?) AND ([SupplierCode] = ?) AND ([SupplierName] = ?) AND ([HangBo" +
                "x] = ?) AND ([BuyingTerms] = ?) AND ([FinalDest] = ?) AND ([Currency] = ?) AND (" +
                "[NextFreightPercent] = ?) AND ([SupplierFreightPercent] = ?) AND ((? = 1 AND [Ar" +
                "rivalPort] IS NULL) OR ([ArrivalPort] = ?)) AND ((? = 1 AND [FranchisePartnerCod" +
                "e] IS NULL) OR ([FranchisePartnerCode] = ?)) AND ([Refurb] = ?) AND ([FileNo] = " +
                "?) AND ([ImportDate] = ?) AND ((? = 1 AND [LastImportDate] IS NULL) OR ([LastImp" +
                "ortDate] = ?)) AND ([CreateDate] = ?) AND ([IsValid] = ?) AND ((? = 1 AND [LastS" +
                "entLoadingPort] IS NULL) OR ([LastSentLoadingPort] = ?)) AND ((? = 1 AND [LastSe" +
                "ntOfficeCode] IS NULL) OR ([LastSentOfficeCode] = ?)) AND ((? = 1 AND [LastSentQ" +
                "uota] IS NULL) OR ([LastSentQuota] = ?)) AND ((? = 1 AND [LastSentDocType] IS NU" +
                "LL) OR ([LastSentDocType] = ?)) AND ((? = 1 AND [LastSentOriginCountry] IS NULL)" +
                " OR ([LastSentOriginCountry] = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OrderRefId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OrderRefId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("TransportMode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TransportMode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CountryOfOrigin", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DepartCountry", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DepartCountry", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ExFactoryDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExFactoryDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InWarehouseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SupplierCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SupplierName", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HangBox", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HangBox", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BuyingTerms", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BuyingTerms", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FinalDest", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinalDest", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Currency", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Currency", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NextFreightPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NextFreightPercent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SupplierFreightPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierFreightPercent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ArrivalPort", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ArrivalPort", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FranchisePartnerCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FranchisePartnerCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Refurb", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Refurb", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("FileNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FileNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastImportDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastImportDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CreateDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreateDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsValid", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsValid", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentLoadingPort", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentLoadingPort", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentOfficeCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOfficeCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentQuota", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentQuota", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentDocType", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentDocType", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSentOriginCountry", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOriginCountry", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OrderRefId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OrderRefId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_TransportMode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TransportMode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CountryOfOrigin", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CountryOfOrigin", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DepartCountry", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DepartCountry", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ExFactoryDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExFactoryDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InWarehouseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SupplierCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SupplierName", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierName", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HangBox", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HangBox", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BuyingTerms", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BuyingTerms", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FinalDest", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FinalDest", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Currency", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Currency", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NextFreightPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NextFreightPercent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SupplierFreightPercent", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierFreightPercent", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ArrivalPort", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ArrivalPort", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ArrivalPort", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ArrivalPort", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_FranchisePartnerCode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FranchisePartnerCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FranchisePartnerCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FranchisePartnerCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Refurb", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Refurb", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_FileNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FileNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastImportDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastImportDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastImportDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastImportDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CreateDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreateDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsValid", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsValid", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentLoadingPort", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentLoadingPort", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentLoadingPort", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentLoadingPort", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentOfficeCode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOfficeCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentOfficeCode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOfficeCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentQuota", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentQuota", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentQuota", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentQuota", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentDocType", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentDocType", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentDocType", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentDocType", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSentOriginCountry", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOriginCountry", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSentOriginCountry", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSentOriginCountry", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            //this._connection.ConnectionString = global::com.next.isam.dataserver.Properties.Settings.Default.ISAM_20100423;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        OrderRefId, ItemNo, ItemDesc, TransportMode, CountryOfOrigin, DepartCountry, ExFactoryDate, InWarehouseDate, SupplierCode, SupplierName, HangBox, 
                         BuyingTerms, FinalDest, Currency, NextFreightPercent, SupplierFreightPercent, ArrivalPort, FranchisePartnerCode, Refurb, FileNo, ImportDate, LastImportDate, 
                         CreateDate, IsValid, LastSentLoadingPort, LastSentOfficeCode, LastSentQuota, LastSentDocType, LastSentOriginCountry
FROM            ILSOrderCopy";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ILSOrderCopyDs.ILSOrderCopyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ILSOrderCopyDs.ILSOrderCopyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ILSOrderCopyDs.ILSOrderCopyDataTable dataTable = new ILSOrderCopyDs.ILSOrderCopyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ILSOrderCopyDs.ILSOrderCopyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ILSOrderCopyDs dataSet) {
            return this.Adapter.Update(dataSet, "ILSOrderCopy");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_OrderRefId, 
                    string Original_ItemNo, 
                    string Original_ItemDesc, 
                    string Original_TransportMode, 
                    string Original_CountryOfOrigin, 
                    string Original_DepartCountry, 
                    System.DateTime Original_ExFactoryDate, 
                    System.DateTime Original_InWarehouseDate, 
                    string Original_SupplierCode, 
                    string Original_SupplierName, 
                    string Original_HangBox, 
                    string Original_BuyingTerms, 
                    string Original_FinalDest, 
                    string Original_Currency, 
                    int Original_NextFreightPercent, 
                    int Original_SupplierFreightPercent, 
                    string Original_ArrivalPort, 
                    string Original_FranchisePartnerCode, 
                    string Original_Refurb, 
                    string Original_FileNo, 
                    System.DateTime Original_ImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_LastImportDate, 
                    System.DateTime Original_CreateDate, 
                    bool Original_IsValid, 
                    string Original_LastSentLoadingPort, 
                    string Original_LastSentOfficeCode, 
                    string Original_LastSentQuota, 
                    string Original_LastSentDocType, 
                    string Original_LastSentOriginCountry) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_OrderRefId));
            if ((Original_ItemNo == null)) {
                throw new global::System.ArgumentNullException("Original_ItemNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ItemNo));
            }
            if ((Original_ItemDesc == null)) {
                throw new global::System.ArgumentNullException("Original_ItemDesc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ItemDesc));
            }
            if ((Original_TransportMode == null)) {
                throw new global::System.ArgumentNullException("Original_TransportMode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TransportMode));
            }
            if ((Original_CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("Original_CountryOfOrigin");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CountryOfOrigin));
            }
            if ((Original_DepartCountry == null)) {
                throw new global::System.ArgumentNullException("Original_DepartCountry");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DepartCountry));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ExFactoryDate));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_InWarehouseDate));
            if ((Original_SupplierCode == null)) {
                throw new global::System.ArgumentNullException("Original_SupplierCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SupplierCode));
            }
            if ((Original_SupplierName == null)) {
                throw new global::System.ArgumentNullException("Original_SupplierName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SupplierName));
            }
            if ((Original_HangBox == null)) {
                throw new global::System.ArgumentNullException("Original_HangBox");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_HangBox));
            }
            if ((Original_BuyingTerms == null)) {
                throw new global::System.ArgumentNullException("Original_BuyingTerms");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_BuyingTerms));
            }
            if ((Original_FinalDest == null)) {
                throw new global::System.ArgumentNullException("Original_FinalDest");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_FinalDest));
            }
            if ((Original_Currency == null)) {
                throw new global::System.ArgumentNullException("Original_Currency");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Currency));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_NextFreightPercent));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_SupplierFreightPercent));
            if ((Original_ArrivalPort == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ArrivalPort));
            }
            if ((Original_FranchisePartnerCode == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_FranchisePartnerCode));
            }
            if ((Original_Refurb == null)) {
                throw new global::System.ArgumentNullException("Original_Refurb");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Refurb));
            }
            if ((Original_FileNo == null)) {
                throw new global::System.ArgumentNullException("Original_FileNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_FileNo));
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((System.DateTime)(Original_ImportDate));
            if ((Original_LastImportDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_LastImportDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[25].Value = ((System.DateTime)(Original_CreateDate));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_IsValid));
            if ((Original_LastSentLoadingPort == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_LastSentLoadingPort));
            }
            if ((Original_LastSentOfficeCode == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_LastSentOfficeCode));
            }
            if ((Original_LastSentQuota == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_LastSentQuota));
            }
            if ((Original_LastSentDocType == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_LastSentDocType));
            }
            if ((Original_LastSentOriginCountry == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_LastSentOriginCountry));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int OrderRefId, 
                    string ItemNo, 
                    string ItemDesc, 
                    string TransportMode, 
                    string CountryOfOrigin, 
                    string DepartCountry, 
                    System.DateTime ExFactoryDate, 
                    System.DateTime InWarehouseDate, 
                    string SupplierCode, 
                    string SupplierName, 
                    string HangBox, 
                    string BuyingTerms, 
                    string FinalDest, 
                    string Currency, 
                    int NextFreightPercent, 
                    int SupplierFreightPercent, 
                    string ArrivalPort, 
                    string FranchisePartnerCode, 
                    string Refurb, 
                    string FileNo, 
                    System.DateTime ImportDate, 
                    global::System.Nullable<global::System.DateTime> LastImportDate, 
                    System.DateTime CreateDate, 
                    bool IsValid, 
                    string LastSentLoadingPort, 
                    string LastSentOfficeCode, 
                    string LastSentQuota, 
                    string LastSentDocType, 
                    string LastSentOriginCountry) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(OrderRefId));
            if ((ItemNo == null)) {
                throw new global::System.ArgumentNullException("ItemNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ItemNo));
            }
            if ((ItemDesc == null)) {
                throw new global::System.ArgumentNullException("ItemDesc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ItemDesc));
            }
            if ((TransportMode == null)) {
                throw new global::System.ArgumentNullException("TransportMode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TransportMode));
            }
            if ((CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("CountryOfOrigin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CountryOfOrigin));
            }
            if ((DepartCountry == null)) {
                throw new global::System.ArgumentNullException("DepartCountry");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DepartCountry));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(ExFactoryDate));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(InWarehouseDate));
            if ((SupplierCode == null)) {
                throw new global::System.ArgumentNullException("SupplierCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SupplierCode));
            }
            if ((SupplierName == null)) {
                throw new global::System.ArgumentNullException("SupplierName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SupplierName));
            }
            if ((HangBox == null)) {
                throw new global::System.ArgumentNullException("HangBox");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(HangBox));
            }
            if ((BuyingTerms == null)) {
                throw new global::System.ArgumentNullException("BuyingTerms");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(BuyingTerms));
            }
            if ((FinalDest == null)) {
                throw new global::System.ArgumentNullException("FinalDest");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(FinalDest));
            }
            if ((Currency == null)) {
                throw new global::System.ArgumentNullException("Currency");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Currency));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(NextFreightPercent));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(SupplierFreightPercent));
            if ((ArrivalPort == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ArrivalPort));
            }
            if ((FranchisePartnerCode == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(FranchisePartnerCode));
            }
            if ((Refurb == null)) {
                throw new global::System.ArgumentNullException("Refurb");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Refurb));
            }
            if ((FileNo == null)) {
                throw new global::System.ArgumentNullException("FileNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(FileNo));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(ImportDate));
            if ((LastImportDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(LastImportDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(CreateDate));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(IsValid));
            if ((LastSentLoadingPort == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(LastSentLoadingPort));
            }
            if ((LastSentOfficeCode == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(LastSentOfficeCode));
            }
            if ((LastSentQuota == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(LastSentQuota));
            }
            if ((LastSentDocType == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(LastSentDocType));
            }
            if ((LastSentOriginCountry == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(LastSentOriginCountry));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int OrderRefId, 
                    string ItemNo, 
                    string ItemDesc, 
                    string TransportMode, 
                    string CountryOfOrigin, 
                    string DepartCountry, 
                    System.DateTime ExFactoryDate, 
                    System.DateTime InWarehouseDate, 
                    string SupplierCode, 
                    string SupplierName, 
                    string HangBox, 
                    string BuyingTerms, 
                    string FinalDest, 
                    string Currency, 
                    int NextFreightPercent, 
                    int SupplierFreightPercent, 
                    string ArrivalPort, 
                    string FranchisePartnerCode, 
                    string Refurb, 
                    string FileNo, 
                    System.DateTime ImportDate, 
                    global::System.Nullable<global::System.DateTime> LastImportDate, 
                    System.DateTime CreateDate, 
                    bool IsValid, 
                    string LastSentLoadingPort, 
                    string LastSentOfficeCode, 
                    string LastSentQuota, 
                    string LastSentDocType, 
                    string LastSentOriginCountry, 
                    int Original_OrderRefId, 
                    string Original_ItemNo, 
                    string Original_ItemDesc, 
                    string Original_TransportMode, 
                    string Original_CountryOfOrigin, 
                    string Original_DepartCountry, 
                    System.DateTime Original_ExFactoryDate, 
                    System.DateTime Original_InWarehouseDate, 
                    string Original_SupplierCode, 
                    string Original_SupplierName, 
                    string Original_HangBox, 
                    string Original_BuyingTerms, 
                    string Original_FinalDest, 
                    string Original_Currency, 
                    int Original_NextFreightPercent, 
                    int Original_SupplierFreightPercent, 
                    string Original_ArrivalPort, 
                    string Original_FranchisePartnerCode, 
                    string Original_Refurb, 
                    string Original_FileNo, 
                    System.DateTime Original_ImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_LastImportDate, 
                    System.DateTime Original_CreateDate, 
                    bool Original_IsValid, 
                    string Original_LastSentLoadingPort, 
                    string Original_LastSentOfficeCode, 
                    string Original_LastSentQuota, 
                    string Original_LastSentDocType, 
                    string Original_LastSentOriginCountry) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(OrderRefId));
            if ((ItemNo == null)) {
                throw new global::System.ArgumentNullException("ItemNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ItemNo));
            }
            if ((ItemDesc == null)) {
                throw new global::System.ArgumentNullException("ItemDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ItemDesc));
            }
            if ((TransportMode == null)) {
                throw new global::System.ArgumentNullException("TransportMode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TransportMode));
            }
            if ((CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("CountryOfOrigin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CountryOfOrigin));
            }
            if ((DepartCountry == null)) {
                throw new global::System.ArgumentNullException("DepartCountry");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DepartCountry));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(ExFactoryDate));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(InWarehouseDate));
            if ((SupplierCode == null)) {
                throw new global::System.ArgumentNullException("SupplierCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SupplierCode));
            }
            if ((SupplierName == null)) {
                throw new global::System.ArgumentNullException("SupplierName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SupplierName));
            }
            if ((HangBox == null)) {
                throw new global::System.ArgumentNullException("HangBox");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(HangBox));
            }
            if ((BuyingTerms == null)) {
                throw new global::System.ArgumentNullException("BuyingTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(BuyingTerms));
            }
            if ((FinalDest == null)) {
                throw new global::System.ArgumentNullException("FinalDest");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(FinalDest));
            }
            if ((Currency == null)) {
                throw new global::System.ArgumentNullException("Currency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Currency));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(NextFreightPercent));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(SupplierFreightPercent));
            if ((ArrivalPort == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ArrivalPort));
            }
            if ((FranchisePartnerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(FranchisePartnerCode));
            }
            if ((Refurb == null)) {
                throw new global::System.ArgumentNullException("Refurb");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Refurb));
            }
            if ((FileNo == null)) {
                throw new global::System.ArgumentNullException("FileNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(FileNo));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(ImportDate));
            if ((LastImportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(LastImportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(CreateDate));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(IsValid));
            if ((LastSentLoadingPort == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(LastSentLoadingPort));
            }
            if ((LastSentOfficeCode == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(LastSentOfficeCode));
            }
            if ((LastSentQuota == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(LastSentQuota));
            }
            if ((LastSentDocType == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(LastSentDocType));
            }
            if ((LastSentOriginCountry == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(LastSentOriginCountry));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_OrderRefId));
            if ((Original_ItemNo == null)) {
                throw new global::System.ArgumentNullException("Original_ItemNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_ItemNo));
            }
            if ((Original_ItemDesc == null)) {
                throw new global::System.ArgumentNullException("Original_ItemDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_ItemDesc));
            }
            if ((Original_TransportMode == null)) {
                throw new global::System.ArgumentNullException("Original_TransportMode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_TransportMode));
            }
            if ((Original_CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("Original_CountryOfOrigin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_CountryOfOrigin));
            }
            if ((Original_DepartCountry == null)) {
                throw new global::System.ArgumentNullException("Original_DepartCountry");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_DepartCountry));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_ExFactoryDate));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_InWarehouseDate));
            if ((Original_SupplierCode == null)) {
                throw new global::System.ArgumentNullException("Original_SupplierCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_SupplierCode));
            }
            if ((Original_SupplierName == null)) {
                throw new global::System.ArgumentNullException("Original_SupplierName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_SupplierName));
            }
            if ((Original_HangBox == null)) {
                throw new global::System.ArgumentNullException("Original_HangBox");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_HangBox));
            }
            if ((Original_BuyingTerms == null)) {
                throw new global::System.ArgumentNullException("Original_BuyingTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_BuyingTerms));
            }
            if ((Original_FinalDest == null)) {
                throw new global::System.ArgumentNullException("Original_FinalDest");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_FinalDest));
            }
            if ((Original_Currency == null)) {
                throw new global::System.ArgumentNullException("Original_Currency");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_Currency));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_NextFreightPercent));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_SupplierFreightPercent));
            if ((Original_ArrivalPort == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_ArrivalPort));
            }
            if ((Original_FranchisePartnerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_FranchisePartnerCode));
            }
            if ((Original_Refurb == null)) {
                throw new global::System.ArgumentNullException("Original_Refurb");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_Refurb));
            }
            if ((Original_FileNo == null)) {
                throw new global::System.ArgumentNullException("Original_FileNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_FileNo));
            }
            this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(Original_ImportDate));
            if ((Original_LastImportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_LastImportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(Original_CreateDate));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(Original_IsValid));
            if ((Original_LastSentLoadingPort == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_LastSentLoadingPort));
            }
            if ((Original_LastSentOfficeCode == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_LastSentOfficeCode));
            }
            if ((Original_LastSentQuota == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_LastSentQuota));
            }
            if ((Original_LastSentDocType == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_LastSentDocType));
            }
            if ((Original_LastSentOriginCountry == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_LastSentOriginCountry));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ItemNo, 
                    string ItemDesc, 
                    string TransportMode, 
                    string CountryOfOrigin, 
                    string DepartCountry, 
                    System.DateTime ExFactoryDate, 
                    System.DateTime InWarehouseDate, 
                    string SupplierCode, 
                    string SupplierName, 
                    string HangBox, 
                    string BuyingTerms, 
                    string FinalDest, 
                    string Currency, 
                    int NextFreightPercent, 
                    int SupplierFreightPercent, 
                    string ArrivalPort, 
                    string FranchisePartnerCode, 
                    string Refurb, 
                    string FileNo, 
                    System.DateTime ImportDate, 
                    global::System.Nullable<global::System.DateTime> LastImportDate, 
                    System.DateTime CreateDate, 
                    bool IsValid, 
                    string LastSentLoadingPort, 
                    string LastSentOfficeCode, 
                    string LastSentQuota, 
                    string LastSentDocType, 
                    string LastSentOriginCountry, 
                    int Original_OrderRefId, 
                    string Original_ItemNo, 
                    string Original_ItemDesc, 
                    string Original_TransportMode, 
                    string Original_CountryOfOrigin, 
                    string Original_DepartCountry, 
                    System.DateTime Original_ExFactoryDate, 
                    System.DateTime Original_InWarehouseDate, 
                    string Original_SupplierCode, 
                    string Original_SupplierName, 
                    string Original_HangBox, 
                    string Original_BuyingTerms, 
                    string Original_FinalDest, 
                    string Original_Currency, 
                    int Original_NextFreightPercent, 
                    int Original_SupplierFreightPercent, 
                    string Original_ArrivalPort, 
                    string Original_FranchisePartnerCode, 
                    string Original_Refurb, 
                    string Original_FileNo, 
                    System.DateTime Original_ImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_LastImportDate, 
                    System.DateTime Original_CreateDate, 
                    bool Original_IsValid, 
                    string Original_LastSentLoadingPort, 
                    string Original_LastSentOfficeCode, 
                    string Original_LastSentQuota, 
                    string Original_LastSentDocType, 
                    string Original_LastSentOriginCountry) {
            return this.Update(Original_OrderRefId, ItemNo, ItemDesc, TransportMode, CountryOfOrigin, DepartCountry, ExFactoryDate, InWarehouseDate, SupplierCode, SupplierName, HangBox, BuyingTerms, FinalDest, Currency, NextFreightPercent, SupplierFreightPercent, ArrivalPort, FranchisePartnerCode, Refurb, FileNo, ImportDate, LastImportDate, CreateDate, IsValid, LastSentLoadingPort, LastSentOfficeCode, LastSentQuota, LastSentDocType, LastSentOriginCountry, Original_OrderRefId, Original_ItemNo, Original_ItemDesc, Original_TransportMode, Original_CountryOfOrigin, Original_DepartCountry, Original_ExFactoryDate, Original_InWarehouseDate, Original_SupplierCode, Original_SupplierName, Original_HangBox, Original_BuyingTerms, Original_FinalDest, Original_Currency, Original_NextFreightPercent, Original_SupplierFreightPercent, Original_ArrivalPort, Original_FranchisePartnerCode, Original_Refurb, Original_FileNo, Original_ImportDate, Original_LastImportDate, Original_CreateDate, Original_IsValid, Original_LastSentLoadingPort, Original_LastSentOfficeCode, Original_LastSentQuota, Original_LastSentDocType, Original_LastSentOriginCountry);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ILSOrderCopyTableAdapter _iLSOrderCopyTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ILSOrderCopyTableAdapter ILSOrderCopyTableAdapter {
            get {
                return this._iLSOrderCopyTableAdapter;
            }
            set {
                this._iLSOrderCopyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._iLSOrderCopyTableAdapter != null) 
                            && (this._iLSOrderCopyTableAdapter.Connection != null))) {
                    return this._iLSOrderCopyTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._iLSOrderCopyTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ILSOrderCopyDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._iLSOrderCopyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ILSOrderCopy.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iLSOrderCopyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ILSOrderCopyDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._iLSOrderCopyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ILSOrderCopy.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iLSOrderCopyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ILSOrderCopyDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._iLSOrderCopyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ILSOrderCopy.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iLSOrderCopyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ILSOrderCopyDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._iLSOrderCopyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iLSOrderCopyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._iLSOrderCopyTableAdapter != null)) {
                    revertConnections.Add(this._iLSOrderCopyTableAdapter, this._iLSOrderCopyTableAdapter.Connection);
                    this._iLSOrderCopyTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._iLSOrderCopyTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._iLSOrderCopyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iLSOrderCopyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iLSOrderCopyTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._iLSOrderCopyTableAdapter != null)) {
                    this._iLSOrderCopyTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._iLSOrderCopyTableAdapter]));
                    this._iLSOrderCopyTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591