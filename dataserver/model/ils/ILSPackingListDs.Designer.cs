//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.dataserver.model.ils {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ILSPackingListDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ILSPackingListDs : global::System.Data.DataSet {
        
        private ILSPackingListDataTable tableILSPackingList;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ILSPackingListDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected ILSPackingListDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ILSPackingList"] != null)) {
                    base.Tables.Add(new ILSPackingListDataTable(ds.Tables["ILSPackingList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ILSPackingListDataTable ILSPackingList {
            get {
                return this.tableILSPackingList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ILSPackingListDs cln = ((ILSPackingListDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ILSPackingList"] != null)) {
                    base.Tables.Add(new ILSPackingListDataTable(ds.Tables["ILSPackingList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableILSPackingList = ((ILSPackingListDataTable)(base.Tables["ILSPackingList"]));
            if ((initTable == true)) {
                if ((this.tableILSPackingList != null)) {
                    this.tableILSPackingList.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ILSPackingListDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ILSPackingListDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableILSPackingList = new ILSPackingListDataTable();
            base.Tables.Add(this.tableILSPackingList);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeILSPackingList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ILSPackingListDs ds = new ILSPackingListDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ILSPackingListRowChangeEventHandler(object sender, ILSPackingListRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ILSPackingListDataTable : global::System.Data.TypedTableBase<ILSPackingListRow> {
            
            private global::System.Data.DataColumn columnOrderRefId;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnTransportMode;
            
            private global::System.Data.DataColumn columnCountryOfOrigin;
            
            private global::System.Data.DataColumn columnDepartPort;
            
            private global::System.Data.DataColumn columnExFactoryDate;
            
            private global::System.Data.DataColumn columnInWarehouseDate;
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnHangBox;
            
            private global::System.Data.DataColumn columnBuyingTerms;
            
            private global::System.Data.DataColumn columnFinalDest;
            
            private global::System.Data.DataColumn columnPrepaidFreightCosts;
            
            private global::System.Data.DataColumn columnHandoverDate;
            
            private global::System.Data.DataColumn columnVendorLoaded;
            
            private global::System.Data.DataColumn columnArrivalPort;
            
            private global::System.Data.DataColumn columnFranchisePartnerCode;
            
            private global::System.Data.DataColumn columnRefurb;
            
            private global::System.Data.DataColumn columnTotalPieces;
            
            private global::System.Data.DataColumn columnTotalCartons;
            
            private global::System.Data.DataColumn columnTotalNetWeight;
            
            private global::System.Data.DataColumn columnTotalGrossWeight;
            
            private global::System.Data.DataColumn columnTotalVolume;
            
            private global::System.Data.DataColumn columnFileNo;
            
            private global::System.Data.DataColumn columnImportDate;
            
            private global::System.Data.DataColumn columnLastImportDate;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnIsUploaded;
            
            private global::System.Data.DataColumn columnNSLDeliveryNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSPackingListDataTable() {
                this.TableName = "ILSPackingList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ILSPackingListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ILSPackingListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderRefIdColumn {
                get {
                    return this.columnOrderRefId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransportModeColumn {
                get {
                    return this.columnTransportMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryOfOriginColumn {
                get {
                    return this.columnCountryOfOrigin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DepartPortColumn {
                get {
                    return this.columnDepartPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExFactoryDateColumn {
                get {
                    return this.columnExFactoryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InWarehouseDateColumn {
                get {
                    return this.columnInWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HangBoxColumn {
                get {
                    return this.columnHangBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BuyingTermsColumn {
                get {
                    return this.columnBuyingTerms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinalDestColumn {
                get {
                    return this.columnFinalDest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrepaidFreightCostsColumn {
                get {
                    return this.columnPrepaidFreightCosts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandoverDateColumn {
                get {
                    return this.columnHandoverDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorLoadedColumn {
                get {
                    return this.columnVendorLoaded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ArrivalPortColumn {
                get {
                    return this.columnArrivalPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FranchisePartnerCodeColumn {
                get {
                    return this.columnFranchisePartnerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefurbColumn {
                get {
                    return this.columnRefurb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPiecesColumn {
                get {
                    return this.columnTotalPieces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCartonsColumn {
                get {
                    return this.columnTotalCartons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalNetWeightColumn {
                get {
                    return this.columnTotalNetWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalGrossWeightColumn {
                get {
                    return this.columnTotalGrossWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalVolumeColumn {
                get {
                    return this.columnTotalVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FileNoColumn {
                get {
                    return this.columnFileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportDateColumn {
                get {
                    return this.columnImportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastImportDateColumn {
                get {
                    return this.columnLastImportDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsUploadedColumn {
                get {
                    return this.columnIsUploaded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLDeliveryNoColumn {
                get {
                    return this.columnNSLDeliveryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSPackingListRow this[int index] {
                get {
                    return ((ILSPackingListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ILSPackingListRowChangeEventHandler ILSPackingListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ILSPackingListRowChangeEventHandler ILSPackingListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ILSPackingListRowChangeEventHandler ILSPackingListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ILSPackingListRowChangeEventHandler ILSPackingListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddILSPackingListRow(ILSPackingListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSPackingListRow AddILSPackingListRow(
                        int OrderRefId, 
                        string ItemNo, 
                        string ItemDesc, 
                        string TransportMode, 
                        string CountryOfOrigin, 
                        string DepartPort, 
                        System.DateTime ExFactoryDate, 
                        System.DateTime InWarehouseDate, 
                        string SupplierCode, 
                        string SupplierName, 
                        string HangBox, 
                        string BuyingTerms, 
                        string FinalDest, 
                        string PrepaidFreightCosts, 
                        System.DateTime HandoverDate, 
                        string VendorLoaded, 
                        string ArrivalPort, 
                        string FranchisePartnerCode, 
                        string Refurb, 
                        int TotalPieces, 
                        int TotalCartons, 
                        decimal TotalNetWeight, 
                        decimal TotalGrossWeight, 
                        decimal TotalVolume, 
                        string FileNo, 
                        System.DateTime ImportDate, 
                        System.DateTime LastImportDate, 
                        System.DateTime CreateDate, 
                        bool IsUploaded, 
                        int NSLDeliveryNo) {
                ILSPackingListRow rowILSPackingListRow = ((ILSPackingListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OrderRefId,
                        ItemNo,
                        ItemDesc,
                        TransportMode,
                        CountryOfOrigin,
                        DepartPort,
                        ExFactoryDate,
                        InWarehouseDate,
                        SupplierCode,
                        SupplierName,
                        HangBox,
                        BuyingTerms,
                        FinalDest,
                        PrepaidFreightCosts,
                        HandoverDate,
                        VendorLoaded,
                        ArrivalPort,
                        FranchisePartnerCode,
                        Refurb,
                        TotalPieces,
                        TotalCartons,
                        TotalNetWeight,
                        TotalGrossWeight,
                        TotalVolume,
                        FileNo,
                        ImportDate,
                        LastImportDate,
                        CreateDate,
                        IsUploaded,
                        NSLDeliveryNo};
                rowILSPackingListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowILSPackingListRow);
                return rowILSPackingListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSPackingListRow FindByOrderRefId(int OrderRefId) {
                return ((ILSPackingListRow)(this.Rows.Find(new object[] {
                            OrderRefId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ILSPackingListDataTable cln = ((ILSPackingListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ILSPackingListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOrderRefId = base.Columns["OrderRefId"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnTransportMode = base.Columns["TransportMode"];
                this.columnCountryOfOrigin = base.Columns["CountryOfOrigin"];
                this.columnDepartPort = base.Columns["DepartPort"];
                this.columnExFactoryDate = base.Columns["ExFactoryDate"];
                this.columnInWarehouseDate = base.Columns["InWarehouseDate"];
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnHangBox = base.Columns["HangBox"];
                this.columnBuyingTerms = base.Columns["BuyingTerms"];
                this.columnFinalDest = base.Columns["FinalDest"];
                this.columnPrepaidFreightCosts = base.Columns["PrepaidFreightCosts"];
                this.columnHandoverDate = base.Columns["HandoverDate"];
                this.columnVendorLoaded = base.Columns["VendorLoaded"];
                this.columnArrivalPort = base.Columns["ArrivalPort"];
                this.columnFranchisePartnerCode = base.Columns["FranchisePartnerCode"];
                this.columnRefurb = base.Columns["Refurb"];
                this.columnTotalPieces = base.Columns["TotalPieces"];
                this.columnTotalCartons = base.Columns["TotalCartons"];
                this.columnTotalNetWeight = base.Columns["TotalNetWeight"];
                this.columnTotalGrossWeight = base.Columns["TotalGrossWeight"];
                this.columnTotalVolume = base.Columns["TotalVolume"];
                this.columnFileNo = base.Columns["FileNo"];
                this.columnImportDate = base.Columns["ImportDate"];
                this.columnLastImportDate = base.Columns["LastImportDate"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnIsUploaded = base.Columns["IsUploaded"];
                this.columnNSLDeliveryNo = base.Columns["NSLDeliveryNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOrderRefId = new global::System.Data.DataColumn("OrderRefId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderRefId);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnTransportMode = new global::System.Data.DataColumn("TransportMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportMode);
                this.columnCountryOfOrigin = new global::System.Data.DataColumn("CountryOfOrigin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryOfOrigin);
                this.columnDepartPort = new global::System.Data.DataColumn("DepartPort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartPort);
                this.columnExFactoryDate = new global::System.Data.DataColumn("ExFactoryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExFactoryDate);
                this.columnInWarehouseDate = new global::System.Data.DataColumn("InWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInWarehouseDate);
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnHangBox = new global::System.Data.DataColumn("HangBox", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHangBox);
                this.columnBuyingTerms = new global::System.Data.DataColumn("BuyingTerms", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyingTerms);
                this.columnFinalDest = new global::System.Data.DataColumn("FinalDest", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalDest);
                this.columnPrepaidFreightCosts = new global::System.Data.DataColumn("PrepaidFreightCosts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrepaidFreightCosts);
                this.columnHandoverDate = new global::System.Data.DataColumn("HandoverDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandoverDate);
                this.columnVendorLoaded = new global::System.Data.DataColumn("VendorLoaded", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorLoaded);
                this.columnArrivalPort = new global::System.Data.DataColumn("ArrivalPort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalPort);
                this.columnFranchisePartnerCode = new global::System.Data.DataColumn("FranchisePartnerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFranchisePartnerCode);
                this.columnRefurb = new global::System.Data.DataColumn("Refurb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefurb);
                this.columnTotalPieces = new global::System.Data.DataColumn("TotalPieces", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPieces);
                this.columnTotalCartons = new global::System.Data.DataColumn("TotalCartons", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCartons);
                this.columnTotalNetWeight = new global::System.Data.DataColumn("TotalNetWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNetWeight);
                this.columnTotalGrossWeight = new global::System.Data.DataColumn("TotalGrossWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalGrossWeight);
                this.columnTotalVolume = new global::System.Data.DataColumn("TotalVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalVolume);
                this.columnFileNo = new global::System.Data.DataColumn("FileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFileNo);
                this.columnImportDate = new global::System.Data.DataColumn("ImportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDate);
                this.columnLastImportDate = new global::System.Data.DataColumn("LastImportDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastImportDate);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnIsUploaded = new global::System.Data.DataColumn("IsUploaded", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUploaded);
                this.columnNSLDeliveryNo = new global::System.Data.DataColumn("NSLDeliveryNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLDeliveryNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOrderRefId}, true));
                this.columnOrderRefId.AllowDBNull = false;
                this.columnOrderRefId.Unique = true;
                this.columnItemNo.AllowDBNull = false;
                this.columnItemNo.MaxLength = 20;
                this.columnItemDesc.AllowDBNull = false;
                this.columnItemDesc.MaxLength = 50;
                this.columnTransportMode.AllowDBNull = false;
                this.columnTransportMode.MaxLength = 5;
                this.columnCountryOfOrigin.AllowDBNull = false;
                this.columnCountryOfOrigin.MaxLength = 2;
                this.columnDepartPort.AllowDBNull = false;
                this.columnDepartPort.MaxLength = 5;
                this.columnExFactoryDate.AllowDBNull = false;
                this.columnInWarehouseDate.AllowDBNull = false;
                this.columnSupplierCode.AllowDBNull = false;
                this.columnSupplierCode.MaxLength = 10;
                this.columnSupplierName.AllowDBNull = false;
                this.columnSupplierName.MaxLength = 50;
                this.columnHangBox.AllowDBNull = false;
                this.columnHangBox.MaxLength = 5;
                this.columnBuyingTerms.AllowDBNull = false;
                this.columnBuyingTerms.MaxLength = 10;
                this.columnFinalDest.AllowDBNull = false;
                this.columnFinalDest.MaxLength = 10;
                this.columnPrepaidFreightCosts.AllowDBNull = false;
                this.columnPrepaidFreightCosts.MaxLength = 10;
                this.columnVendorLoaded.AllowDBNull = false;
                this.columnVendorLoaded.MaxLength = 1;
                this.columnArrivalPort.MaxLength = 5;
                this.columnFranchisePartnerCode.MaxLength = 4;
                this.columnRefurb.AllowDBNull = false;
                this.columnRefurb.MaxLength = 1;
                this.columnTotalPieces.AllowDBNull = false;
                this.columnTotalCartons.AllowDBNull = false;
                this.columnTotalNetWeight.AllowDBNull = false;
                this.columnTotalGrossWeight.AllowDBNull = false;
                this.columnTotalVolume.AllowDBNull = false;
                this.columnFileNo.AllowDBNull = false;
                this.columnFileNo.MaxLength = 10;
                this.columnImportDate.AllowDBNull = false;
                this.columnIsUploaded.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSPackingListRow NewILSPackingListRow() {
                return ((ILSPackingListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ILSPackingListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ILSPackingListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ILSPackingListRowChanged != null)) {
                    this.ILSPackingListRowChanged(this, new ILSPackingListRowChangeEvent(((ILSPackingListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ILSPackingListRowChanging != null)) {
                    this.ILSPackingListRowChanging(this, new ILSPackingListRowChangeEvent(((ILSPackingListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ILSPackingListRowDeleted != null)) {
                    this.ILSPackingListRowDeleted(this, new ILSPackingListRowChangeEvent(((ILSPackingListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ILSPackingListRowDeleting != null)) {
                    this.ILSPackingListRowDeleting(this, new ILSPackingListRowChangeEvent(((ILSPackingListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveILSPackingListRow(ILSPackingListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ILSPackingListDs ds = new ILSPackingListDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ILSPackingListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ILSPackingListRow : global::System.Data.DataRow {
            
            private ILSPackingListDataTable tableILSPackingList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ILSPackingListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableILSPackingList = ((ILSPackingListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrderRefId {
                get {
                    return ((int)(this[this.tableILSPackingList.OrderRefIdColumn]));
                }
                set {
                    this[this.tableILSPackingList.OrderRefIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemNo {
                get {
                    return ((string)(this[this.tableILSPackingList.ItemNoColumn]));
                }
                set {
                    this[this.tableILSPackingList.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemDesc {
                get {
                    return ((string)(this[this.tableILSPackingList.ItemDescColumn]));
                }
                set {
                    this[this.tableILSPackingList.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransportMode {
                get {
                    return ((string)(this[this.tableILSPackingList.TransportModeColumn]));
                }
                set {
                    this[this.tableILSPackingList.TransportModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryOfOrigin {
                get {
                    return ((string)(this[this.tableILSPackingList.CountryOfOriginColumn]));
                }
                set {
                    this[this.tableILSPackingList.CountryOfOriginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DepartPort {
                get {
                    return ((string)(this[this.tableILSPackingList.DepartPortColumn]));
                }
                set {
                    this[this.tableILSPackingList.DepartPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExFactoryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableILSPackingList.ExFactoryDateColumn]));
                }
                set {
                    this[this.tableILSPackingList.ExFactoryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InWarehouseDate {
                get {
                    return ((global::System.DateTime)(this[this.tableILSPackingList.InWarehouseDateColumn]));
                }
                set {
                    this[this.tableILSPackingList.InWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierCode {
                get {
                    return ((string)(this[this.tableILSPackingList.SupplierCodeColumn]));
                }
                set {
                    this[this.tableILSPackingList.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierName {
                get {
                    return ((string)(this[this.tableILSPackingList.SupplierNameColumn]));
                }
                set {
                    this[this.tableILSPackingList.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HangBox {
                get {
                    return ((string)(this[this.tableILSPackingList.HangBoxColumn]));
                }
                set {
                    this[this.tableILSPackingList.HangBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BuyingTerms {
                get {
                    return ((string)(this[this.tableILSPackingList.BuyingTermsColumn]));
                }
                set {
                    this[this.tableILSPackingList.BuyingTermsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FinalDest {
                get {
                    return ((string)(this[this.tableILSPackingList.FinalDestColumn]));
                }
                set {
                    this[this.tableILSPackingList.FinalDestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrepaidFreightCosts {
                get {
                    return ((string)(this[this.tableILSPackingList.PrepaidFreightCostsColumn]));
                }
                set {
                    this[this.tableILSPackingList.PrepaidFreightCostsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime HandoverDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableILSPackingList.HandoverDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HandoverDate\' in table \'ILSPackingList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSPackingList.HandoverDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorLoaded {
                get {
                    return ((string)(this[this.tableILSPackingList.VendorLoadedColumn]));
                }
                set {
                    this[this.tableILSPackingList.VendorLoadedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ArrivalPort {
                get {
                    try {
                        return ((string)(this[this.tableILSPackingList.ArrivalPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivalPort\' in table \'ILSPackingList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSPackingList.ArrivalPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FranchisePartnerCode {
                get {
                    try {
                        return ((string)(this[this.tableILSPackingList.FranchisePartnerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FranchisePartnerCode\' in table \'ILSPackingList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSPackingList.FranchisePartnerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Refurb {
                get {
                    return ((string)(this[this.tableILSPackingList.RefurbColumn]));
                }
                set {
                    this[this.tableILSPackingList.RefurbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalPieces {
                get {
                    return ((int)(this[this.tableILSPackingList.TotalPiecesColumn]));
                }
                set {
                    this[this.tableILSPackingList.TotalPiecesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalCartons {
                get {
                    return ((int)(this[this.tableILSPackingList.TotalCartonsColumn]));
                }
                set {
                    this[this.tableILSPackingList.TotalCartonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalNetWeight {
                get {
                    return ((decimal)(this[this.tableILSPackingList.TotalNetWeightColumn]));
                }
                set {
                    this[this.tableILSPackingList.TotalNetWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalGrossWeight {
                get {
                    return ((decimal)(this[this.tableILSPackingList.TotalGrossWeightColumn]));
                }
                set {
                    this[this.tableILSPackingList.TotalGrossWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalVolume {
                get {
                    return ((decimal)(this[this.tableILSPackingList.TotalVolumeColumn]));
                }
                set {
                    this[this.tableILSPackingList.TotalVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FileNo {
                get {
                    return ((string)(this[this.tableILSPackingList.FileNoColumn]));
                }
                set {
                    this[this.tableILSPackingList.FileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ImportDate {
                get {
                    return ((global::System.DateTime)(this[this.tableILSPackingList.ImportDateColumn]));
                }
                set {
                    this[this.tableILSPackingList.ImportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastImportDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableILSPackingList.LastImportDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastImportDate\' in table \'ILSPackingList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSPackingList.LastImportDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableILSPackingList.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateDate\' in table \'ILSPackingList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSPackingList.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUploaded {
                get {
                    return ((bool)(this[this.tableILSPackingList.IsUploadedColumn]));
                }
                set {
                    this[this.tableILSPackingList.IsUploadedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NSLDeliveryNo {
                get {
                    try {
                        return ((int)(this[this.tableILSPackingList.NSLDeliveryNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSLDeliveryNo\' in table \'ILSPackingList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableILSPackingList.NSLDeliveryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandoverDateNull() {
                return this.IsNull(this.tableILSPackingList.HandoverDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandoverDateNull() {
                this[this.tableILSPackingList.HandoverDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArrivalPortNull() {
                return this.IsNull(this.tableILSPackingList.ArrivalPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArrivalPortNull() {
                this[this.tableILSPackingList.ArrivalPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFranchisePartnerCodeNull() {
                return this.IsNull(this.tableILSPackingList.FranchisePartnerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFranchisePartnerCodeNull() {
                this[this.tableILSPackingList.FranchisePartnerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastImportDateNull() {
                return this.IsNull(this.tableILSPackingList.LastImportDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastImportDateNull() {
                this[this.tableILSPackingList.LastImportDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tableILSPackingList.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateDateNull() {
                this[this.tableILSPackingList.CreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNSLDeliveryNoNull() {
                return this.IsNull(this.tableILSPackingList.NSLDeliveryNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNSLDeliveryNoNull() {
                this[this.tableILSPackingList.NSLDeliveryNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ILSPackingListRowChangeEvent : global::System.EventArgs {
            
            private ILSPackingListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSPackingListRowChangeEvent(ILSPackingListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ILSPackingListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.dataserver.model.ils.ILSPackingListDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ILSPackingListTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ILSPackingListTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ILSPackingList";
            tableMapping.ColumnMappings.Add("OrderRefId", "OrderRefId");
            tableMapping.ColumnMappings.Add("ItemNo", "ItemNo");
            tableMapping.ColumnMappings.Add("ItemDesc", "ItemDesc");
            tableMapping.ColumnMappings.Add("TransportMode", "TransportMode");
            tableMapping.ColumnMappings.Add("CountryOfOrigin", "CountryOfOrigin");
            tableMapping.ColumnMappings.Add("DepartPort", "DepartPort");
            tableMapping.ColumnMappings.Add("ExFactoryDate", "ExFactoryDate");
            tableMapping.ColumnMappings.Add("InWarehouseDate", "InWarehouseDate");
            tableMapping.ColumnMappings.Add("SupplierCode", "SupplierCode");
            tableMapping.ColumnMappings.Add("SupplierName", "SupplierName");
            tableMapping.ColumnMappings.Add("HangBox", "HangBox");
            tableMapping.ColumnMappings.Add("BuyingTerms", "BuyingTerms");
            tableMapping.ColumnMappings.Add("FinalDest", "FinalDest");
            tableMapping.ColumnMappings.Add("PrepaidFreightCosts", "PrepaidFreightCosts");
            tableMapping.ColumnMappings.Add("HandoverDate", "HandoverDate");
            tableMapping.ColumnMappings.Add("VendorLoaded", "VendorLoaded");
            tableMapping.ColumnMappings.Add("ArrivalPort", "ArrivalPort");
            tableMapping.ColumnMappings.Add("FranchisePartnerCode", "FranchisePartnerCode");
            tableMapping.ColumnMappings.Add("Refurb", "Refurb");
            tableMapping.ColumnMappings.Add("TotalPieces", "TotalPieces");
            tableMapping.ColumnMappings.Add("TotalCartons", "TotalCartons");
            tableMapping.ColumnMappings.Add("TotalNetWeight", "TotalNetWeight");
            tableMapping.ColumnMappings.Add("TotalGrossWeight", "TotalGrossWeight");
            tableMapping.ColumnMappings.Add("TotalVolume", "TotalVolume");
            tableMapping.ColumnMappings.Add("FileNo", "FileNo");
            tableMapping.ColumnMappings.Add("ImportDate", "ImportDate");
            tableMapping.ColumnMappings.Add("LastImportDate", "LastImportDate");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("IsUploaded", "IsUploaded");
            tableMapping.ColumnMappings.Add("NSLDeliveryNo", "NSLDeliveryNo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ILSPackingList] WHERE (([OrderRefId] = @Original_OrderRefId) A" +
                "ND ([ItemNo] = @Original_ItemNo) AND ([ItemDesc] = @Original_ItemDesc) AND ([Tra" +
                "nsportMode] = @Original_TransportMode) AND ([CountryOfOrigin] = @Original_Countr" +
                "yOfOrigin) AND ([DepartPort] = @Original_DepartPort) AND ([ExFactoryDate] = @Ori" +
                "ginal_ExFactoryDate) AND ([InWarehouseDate] = @Original_InWarehouseDate) AND ([S" +
                "upplierCode] = @Original_SupplierCode) AND ([SupplierName] = @Original_SupplierN" +
                "ame) AND ([HangBox] = @Original_HangBox) AND ([BuyingTerms] = @Original_BuyingTe" +
                "rms) AND ([FinalDest] = @Original_FinalDest) AND ([PrepaidFreightCosts] = @Origi" +
                "nal_PrepaidFreightCosts) AND ((@IsNull_HandoverDate = 1 AND [HandoverDate] IS NU" +
                "LL) OR ([HandoverDate] = @Original_HandoverDate)) AND ([VendorLoaded] = @Origina" +
                "l_VendorLoaded) AND ((@IsNull_ArrivalPort = 1 AND [ArrivalPort] IS NULL) OR ([Ar" +
                "rivalPort] = @Original_ArrivalPort)) AND ((@IsNull_FranchisePartnerCode = 1 AND " +
                "[FranchisePartnerCode] IS NULL) OR ([FranchisePartnerCode] = @Original_Franchise" +
                "PartnerCode)) AND ([Refurb] = @Original_Refurb) AND ([TotalPieces] = @Original_T" +
                "otalPieces) AND ([TotalCartons] = @Original_TotalCartons) AND ([TotalNetWeight] " +
                "= @Original_TotalNetWeight) AND ([TotalGrossWeight] = @Original_TotalGrossWeight" +
                ") AND ([TotalVolume] = @Original_TotalVolume) AND ([FileNo] = @Original_FileNo) " +
                "AND ([ImportDate] = @Original_ImportDate) AND ((@IsNull_LastImportDate = 1 AND [" +
                "LastImportDate] IS NULL) OR ([LastImportDate] = @Original_LastImportDate)) AND (" +
                "(@IsNull_CreateDate = 1 AND [CreateDate] IS NULL) OR ([CreateDate] = @Original_C" +
                "reateDate)) AND ([IsUploaded] = @Original_IsUploaded) AND ((@IsNull_NSLDeliveryN" +
                "o = 1 AND [NSLDeliveryNo] IS NULL) OR ([NSLDeliveryNo] = @Original_NSLDeliveryNo" +
                ")))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderRefId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderRefId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOrigin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartPort", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExFactoryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExFactoryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InWarehouseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HangBox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HangBox", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuyingTerms", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyingTerms", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FinalDest", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinalDest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrepaidFreightCosts", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrepaidFreightCosts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HandoverDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandoverDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HandoverDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandoverDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorLoaded", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorLoaded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivalPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivalPort", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FranchisePartnerCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FranchisePartnerCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FranchisePartnerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FranchisePartnerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refurb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refurb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPieces", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPieces", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCartons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCartons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalNetWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalNetWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalGrossWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalGrossWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalVolume", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "TotalVolume", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FileNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastImportDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastImportDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastImportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastImportDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreateDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsUploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUploaded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NSLDeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLDeliveryNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NSLDeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLDeliveryNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ILSPackingList] ([OrderRefId], [ItemNo], [ItemDesc], [TransportMode], [CountryOfOrigin], [DepartPort], [ExFactoryDate], [InWarehouseDate], [SupplierCode], [SupplierName], [HangBox], [BuyingTerms], [FinalDest], [PrepaidFreightCosts], [HandoverDate], [VendorLoaded], [ArrivalPort], [FranchisePartnerCode], [Refurb], [TotalPieces], [TotalCartons], [TotalNetWeight], [TotalGrossWeight], [TotalVolume], [FileNo], [ImportDate], [LastImportDate], [CreateDate], [IsUploaded], [NSLDeliveryNo]) VALUES (@OrderRefId, @ItemNo, @ItemDesc, @TransportMode, @CountryOfOrigin, @DepartPort, @ExFactoryDate, @InWarehouseDate, @SupplierCode, @SupplierName, @HangBox, @BuyingTerms, @FinalDest, @PrepaidFreightCosts, @HandoverDate, @VendorLoaded, @ArrivalPort, @FranchisePartnerCode, @Refurb, @TotalPieces, @TotalCartons, @TotalNetWeight, @TotalGrossWeight, @TotalVolume, @FileNo, @ImportDate, @LastImportDate, @CreateDate, @IsUploaded, @NSLDeliveryNo);
SELECT OrderRefId, ItemNo, ItemDesc, TransportMode, CountryOfOrigin, DepartPort, ExFactoryDate, InWarehouseDate, SupplierCode, SupplierName, HangBox, BuyingTerms, FinalDest, PrepaidFreightCosts, HandoverDate, VendorLoaded, ArrivalPort, FranchisePartnerCode, Refurb, TotalPieces, TotalCartons, TotalNetWeight, TotalGrossWeight, TotalVolume, FileNo, ImportDate, LastImportDate, CreateDate, IsUploaded, NSLDeliveryNo FROM ILSPackingList WHERE (OrderRefId = @OrderRefId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderRefId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderRefId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOrigin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartPort", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExFactoryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExFactoryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InWarehouseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HangBox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HangBox", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyingTerms", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyingTerms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinalDest", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinalDest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrepaidFreightCosts", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrepaidFreightCosts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandoverDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandoverDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorLoaded", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorLoaded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivalPort", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FranchisePartnerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FranchisePartnerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refurb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refurb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPieces", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPieces", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCartons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCartons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalNetWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalNetWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalGrossWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalGrossWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalVolume", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "TotalVolume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FileNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastImportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastImportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsUploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUploaded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NSLDeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLDeliveryNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ILSPackingList] SET [OrderRefId] = @OrderRefId, [ItemNo] = @ItemNo," +
                " [ItemDesc] = @ItemDesc, [TransportMode] = @TransportMode, [CountryOfOrigin] = @" +
                "CountryOfOrigin, [DepartPort] = @DepartPort, [ExFactoryDate] = @ExFactoryDate, [" +
                "InWarehouseDate] = @InWarehouseDate, [SupplierCode] = @SupplierCode, [SupplierNa" +
                "me] = @SupplierName, [HangBox] = @HangBox, [BuyingTerms] = @BuyingTerms, [FinalD" +
                "est] = @FinalDest, [PrepaidFreightCosts] = @PrepaidFreightCosts, [HandoverDate] " +
                "= @HandoverDate, [VendorLoaded] = @VendorLoaded, [ArrivalPort] = @ArrivalPort, [" +
                "FranchisePartnerCode] = @FranchisePartnerCode, [Refurb] = @Refurb, [TotalPieces]" +
                " = @TotalPieces, [TotalCartons] = @TotalCartons, [TotalNetWeight] = @TotalNetWei" +
                "ght, [TotalGrossWeight] = @TotalGrossWeight, [TotalVolume] = @TotalVolume, [File" +
                "No] = @FileNo, [ImportDate] = @ImportDate, [LastImportDate] = @LastImportDate, [" +
                "CreateDate] = @CreateDate, [IsUploaded] = @IsUploaded, [NSLDeliveryNo] = @NSLDel" +
                "iveryNo WHERE (([OrderRefId] = @Original_OrderRefId) AND ([ItemNo] = @Original_I" +
                "temNo) AND ([ItemDesc] = @Original_ItemDesc) AND ([TransportMode] = @Original_Tr" +
                "ansportMode) AND ([CountryOfOrigin] = @Original_CountryOfOrigin) AND ([DepartPor" +
                "t] = @Original_DepartPort) AND ([ExFactoryDate] = @Original_ExFactoryDate) AND (" +
                "[InWarehouseDate] = @Original_InWarehouseDate) AND ([SupplierCode] = @Original_S" +
                "upplierCode) AND ([SupplierName] = @Original_SupplierName) AND ([HangBox] = @Ori" +
                "ginal_HangBox) AND ([BuyingTerms] = @Original_BuyingTerms) AND ([FinalDest] = @O" +
                "riginal_FinalDest) AND ([PrepaidFreightCosts] = @Original_PrepaidFreightCosts) A" +
                "ND ((@IsNull_HandoverDate = 1 AND [HandoverDate] IS NULL) OR ([HandoverDate] = @" +
                "Original_HandoverDate)) AND ([VendorLoaded] = @Original_VendorLoaded) AND ((@IsN" +
                "ull_ArrivalPort = 1 AND [ArrivalPort] IS NULL) OR ([ArrivalPort] = @Original_Arr" +
                "ivalPort)) AND ((@IsNull_FranchisePartnerCode = 1 AND [FranchisePartnerCode] IS " +
                "NULL) OR ([FranchisePartnerCode] = @Original_FranchisePartnerCode)) AND ([Refurb" +
                "] = @Original_Refurb) AND ([TotalPieces] = @Original_TotalPieces) AND ([TotalCar" +
                "tons] = @Original_TotalCartons) AND ([TotalNetWeight] = @Original_TotalNetWeight" +
                ") AND ([TotalGrossWeight] = @Original_TotalGrossWeight) AND ([TotalVolume] = @Or" +
                "iginal_TotalVolume) AND ([FileNo] = @Original_FileNo) AND ([ImportDate] = @Origi" +
                "nal_ImportDate) AND ((@IsNull_LastImportDate = 1 AND [LastImportDate] IS NULL) O" +
                "R ([LastImportDate] = @Original_LastImportDate)) AND ((@IsNull_CreateDate = 1 AN" +
                "D [CreateDate] IS NULL) OR ([CreateDate] = @Original_CreateDate)) AND ([IsUpload" +
                "ed] = @Original_IsUploaded) AND ((@IsNull_NSLDeliveryNo = 1 AND [NSLDeliveryNo] " +
                "IS NULL) OR ([NSLDeliveryNo] = @Original_NSLDeliveryNo)));\r\nSELECT OrderRefId, I" +
                "temNo, ItemDesc, TransportMode, CountryOfOrigin, DepartPort, ExFactoryDate, InWa" +
                "rehouseDate, SupplierCode, SupplierName, HangBox, BuyingTerms, FinalDest, Prepai" +
                "dFreightCosts, HandoverDate, VendorLoaded, ArrivalPort, FranchisePartnerCode, Re" +
                "furb, TotalPieces, TotalCartons, TotalNetWeight, TotalGrossWeight, TotalVolume, " +
                "FileNo, ImportDate, LastImportDate, CreateDate, IsUploaded, NSLDeliveryNo FROM I" +
                "LSPackingList WHERE (OrderRefId = @OrderRefId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrderRefId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderRefId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransportMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportMode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOrigin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DepartPort", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExFactoryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExFactoryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InWarehouseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HangBox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HangBox", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyingTerms", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyingTerms", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FinalDest", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinalDest", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrepaidFreightCosts", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrepaidFreightCosts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HandoverDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandoverDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorLoaded", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorLoaded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ArrivalPort", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FranchisePartnerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FranchisePartnerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refurb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refurb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPieces", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPieces", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCartons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCartons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalNetWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalNetWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalGrossWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalGrossWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalVolume", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "TotalVolume", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FileNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastImportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastImportDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsUploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUploaded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NSLDeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLDeliveryNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OrderRefId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrderRefId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ItemDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemDesc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransportMode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransportMode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOrigin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOrigin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DepartPort", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DepartPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExFactoryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExFactoryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InWarehouseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HangBox", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HangBox", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuyingTerms", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyingTerms", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FinalDest", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FinalDest", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrepaidFreightCosts", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrepaidFreightCosts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HandoverDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandoverDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HandoverDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HandoverDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorLoaded", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorLoaded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ArrivalPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ArrivalPort", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ArrivalPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FranchisePartnerCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FranchisePartnerCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FranchisePartnerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FranchisePartnerCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refurb", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refurb", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPieces", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPieces", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCartons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCartons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalNetWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalNetWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalGrossWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalGrossWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalVolume", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "TotalVolume", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FileNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FileNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastImportDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastImportDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastImportDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastImportDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreateDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsUploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsUploaded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NSLDeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLDeliveryNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NSLDeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLDeliveryNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.next.isam.dataserver.Properties.Settings.Default.ISAM_20090428ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT OrderRefId, ItemNo, ItemDesc, TransportMode, CountryOfOrigin, DepartPort, ExFactoryDate, InWarehouseDate, SupplierCode, SupplierName, HangBox, BuyingTerms, FinalDest, PrepaidFreightCosts, HandoverDate, VendorLoaded, ArrivalPort, FranchisePartnerCode, Refurb, TotalPieces, TotalCartons, TotalNetWeight, TotalGrossWeight, TotalVolume, FileNo, ImportDate, LastImportDate, CreateDate, IsUploaded, NSLDeliveryNo FROM dbo.ILSPackingList";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ILSPackingListDs.ILSPackingListDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ILSPackingListDs.ILSPackingListDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ILSPackingListDs.ILSPackingListDataTable dataTable = new ILSPackingListDs.ILSPackingListDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ILSPackingListDs.ILSPackingListDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ILSPackingListDs dataSet) {
            return this.Adapter.Update(dataSet, "ILSPackingList");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_OrderRefId, 
                    string Original_ItemNo, 
                    string Original_ItemDesc, 
                    string Original_TransportMode, 
                    string Original_CountryOfOrigin, 
                    string Original_DepartPort, 
                    System.DateTime Original_ExFactoryDate, 
                    System.DateTime Original_InWarehouseDate, 
                    string Original_SupplierCode, 
                    string Original_SupplierName, 
                    string Original_HangBox, 
                    string Original_BuyingTerms, 
                    string Original_FinalDest, 
                    string Original_PrepaidFreightCosts, 
                    global::System.Nullable<global::System.DateTime> Original_HandoverDate, 
                    string Original_VendorLoaded, 
                    string Original_ArrivalPort, 
                    string Original_FranchisePartnerCode, 
                    string Original_Refurb, 
                    int Original_TotalPieces, 
                    int Original_TotalCartons, 
                    decimal Original_TotalNetWeight, 
                    decimal Original_TotalGrossWeight, 
                    decimal Original_TotalVolume, 
                    string Original_FileNo, 
                    System.DateTime Original_ImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_LastImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_CreateDate, 
                    bool Original_IsUploaded, 
                    global::System.Nullable<int> Original_NSLDeliveryNo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_OrderRefId));
            if ((Original_ItemNo == null)) {
                throw new global::System.ArgumentNullException("Original_ItemNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ItemNo));
            }
            if ((Original_ItemDesc == null)) {
                throw new global::System.ArgumentNullException("Original_ItemDesc");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ItemDesc));
            }
            if ((Original_TransportMode == null)) {
                throw new global::System.ArgumentNullException("Original_TransportMode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TransportMode));
            }
            if ((Original_CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("Original_CountryOfOrigin");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CountryOfOrigin));
            }
            if ((Original_DepartPort == null)) {
                throw new global::System.ArgumentNullException("Original_DepartPort");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_DepartPort));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ExFactoryDate));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_InWarehouseDate));
            if ((Original_SupplierCode == null)) {
                throw new global::System.ArgumentNullException("Original_SupplierCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SupplierCode));
            }
            if ((Original_SupplierName == null)) {
                throw new global::System.ArgumentNullException("Original_SupplierName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SupplierName));
            }
            if ((Original_HangBox == null)) {
                throw new global::System.ArgumentNullException("Original_HangBox");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_HangBox));
            }
            if ((Original_BuyingTerms == null)) {
                throw new global::System.ArgumentNullException("Original_BuyingTerms");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_BuyingTerms));
            }
            if ((Original_FinalDest == null)) {
                throw new global::System.ArgumentNullException("Original_FinalDest");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_FinalDest));
            }
            if ((Original_PrepaidFreightCosts == null)) {
                throw new global::System.ArgumentNullException("Original_PrepaidFreightCosts");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_PrepaidFreightCosts));
            }
            if ((Original_HandoverDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_HandoverDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_VendorLoaded == null)) {
                throw new global::System.ArgumentNullException("Original_VendorLoaded");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_VendorLoaded));
            }
            if ((Original_ArrivalPort == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_ArrivalPort));
            }
            if ((Original_FranchisePartnerCode == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_FranchisePartnerCode));
            }
            if ((Original_Refurb == null)) {
                throw new global::System.ArgumentNullException("Original_Refurb");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_Refurb));
            }
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_TotalPieces));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_TotalCartons));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_TotalNetWeight));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((decimal)(Original_TotalGrossWeight));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_TotalVolume));
            if ((Original_FileNo == null)) {
                throw new global::System.ArgumentNullException("Original_FileNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_FileNo));
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_ImportDate));
            if ((Original_LastImportDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_LastImportDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_CreateDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_CreateDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((bool)(Original_IsUploaded));
            if ((Original_NSLDeliveryNo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((int)(Original_NSLDeliveryNo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int OrderRefId, 
                    string ItemNo, 
                    string ItemDesc, 
                    string TransportMode, 
                    string CountryOfOrigin, 
                    string DepartPort, 
                    System.DateTime ExFactoryDate, 
                    System.DateTime InWarehouseDate, 
                    string SupplierCode, 
                    string SupplierName, 
                    string HangBox, 
                    string BuyingTerms, 
                    string FinalDest, 
                    string PrepaidFreightCosts, 
                    global::System.Nullable<global::System.DateTime> HandoverDate, 
                    string VendorLoaded, 
                    string ArrivalPort, 
                    string FranchisePartnerCode, 
                    string Refurb, 
                    int TotalPieces, 
                    int TotalCartons, 
                    decimal TotalNetWeight, 
                    decimal TotalGrossWeight, 
                    decimal TotalVolume, 
                    string FileNo, 
                    System.DateTime ImportDate, 
                    global::System.Nullable<global::System.DateTime> LastImportDate, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    bool IsUploaded, 
                    global::System.Nullable<int> NSLDeliveryNo) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(OrderRefId));
            if ((ItemNo == null)) {
                throw new global::System.ArgumentNullException("ItemNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ItemNo));
            }
            if ((ItemDesc == null)) {
                throw new global::System.ArgumentNullException("ItemDesc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ItemDesc));
            }
            if ((TransportMode == null)) {
                throw new global::System.ArgumentNullException("TransportMode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TransportMode));
            }
            if ((CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("CountryOfOrigin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CountryOfOrigin));
            }
            if ((DepartPort == null)) {
                throw new global::System.ArgumentNullException("DepartPort");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DepartPort));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(ExFactoryDate));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(InWarehouseDate));
            if ((SupplierCode == null)) {
                throw new global::System.ArgumentNullException("SupplierCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SupplierCode));
            }
            if ((SupplierName == null)) {
                throw new global::System.ArgumentNullException("SupplierName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SupplierName));
            }
            if ((HangBox == null)) {
                throw new global::System.ArgumentNullException("HangBox");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(HangBox));
            }
            if ((BuyingTerms == null)) {
                throw new global::System.ArgumentNullException("BuyingTerms");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(BuyingTerms));
            }
            if ((FinalDest == null)) {
                throw new global::System.ArgumentNullException("FinalDest");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(FinalDest));
            }
            if ((PrepaidFreightCosts == null)) {
                throw new global::System.ArgumentNullException("PrepaidFreightCosts");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(PrepaidFreightCosts));
            }
            if ((HandoverDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(HandoverDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((VendorLoaded == null)) {
                throw new global::System.ArgumentNullException("VendorLoaded");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(VendorLoaded));
            }
            if ((ArrivalPort == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ArrivalPort));
            }
            if ((FranchisePartnerCode == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(FranchisePartnerCode));
            }
            if ((Refurb == null)) {
                throw new global::System.ArgumentNullException("Refurb");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(Refurb));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(TotalPieces));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(TotalCartons));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(TotalNetWeight));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(TotalGrossWeight));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(TotalVolume));
            if ((FileNo == null)) {
                throw new global::System.ArgumentNullException("FileNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(FileNo));
            }
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(ImportDate));
            if ((LastImportDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(LastImportDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CreateDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(CreateDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(IsUploaded));
            if ((NSLDeliveryNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(NSLDeliveryNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int OrderRefId, 
                    string ItemNo, 
                    string ItemDesc, 
                    string TransportMode, 
                    string CountryOfOrigin, 
                    string DepartPort, 
                    System.DateTime ExFactoryDate, 
                    System.DateTime InWarehouseDate, 
                    string SupplierCode, 
                    string SupplierName, 
                    string HangBox, 
                    string BuyingTerms, 
                    string FinalDest, 
                    string PrepaidFreightCosts, 
                    global::System.Nullable<global::System.DateTime> HandoverDate, 
                    string VendorLoaded, 
                    string ArrivalPort, 
                    string FranchisePartnerCode, 
                    string Refurb, 
                    int TotalPieces, 
                    int TotalCartons, 
                    decimal TotalNetWeight, 
                    decimal TotalGrossWeight, 
                    decimal TotalVolume, 
                    string FileNo, 
                    System.DateTime ImportDate, 
                    global::System.Nullable<global::System.DateTime> LastImportDate, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    bool IsUploaded, 
                    global::System.Nullable<int> NSLDeliveryNo, 
                    int Original_OrderRefId, 
                    string Original_ItemNo, 
                    string Original_ItemDesc, 
                    string Original_TransportMode, 
                    string Original_CountryOfOrigin, 
                    string Original_DepartPort, 
                    System.DateTime Original_ExFactoryDate, 
                    System.DateTime Original_InWarehouseDate, 
                    string Original_SupplierCode, 
                    string Original_SupplierName, 
                    string Original_HangBox, 
                    string Original_BuyingTerms, 
                    string Original_FinalDest, 
                    string Original_PrepaidFreightCosts, 
                    global::System.Nullable<global::System.DateTime> Original_HandoverDate, 
                    string Original_VendorLoaded, 
                    string Original_ArrivalPort, 
                    string Original_FranchisePartnerCode, 
                    string Original_Refurb, 
                    int Original_TotalPieces, 
                    int Original_TotalCartons, 
                    decimal Original_TotalNetWeight, 
                    decimal Original_TotalGrossWeight, 
                    decimal Original_TotalVolume, 
                    string Original_FileNo, 
                    System.DateTime Original_ImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_LastImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_CreateDate, 
                    bool Original_IsUploaded, 
                    global::System.Nullable<int> Original_NSLDeliveryNo) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(OrderRefId));
            if ((ItemNo == null)) {
                throw new global::System.ArgumentNullException("ItemNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ItemNo));
            }
            if ((ItemDesc == null)) {
                throw new global::System.ArgumentNullException("ItemDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ItemDesc));
            }
            if ((TransportMode == null)) {
                throw new global::System.ArgumentNullException("TransportMode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TransportMode));
            }
            if ((CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("CountryOfOrigin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CountryOfOrigin));
            }
            if ((DepartPort == null)) {
                throw new global::System.ArgumentNullException("DepartPort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DepartPort));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(ExFactoryDate));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(InWarehouseDate));
            if ((SupplierCode == null)) {
                throw new global::System.ArgumentNullException("SupplierCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SupplierCode));
            }
            if ((SupplierName == null)) {
                throw new global::System.ArgumentNullException("SupplierName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SupplierName));
            }
            if ((HangBox == null)) {
                throw new global::System.ArgumentNullException("HangBox");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(HangBox));
            }
            if ((BuyingTerms == null)) {
                throw new global::System.ArgumentNullException("BuyingTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(BuyingTerms));
            }
            if ((FinalDest == null)) {
                throw new global::System.ArgumentNullException("FinalDest");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(FinalDest));
            }
            if ((PrepaidFreightCosts == null)) {
                throw new global::System.ArgumentNullException("PrepaidFreightCosts");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(PrepaidFreightCosts));
            }
            if ((HandoverDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(HandoverDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((VendorLoaded == null)) {
                throw new global::System.ArgumentNullException("VendorLoaded");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(VendorLoaded));
            }
            if ((ArrivalPort == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ArrivalPort));
            }
            if ((FranchisePartnerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(FranchisePartnerCode));
            }
            if ((Refurb == null)) {
                throw new global::System.ArgumentNullException("Refurb");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Refurb));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(TotalPieces));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(TotalCartons));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(TotalNetWeight));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(TotalGrossWeight));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(TotalVolume));
            if ((FileNo == null)) {
                throw new global::System.ArgumentNullException("FileNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(FileNo));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(ImportDate));
            if ((LastImportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(LastImportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CreateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(CreateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(IsUploaded));
            if ((NSLDeliveryNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(NSLDeliveryNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_OrderRefId));
            if ((Original_ItemNo == null)) {
                throw new global::System.ArgumentNullException("Original_ItemNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_ItemNo));
            }
            if ((Original_ItemDesc == null)) {
                throw new global::System.ArgumentNullException("Original_ItemDesc");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ItemDesc));
            }
            if ((Original_TransportMode == null)) {
                throw new global::System.ArgumentNullException("Original_TransportMode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_TransportMode));
            }
            if ((Original_CountryOfOrigin == null)) {
                throw new global::System.ArgumentNullException("Original_CountryOfOrigin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_CountryOfOrigin));
            }
            if ((Original_DepartPort == null)) {
                throw new global::System.ArgumentNullException("Original_DepartPort");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_DepartPort));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_ExFactoryDate));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Original_InWarehouseDate));
            if ((Original_SupplierCode == null)) {
                throw new global::System.ArgumentNullException("Original_SupplierCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_SupplierCode));
            }
            if ((Original_SupplierName == null)) {
                throw new global::System.ArgumentNullException("Original_SupplierName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_SupplierName));
            }
            if ((Original_HangBox == null)) {
                throw new global::System.ArgumentNullException("Original_HangBox");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_HangBox));
            }
            if ((Original_BuyingTerms == null)) {
                throw new global::System.ArgumentNullException("Original_BuyingTerms");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_BuyingTerms));
            }
            if ((Original_FinalDest == null)) {
                throw new global::System.ArgumentNullException("Original_FinalDest");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_FinalDest));
            }
            if ((Original_PrepaidFreightCosts == null)) {
                throw new global::System.ArgumentNullException("Original_PrepaidFreightCosts");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_PrepaidFreightCosts));
            }
            if ((Original_HandoverDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(Original_HandoverDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_VendorLoaded == null)) {
                throw new global::System.ArgumentNullException("Original_VendorLoaded");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_VendorLoaded));
            }
            if ((Original_ArrivalPort == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ArrivalPort));
            }
            if ((Original_FranchisePartnerCode == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_FranchisePartnerCode));
            }
            if ((Original_Refurb == null)) {
                throw new global::System.ArgumentNullException("Original_Refurb");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_Refurb));
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_TotalPieces));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_TotalCartons));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_TotalNetWeight));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(Original_TotalGrossWeight));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(Original_TotalVolume));
            if ((Original_FileNo == null)) {
                throw new global::System.ArgumentNullException("Original_FileNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_FileNo));
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((System.DateTime)(Original_ImportDate));
            if ((Original_LastImportDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((System.DateTime)(Original_LastImportDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_CreateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(Original_CreateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(Original_IsUploaded));
            if ((Original_NSLDeliveryNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(Original_NSLDeliveryNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ItemNo, 
                    string ItemDesc, 
                    string TransportMode, 
                    string CountryOfOrigin, 
                    string DepartPort, 
                    System.DateTime ExFactoryDate, 
                    System.DateTime InWarehouseDate, 
                    string SupplierCode, 
                    string SupplierName, 
                    string HangBox, 
                    string BuyingTerms, 
                    string FinalDest, 
                    string PrepaidFreightCosts, 
                    global::System.Nullable<global::System.DateTime> HandoverDate, 
                    string VendorLoaded, 
                    string ArrivalPort, 
                    string FranchisePartnerCode, 
                    string Refurb, 
                    int TotalPieces, 
                    int TotalCartons, 
                    decimal TotalNetWeight, 
                    decimal TotalGrossWeight, 
                    decimal TotalVolume, 
                    string FileNo, 
                    System.DateTime ImportDate, 
                    global::System.Nullable<global::System.DateTime> LastImportDate, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    bool IsUploaded, 
                    global::System.Nullable<int> NSLDeliveryNo, 
                    int Original_OrderRefId, 
                    string Original_ItemNo, 
                    string Original_ItemDesc, 
                    string Original_TransportMode, 
                    string Original_CountryOfOrigin, 
                    string Original_DepartPort, 
                    System.DateTime Original_ExFactoryDate, 
                    System.DateTime Original_InWarehouseDate, 
                    string Original_SupplierCode, 
                    string Original_SupplierName, 
                    string Original_HangBox, 
                    string Original_BuyingTerms, 
                    string Original_FinalDest, 
                    string Original_PrepaidFreightCosts, 
                    global::System.Nullable<global::System.DateTime> Original_HandoverDate, 
                    string Original_VendorLoaded, 
                    string Original_ArrivalPort, 
                    string Original_FranchisePartnerCode, 
                    string Original_Refurb, 
                    int Original_TotalPieces, 
                    int Original_TotalCartons, 
                    decimal Original_TotalNetWeight, 
                    decimal Original_TotalGrossWeight, 
                    decimal Original_TotalVolume, 
                    string Original_FileNo, 
                    System.DateTime Original_ImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_LastImportDate, 
                    global::System.Nullable<global::System.DateTime> Original_CreateDate, 
                    bool Original_IsUploaded, 
                    global::System.Nullable<int> Original_NSLDeliveryNo) {
            return this.Update(Original_OrderRefId, ItemNo, ItemDesc, TransportMode, CountryOfOrigin, DepartPort, ExFactoryDate, InWarehouseDate, SupplierCode, SupplierName, HangBox, BuyingTerms, FinalDest, PrepaidFreightCosts, HandoverDate, VendorLoaded, ArrivalPort, FranchisePartnerCode, Refurb, TotalPieces, TotalCartons, TotalNetWeight, TotalGrossWeight, TotalVolume, FileNo, ImportDate, LastImportDate, CreateDate, IsUploaded, NSLDeliveryNo, Original_OrderRefId, Original_ItemNo, Original_ItemDesc, Original_TransportMode, Original_CountryOfOrigin, Original_DepartPort, Original_ExFactoryDate, Original_InWarehouseDate, Original_SupplierCode, Original_SupplierName, Original_HangBox, Original_BuyingTerms, Original_FinalDest, Original_PrepaidFreightCosts, Original_HandoverDate, Original_VendorLoaded, Original_ArrivalPort, Original_FranchisePartnerCode, Original_Refurb, Original_TotalPieces, Original_TotalCartons, Original_TotalNetWeight, Original_TotalGrossWeight, Original_TotalVolume, Original_FileNo, Original_ImportDate, Original_LastImportDate, Original_CreateDate, Original_IsUploaded, Original_NSLDeliveryNo);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ILSPackingListTableAdapter _iLSPackingListTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ILSPackingListTableAdapter ILSPackingListTableAdapter {
            get {
                return this._iLSPackingListTableAdapter;
            }
            set {
                this._iLSPackingListTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._iLSPackingListTableAdapter != null) 
                            && (this._iLSPackingListTableAdapter.Connection != null))) {
                    return this._iLSPackingListTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._iLSPackingListTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(ILSPackingListDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._iLSPackingListTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ILSPackingList.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iLSPackingListTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(ILSPackingListDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._iLSPackingListTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ILSPackingList.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iLSPackingListTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(ILSPackingListDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._iLSPackingListTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ILSPackingList.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iLSPackingListTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(ILSPackingListDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._iLSPackingListTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iLSPackingListTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._iLSPackingListTableAdapter != null)) {
                    revertConnections.Add(this._iLSPackingListTableAdapter, this._iLSPackingListTableAdapter.Connection);
                    this._iLSPackingListTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iLSPackingListTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iLSPackingListTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iLSPackingListTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iLSPackingListTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._iLSPackingListTableAdapter != null)) {
                    this._iLSPackingListTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iLSPackingListTableAdapter]));
                    this._iLSPackingListTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591