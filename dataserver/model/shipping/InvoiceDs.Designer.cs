//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.dataserver.model.shipping {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InvoiceDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InvoiceDs : global::System.Data.DataSet {
        
        private InvoiceDataTable tableInvoice;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InvoiceDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected InvoiceDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Invoice"] != null)) {
                    base.Tables.Add(new InvoiceDataTable(ds.Tables["Invoice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InvoiceDataTable Invoice {
            get {
                return this.tableInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            InvoiceDs cln = ((InvoiceDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Invoice"] != null)) {
                    base.Tables.Add(new InvoiceDataTable(ds.Tables["Invoice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableInvoice = ((InvoiceDataTable)(base.Tables["Invoice"]));
            if ((initTable == true)) {
                if ((this.tableInvoice != null)) {
                    this.tableInvoice.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "InvoiceDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InvoiceDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInvoice = new InvoiceDataTable();
            base.Tables.Add(this.tableInvoice);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InvoiceDs ds = new InvoiceDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InvoiceRowChangeEventHandler(object sender, InvoiceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InvoiceDataTable : global::System.Data.TypedTableBase<InvoiceRow> {
            
            private global::System.Data.DataColumn columnShipmentId;
            
            private global::System.Data.DataColumn columnInvoicePrefix;
            
            private global::System.Data.DataColumn columnInvoiceSeq;
            
            private global::System.Data.DataColumn columnInvoiceYear;
            
            private global::System.Data.DataColumn columnSequenceNo;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnInvoiceUploadDate;
            
            private global::System.Data.DataColumn columnInvoiceUploadUserId;
            
            private global::System.Data.DataColumn columnInvoicePrintDate;
            
            private global::System.Data.DataColumn columnInvoicePrintUserId;
            
            private global::System.Data.DataColumn columnIsReadyToSendInvoice;
            
            private global::System.Data.DataColumn columnInvoiceSentDate;
            
            private global::System.Data.DataColumn columnSupplierInvoiceNo;
            
            private global::System.Data.DataColumn columnShippingRemark;
            
            private global::System.Data.DataColumn columnNSLCommissionAmt;
            
            private global::System.Data.DataColumn columnInvoiceSellExchangeRate;
            
            private global::System.Data.DataColumn columnInvoiceBuyExchangeRate;
            
            private global::System.Data.DataColumn columnARDate;
            
            private global::System.Data.DataColumn columnARExchangeRate;
            
            private global::System.Data.DataColumn columnARAmt;
            
            private global::System.Data.DataColumn columnARRefNo;
            
            private global::System.Data.DataColumn columnAPDate;
            
            private global::System.Data.DataColumn columnAPExchangeRate;
            
            private global::System.Data.DataColumn columnAPAmt;
            
            private global::System.Data.DataColumn columnAPRefNo;
            
            private global::System.Data.DataColumn columnLCIssueDate;
            
            private global::System.Data.DataColumn columnLCExpiryDate;
            
            private global::System.Data.DataColumn columnLCAmt;
            
            private global::System.Data.DataColumn columnIsLCPaymentChecked;
            
            private global::System.Data.DataColumn columnLCPaymentCheckedDate;
            
            private global::System.Data.DataColumn columnExportLicenceFee;
            
            private global::System.Data.DataColumn columnQuotaCharge;
            
            private global::System.Data.DataColumn columnItemDesc1;
            
            private global::System.Data.DataColumn columnItemDesc2;
            
            private global::System.Data.DataColumn columnItemDesc3;
            
            private global::System.Data.DataColumn columnItemDesc4;
            
            private global::System.Data.DataColumn columnItemDesc5;
            
            private global::System.Data.DataColumn columnItemColour;
            
            private global::System.Data.DataColumn columnShipFromCountryId;
            
            private global::System.Data.DataColumn columnCustomerDestinationId;
            
            private global::System.Data.DataColumn columnPackingMethodId;
            
            private global::System.Data.DataColumn columnPiecesPerDeliveryUnit;
            
            private global::System.Data.DataColumn columnShippingDocReceiptDate;
            
            private global::System.Data.DataColumn columnAccountDocReceiptDate;
            
            private global::System.Data.DataColumn columnIsSelfBilledOrder;
            
            private global::System.Data.DataColumn columnCourierChargeToNUK;
            
            private global::System.Data.DataColumn columnCourierChargeToNUKDebitNoteNo;
            
            private global::System.Data.DataColumn columnQccRemark;
            
            private global::System.Data.DataColumn columnIsSyncToFactory;
            
            private global::System.Data.DataColumn columnBookingSONo;
            
            private global::System.Data.DataColumn columnBookingDate;
            
            private global::System.Data.DataColumn columnBookingQty;
            
            private global::System.Data.DataColumn columnBookingAtWarehouseDate;
            
            private global::System.Data.DataColumn columnActualAtWarehouseDate;
            
            private global::System.Data.DataColumn columnILSActualAtWarehouseDate;
            
            private global::System.Data.DataColumn columnImportDutyCurrencyId;
            
            private global::System.Data.DataColumn columnImportDutyCalculatedAmt;
            
            private global::System.Data.DataColumn columnImportDutyActualAmt;
            
            private global::System.Data.DataColumn columnIsImportDutyChecked;
            
            private global::System.Data.DataColumn columnImportDutyCheckedDate;
            
            private global::System.Data.DataColumn columnInputVATCurrencyId;
            
            private global::System.Data.DataColumn columnInputVATCalculatedAmt;
            
            private global::System.Data.DataColumn columnInputVATActualAmt;
            
            private global::System.Data.DataColumn columnIsInputVATChecked;
            
            private global::System.Data.DataColumn columnInputVATCheckedDate;
            
            private global::System.Data.DataColumn columnOutputVATCurrencyId;
            
            private global::System.Data.DataColumn columnOutputVATCalculatedAmt;
            
            private global::System.Data.DataColumn columnOutputVATActualAmt;
            
            private global::System.Data.DataColumn columnIsOutputVATChecked;
            
            private global::System.Data.DataColumn columnOutputVATCheckedDate;
            
            private global::System.Data.DataColumn columnInvoiceRemark;
            
            private global::System.Data.DataColumn columnDFDebitNoteNo;
            
            private global::System.Data.DataColumn columnDFDocumentationCharge;
            
            private global::System.Data.DataColumn columnDFTransportationCharge;
            
            private global::System.Data.DataColumn columnSalesScanDate;
            
            private global::System.Data.DataColumn columnSalesScanAmt;
            
            private global::System.Data.DataColumn columnSalesScanBy;
            
            private global::System.Data.DataColumn columnPurchaseScanDate;
            
            private global::System.Data.DataColumn columnPurchaseScanAmt;
            
            private global::System.Data.DataColumn columnPurchaseScanBy;
            
            private global::System.Data.DataColumn columnEInvoiceBatchId;
            
            private global::System.Data.DataColumn columnIsILSQtyUploadAllowed;
            
            private global::System.Data.DataColumn columnNSLCommissionSettlementDate;
            
            private global::System.Data.DataColumn columnNSLCommissionSettlementExchangeRate;
            
            private global::System.Data.DataColumn columnNSLCommissionSettlementAmt;
            
            private global::System.Data.DataColumn columnNSLCommissionRefNo;
            
            private global::System.Data.DataColumn columnChoiceOrderTotalShippedAmt;
            
            private global::System.Data.DataColumn columnChoiceOrderTotalShippedSupplierGmtAmt;
            
            private global::System.Data.DataColumn columnChoiceOrderNSLCommissionAmt;
            
            private global::System.Data.DataColumn columnIsUploadDMSDocument;
            
            private global::System.Data.DataColumn columnLastSendDMSDocumentDate;
            
            private global::System.Data.DataColumn columnShippingDocCheckedBy;
            
            private global::System.Data.DataColumn columnShippingDocCheckedOn;
            
            private global::System.Data.DataColumn columnShippingCheckedTotalNetAmount;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedOn;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedOn;
            
            private global::System.Data.DataColumn columnLCBillRefNo;
            
            private global::System.Data.DataColumn columnLCNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceDataTable() {
                this.TableName = "Invoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIdColumn {
                get {
                    return this.columnShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrefixColumn {
                get {
                    return this.columnInvoicePrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceSeqColumn {
                get {
                    return this.columnInvoiceSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceYearColumn {
                get {
                    return this.columnInvoiceYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SequenceNoColumn {
                get {
                    return this.columnSequenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceUploadDateColumn {
                get {
                    return this.columnInvoiceUploadDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceUploadUserIdColumn {
                get {
                    return this.columnInvoiceUploadUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrintDateColumn {
                get {
                    return this.columnInvoicePrintDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrintUserIdColumn {
                get {
                    return this.columnInvoicePrintUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsReadyToSendInvoiceColumn {
                get {
                    return this.columnIsReadyToSendInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceSentDateColumn {
                get {
                    return this.columnInvoiceSentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierInvoiceNoColumn {
                get {
                    return this.columnSupplierInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingRemarkColumn {
                get {
                    return this.columnShippingRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLCommissionAmtColumn {
                get {
                    return this.columnNSLCommissionAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceSellExchangeRateColumn {
                get {
                    return this.columnInvoiceSellExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceBuyExchangeRateColumn {
                get {
                    return this.columnInvoiceBuyExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARDateColumn {
                get {
                    return this.columnARDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARExchangeRateColumn {
                get {
                    return this.columnARExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARAmtColumn {
                get {
                    return this.columnARAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARRefNoColumn {
                get {
                    return this.columnARRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APDateColumn {
                get {
                    return this.columnAPDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APExchangeRateColumn {
                get {
                    return this.columnAPExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APAmtColumn {
                get {
                    return this.columnAPAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APRefNoColumn {
                get {
                    return this.columnAPRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCIssueDateColumn {
                get {
                    return this.columnLCIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCExpiryDateColumn {
                get {
                    return this.columnLCExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCAmtColumn {
                get {
                    return this.columnLCAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsLCPaymentCheckedColumn {
                get {
                    return this.columnIsLCPaymentChecked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCPaymentCheckedDateColumn {
                get {
                    return this.columnLCPaymentCheckedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExportLicenceFeeColumn {
                get {
                    return this.columnExportLicenceFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuotaChargeColumn {
                get {
                    return this.columnQuotaCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemDesc1Column {
                get {
                    return this.columnItemDesc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemDesc2Column {
                get {
                    return this.columnItemDesc2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemDesc3Column {
                get {
                    return this.columnItemDesc3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemDesc4Column {
                get {
                    return this.columnItemDesc4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemDesc5Column {
                get {
                    return this.columnItemDesc5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemColourColumn {
                get {
                    return this.columnItemColour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipFromCountryIdColumn {
                get {
                    return this.columnShipFromCountryId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerDestinationIdColumn {
                get {
                    return this.columnCustomerDestinationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackingMethodIdColumn {
                get {
                    return this.columnPackingMethodId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PiecesPerDeliveryUnitColumn {
                get {
                    return this.columnPiecesPerDeliveryUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingDocReceiptDateColumn {
                get {
                    return this.columnShippingDocReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountDocReceiptDateColumn {
                get {
                    return this.columnAccountDocReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSelfBilledOrderColumn {
                get {
                    return this.columnIsSelfBilledOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourierChargeToNUKColumn {
                get {
                    return this.columnCourierChargeToNUK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourierChargeToNUKDebitNoteNoColumn {
                get {
                    return this.columnCourierChargeToNUKDebitNoteNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QccRemarkColumn {
                get {
                    return this.columnQccRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSyncToFactoryColumn {
                get {
                    return this.columnIsSyncToFactory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingSONoColumn {
                get {
                    return this.columnBookingSONo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingDateColumn {
                get {
                    return this.columnBookingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingQtyColumn {
                get {
                    return this.columnBookingQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BookingAtWarehouseDateColumn {
                get {
                    return this.columnBookingAtWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualAtWarehouseDateColumn {
                get {
                    return this.columnActualAtWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ILSActualAtWarehouseDateColumn {
                get {
                    return this.columnILSActualAtWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportDutyCurrencyIdColumn {
                get {
                    return this.columnImportDutyCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportDutyCalculatedAmtColumn {
                get {
                    return this.columnImportDutyCalculatedAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportDutyActualAmtColumn {
                get {
                    return this.columnImportDutyActualAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsImportDutyCheckedColumn {
                get {
                    return this.columnIsImportDutyChecked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportDutyCheckedDateColumn {
                get {
                    return this.columnImportDutyCheckedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputVATCurrencyIdColumn {
                get {
                    return this.columnInputVATCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputVATCalculatedAmtColumn {
                get {
                    return this.columnInputVATCalculatedAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputVATActualAmtColumn {
                get {
                    return this.columnInputVATActualAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsInputVATCheckedColumn {
                get {
                    return this.columnIsInputVATChecked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputVATCheckedDateColumn {
                get {
                    return this.columnInputVATCheckedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutputVATCurrencyIdColumn {
                get {
                    return this.columnOutputVATCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutputVATCalculatedAmtColumn {
                get {
                    return this.columnOutputVATCalculatedAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutputVATActualAmtColumn {
                get {
                    return this.columnOutputVATActualAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsOutputVATCheckedColumn {
                get {
                    return this.columnIsOutputVATChecked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutputVATCheckedDateColumn {
                get {
                    return this.columnOutputVATCheckedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceRemarkColumn {
                get {
                    return this.columnInvoiceRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DFDebitNoteNoColumn {
                get {
                    return this.columnDFDebitNoteNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DFDocumentationChargeColumn {
                get {
                    return this.columnDFDocumentationCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DFTransportationChargeColumn {
                get {
                    return this.columnDFTransportationCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesScanDateColumn {
                get {
                    return this.columnSalesScanDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesScanAmtColumn {
                get {
                    return this.columnSalesScanAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesScanByColumn {
                get {
                    return this.columnSalesScanBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseScanDateColumn {
                get {
                    return this.columnPurchaseScanDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseScanAmtColumn {
                get {
                    return this.columnPurchaseScanAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseScanByColumn {
                get {
                    return this.columnPurchaseScanBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EInvoiceBatchIdColumn {
                get {
                    return this.columnEInvoiceBatchId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsILSQtyUploadAllowedColumn {
                get {
                    return this.columnIsILSQtyUploadAllowed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLCommissionSettlementDateColumn {
                get {
                    return this.columnNSLCommissionSettlementDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLCommissionSettlementExchangeRateColumn {
                get {
                    return this.columnNSLCommissionSettlementExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLCommissionSettlementAmtColumn {
                get {
                    return this.columnNSLCommissionSettlementAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLCommissionRefNoColumn {
                get {
                    return this.columnNSLCommissionRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChoiceOrderTotalShippedAmtColumn {
                get {
                    return this.columnChoiceOrderTotalShippedAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChoiceOrderTotalShippedSupplierGmtAmtColumn {
                get {
                    return this.columnChoiceOrderTotalShippedSupplierGmtAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChoiceOrderNSLCommissionAmtColumn {
                get {
                    return this.columnChoiceOrderNSLCommissionAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsUploadDMSDocumentColumn {
                get {
                    return this.columnIsUploadDMSDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastSendDMSDocumentDateColumn {
                get {
                    return this.columnLastSendDMSDocumentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingDocCheckedByColumn {
                get {
                    return this.columnShippingDocCheckedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingDocCheckedOnColumn {
                get {
                    return this.columnShippingDocCheckedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingCheckedTotalNetAmountColumn {
                get {
                    return this.columnShippingCheckedTotalNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedOnColumn {
                get {
                    return this.columnCreatedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedOnColumn {
                get {
                    return this.columnModifiedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCBillRefNoColumn {
                get {
                    return this.columnLCBillRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCNoColumn {
                get {
                    return this.columnLCNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceRow this[int index] {
                get {
                    return ((InvoiceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoiceRowChangeEventHandler InvoiceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoiceRowChangeEventHandler InvoiceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoiceRowChangeEventHandler InvoiceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoiceRowChangeEventHandler InvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInvoiceRow(InvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceRow AddInvoiceRow(
                        int ShipmentId, 
                        string InvoicePrefix, 
                        int InvoiceSeq, 
                        int InvoiceYear, 
                        int SequenceNo, 
                        System.DateTime InvoiceDate, 
                        System.DateTime InvoiceUploadDate, 
                        int InvoiceUploadUserId, 
                        System.DateTime InvoicePrintDate, 
                        int InvoicePrintUserId, 
                        bool IsReadyToSendInvoice, 
                        System.DateTime InvoiceSentDate, 
                        string SupplierInvoiceNo, 
                        string ShippingRemark, 
                        decimal NSLCommissionAmt, 
                        decimal InvoiceSellExchangeRate, 
                        decimal InvoiceBuyExchangeRate, 
                        System.DateTime ARDate, 
                        decimal ARExchangeRate, 
                        decimal ARAmt, 
                        string ARRefNo, 
                        System.DateTime APDate, 
                        decimal APExchangeRate, 
                        decimal APAmt, 
                        string APRefNo, 
                        System.DateTime LCIssueDate, 
                        System.DateTime LCExpiryDate, 
                        decimal LCAmt, 
                        int IsLCPaymentChecked, 
                        System.DateTime LCPaymentCheckedDate, 
                        decimal ExportLicenceFee, 
                        decimal QuotaCharge, 
                        string ItemDesc1, 
                        string ItemDesc2, 
                        string ItemDesc3, 
                        string ItemDesc4, 
                        string ItemDesc5, 
                        string ItemColour, 
                        int ShipFromCountryId, 
                        int CustomerDestinationId, 
                        int PackingMethodId, 
                        int PiecesPerDeliveryUnit, 
                        System.DateTime ShippingDocReceiptDate, 
                        System.DateTime AccountDocReceiptDate, 
                        bool IsSelfBilledOrder, 
                        decimal CourierChargeToNUK, 
                        string CourierChargeToNUKDebitNoteNo, 
                        string QccRemark, 
                        bool IsSyncToFactory, 
                        string BookingSONo, 
                        System.DateTime BookingDate, 
                        int BookingQty, 
                        System.DateTime BookingAtWarehouseDate, 
                        System.DateTime ActualAtWarehouseDate, 
                        System.DateTime ILSActualAtWarehouseDate, 
                        int ImportDutyCurrencyId, 
                        decimal ImportDutyCalculatedAmt, 
                        decimal ImportDutyActualAmt, 
                        int IsImportDutyChecked, 
                        System.DateTime ImportDutyCheckedDate, 
                        int InputVATCurrencyId, 
                        decimal InputVATCalculatedAmt, 
                        decimal InputVATActualAmt, 
                        int IsInputVATChecked, 
                        System.DateTime InputVATCheckedDate, 
                        int OutputVATCurrencyId, 
                        decimal OutputVATCalculatedAmt, 
                        decimal OutputVATActualAmt, 
                        int IsOutputVATChecked, 
                        System.DateTime OutputVATCheckedDate, 
                        string InvoiceRemark, 
                        string DFDebitNoteNo, 
                        decimal DFDocumentationCharge, 
                        decimal DFTransportationCharge, 
                        System.DateTime SalesScanDate, 
                        decimal SalesScanAmt, 
                        int SalesScanBy, 
                        System.DateTime PurchaseScanDate, 
                        decimal PurchaseScanAmt, 
                        int PurchaseScanBy, 
                        int EInvoiceBatchId, 
                        bool IsILSQtyUploadAllowed, 
                        System.DateTime NSLCommissionSettlementDate, 
                        decimal NSLCommissionSettlementExchangeRate, 
                        decimal NSLCommissionSettlementAmt, 
                        string NSLCommissionRefNo, 
                        decimal ChoiceOrderTotalShippedAmt, 
                        decimal ChoiceOrderTotalShippedSupplierGmtAmt, 
                        decimal ChoiceOrderNSLCommissionAmt, 
                        bool IsUploadDMSDocument, 
                        System.DateTime LastSendDMSDocumentDate, 
                        int ShippingDocCheckedBy, 
                        System.DateTime ShippingDocCheckedOn, 
                        decimal ShippingCheckedTotalNetAmount, 
                        int Status, 
                        int CreatedBy, 
                        System.DateTime CreatedOn, 
                        int ModifiedBy, 
                        System.DateTime ModifiedOn, 
                        string LCBillRefNo, 
                        string LCNo) {
                InvoiceRow rowInvoiceRow = ((InvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShipmentId,
                        InvoicePrefix,
                        InvoiceSeq,
                        InvoiceYear,
                        SequenceNo,
                        InvoiceDate,
                        InvoiceUploadDate,
                        InvoiceUploadUserId,
                        InvoicePrintDate,
                        InvoicePrintUserId,
                        IsReadyToSendInvoice,
                        InvoiceSentDate,
                        SupplierInvoiceNo,
                        ShippingRemark,
                        NSLCommissionAmt,
                        InvoiceSellExchangeRate,
                        InvoiceBuyExchangeRate,
                        ARDate,
                        ARExchangeRate,
                        ARAmt,
                        ARRefNo,
                        APDate,
                        APExchangeRate,
                        APAmt,
                        APRefNo,
                        LCIssueDate,
                        LCExpiryDate,
                        LCAmt,
                        IsLCPaymentChecked,
                        LCPaymentCheckedDate,
                        ExportLicenceFee,
                        QuotaCharge,
                        ItemDesc1,
                        ItemDesc2,
                        ItemDesc3,
                        ItemDesc4,
                        ItemDesc5,
                        ItemColour,
                        ShipFromCountryId,
                        CustomerDestinationId,
                        PackingMethodId,
                        PiecesPerDeliveryUnit,
                        ShippingDocReceiptDate,
                        AccountDocReceiptDate,
                        IsSelfBilledOrder,
                        CourierChargeToNUK,
                        CourierChargeToNUKDebitNoteNo,
                        QccRemark,
                        IsSyncToFactory,
                        BookingSONo,
                        BookingDate,
                        BookingQty,
                        BookingAtWarehouseDate,
                        ActualAtWarehouseDate,
                        ILSActualAtWarehouseDate,
                        ImportDutyCurrencyId,
                        ImportDutyCalculatedAmt,
                        ImportDutyActualAmt,
                        IsImportDutyChecked,
                        ImportDutyCheckedDate,
                        InputVATCurrencyId,
                        InputVATCalculatedAmt,
                        InputVATActualAmt,
                        IsInputVATChecked,
                        InputVATCheckedDate,
                        OutputVATCurrencyId,
                        OutputVATCalculatedAmt,
                        OutputVATActualAmt,
                        IsOutputVATChecked,
                        OutputVATCheckedDate,
                        InvoiceRemark,
                        DFDebitNoteNo,
                        DFDocumentationCharge,
                        DFTransportationCharge,
                        SalesScanDate,
                        SalesScanAmt,
                        SalesScanBy,
                        PurchaseScanDate,
                        PurchaseScanAmt,
                        PurchaseScanBy,
                        EInvoiceBatchId,
                        IsILSQtyUploadAllowed,
                        NSLCommissionSettlementDate,
                        NSLCommissionSettlementExchangeRate,
                        NSLCommissionSettlementAmt,
                        NSLCommissionRefNo,
                        ChoiceOrderTotalShippedAmt,
                        ChoiceOrderTotalShippedSupplierGmtAmt,
                        ChoiceOrderNSLCommissionAmt,
                        IsUploadDMSDocument,
                        LastSendDMSDocumentDate,
                        ShippingDocCheckedBy,
                        ShippingDocCheckedOn,
                        ShippingCheckedTotalNetAmount,
                        Status,
                        CreatedBy,
                        CreatedOn,
                        ModifiedBy,
                        ModifiedOn,
                        LCBillRefNo,
                        LCNo};
                rowInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoiceRow);
                return rowInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceRow FindByShipmentId(int ShipmentId) {
                return ((InvoiceRow)(this.Rows.Find(new object[] {
                            ShipmentId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InvoiceDataTable cln = ((InvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnShipmentId = base.Columns["ShipmentId"];
                this.columnInvoicePrefix = base.Columns["InvoicePrefix"];
                this.columnInvoiceSeq = base.Columns["InvoiceSeq"];
                this.columnInvoiceYear = base.Columns["InvoiceYear"];
                this.columnSequenceNo = base.Columns["SequenceNo"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnInvoiceUploadDate = base.Columns["InvoiceUploadDate"];
                this.columnInvoiceUploadUserId = base.Columns["InvoiceUploadUserId"];
                this.columnInvoicePrintDate = base.Columns["InvoicePrintDate"];
                this.columnInvoicePrintUserId = base.Columns["InvoicePrintUserId"];
                this.columnIsReadyToSendInvoice = base.Columns["IsReadyToSendInvoice"];
                this.columnInvoiceSentDate = base.Columns["InvoiceSentDate"];
                this.columnSupplierInvoiceNo = base.Columns["SupplierInvoiceNo"];
                this.columnShippingRemark = base.Columns["ShippingRemark"];
                this.columnNSLCommissionAmt = base.Columns["NSLCommissionAmt"];
                this.columnInvoiceSellExchangeRate = base.Columns["InvoiceSellExchangeRate"];
                this.columnInvoiceBuyExchangeRate = base.Columns["InvoiceBuyExchangeRate"];
                this.columnARDate = base.Columns["ARDate"];
                this.columnARExchangeRate = base.Columns["ARExchangeRate"];
                this.columnARAmt = base.Columns["ARAmt"];
                this.columnARRefNo = base.Columns["ARRefNo"];
                this.columnAPDate = base.Columns["APDate"];
                this.columnAPExchangeRate = base.Columns["APExchangeRate"];
                this.columnAPAmt = base.Columns["APAmt"];
                this.columnAPRefNo = base.Columns["APRefNo"];
                this.columnLCIssueDate = base.Columns["LCIssueDate"];
                this.columnLCExpiryDate = base.Columns["LCExpiryDate"];
                this.columnLCAmt = base.Columns["LCAmt"];
                this.columnIsLCPaymentChecked = base.Columns["IsLCPaymentChecked"];
                this.columnLCPaymentCheckedDate = base.Columns["LCPaymentCheckedDate"];
                this.columnExportLicenceFee = base.Columns["ExportLicenceFee"];
                this.columnQuotaCharge = base.Columns["QuotaCharge"];
                this.columnItemDesc1 = base.Columns["ItemDesc1"];
                this.columnItemDesc2 = base.Columns["ItemDesc2"];
                this.columnItemDesc3 = base.Columns["ItemDesc3"];
                this.columnItemDesc4 = base.Columns["ItemDesc4"];
                this.columnItemDesc5 = base.Columns["ItemDesc5"];
                this.columnItemColour = base.Columns["ItemColour"];
                this.columnShipFromCountryId = base.Columns["ShipFromCountryId"];
                this.columnCustomerDestinationId = base.Columns["CustomerDestinationId"];
                this.columnPackingMethodId = base.Columns["PackingMethodId"];
                this.columnPiecesPerDeliveryUnit = base.Columns["PiecesPerDeliveryUnit"];
                this.columnShippingDocReceiptDate = base.Columns["ShippingDocReceiptDate"];
                this.columnAccountDocReceiptDate = base.Columns["AccountDocReceiptDate"];
                this.columnIsSelfBilledOrder = base.Columns["IsSelfBilledOrder"];
                this.columnCourierChargeToNUK = base.Columns["CourierChargeToNUK"];
                this.columnCourierChargeToNUKDebitNoteNo = base.Columns["CourierChargeToNUKDebitNoteNo"];
                this.columnQccRemark = base.Columns["QccRemark"];
                this.columnIsSyncToFactory = base.Columns["IsSyncToFactory"];
                this.columnBookingSONo = base.Columns["BookingSONo"];
                this.columnBookingDate = base.Columns["BookingDate"];
                this.columnBookingQty = base.Columns["BookingQty"];
                this.columnBookingAtWarehouseDate = base.Columns["BookingAtWarehouseDate"];
                this.columnActualAtWarehouseDate = base.Columns["ActualAtWarehouseDate"];
                this.columnILSActualAtWarehouseDate = base.Columns["ILSActualAtWarehouseDate"];
                this.columnImportDutyCurrencyId = base.Columns["ImportDutyCurrencyId"];
                this.columnImportDutyCalculatedAmt = base.Columns["ImportDutyCalculatedAmt"];
                this.columnImportDutyActualAmt = base.Columns["ImportDutyActualAmt"];
                this.columnIsImportDutyChecked = base.Columns["IsImportDutyChecked"];
                this.columnImportDutyCheckedDate = base.Columns["ImportDutyCheckedDate"];
                this.columnInputVATCurrencyId = base.Columns["InputVATCurrencyId"];
                this.columnInputVATCalculatedAmt = base.Columns["InputVATCalculatedAmt"];
                this.columnInputVATActualAmt = base.Columns["InputVATActualAmt"];
                this.columnIsInputVATChecked = base.Columns["IsInputVATChecked"];
                this.columnInputVATCheckedDate = base.Columns["InputVATCheckedDate"];
                this.columnOutputVATCurrencyId = base.Columns["OutputVATCurrencyId"];
                this.columnOutputVATCalculatedAmt = base.Columns["OutputVATCalculatedAmt"];
                this.columnOutputVATActualAmt = base.Columns["OutputVATActualAmt"];
                this.columnIsOutputVATChecked = base.Columns["IsOutputVATChecked"];
                this.columnOutputVATCheckedDate = base.Columns["OutputVATCheckedDate"];
                this.columnInvoiceRemark = base.Columns["InvoiceRemark"];
                this.columnDFDebitNoteNo = base.Columns["DFDebitNoteNo"];
                this.columnDFDocumentationCharge = base.Columns["DFDocumentationCharge"];
                this.columnDFTransportationCharge = base.Columns["DFTransportationCharge"];
                this.columnSalesScanDate = base.Columns["SalesScanDate"];
                this.columnSalesScanAmt = base.Columns["SalesScanAmt"];
                this.columnSalesScanBy = base.Columns["SalesScanBy"];
                this.columnPurchaseScanDate = base.Columns["PurchaseScanDate"];
                this.columnPurchaseScanAmt = base.Columns["PurchaseScanAmt"];
                this.columnPurchaseScanBy = base.Columns["PurchaseScanBy"];
                this.columnEInvoiceBatchId = base.Columns["EInvoiceBatchId"];
                this.columnIsILSQtyUploadAllowed = base.Columns["IsILSQtyUploadAllowed"];
                this.columnNSLCommissionSettlementDate = base.Columns["NSLCommissionSettlementDate"];
                this.columnNSLCommissionSettlementExchangeRate = base.Columns["NSLCommissionSettlementExchangeRate"];
                this.columnNSLCommissionSettlementAmt = base.Columns["NSLCommissionSettlementAmt"];
                this.columnNSLCommissionRefNo = base.Columns["NSLCommissionRefNo"];
                this.columnChoiceOrderTotalShippedAmt = base.Columns["ChoiceOrderTotalShippedAmt"];
                this.columnChoiceOrderTotalShippedSupplierGmtAmt = base.Columns["ChoiceOrderTotalShippedSupplierGmtAmt"];
                this.columnChoiceOrderNSLCommissionAmt = base.Columns["ChoiceOrderNSLCommissionAmt"];
                this.columnIsUploadDMSDocument = base.Columns["IsUploadDMSDocument"];
                this.columnLastSendDMSDocumentDate = base.Columns["LastSendDMSDocumentDate"];
                this.columnShippingDocCheckedBy = base.Columns["ShippingDocCheckedBy"];
                this.columnShippingDocCheckedOn = base.Columns["ShippingDocCheckedOn"];
                this.columnShippingCheckedTotalNetAmount = base.Columns["ShippingCheckedTotalNetAmount"];
                this.columnStatus = base.Columns["Status"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedOn = base.Columns["ModifiedOn"];
                this.columnLCBillRefNo = base.Columns["LCBillRefNo"];
                this.columnLCNo = base.Columns["LCNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnShipmentId = new global::System.Data.DataColumn("ShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentId);
                this.columnInvoicePrefix = new global::System.Data.DataColumn("InvoicePrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrefix);
                this.columnInvoiceSeq = new global::System.Data.DataColumn("InvoiceSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceSeq);
                this.columnInvoiceYear = new global::System.Data.DataColumn("InvoiceYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceYear);
                this.columnSequenceNo = new global::System.Data.DataColumn("SequenceNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNo);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnInvoiceUploadDate = new global::System.Data.DataColumn("InvoiceUploadDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceUploadDate);
                this.columnInvoiceUploadUserId = new global::System.Data.DataColumn("InvoiceUploadUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceUploadUserId);
                this.columnInvoicePrintDate = new global::System.Data.DataColumn("InvoicePrintDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrintDate);
                this.columnInvoicePrintUserId = new global::System.Data.DataColumn("InvoicePrintUserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrintUserId);
                this.columnIsReadyToSendInvoice = new global::System.Data.DataColumn("IsReadyToSendInvoice", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReadyToSendInvoice);
                this.columnInvoiceSentDate = new global::System.Data.DataColumn("InvoiceSentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceSentDate);
                this.columnSupplierInvoiceNo = new global::System.Data.DataColumn("SupplierInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierInvoiceNo);
                this.columnShippingRemark = new global::System.Data.DataColumn("ShippingRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingRemark);
                this.columnNSLCommissionAmt = new global::System.Data.DataColumn("NSLCommissionAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLCommissionAmt);
                this.columnInvoiceSellExchangeRate = new global::System.Data.DataColumn("InvoiceSellExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceSellExchangeRate);
                this.columnInvoiceBuyExchangeRate = new global::System.Data.DataColumn("InvoiceBuyExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceBuyExchangeRate);
                this.columnARDate = new global::System.Data.DataColumn("ARDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARDate);
                this.columnARExchangeRate = new global::System.Data.DataColumn("ARExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARExchangeRate);
                this.columnARAmt = new global::System.Data.DataColumn("ARAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARAmt);
                this.columnARRefNo = new global::System.Data.DataColumn("ARRefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARRefNo);
                this.columnAPDate = new global::System.Data.DataColumn("APDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPDate);
                this.columnAPExchangeRate = new global::System.Data.DataColumn("APExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPExchangeRate);
                this.columnAPAmt = new global::System.Data.DataColumn("APAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPAmt);
                this.columnAPRefNo = new global::System.Data.DataColumn("APRefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPRefNo);
                this.columnLCIssueDate = new global::System.Data.DataColumn("LCIssueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCIssueDate);
                this.columnLCExpiryDate = new global::System.Data.DataColumn("LCExpiryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCExpiryDate);
                this.columnLCAmt = new global::System.Data.DataColumn("LCAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCAmt);
                this.columnIsLCPaymentChecked = new global::System.Data.DataColumn("IsLCPaymentChecked", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLCPaymentChecked);
                this.columnLCPaymentCheckedDate = new global::System.Data.DataColumn("LCPaymentCheckedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCPaymentCheckedDate);
                this.columnExportLicenceFee = new global::System.Data.DataColumn("ExportLicenceFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExportLicenceFee);
                this.columnQuotaCharge = new global::System.Data.DataColumn("QuotaCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotaCharge);
                this.columnItemDesc1 = new global::System.Data.DataColumn("ItemDesc1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc1);
                this.columnItemDesc2 = new global::System.Data.DataColumn("ItemDesc2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc2);
                this.columnItemDesc3 = new global::System.Data.DataColumn("ItemDesc3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc3);
                this.columnItemDesc4 = new global::System.Data.DataColumn("ItemDesc4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc4);
                this.columnItemDesc5 = new global::System.Data.DataColumn("ItemDesc5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc5);
                this.columnItemColour = new global::System.Data.DataColumn("ItemColour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemColour);
                this.columnShipFromCountryId = new global::System.Data.DataColumn("ShipFromCountryId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipFromCountryId);
                this.columnCustomerDestinationId = new global::System.Data.DataColumn("CustomerDestinationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerDestinationId);
                this.columnPackingMethodId = new global::System.Data.DataColumn("PackingMethodId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingMethodId);
                this.columnPiecesPerDeliveryUnit = new global::System.Data.DataColumn("PiecesPerDeliveryUnit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiecesPerDeliveryUnit);
                this.columnShippingDocReceiptDate = new global::System.Data.DataColumn("ShippingDocReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingDocReceiptDate);
                this.columnAccountDocReceiptDate = new global::System.Data.DataColumn("AccountDocReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountDocReceiptDate);
                this.columnIsSelfBilledOrder = new global::System.Data.DataColumn("IsSelfBilledOrder", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelfBilledOrder);
                this.columnCourierChargeToNUK = new global::System.Data.DataColumn("CourierChargeToNUK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourierChargeToNUK);
                this.columnCourierChargeToNUKDebitNoteNo = new global::System.Data.DataColumn("CourierChargeToNUKDebitNoteNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourierChargeToNUKDebitNoteNo);
                this.columnQccRemark = new global::System.Data.DataColumn("QccRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQccRemark);
                this.columnIsSyncToFactory = new global::System.Data.DataColumn("IsSyncToFactory", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSyncToFactory);
                this.columnBookingSONo = new global::System.Data.DataColumn("BookingSONo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingSONo);
                this.columnBookingDate = new global::System.Data.DataColumn("BookingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingDate);
                this.columnBookingQty = new global::System.Data.DataColumn("BookingQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingQty);
                this.columnBookingAtWarehouseDate = new global::System.Data.DataColumn("BookingAtWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingAtWarehouseDate);
                this.columnActualAtWarehouseDate = new global::System.Data.DataColumn("ActualAtWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualAtWarehouseDate);
                this.columnILSActualAtWarehouseDate = new global::System.Data.DataColumn("ILSActualAtWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnILSActualAtWarehouseDate);
                this.columnImportDutyCurrencyId = new global::System.Data.DataColumn("ImportDutyCurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDutyCurrencyId);
                this.columnImportDutyCalculatedAmt = new global::System.Data.DataColumn("ImportDutyCalculatedAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDutyCalculatedAmt);
                this.columnImportDutyActualAmt = new global::System.Data.DataColumn("ImportDutyActualAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDutyActualAmt);
                this.columnIsImportDutyChecked = new global::System.Data.DataColumn("IsImportDutyChecked", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsImportDutyChecked);
                this.columnImportDutyCheckedDate = new global::System.Data.DataColumn("ImportDutyCheckedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportDutyCheckedDate);
                this.columnInputVATCurrencyId = new global::System.Data.DataColumn("InputVATCurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputVATCurrencyId);
                this.columnInputVATCalculatedAmt = new global::System.Data.DataColumn("InputVATCalculatedAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputVATCalculatedAmt);
                this.columnInputVATActualAmt = new global::System.Data.DataColumn("InputVATActualAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputVATActualAmt);
                this.columnIsInputVATChecked = new global::System.Data.DataColumn("IsInputVATChecked", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInputVATChecked);
                this.columnInputVATCheckedDate = new global::System.Data.DataColumn("InputVATCheckedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputVATCheckedDate);
                this.columnOutputVATCurrencyId = new global::System.Data.DataColumn("OutputVATCurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputVATCurrencyId);
                this.columnOutputVATCalculatedAmt = new global::System.Data.DataColumn("OutputVATCalculatedAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputVATCalculatedAmt);
                this.columnOutputVATActualAmt = new global::System.Data.DataColumn("OutputVATActualAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputVATActualAmt);
                this.columnIsOutputVATChecked = new global::System.Data.DataColumn("IsOutputVATChecked", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOutputVATChecked);
                this.columnOutputVATCheckedDate = new global::System.Data.DataColumn("OutputVATCheckedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputVATCheckedDate);
                this.columnInvoiceRemark = new global::System.Data.DataColumn("InvoiceRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceRemark);
                this.columnDFDebitNoteNo = new global::System.Data.DataColumn("DFDebitNoteNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDFDebitNoteNo);
                this.columnDFDocumentationCharge = new global::System.Data.DataColumn("DFDocumentationCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDFDocumentationCharge);
                this.columnDFTransportationCharge = new global::System.Data.DataColumn("DFTransportationCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDFTransportationCharge);
                this.columnSalesScanDate = new global::System.Data.DataColumn("SalesScanDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesScanDate);
                this.columnSalesScanAmt = new global::System.Data.DataColumn("SalesScanAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesScanAmt);
                this.columnSalesScanBy = new global::System.Data.DataColumn("SalesScanBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesScanBy);
                this.columnPurchaseScanDate = new global::System.Data.DataColumn("PurchaseScanDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseScanDate);
                this.columnPurchaseScanAmt = new global::System.Data.DataColumn("PurchaseScanAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseScanAmt);
                this.columnPurchaseScanBy = new global::System.Data.DataColumn("PurchaseScanBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseScanBy);
                this.columnEInvoiceBatchId = new global::System.Data.DataColumn("EInvoiceBatchId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEInvoiceBatchId);
                this.columnIsILSQtyUploadAllowed = new global::System.Data.DataColumn("IsILSQtyUploadAllowed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsILSQtyUploadAllowed);
                this.columnNSLCommissionSettlementDate = new global::System.Data.DataColumn("NSLCommissionSettlementDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLCommissionSettlementDate);
                this.columnNSLCommissionSettlementExchangeRate = new global::System.Data.DataColumn("NSLCommissionSettlementExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLCommissionSettlementExchangeRate);
                this.columnNSLCommissionSettlementAmt = new global::System.Data.DataColumn("NSLCommissionSettlementAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLCommissionSettlementAmt);
                this.columnNSLCommissionRefNo = new global::System.Data.DataColumn("NSLCommissionRefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLCommissionRefNo);
                this.columnChoiceOrderTotalShippedAmt = new global::System.Data.DataColumn("ChoiceOrderTotalShippedAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChoiceOrderTotalShippedAmt);
                this.columnChoiceOrderTotalShippedSupplierGmtAmt = new global::System.Data.DataColumn("ChoiceOrderTotalShippedSupplierGmtAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChoiceOrderTotalShippedSupplierGmtAmt);
                this.columnChoiceOrderNSLCommissionAmt = new global::System.Data.DataColumn("ChoiceOrderNSLCommissionAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChoiceOrderNSLCommissionAmt);
                this.columnIsUploadDMSDocument = new global::System.Data.DataColumn("IsUploadDMSDocument", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUploadDMSDocument);
                this.columnLastSendDMSDocumentDate = new global::System.Data.DataColumn("LastSendDMSDocumentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSendDMSDocumentDate);
                this.columnShippingDocCheckedBy = new global::System.Data.DataColumn("ShippingDocCheckedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingDocCheckedBy);
                this.columnShippingDocCheckedOn = new global::System.Data.DataColumn("ShippingDocCheckedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingDocCheckedOn);
                this.columnShippingCheckedTotalNetAmount = new global::System.Data.DataColumn("ShippingCheckedTotalNetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingCheckedTotalNetAmount);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedOn = new global::System.Data.DataColumn("ModifiedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedOn);
                this.columnLCBillRefNo = new global::System.Data.DataColumn("LCBillRefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCBillRefNo);
                this.columnLCNo = new global::System.Data.DataColumn("LCNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnShipmentId}, true));
                this.columnShipmentId.AllowDBNull = false;
                this.columnShipmentId.Unique = true;
                this.columnInvoicePrefix.MaxLength = 50;
                this.columnIsReadyToSendInvoice.AllowDBNull = false;
                this.columnSupplierInvoiceNo.MaxLength = 80;
                this.columnShippingRemark.MaxLength = 200;
                this.columnNSLCommissionAmt.AllowDBNull = false;
                this.columnInvoiceSellExchangeRate.AllowDBNull = false;
                this.columnInvoiceBuyExchangeRate.AllowDBNull = false;
                this.columnARExchangeRate.AllowDBNull = false;
                this.columnARAmt.AllowDBNull = false;
                this.columnARRefNo.MaxLength = 20;
                this.columnAPExchangeRate.AllowDBNull = false;
                this.columnAPAmt.AllowDBNull = false;
                this.columnAPRefNo.MaxLength = 20;
                this.columnLCAmt.AllowDBNull = false;
                this.columnIsLCPaymentChecked.AllowDBNull = false;
                this.columnExportLicenceFee.AllowDBNull = false;
                this.columnQuotaCharge.AllowDBNull = false;
                this.columnItemDesc1.MaxLength = 100;
                this.columnItemDesc2.MaxLength = 100;
                this.columnItemDesc3.MaxLength = 100;
                this.columnItemDesc4.MaxLength = 100;
                this.columnItemDesc5.MaxLength = 100;
                this.columnItemColour.MaxLength = 50;
                this.columnPackingMethodId.AllowDBNull = false;
                this.columnPiecesPerDeliveryUnit.AllowDBNull = false;
                this.columnIsSelfBilledOrder.AllowDBNull = false;
                this.columnCourierChargeToNUK.AllowDBNull = false;
                this.columnCourierChargeToNUKDebitNoteNo.MaxLength = 15;
                this.columnQccRemark.MaxLength = 100;
                this.columnIsSyncToFactory.AllowDBNull = false;
                this.columnBookingSONo.MaxLength = 50;
                this.columnBookingQty.AllowDBNull = false;
                this.columnImportDutyCalculatedAmt.AllowDBNull = false;
                this.columnImportDutyActualAmt.AllowDBNull = false;
                this.columnIsImportDutyChecked.AllowDBNull = false;
                this.columnInputVATCalculatedAmt.AllowDBNull = false;
                this.columnInputVATActualAmt.AllowDBNull = false;
                this.columnIsInputVATChecked.AllowDBNull = false;
                this.columnOutputVATCalculatedAmt.AllowDBNull = false;
                this.columnOutputVATActualAmt.AllowDBNull = false;
                this.columnIsOutputVATChecked.AllowDBNull = false;
                this.columnInvoiceRemark.MaxLength = 5000;
                this.columnDFDebitNoteNo.MaxLength = 20;
                this.columnDFDocumentationCharge.AllowDBNull = false;
                this.columnDFTransportationCharge.AllowDBNull = false;
                this.columnSalesScanAmt.AllowDBNull = false;
                this.columnPurchaseScanAmt.AllowDBNull = false;
                this.columnIsILSQtyUploadAllowed.AllowDBNull = false;
                this.columnNSLCommissionSettlementExchangeRate.AllowDBNull = false;
                this.columnNSLCommissionSettlementAmt.AllowDBNull = false;
                this.columnNSLCommissionRefNo.MaxLength = 20;
                this.columnChoiceOrderTotalShippedAmt.AllowDBNull = false;
                this.columnChoiceOrderTotalShippedSupplierGmtAmt.AllowDBNull = false;
                this.columnChoiceOrderNSLCommissionAmt.AllowDBNull = false;
                this.columnIsUploadDMSDocument.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedOn.AllowDBNull = false;
                this.columnLCBillRefNo.MaxLength = 25;
                this.columnLCNo.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceRow NewInvoiceRow() {
                return ((InvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InvoiceRowChanged != null)) {
                    this.InvoiceRowChanged(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InvoiceRowChanging != null)) {
                    this.InvoiceRowChanging(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InvoiceRowDeleted != null)) {
                    this.InvoiceRowDeleted(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InvoiceRowDeleting != null)) {
                    this.InvoiceRowDeleting(this, new InvoiceRowChangeEvent(((InvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInvoiceRow(InvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InvoiceDs ds = new InvoiceDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InvoiceRow : global::System.Data.DataRow {
            
            private InvoiceDataTable tableInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoice = ((InvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipmentId {
                get {
                    return ((int)(this[this.tableInvoice.ShipmentIdColumn]));
                }
                set {
                    this[this.tableInvoice.ShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoicePrefix {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.InvoicePrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePrefix\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoicePrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceSeq {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.InvoiceSeqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceSeq\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoiceSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceYear {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.InvoiceYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceYear\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoiceYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SequenceNo {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.SequenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.SequenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceUploadDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.InvoiceUploadDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceUploadDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoiceUploadDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceUploadUserId {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.InvoiceUploadUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceUploadUserId\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoiceUploadUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoicePrintDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.InvoicePrintDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePrintDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoicePrintDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoicePrintUserId {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.InvoicePrintUserIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePrintUserId\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoicePrintUserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReadyToSendInvoice {
                get {
                    return ((bool)(this[this.tableInvoice.IsReadyToSendInvoiceColumn]));
                }
                set {
                    this[this.tableInvoice.IsReadyToSendInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceSentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.InvoiceSentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceSentDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoiceSentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.SupplierInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierInvoiceNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.SupplierInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShippingRemark {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ShippingRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingRemark\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ShippingRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NSLCommissionAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.NSLCommissionAmtColumn]));
                }
                set {
                    this[this.tableInvoice.NSLCommissionAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InvoiceSellExchangeRate {
                get {
                    return ((decimal)(this[this.tableInvoice.InvoiceSellExchangeRateColumn]));
                }
                set {
                    this[this.tableInvoice.InvoiceSellExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InvoiceBuyExchangeRate {
                get {
                    return ((decimal)(this[this.tableInvoice.InvoiceBuyExchangeRateColumn]));
                }
                set {
                    this[this.tableInvoice.InvoiceBuyExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ARDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.ARDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ARDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ARExchangeRate {
                get {
                    return ((decimal)(this[this.tableInvoice.ARExchangeRateColumn]));
                }
                set {
                    this[this.tableInvoice.ARExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ARAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.ARAmtColumn]));
                }
                set {
                    this[this.tableInvoice.ARAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ARRefNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ARRefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARRefNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ARRefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime APDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.APDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.APDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal APExchangeRate {
                get {
                    return ((decimal)(this[this.tableInvoice.APExchangeRateColumn]));
                }
                set {
                    this[this.tableInvoice.APExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal APAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.APAmtColumn]));
                }
                set {
                    this[this.tableInvoice.APAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APRefNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.APRefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'APRefNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.APRefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LCIssueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.LCIssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCIssueDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.LCIssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LCExpiryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.LCExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCExpiryDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.LCExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LCAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.LCAmtColumn]));
                }
                set {
                    this[this.tableInvoice.LCAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsLCPaymentChecked {
                get {
                    return ((int)(this[this.tableInvoice.IsLCPaymentCheckedColumn]));
                }
                set {
                    this[this.tableInvoice.IsLCPaymentCheckedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LCPaymentCheckedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.LCPaymentCheckedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCPaymentCheckedDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.LCPaymentCheckedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExportLicenceFee {
                get {
                    return ((decimal)(this[this.tableInvoice.ExportLicenceFeeColumn]));
                }
                set {
                    this[this.tableInvoice.ExportLicenceFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QuotaCharge {
                get {
                    return ((decimal)(this[this.tableInvoice.QuotaChargeColumn]));
                }
                set {
                    this[this.tableInvoice.QuotaChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemDesc1 {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ItemDesc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc1\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ItemDesc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemDesc2 {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ItemDesc2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc2\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ItemDesc2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemDesc3 {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ItemDesc3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc3\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ItemDesc3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemDesc4 {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ItemDesc4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc4\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ItemDesc4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemDesc5 {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ItemDesc5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc5\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ItemDesc5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemColour {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.ItemColourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemColour\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ItemColourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipFromCountryId {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.ShipFromCountryIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipFromCountryId\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ShipFromCountryIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomerDestinationId {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.CustomerDestinationIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerDestinationId\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.CustomerDestinationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PackingMethodId {
                get {
                    return ((int)(this[this.tableInvoice.PackingMethodIdColumn]));
                }
                set {
                    this[this.tableInvoice.PackingMethodIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PiecesPerDeliveryUnit {
                get {
                    return ((int)(this[this.tableInvoice.PiecesPerDeliveryUnitColumn]));
                }
                set {
                    this[this.tableInvoice.PiecesPerDeliveryUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ShippingDocReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.ShippingDocReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingDocReceiptDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ShippingDocReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AccountDocReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.AccountDocReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountDocReceiptDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.AccountDocReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelfBilledOrder {
                get {
                    return ((bool)(this[this.tableInvoice.IsSelfBilledOrderColumn]));
                }
                set {
                    this[this.tableInvoice.IsSelfBilledOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CourierChargeToNUK {
                get {
                    return ((decimal)(this[this.tableInvoice.CourierChargeToNUKColumn]));
                }
                set {
                    this[this.tableInvoice.CourierChargeToNUKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CourierChargeToNUKDebitNoteNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.CourierChargeToNUKDebitNoteNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CourierChargeToNUKDebitNoteNo\' in table \'Invoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableInvoice.CourierChargeToNUKDebitNoteNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QccRemark {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.QccRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QccRemark\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.QccRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSyncToFactory {
                get {
                    return ((bool)(this[this.tableInvoice.IsSyncToFactoryColumn]));
                }
                set {
                    this[this.tableInvoice.IsSyncToFactoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BookingSONo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.BookingSONoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingSONo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.BookingSONoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BookingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.BookingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.BookingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BookingQty {
                get {
                    return ((int)(this[this.tableInvoice.BookingQtyColumn]));
                }
                set {
                    this[this.tableInvoice.BookingQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime BookingAtWarehouseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.BookingAtWarehouseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingAtWarehouseDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.BookingAtWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ActualAtWarehouseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.ActualAtWarehouseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualAtWarehouseDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ActualAtWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ILSActualAtWarehouseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.ILSActualAtWarehouseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ILSActualAtWarehouseDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ILSActualAtWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ImportDutyCurrencyId {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.ImportDutyCurrencyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportDutyCurrencyId\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ImportDutyCurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ImportDutyCalculatedAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.ImportDutyCalculatedAmtColumn]));
                }
                set {
                    this[this.tableInvoice.ImportDutyCalculatedAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ImportDutyActualAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.ImportDutyActualAmtColumn]));
                }
                set {
                    this[this.tableInvoice.ImportDutyActualAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsImportDutyChecked {
                get {
                    return ((int)(this[this.tableInvoice.IsImportDutyCheckedColumn]));
                }
                set {
                    this[this.tableInvoice.IsImportDutyCheckedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ImportDutyCheckedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.ImportDutyCheckedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportDutyCheckedDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ImportDutyCheckedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InputVATCurrencyId {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.InputVATCurrencyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputVATCurrencyId\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InputVATCurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InputVATCalculatedAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.InputVATCalculatedAmtColumn]));
                }
                set {
                    this[this.tableInvoice.InputVATCalculatedAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InputVATActualAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.InputVATActualAmtColumn]));
                }
                set {
                    this[this.tableInvoice.InputVATActualAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsInputVATChecked {
                get {
                    return ((int)(this[this.tableInvoice.IsInputVATCheckedColumn]));
                }
                set {
                    this[this.tableInvoice.IsInputVATCheckedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InputVATCheckedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.InputVATCheckedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputVATCheckedDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InputVATCheckedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OutputVATCurrencyId {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.OutputVATCurrencyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutputVATCurrencyId\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.OutputVATCurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutputVATCalculatedAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.OutputVATCalculatedAmtColumn]));
                }
                set {
                    this[this.tableInvoice.OutputVATCalculatedAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutputVATActualAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.OutputVATActualAmtColumn]));
                }
                set {
                    this[this.tableInvoice.OutputVATActualAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsOutputVATChecked {
                get {
                    return ((int)(this[this.tableInvoice.IsOutputVATCheckedColumn]));
                }
                set {
                    this[this.tableInvoice.IsOutputVATCheckedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OutputVATCheckedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.OutputVATCheckedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutputVATCheckedDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.OutputVATCheckedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceRemark {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.InvoiceRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceRemark\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.InvoiceRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DFDebitNoteNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.DFDebitNoteNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DFDebitNoteNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.DFDebitNoteNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DFDocumentationCharge {
                get {
                    return ((decimal)(this[this.tableInvoice.DFDocumentationChargeColumn]));
                }
                set {
                    this[this.tableInvoice.DFDocumentationChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DFTransportationCharge {
                get {
                    return ((decimal)(this[this.tableInvoice.DFTransportationChargeColumn]));
                }
                set {
                    this[this.tableInvoice.DFTransportationChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SalesScanDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.SalesScanDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesScanDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.SalesScanDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesScanAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.SalesScanAmtColumn]));
                }
                set {
                    this[this.tableInvoice.SalesScanAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SalesScanBy {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.SalesScanByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesScanBy\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.SalesScanByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PurchaseScanDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.PurchaseScanDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseScanDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.PurchaseScanDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PurchaseScanAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.PurchaseScanAmtColumn]));
                }
                set {
                    this[this.tableInvoice.PurchaseScanAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PurchaseScanBy {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.PurchaseScanByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseScanBy\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.PurchaseScanByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EInvoiceBatchId {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.EInvoiceBatchIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EInvoiceBatchId\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.EInvoiceBatchIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsILSQtyUploadAllowed {
                get {
                    return ((bool)(this[this.tableInvoice.IsILSQtyUploadAllowedColumn]));
                }
                set {
                    this[this.tableInvoice.IsILSQtyUploadAllowedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime NSLCommissionSettlementDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.NSLCommissionSettlementDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSLCommissionSettlementDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.NSLCommissionSettlementDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NSLCommissionSettlementExchangeRate {
                get {
                    return ((decimal)(this[this.tableInvoice.NSLCommissionSettlementExchangeRateColumn]));
                }
                set {
                    this[this.tableInvoice.NSLCommissionSettlementExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NSLCommissionSettlementAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.NSLCommissionSettlementAmtColumn]));
                }
                set {
                    this[this.tableInvoice.NSLCommissionSettlementAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NSLCommissionRefNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.NSLCommissionRefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NSLCommissionRefNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.NSLCommissionRefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ChoiceOrderTotalShippedAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.ChoiceOrderTotalShippedAmtColumn]));
                }
                set {
                    this[this.tableInvoice.ChoiceOrderTotalShippedAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ChoiceOrderTotalShippedSupplierGmtAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.ChoiceOrderTotalShippedSupplierGmtAmtColumn]));
                }
                set {
                    this[this.tableInvoice.ChoiceOrderTotalShippedSupplierGmtAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ChoiceOrderNSLCommissionAmt {
                get {
                    return ((decimal)(this[this.tableInvoice.ChoiceOrderNSLCommissionAmtColumn]));
                }
                set {
                    this[this.tableInvoice.ChoiceOrderNSLCommissionAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUploadDMSDocument {
                get {
                    return ((bool)(this[this.tableInvoice.IsUploadDMSDocumentColumn]));
                }
                set {
                    this[this.tableInvoice.IsUploadDMSDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LastSendDMSDocumentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.LastSendDMSDocumentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSendDMSDocumentDate\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.LastSendDMSDocumentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShippingDocCheckedBy {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.ShippingDocCheckedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingDocCheckedBy\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ShippingDocCheckedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ShippingDocCheckedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.ShippingDocCheckedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingDocCheckedOn\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ShippingDocCheckedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ShippingCheckedTotalNetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice.ShippingCheckedTotalNetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingCheckedTotalNetAmount\' in table \'Invoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableInvoice.ShippingCheckedTotalNetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Status {
                get {
                    return ((int)(this[this.tableInvoice.StatusColumn]));
                }
                set {
                    this[this.tableInvoice.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CreatedBy {
                get {
                    return ((int)(this[this.tableInvoice.CreatedByColumn]));
                }
                set {
                    this[this.tableInvoice.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedOn {
                get {
                    return ((global::System.DateTime)(this[this.tableInvoice.CreatedOnColumn]));
                }
                set {
                    this[this.tableInvoice.CreatedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ModifiedBy {
                get {
                    try {
                        return ((int)(this[this.tableInvoice.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifiedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice.ModifiedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedOn\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.ModifiedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LCBillRefNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.LCBillRefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCBillRefNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.LCBillRefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LCNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice.LCNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCNo\' in table \'Invoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice.LCNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicePrefixNull() {
                return this.IsNull(this.tableInvoice.InvoicePrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicePrefixNull() {
                this[this.tableInvoice.InvoicePrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceSeqNull() {
                return this.IsNull(this.tableInvoice.InvoiceSeqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceSeqNull() {
                this[this.tableInvoice.InvoiceSeqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceYearNull() {
                return this.IsNull(this.tableInvoice.InvoiceYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceYearNull() {
                this[this.tableInvoice.InvoiceYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSequenceNoNull() {
                return this.IsNull(this.tableInvoice.SequenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSequenceNoNull() {
                this[this.tableInvoice.SequenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableInvoice.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableInvoice.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceUploadDateNull() {
                return this.IsNull(this.tableInvoice.InvoiceUploadDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceUploadDateNull() {
                this[this.tableInvoice.InvoiceUploadDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceUploadUserIdNull() {
                return this.IsNull(this.tableInvoice.InvoiceUploadUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceUploadUserIdNull() {
                this[this.tableInvoice.InvoiceUploadUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicePrintDateNull() {
                return this.IsNull(this.tableInvoice.InvoicePrintDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicePrintDateNull() {
                this[this.tableInvoice.InvoicePrintDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicePrintUserIdNull() {
                return this.IsNull(this.tableInvoice.InvoicePrintUserIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicePrintUserIdNull() {
                this[this.tableInvoice.InvoicePrintUserIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceSentDateNull() {
                return this.IsNull(this.tableInvoice.InvoiceSentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceSentDateNull() {
                this[this.tableInvoice.InvoiceSentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierInvoiceNoNull() {
                return this.IsNull(this.tableInvoice.SupplierInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierInvoiceNoNull() {
                this[this.tableInvoice.SupplierInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingRemarkNull() {
                return this.IsNull(this.tableInvoice.ShippingRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingRemarkNull() {
                this[this.tableInvoice.ShippingRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARDateNull() {
                return this.IsNull(this.tableInvoice.ARDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARDateNull() {
                this[this.tableInvoice.ARDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARRefNoNull() {
                return this.IsNull(this.tableInvoice.ARRefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARRefNoNull() {
                this[this.tableInvoice.ARRefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPDateNull() {
                return this.IsNull(this.tableInvoice.APDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPDateNull() {
                this[this.tableInvoice.APDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPRefNoNull() {
                return this.IsNull(this.tableInvoice.APRefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPRefNoNull() {
                this[this.tableInvoice.APRefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCIssueDateNull() {
                return this.IsNull(this.tableInvoice.LCIssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCIssueDateNull() {
                this[this.tableInvoice.LCIssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCExpiryDateNull() {
                return this.IsNull(this.tableInvoice.LCExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCExpiryDateNull() {
                this[this.tableInvoice.LCExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCPaymentCheckedDateNull() {
                return this.IsNull(this.tableInvoice.LCPaymentCheckedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCPaymentCheckedDateNull() {
                this[this.tableInvoice.LCPaymentCheckedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemDesc1Null() {
                return this.IsNull(this.tableInvoice.ItemDesc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemDesc1Null() {
                this[this.tableInvoice.ItemDesc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemDesc2Null() {
                return this.IsNull(this.tableInvoice.ItemDesc2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemDesc2Null() {
                this[this.tableInvoice.ItemDesc2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemDesc3Null() {
                return this.IsNull(this.tableInvoice.ItemDesc3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemDesc3Null() {
                this[this.tableInvoice.ItemDesc3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemDesc4Null() {
                return this.IsNull(this.tableInvoice.ItemDesc4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemDesc4Null() {
                this[this.tableInvoice.ItemDesc4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemDesc5Null() {
                return this.IsNull(this.tableInvoice.ItemDesc5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemDesc5Null() {
                this[this.tableInvoice.ItemDesc5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemColourNull() {
                return this.IsNull(this.tableInvoice.ItemColourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemColourNull() {
                this[this.tableInvoice.ItemColourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShipFromCountryIdNull() {
                return this.IsNull(this.tableInvoice.ShipFromCountryIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShipFromCountryIdNull() {
                this[this.tableInvoice.ShipFromCountryIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerDestinationIdNull() {
                return this.IsNull(this.tableInvoice.CustomerDestinationIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerDestinationIdNull() {
                this[this.tableInvoice.CustomerDestinationIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingDocReceiptDateNull() {
                return this.IsNull(this.tableInvoice.ShippingDocReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingDocReceiptDateNull() {
                this[this.tableInvoice.ShippingDocReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountDocReceiptDateNull() {
                return this.IsNull(this.tableInvoice.AccountDocReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountDocReceiptDateNull() {
                this[this.tableInvoice.AccountDocReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCourierChargeToNUKDebitNoteNoNull() {
                return this.IsNull(this.tableInvoice.CourierChargeToNUKDebitNoteNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCourierChargeToNUKDebitNoteNoNull() {
                this[this.tableInvoice.CourierChargeToNUKDebitNoteNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQccRemarkNull() {
                return this.IsNull(this.tableInvoice.QccRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQccRemarkNull() {
                this[this.tableInvoice.QccRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBookingSONoNull() {
                return this.IsNull(this.tableInvoice.BookingSONoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBookingSONoNull() {
                this[this.tableInvoice.BookingSONoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBookingDateNull() {
                return this.IsNull(this.tableInvoice.BookingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBookingDateNull() {
                this[this.tableInvoice.BookingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBookingAtWarehouseDateNull() {
                return this.IsNull(this.tableInvoice.BookingAtWarehouseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBookingAtWarehouseDateNull() {
                this[this.tableInvoice.BookingAtWarehouseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualAtWarehouseDateNull() {
                return this.IsNull(this.tableInvoice.ActualAtWarehouseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualAtWarehouseDateNull() {
                this[this.tableInvoice.ActualAtWarehouseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsILSActualAtWarehouseDateNull() {
                return this.IsNull(this.tableInvoice.ILSActualAtWarehouseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetILSActualAtWarehouseDateNull() {
                this[this.tableInvoice.ILSActualAtWarehouseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImportDutyCurrencyIdNull() {
                return this.IsNull(this.tableInvoice.ImportDutyCurrencyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImportDutyCurrencyIdNull() {
                this[this.tableInvoice.ImportDutyCurrencyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImportDutyCheckedDateNull() {
                return this.IsNull(this.tableInvoice.ImportDutyCheckedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImportDutyCheckedDateNull() {
                this[this.tableInvoice.ImportDutyCheckedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputVATCurrencyIdNull() {
                return this.IsNull(this.tableInvoice.InputVATCurrencyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputVATCurrencyIdNull() {
                this[this.tableInvoice.InputVATCurrencyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputVATCheckedDateNull() {
                return this.IsNull(this.tableInvoice.InputVATCheckedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputVATCheckedDateNull() {
                this[this.tableInvoice.InputVATCheckedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutputVATCurrencyIdNull() {
                return this.IsNull(this.tableInvoice.OutputVATCurrencyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutputVATCurrencyIdNull() {
                this[this.tableInvoice.OutputVATCurrencyIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutputVATCheckedDateNull() {
                return this.IsNull(this.tableInvoice.OutputVATCheckedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutputVATCheckedDateNull() {
                this[this.tableInvoice.OutputVATCheckedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceRemarkNull() {
                return this.IsNull(this.tableInvoice.InvoiceRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceRemarkNull() {
                this[this.tableInvoice.InvoiceRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDFDebitNoteNoNull() {
                return this.IsNull(this.tableInvoice.DFDebitNoteNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDFDebitNoteNoNull() {
                this[this.tableInvoice.DFDebitNoteNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesScanDateNull() {
                return this.IsNull(this.tableInvoice.SalesScanDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesScanDateNull() {
                this[this.tableInvoice.SalesScanDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalesScanByNull() {
                return this.IsNull(this.tableInvoice.SalesScanByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalesScanByNull() {
                this[this.tableInvoice.SalesScanByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchaseScanDateNull() {
                return this.IsNull(this.tableInvoice.PurchaseScanDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchaseScanDateNull() {
                this[this.tableInvoice.PurchaseScanDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchaseScanByNull() {
                return this.IsNull(this.tableInvoice.PurchaseScanByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchaseScanByNull() {
                this[this.tableInvoice.PurchaseScanByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEInvoiceBatchIdNull() {
                return this.IsNull(this.tableInvoice.EInvoiceBatchIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEInvoiceBatchIdNull() {
                this[this.tableInvoice.EInvoiceBatchIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNSLCommissionSettlementDateNull() {
                return this.IsNull(this.tableInvoice.NSLCommissionSettlementDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNSLCommissionSettlementDateNull() {
                this[this.tableInvoice.NSLCommissionSettlementDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNSLCommissionRefNoNull() {
                return this.IsNull(this.tableInvoice.NSLCommissionRefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNSLCommissionRefNoNull() {
                this[this.tableInvoice.NSLCommissionRefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastSendDMSDocumentDateNull() {
                return this.IsNull(this.tableInvoice.LastSendDMSDocumentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastSendDMSDocumentDateNull() {
                this[this.tableInvoice.LastSendDMSDocumentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingDocCheckedByNull() {
                return this.IsNull(this.tableInvoice.ShippingDocCheckedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingDocCheckedByNull() {
                this[this.tableInvoice.ShippingDocCheckedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingDocCheckedOnNull() {
                return this.IsNull(this.tableInvoice.ShippingDocCheckedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingDocCheckedOnNull() {
                this[this.tableInvoice.ShippingDocCheckedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingCheckedTotalNetAmountNull() {
                return this.IsNull(this.tableInvoice.ShippingCheckedTotalNetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingCheckedTotalNetAmountNull() {
                this[this.tableInvoice.ShippingCheckedTotalNetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableInvoice.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedByNull() {
                this[this.tableInvoice.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedOnNull() {
                return this.IsNull(this.tableInvoice.ModifiedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedOnNull() {
                this[this.tableInvoice.ModifiedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCBillRefNoNull() {
                return this.IsNull(this.tableInvoice.LCBillRefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCBillRefNoNull() {
                this[this.tableInvoice.LCBillRefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCNoNull() {
                return this.IsNull(this.tableInvoice.LCNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCNoNull() {
                this[this.tableInvoice.LCNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InvoiceRowChangeEvent : global::System.EventArgs {
            
            private InvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceRowChangeEvent(InvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.dataserver.model.shipping.InvoiceDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class InvoiceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InvoiceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Invoice";
            tableMapping.ColumnMappings.Add("ShipmentId", "ShipmentId");
            tableMapping.ColumnMappings.Add("InvoicePrefix", "InvoicePrefix");
            tableMapping.ColumnMappings.Add("InvoiceSeq", "InvoiceSeq");
            tableMapping.ColumnMappings.Add("InvoiceYear", "InvoiceYear");
            tableMapping.ColumnMappings.Add("SequenceNo", "SequenceNo");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("InvoiceUploadDate", "InvoiceUploadDate");
            tableMapping.ColumnMappings.Add("InvoiceUploadUserId", "InvoiceUploadUserId");
            tableMapping.ColumnMappings.Add("InvoicePrintDate", "InvoicePrintDate");
            tableMapping.ColumnMappings.Add("InvoicePrintUserId", "InvoicePrintUserId");
            tableMapping.ColumnMappings.Add("IsReadyToSendInvoice", "IsReadyToSendInvoice");
            tableMapping.ColumnMappings.Add("InvoiceSentDate", "InvoiceSentDate");
            tableMapping.ColumnMappings.Add("SupplierInvoiceNo", "SupplierInvoiceNo");
            tableMapping.ColumnMappings.Add("ShippingRemark", "ShippingRemark");
            tableMapping.ColumnMappings.Add("NSLCommissionAmt", "NSLCommissionAmt");
            tableMapping.ColumnMappings.Add("InvoiceSellExchangeRate", "InvoiceSellExchangeRate");
            tableMapping.ColumnMappings.Add("InvoiceBuyExchangeRate", "InvoiceBuyExchangeRate");
            tableMapping.ColumnMappings.Add("ARDate", "ARDate");
            tableMapping.ColumnMappings.Add("ARExchangeRate", "ARExchangeRate");
            tableMapping.ColumnMappings.Add("ARAmt", "ARAmt");
            tableMapping.ColumnMappings.Add("ARRefNo", "ARRefNo");
            tableMapping.ColumnMappings.Add("APDate", "APDate");
            tableMapping.ColumnMappings.Add("APExchangeRate", "APExchangeRate");
            tableMapping.ColumnMappings.Add("APAmt", "APAmt");
            tableMapping.ColumnMappings.Add("APRefNo", "APRefNo");
            tableMapping.ColumnMappings.Add("LCIssueDate", "LCIssueDate");
            tableMapping.ColumnMappings.Add("LCExpiryDate", "LCExpiryDate");
            tableMapping.ColumnMappings.Add("LCAmt", "LCAmt");
            tableMapping.ColumnMappings.Add("IsLCPaymentChecked", "IsLCPaymentChecked");
            tableMapping.ColumnMappings.Add("LCPaymentCheckedDate", "LCPaymentCheckedDate");
            tableMapping.ColumnMappings.Add("ExportLicenceFee", "ExportLicenceFee");
            tableMapping.ColumnMappings.Add("QuotaCharge", "QuotaCharge");
            tableMapping.ColumnMappings.Add("ItemDesc1", "ItemDesc1");
            tableMapping.ColumnMappings.Add("ItemDesc2", "ItemDesc2");
            tableMapping.ColumnMappings.Add("ItemDesc3", "ItemDesc3");
            tableMapping.ColumnMappings.Add("ItemDesc4", "ItemDesc4");
            tableMapping.ColumnMappings.Add("ItemDesc5", "ItemDesc5");
            tableMapping.ColumnMappings.Add("ItemColour", "ItemColour");
            tableMapping.ColumnMappings.Add("ShipFromCountryId", "ShipFromCountryId");
            tableMapping.ColumnMappings.Add("CustomerDestinationId", "CustomerDestinationId");
            tableMapping.ColumnMappings.Add("PackingMethodId", "PackingMethodId");
            tableMapping.ColumnMappings.Add("PiecesPerDeliveryUnit", "PiecesPerDeliveryUnit");
            tableMapping.ColumnMappings.Add("ShippingDocReceiptDate", "ShippingDocReceiptDate");
            tableMapping.ColumnMappings.Add("AccountDocReceiptDate", "AccountDocReceiptDate");
            tableMapping.ColumnMappings.Add("IsSelfBilledOrder", "IsSelfBilledOrder");
            tableMapping.ColumnMappings.Add("CourierChargeToNUK", "CourierChargeToNUK");
            tableMapping.ColumnMappings.Add("CourierChargeToNUKDebitNoteNo", "CourierChargeToNUKDebitNoteNo");
            tableMapping.ColumnMappings.Add("QccRemark", "QccRemark");
            tableMapping.ColumnMappings.Add("IsSyncToFactory", "IsSyncToFactory");
            tableMapping.ColumnMappings.Add("BookingSONo", "BookingSONo");
            tableMapping.ColumnMappings.Add("BookingDate", "BookingDate");
            tableMapping.ColumnMappings.Add("BookingQty", "BookingQty");
            tableMapping.ColumnMappings.Add("BookingAtWarehouseDate", "BookingAtWarehouseDate");
            tableMapping.ColumnMappings.Add("ActualAtWarehouseDate", "ActualAtWarehouseDate");
            tableMapping.ColumnMappings.Add("ILSActualAtWarehouseDate", "ILSActualAtWarehouseDate");
            tableMapping.ColumnMappings.Add("ImportDutyCurrencyId", "ImportDutyCurrencyId");
            tableMapping.ColumnMappings.Add("ImportDutyCalculatedAmt", "ImportDutyCalculatedAmt");
            tableMapping.ColumnMappings.Add("ImportDutyActualAmt", "ImportDutyActualAmt");
            tableMapping.ColumnMappings.Add("IsImportDutyChecked", "IsImportDutyChecked");
            tableMapping.ColumnMappings.Add("ImportDutyCheckedDate", "ImportDutyCheckedDate");
            tableMapping.ColumnMappings.Add("InputVATCurrencyId", "InputVATCurrencyId");
            tableMapping.ColumnMappings.Add("InputVATCalculatedAmt", "InputVATCalculatedAmt");
            tableMapping.ColumnMappings.Add("InputVATActualAmt", "InputVATActualAmt");
            tableMapping.ColumnMappings.Add("IsInputVATChecked", "IsInputVATChecked");
            tableMapping.ColumnMappings.Add("InputVATCheckedDate", "InputVATCheckedDate");
            tableMapping.ColumnMappings.Add("OutputVATCurrencyId", "OutputVATCurrencyId");
            tableMapping.ColumnMappings.Add("OutputVATCalculatedAmt", "OutputVATCalculatedAmt");
            tableMapping.ColumnMappings.Add("OutputVATActualAmt", "OutputVATActualAmt");
            tableMapping.ColumnMappings.Add("IsOutputVATChecked", "IsOutputVATChecked");
            tableMapping.ColumnMappings.Add("OutputVATCheckedDate", "OutputVATCheckedDate");
            tableMapping.ColumnMappings.Add("InvoiceRemark", "InvoiceRemark");
            tableMapping.ColumnMappings.Add("DFDebitNoteNo", "DFDebitNoteNo");
            tableMapping.ColumnMappings.Add("DFDocumentationCharge", "DFDocumentationCharge");
            tableMapping.ColumnMappings.Add("DFTransportationCharge", "DFTransportationCharge");
            tableMapping.ColumnMappings.Add("SalesScanDate", "SalesScanDate");
            tableMapping.ColumnMappings.Add("SalesScanAmt", "SalesScanAmt");
            tableMapping.ColumnMappings.Add("SalesScanBy", "SalesScanBy");
            tableMapping.ColumnMappings.Add("PurchaseScanDate", "PurchaseScanDate");
            tableMapping.ColumnMappings.Add("PurchaseScanAmt", "PurchaseScanAmt");
            tableMapping.ColumnMappings.Add("PurchaseScanBy", "PurchaseScanBy");
            tableMapping.ColumnMappings.Add("EInvoiceBatchId", "EInvoiceBatchId");
            tableMapping.ColumnMappings.Add("IsILSQtyUploadAllowed", "IsILSQtyUploadAllowed");
            tableMapping.ColumnMappings.Add("NSLCommissionSettlementDate", "NSLCommissionSettlementDate");
            tableMapping.ColumnMappings.Add("NSLCommissionSettlementExchangeRate", "NSLCommissionSettlementExchangeRate");
            tableMapping.ColumnMappings.Add("NSLCommissionSettlementAmt", "NSLCommissionSettlementAmt");
            tableMapping.ColumnMappings.Add("NSLCommissionRefNo", "NSLCommissionRefNo");
            tableMapping.ColumnMappings.Add("ChoiceOrderTotalShippedAmt", "ChoiceOrderTotalShippedAmt");
            tableMapping.ColumnMappings.Add("ChoiceOrderTotalShippedSupplierGmtAmt", "ChoiceOrderTotalShippedSupplierGmtAmt");
            tableMapping.ColumnMappings.Add("ChoiceOrderNSLCommissionAmt", "ChoiceOrderNSLCommissionAmt");
            tableMapping.ColumnMappings.Add("IsUploadDMSDocument", "IsUploadDMSDocument");
            tableMapping.ColumnMappings.Add("LastSendDMSDocumentDate", "LastSendDMSDocumentDate");
            tableMapping.ColumnMappings.Add("ShippingDocCheckedBy", "ShippingDocCheckedBy");
            tableMapping.ColumnMappings.Add("ShippingDocCheckedOn", "ShippingDocCheckedOn");
            tableMapping.ColumnMappings.Add("ShippingCheckedTotalNetAmount", "ShippingCheckedTotalNetAmount");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            tableMapping.ColumnMappings.Add("ModifiedBy", "ModifiedBy");
            tableMapping.ColumnMappings.Add("ModifiedOn", "ModifiedOn");
            tableMapping.ColumnMappings.Add("LCBillRefNo", "LCBillRefNo");
            tableMapping.ColumnMappings.Add("LCNo", "LCNo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ISAM_UAT].[dbo].[Invoice] WHERE (([ShipmentId] = ?) AND ((? = 1 AND " +
                "[InvoicePrefix] IS NULL) OR ([InvoicePrefix] = ?)) AND ((? = 1 AND [InvoiceSeq] " +
                "IS NULL) OR ([InvoiceSeq] = ?)) AND ((? = 1 AND [InvoiceYear] IS NULL) OR ([Invo" +
                "iceYear] = ?)) AND ((? = 1 AND [SequenceNo] IS NULL) OR ([SequenceNo] = ?)) AND " +
                "((? = 1 AND [InvoiceDate] IS NULL) OR ([InvoiceDate] = ?)) AND ((? = 1 AND [Invo" +
                "iceUploadDate] IS NULL) OR ([InvoiceUploadDate] = ?)) AND ((? = 1 AND [InvoiceUp" +
                "loadUserId] IS NULL) OR ([InvoiceUploadUserId] = ?)) AND ((? = 1 AND [InvoicePri" +
                "ntDate] IS NULL) OR ([InvoicePrintDate] = ?)) AND ((? = 1 AND [InvoicePrintUserI" +
                "d] IS NULL) OR ([InvoicePrintUserId] = ?)) AND ([IsReadyToSendInvoice] = ?) AND " +
                "((? = 1 AND [InvoiceSentDate] IS NULL) OR ([InvoiceSentDate] = ?)) AND ((? = 1 A" +
                "ND [SupplierInvoiceNo] IS NULL) OR ([SupplierInvoiceNo] = ?)) AND ((? = 1 AND [S" +
                "hippingRemark] IS NULL) OR ([ShippingRemark] = ?)) AND ([NSLCommissionAmt] = ?) " +
                "AND ([InvoiceSellExchangeRate] = ?) AND ([InvoiceBuyExchangeRate] = ?) AND ((? =" +
                " 1 AND [ARDate] IS NULL) OR ([ARDate] = ?)) AND ([ARExchangeRate] = ?) AND ([ARA" +
                "mt] = ?) AND ((? = 1 AND [ARRefNo] IS NULL) OR ([ARRefNo] = ?)) AND ((? = 1 AND " +
                "[APDate] IS NULL) OR ([APDate] = ?)) AND ([APExchangeRate] = ?) AND ([APAmt] = ?" +
                ") AND ((? = 1 AND [APRefNo] IS NULL) OR ([APRefNo] = ?)) AND ((? = 1 AND [LCNo] " +
                "IS NULL) OR ([LCNo] = ?)) AND ((? = 1 AND [LCBillRefNo] IS NULL) OR ([LCBillRefN" +
                "o] = ?)) AND ((? = 1 AND [LCIssueDate] IS NULL) OR ([LCIssueDate] = ?)) AND ((? " +
                "= 1 AND [LCExpiryDate] IS NULL) OR ([LCExpiryDate] = ?)) AND ([LCAmt] = ?) AND (" +
                "[IsLCPaymentChecked] = ?) AND ((? = 1 AND [LCPaymentCheckedDate] IS NULL) OR ([L" +
                "CPaymentCheckedDate] = ?)) AND ([ExportLicenceFee] = ?) AND ([QuotaCharge] = ?) " +
                "AND ((? = 1 AND [ItemDesc1] IS NULL) OR ([ItemDesc1] = ?)) AND ((? = 1 AND [Item" +
                "Desc2] IS NULL) OR ([ItemDesc2] = ?)) AND ((? = 1 AND [ItemDesc3] IS NULL) OR ([" +
                "ItemDesc3] = ?)) AND ((? = 1 AND [ItemDesc4] IS NULL) OR ([ItemDesc4] = ?)) AND " +
                "((? = 1 AND [ItemDesc5] IS NULL) OR ([ItemDesc5] = ?)) AND ((? = 1 AND [ItemColo" +
                "ur] IS NULL) OR ([ItemColour] = ?)) AND ((? = 1 AND [ShipFromCountryId] IS NULL)" +
                " OR ([ShipFromCountryId] = ?)) AND ((? = 1 AND [CustomerDestinationId] IS NULL) " +
                "OR ([CustomerDestinationId] = ?)) AND ([PackingMethodId] = ?) AND ([PiecesPerDel" +
                "iveryUnit] = ?) AND ((? = 1 AND [ShippingDocReceiptDate] IS NULL) OR ([ShippingD" +
                "ocReceiptDate] = ?)) AND ((? = 1 AND [AccountDocReceiptDate] IS NULL) OR ([Accou" +
                "ntDocReceiptDate] = ?)) AND ([IsSelfBilledOrder] = ?) AND ([CourierChargeToNUK] " +
                "= ?) AND ((? = 1 AND [CourierChargeToNUKDebitNoteNo] IS NULL) OR ([CourierCharge" +
                "ToNUKDebitNoteNo] = ?)) AND ((? = 1 AND [QccRemark] IS NULL) OR ([QccRemark] = ?" +
                ")) AND ([IsSyncToFactory] = ?) AND ((? = 1 AND [BookingSONo] IS NULL) OR ([Booki" +
                "ngSONo] = ?)) AND ((? = 1 AND [BookingDate] IS NULL) OR ([BookingDate] = ?)) AND" +
                " ([BookingQty] = ?) AND ((? = 1 AND [BookingAtWarehouseDate] IS NULL) OR ([Booki" +
                "ngAtWarehouseDate] = ?)) AND ((? = 1 AND [ActualAtWarehouseDate] IS NULL) OR ([A" +
                "ctualAtWarehouseDate] = ?)) AND ((? = 1 AND [ILSActualAtWarehouseDate] IS NULL) " +
                "OR ([ILSActualAtWarehouseDate] = ?)) AND ((? = 1 AND [ImportDutyCurrencyId] IS N" +
                "ULL) OR ([ImportDutyCurrencyId] = ?)) AND ([ImportDutyCalculatedAmt] = ?) AND ([" +
                "ImportDutyActualAmt] = ?) AND ([IsImportDutyChecked] = ?) AND ((? = 1 AND [Impor" +
                "tDutyCheckedDate] IS NULL) OR ([ImportDutyCheckedDate] = ?)) AND ((? = 1 AND [In" +
                "putVATCurrencyId] IS NULL) OR ([InputVATCurrencyId] = ?)) AND ([InputVATCalculat" +
                "edAmt] = ?) AND ([InputVATActualAmt] = ?) AND ([IsInputVATChecked] = ?) AND ((? " +
                "= 1 AND [InputVATCheckedDate] IS NULL) OR ([InputVATCheckedDate] = ?)) AND ((? =" +
                " 1 AND [OutputVATCurrencyId] IS NULL) OR ([OutputVATCurrencyId] = ?)) AND ([Outp" +
                "utVATCalculatedAmt] = ?) AND ([OutputVATActualAmt] = ?) AND ([IsOutputVATChecked" +
                "] = ?) AND ((? = 1 AND [OutputVATCheckedDate] IS NULL) OR ([OutputVATCheckedDate" +
                "] = ?)) AND ((? = 1 AND [InvoiceRemark] IS NULL) OR ([InvoiceRemark] = ?)) AND (" +
                "(? = 1 AND [DFDebitNoteNo] IS NULL) OR ([DFDebitNoteNo] = ?)) AND ([DFDocumentat" +
                "ionCharge] = ?) AND ([DFTransportationCharge] = ?) AND ((? = 1 AND [SalesScanDat" +
                "e] IS NULL) OR ([SalesScanDate] = ?)) AND ([SalesScanAmt] = ?) AND ((? = 1 AND [" +
                "SalesScanBy] IS NULL) OR ([SalesScanBy] = ?)) AND ((? = 1 AND [PurchaseScanDate]" +
                " IS NULL) OR ([PurchaseScanDate] = ?)) AND ([PurchaseScanAmt] = ?) AND ((? = 1 A" +
                "ND [PurchaseScanBy] IS NULL) OR ([PurchaseScanBy] = ?)) AND ((? = 1 AND [EInvoic" +
                "eBatchId] IS NULL) OR ([EInvoiceBatchId] = ?)) AND ([IsILSQtyUploadAllowed] = ?)" +
                " AND ((? = 1 AND [NSLCommissionSettlementDate] IS NULL) OR ([NSLCommissionSettle" +
                "mentDate] = ?)) AND ([NSLCommissionSettlementExchangeRate] = ?) AND ([NSLCommiss" +
                "ionSettlementAmt] = ?) AND ((? = 1 AND [NSLCommissionRefNo] IS NULL) OR ([NSLCom" +
                "missionRefNo] = ?)) AND ([ChoiceOrderTotalShippedAmt] = ?) AND ([ChoiceOrderTota" +
                "lShippedSupplierGmtAmt] = ?) AND ([ChoiceOrderNSLCommissionAmt] = ?) AND ([IsUpl" +
                "oadDMSDocument] = ?) AND ((? = 1 AND [LastSendDMSDocumentDate] IS NULL) OR ([Las" +
                "tSendDMSDocumentDate] = ?)) AND ((? = 1 AND [ShippingDocCheckedBy] IS NULL) OR (" +
                "[ShippingDocCheckedBy] = ?)) AND ((? = 1 AND [ShippingDocCheckedOn] IS NULL) OR " +
                "([ShippingDocCheckedOn] = ?)) AND ((? = 1 AND [ShippingCheckedTotalNetAmount] IS" +
                " NULL) OR ([ShippingCheckedTotalNetAmount] = ?)) AND ([Status] = ?) AND ([Create" +
                "dBy] = ?) AND ([CreatedOn] = ?) AND ((? = 1 AND [ModifiedBy] IS NULL) OR ([Modif" +
                "iedBy] = ?)) AND ((? = 1 AND [ModifiedOn] IS NULL) OR ([ModifiedOn] = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipmentId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipmentId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoicePrefix", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrefix", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoicePrefix", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrefix", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceSeq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSeq", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceSeq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSeq", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceYear", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceYear", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceYear", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceYear", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SequenceNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SequenceNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SequenceNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SequenceNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceUploadDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceUploadDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceUploadUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadUserId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceUploadUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadUserId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoicePrintDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoicePrintDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoicePrintUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintUserId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoicePrintUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintUserId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsReadyToSendInvoice", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsReadyToSendInvoice", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceSentDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSentDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceSentDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSentDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SupplierInvoiceNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierInvoiceNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SupplierInvoiceNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierInvoiceNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingRemark", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingRemark", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingRemark", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "NSLCommissionAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceSellExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "InvoiceSellExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceBuyExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "InvoiceBuyExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ARDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ARDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ARExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "ARExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ARAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ARAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ARRefNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARRefNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ARRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARRefNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_APDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "APExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "APAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_APRefNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APRefNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APRefNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCBillRefNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCBillRefNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCBillRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCBillRefNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCIssueDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCIssueDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCIssueDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCIssueDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCExpiryDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCExpiryDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCExpiryDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCExpiryDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "LCAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsLCPaymentChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsLCPaymentChecked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCPaymentCheckedDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCPaymentCheckedDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCPaymentCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCPaymentCheckedDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ExportLicenceFee", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ExportLicenceFee", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_QuotaCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "QuotaCharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc1", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc3", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc4", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc4", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc5", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc5", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc5", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc5", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemColour", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemColour", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemColour", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemColour", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipFromCountryId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipFromCountryId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipFromCountryId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipFromCountryId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerDestinationId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerDestinationId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerDestinationId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerDestinationId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PackingMethodId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackingMethodId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PiecesPerDeliveryUnit", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PiecesPerDeliveryUnit", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingDocReceiptDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocReceiptDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingDocReceiptDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocReceiptDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_AccountDocReceiptDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AccountDocReceiptDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_AccountDocReceiptDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AccountDocReceiptDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsSelfBilledOrder", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsSelfBilledOrder", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CourierChargeToNUK", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "CourierChargeToNUK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CourierChargeToNUKDebitNoteNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CourierChargeToNUKDebitNoteNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CourierChargeToNUKDebitNoteNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CourierChargeToNUKDebitNoteNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_QccRemark", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QccRemark", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_QccRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QccRemark", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsSyncToFactory", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsSyncToFactory", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BookingSONo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingSONo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BookingSONo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingSONo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BookingDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BookingDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BookingQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BookingAtWarehouseDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingAtWarehouseDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BookingAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ActualAtWarehouseDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ActualAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ILSActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ILSActualAtWarehouseDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ILSActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ILSActualAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ImportDutyCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCurrencyId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDutyCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCurrencyId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDutyCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ImportDutyCalculatedAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDutyActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ImportDutyActualAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsImportDutyChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsImportDutyChecked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ImportDutyCheckedDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCheckedDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDutyCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCheckedDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCurrencyId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCurrencyId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InputVATCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "InputVATCalculatedAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InputVATActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "InputVATActualAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsInputVATChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsInputVATChecked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InputVATCheckedDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCheckedDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InputVATCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCheckedDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_OutputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCurrencyId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OutputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCurrencyId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OutputVATCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "OutputVATCalculatedAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OutputVATActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "OutputVATActualAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsOutputVATChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsOutputVATChecked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_OutputVATCheckedDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCheckedDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OutputVATCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCheckedDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceRemark", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceRemark", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceRemark", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DFDebitNoteNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DFDebitNoteNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DFDebitNoteNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DFDebitNoteNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DFDocumentationCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "DFDocumentationCharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DFTransportationCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "DFTransportationCharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SalesScanDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SalesScanDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SalesScanAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "SalesScanAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SalesScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanBy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SalesScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PurchaseScanDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PurchaseScanDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PurchaseScanAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "PurchaseScanAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PurchaseScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanBy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PurchaseScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EInvoiceBatchId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EInvoiceBatchId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EInvoiceBatchId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EInvoiceBatchId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsILSQtyUploadAllowed", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsILSQtyUploadAllowed", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NSLCommissionSettlementDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionSettlementDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionSettlementDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionSettlementDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionSettlementExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "NSLCommissionSettlementExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionSettlementAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "NSLCommissionSettlementAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NSLCommissionRefNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionRefNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionRefNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ChoiceOrderTotalShippedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderTotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ChoiceOrderTotalShippedSupplierGmtAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderTotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ChoiceOrderNSLCommissionAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderNSLCommissionAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsUploadDMSDocument", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsUploadDMSDocument", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSendDMSDocumentDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSendDMSDocumentDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSendDMSDocumentDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSendDMSDocumentDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingDocCheckedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedBy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingDocCheckedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingDocCheckedOn", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedOn", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingDocCheckedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedOn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingCheckedTotalNetAmount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingCheckedTotalNetAmount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingCheckedTotalNetAmount", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ShippingCheckedTotalNetAmount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CreatedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreatedBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CreatedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreatedOn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ModifiedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ModifiedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ModifiedOn", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedOn", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ModifiedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedOn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ISAM_UAT].[dbo].[Invoice] ([ShipmentId], [InvoicePrefix], [InvoiceSe" +
                "q], [InvoiceYear], [SequenceNo], [InvoiceDate], [InvoiceUploadDate], [InvoiceUpl" +
                "oadUserId], [InvoicePrintDate], [InvoicePrintUserId], [IsReadyToSendInvoice], [I" +
                "nvoiceSentDate], [SupplierInvoiceNo], [ShippingRemark], [NSLCommissionAmt], [Inv" +
                "oiceSellExchangeRate], [InvoiceBuyExchangeRate], [ARDate], [ARExchangeRate], [AR" +
                "Amt], [ARRefNo], [APDate], [APExchangeRate], [APAmt], [APRefNo], [LCNo], [LCBill" +
                "RefNo], [LCIssueDate], [LCExpiryDate], [LCAmt], [IsLCPaymentChecked], [LCPayment" +
                "CheckedDate], [ExportLicenceFee], [QuotaCharge], [ItemDesc1], [ItemDesc2], [Item" +
                "Desc3], [ItemDesc4], [ItemDesc5], [ItemColour], [ShipFromCountryId], [CustomerDe" +
                "stinationId], [PackingMethodId], [PiecesPerDeliveryUnit], [ShippingDocReceiptDat" +
                "e], [AccountDocReceiptDate], [IsSelfBilledOrder], [CourierChargeToNUK], [Courier" +
                "ChargeToNUKDebitNoteNo], [QccRemark], [IsSyncToFactory], [BookingSONo], [Booking" +
                "Date], [BookingQty], [BookingAtWarehouseDate], [ActualAtWarehouseDate], [ILSActu" +
                "alAtWarehouseDate], [ImportDutyCurrencyId], [ImportDutyCalculatedAmt], [ImportDu" +
                "tyActualAmt], [IsImportDutyChecked], [ImportDutyCheckedDate], [InputVATCurrencyI" +
                "d], [InputVATCalculatedAmt], [InputVATActualAmt], [IsInputVATChecked], [InputVAT" +
                "CheckedDate], [OutputVATCurrencyId], [OutputVATCalculatedAmt], [OutputVATActualA" +
                "mt], [IsOutputVATChecked], [OutputVATCheckedDate], [InvoiceRemark], [DFDebitNote" +
                "No], [DFDocumentationCharge], [DFTransportationCharge], [SalesScanDate], [SalesS" +
                "canAmt], [SalesScanBy], [PurchaseScanDate], [PurchaseScanAmt], [PurchaseScanBy]," +
                " [EInvoiceBatchId], [IsILSQtyUploadAllowed], [NSLCommissionSettlementDate], [NSL" +
                "CommissionSettlementExchangeRate], [NSLCommissionSettlementAmt], [NSLCommissionR" +
                "efNo], [ChoiceOrderTotalShippedAmt], [ChoiceOrderTotalShippedSupplierGmtAmt], [C" +
                "hoiceOrderNSLCommissionAmt], [IsUploadDMSDocument], [LastSendDMSDocumentDate], [" +
                "ShippingDocCheckedBy], [ShippingDocCheckedOn], [ShippingCheckedTotalNetAmount], " +
                "[Status], [CreatedBy], [CreatedOn], [ModifiedBy], [ModifiedOn]) VALUES (?, ?, ?," +
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?" +
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, " +
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?," +
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipmentId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipmentId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoicePrefix", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrefix", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceSeq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSeq", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceYear", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceYear", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SequenceNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SequenceNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceUploadDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceUploadUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadUserId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoicePrintDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoicePrintUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintUserId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsReadyToSendInvoice", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsReadyToSendInvoice", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceSentDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSentDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SupplierInvoiceNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierInvoiceNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingRemark", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "NSLCommissionAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceSellExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "InvoiceSellExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceBuyExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "InvoiceBuyExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ARDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ARExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "ARExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ARAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ARAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ARRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARRefNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "APExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "APAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APRefNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCBillRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCBillRefNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCIssueDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCIssueDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCExpiryDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCExpiryDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "LCAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsLCPaymentChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsLCPaymentChecked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCPaymentCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCPaymentCheckedDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ExportLicenceFee", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ExportLicenceFee", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QuotaCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "QuotaCharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc1", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc3", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc4", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc5", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemColour", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemColour", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipFromCountryId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipFromCountryId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerDestinationId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerDestinationId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PackingMethodId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackingMethodId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PiecesPerDeliveryUnit", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PiecesPerDeliveryUnit", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingDocReceiptDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocReceiptDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AccountDocReceiptDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AccountDocReceiptDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsSelfBilledOrder", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsSelfBilledOrder", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CourierChargeToNUK", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "CourierChargeToNUK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CourierChargeToNUKDebitNoteNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CourierChargeToNUKDebitNoteNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QccRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QccRemark", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsSyncToFactory", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsSyncToFactory", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BookingSONo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingSONo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BookingDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BookingQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BookingAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ActualAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ILSActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ILSActualAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDutyCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCurrencyId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDutyCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ImportDutyCalculatedAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDutyActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ImportDutyActualAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsImportDutyChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsImportDutyChecked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDutyCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCheckedDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCurrencyId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InputVATCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "InputVATCalculatedAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InputVATActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "InputVATActualAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsInputVATChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsInputVATChecked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InputVATCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCheckedDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OutputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCurrencyId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OutputVATCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "OutputVATCalculatedAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OutputVATActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "OutputVATActualAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsOutputVATChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsOutputVATChecked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OutputVATCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCheckedDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceRemark", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DFDebitNoteNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DFDebitNoteNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DFDocumentationCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "DFDocumentationCharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DFTransportationCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "DFTransportationCharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SalesScanDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SalesScanAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "SalesScanAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SalesScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PurchaseScanDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PurchaseScanAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "PurchaseScanAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PurchaseScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EInvoiceBatchId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EInvoiceBatchId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsILSQtyUploadAllowed", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsILSQtyUploadAllowed", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionSettlementDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionSettlementDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionSettlementExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "NSLCommissionSettlementExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionSettlementAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "NSLCommissionSettlementAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionRefNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ChoiceOrderTotalShippedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderTotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ChoiceOrderTotalShippedSupplierGmtAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderTotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ChoiceOrderNSLCommissionAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderNSLCommissionAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsUploadDMSDocument", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsUploadDMSDocument", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSendDMSDocumentDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSendDMSDocumentDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingDocCheckedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingDocCheckedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedOn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingCheckedTotalNetAmount", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ShippingCheckedTotalNetAmount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CreatedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreatedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CreatedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreatedOn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifiedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifiedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedOn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [ISAM_UAT].[dbo].[Invoice] SET [ShipmentId] = ?, [InvoicePrefix] = ?, [Inv" +
                "oiceSeq] = ?, [InvoiceYear] = ?, [SequenceNo] = ?, [InvoiceDate] = ?, [InvoiceUp" +
                "loadDate] = ?, [InvoiceUploadUserId] = ?, [InvoicePrintDate] = ?, [InvoicePrintU" +
                "serId] = ?, [IsReadyToSendInvoice] = ?, [InvoiceSentDate] = ?, [SupplierInvoiceN" +
                "o] = ?, [ShippingRemark] = ?, [NSLCommissionAmt] = ?, [InvoiceSellExchangeRate] " +
                "= ?, [InvoiceBuyExchangeRate] = ?, [ARDate] = ?, [ARExchangeRate] = ?, [ARAmt] =" +
                " ?, [ARRefNo] = ?, [APDate] = ?, [APExchangeRate] = ?, [APAmt] = ?, [APRefNo] = " +
                "?, [LCNo] = ?, [LCBillRefNo] = ?, [LCIssueDate] = ?, [LCExpiryDate] = ?, [LCAmt]" +
                " = ?, [IsLCPaymentChecked] = ?, [LCPaymentCheckedDate] = ?, [ExportLicenceFee] =" +
                " ?, [QuotaCharge] = ?, [ItemDesc1] = ?, [ItemDesc2] = ?, [ItemDesc3] = ?, [ItemD" +
                "esc4] = ?, [ItemDesc5] = ?, [ItemColour] = ?, [ShipFromCountryId] = ?, [Customer" +
                "DestinationId] = ?, [PackingMethodId] = ?, [PiecesPerDeliveryUnit] = ?, [Shippin" +
                "gDocReceiptDate] = ?, [AccountDocReceiptDate] = ?, [IsSelfBilledOrder] = ?, [Cou" +
                "rierChargeToNUK] = ?, [CourierChargeToNUKDebitNoteNo] = ?, [QccRemark] = ?, [IsS" +
                "yncToFactory] = ?, [BookingSONo] = ?, [BookingDate] = ?, [BookingQty] = ?, [Book" +
                "ingAtWarehouseDate] = ?, [ActualAtWarehouseDate] = ?, [ILSActualAtWarehouseDate]" +
                " = ?, [ImportDutyCurrencyId] = ?, [ImportDutyCalculatedAmt] = ?, [ImportDutyActu" +
                "alAmt] = ?, [IsImportDutyChecked] = ?, [ImportDutyCheckedDate] = ?, [InputVATCur" +
                "rencyId] = ?, [InputVATCalculatedAmt] = ?, [InputVATActualAmt] = ?, [IsInputVATC" +
                "hecked] = ?, [InputVATCheckedDate] = ?, [OutputVATCurrencyId] = ?, [OutputVATCal" +
                "culatedAmt] = ?, [OutputVATActualAmt] = ?, [IsOutputVATChecked] = ?, [OutputVATC" +
                "heckedDate] = ?, [InvoiceRemark] = ?, [DFDebitNoteNo] = ?, [DFDocumentationCharg" +
                "e] = ?, [DFTransportationCharge] = ?, [SalesScanDate] = ?, [SalesScanAmt] = ?, [" +
                "SalesScanBy] = ?, [PurchaseScanDate] = ?, [PurchaseScanAmt] = ?, [PurchaseScanBy" +
                "] = ?, [EInvoiceBatchId] = ?, [IsILSQtyUploadAllowed] = ?, [NSLCommissionSettlem" +
                "entDate] = ?, [NSLCommissionSettlementExchangeRate] = ?, [NSLCommissionSettlemen" +
                "tAmt] = ?, [NSLCommissionRefNo] = ?, [ChoiceOrderTotalShippedAmt] = ?, [ChoiceOr" +
                "derTotalShippedSupplierGmtAmt] = ?, [ChoiceOrderNSLCommissionAmt] = ?, [IsUpload" +
                "DMSDocument] = ?, [LastSendDMSDocumentDate] = ?, [ShippingDocCheckedBy] = ?, [Sh" +
                "ippingDocCheckedOn] = ?, [ShippingCheckedTotalNetAmount] = ?, [Status] = ?, [Cre" +
                "atedBy] = ?, [CreatedOn] = ?, [ModifiedBy] = ?, [ModifiedOn] = ? WHERE (([Shipme" +
                "ntId] = ?) AND ((? = 1 AND [InvoicePrefix] IS NULL) OR ([InvoicePrefix] = ?)) AN" +
                "D ((? = 1 AND [InvoiceSeq] IS NULL) OR ([InvoiceSeq] = ?)) AND ((? = 1 AND [Invo" +
                "iceYear] IS NULL) OR ([InvoiceYear] = ?)) AND ((? = 1 AND [SequenceNo] IS NULL) " +
                "OR ([SequenceNo] = ?)) AND ((? = 1 AND [InvoiceDate] IS NULL) OR ([InvoiceDate] " +
                "= ?)) AND ((? = 1 AND [InvoiceUploadDate] IS NULL) OR ([InvoiceUploadDate] = ?))" +
                " AND ((? = 1 AND [InvoiceUploadUserId] IS NULL) OR ([InvoiceUploadUserId] = ?)) " +
                "AND ((? = 1 AND [InvoicePrintDate] IS NULL) OR ([InvoicePrintDate] = ?)) AND ((?" +
                " = 1 AND [InvoicePrintUserId] IS NULL) OR ([InvoicePrintUserId] = ?)) AND ([IsRe" +
                "adyToSendInvoice] = ?) AND ((? = 1 AND [InvoiceSentDate] IS NULL) OR ([InvoiceSe" +
                "ntDate] = ?)) AND ((? = 1 AND [SupplierInvoiceNo] IS NULL) OR ([SupplierInvoiceN" +
                "o] = ?)) AND ((? = 1 AND [ShippingRemark] IS NULL) OR ([ShippingRemark] = ?)) AN" +
                "D ([NSLCommissionAmt] = ?) AND ([InvoiceSellExchangeRate] = ?) AND ([InvoiceBuyE" +
                "xchangeRate] = ?) AND ((? = 1 AND [ARDate] IS NULL) OR ([ARDate] = ?)) AND ([ARE" +
                "xchangeRate] = ?) AND ([ARAmt] = ?) AND ((? = 1 AND [ARRefNo] IS NULL) OR ([ARRe" +
                "fNo] = ?)) AND ((? = 1 AND [APDate] IS NULL) OR ([APDate] = ?)) AND ([APExchange" +
                "Rate] = ?) AND ([APAmt] = ?) AND ((? = 1 AND [APRefNo] IS NULL) OR ([APRefNo] = " +
                "?)) AND ((? = 1 AND [LCNo] IS NULL) OR ([LCNo] = ?)) AND ((? = 1 AND [LCBillRefN" +
                "o] IS NULL) OR ([LCBillRefNo] = ?)) AND ((? = 1 AND [LCIssueDate] IS NULL) OR ([" +
                "LCIssueDate] = ?)) AND ((? = 1 AND [LCExpiryDate] IS NULL) OR ([LCExpiryDate] = " +
                "?)) AND ([LCAmt] = ?) AND ([IsLCPaymentChecked] = ?) AND ((? = 1 AND [LCPaymentC" +
                "heckedDate] IS NULL) OR ([LCPaymentCheckedDate] = ?)) AND ([ExportLicenceFee] = " +
                "?) AND ([QuotaCharge] = ?) AND ((? = 1 AND [ItemDesc1] IS NULL) OR ([ItemDesc1] " +
                "= ?)) AND ((? = 1 AND [ItemDesc2] IS NULL) OR ([ItemDesc2] = ?)) AND ((? = 1 AND" +
                " [ItemDesc3] IS NULL) OR ([ItemDesc3] = ?)) AND ((? = 1 AND [ItemDesc4] IS NULL)" +
                " OR ([ItemDesc4] = ?)) AND ((? = 1 AND [ItemDesc5] IS NULL) OR ([ItemDesc5] = ?)" +
                ") AND ((? = 1 AND [ItemColour] IS NULL) OR ([ItemColour] = ?)) AND ((? = 1 AND [" +
                "ShipFromCountryId] IS NULL) OR ([ShipFromCountryId] = ?)) AND ((? = 1 AND [Custo" +
                "merDestinationId] IS NULL) OR ([CustomerDestinationId] = ?)) AND ([PackingMethod" +
                "Id] = ?) AND ([PiecesPerDeliveryUnit] = ?) AND ((? = 1 AND [ShippingDocReceiptDa" +
                "te] IS NULL) OR ([ShippingDocReceiptDate] = ?)) AND ((? = 1 AND [AccountDocRecei" +
                "ptDate] IS NULL) OR ([AccountDocReceiptDate] = ?)) AND ([IsSelfBilledOrder] = ?)" +
                " AND ([CourierChargeToNUK] = ?) AND ((? = 1 AND [CourierChargeToNUKDebitNoteNo] " +
                "IS NULL) OR ([CourierChargeToNUKDebitNoteNo] = ?)) AND ((? = 1 AND [QccRemark] I" +
                "S NULL) OR ([QccRemark] = ?)) AND ([IsSyncToFactory] = ?) AND ((? = 1 AND [Booki" +
                "ngSONo] IS NULL) OR ([BookingSONo] = ?)) AND ((? = 1 AND [BookingDate] IS NULL) " +
                "OR ([BookingDate] = ?)) AND ([BookingQty] = ?) AND ((? = 1 AND [BookingAtWarehou" +
                "seDate] IS NULL) OR ([BookingAtWarehouseDate] = ?)) AND ((? = 1 AND [ActualAtWar" +
                "ehouseDate] IS NULL) OR ([ActualAtWarehouseDate] = ?)) AND ((? = 1 AND [ILSActua" +
                "lAtWarehouseDate] IS NULL) OR ([ILSActualAtWarehouseDate] = ?)) AND ((? = 1 AND " +
                "[ImportDutyCurrencyId] IS NULL) OR ([ImportDutyCurrencyId] = ?)) AND ([ImportDut" +
                "yCalculatedAmt] = ?) AND ([ImportDutyActualAmt] = ?) AND ([IsImportDutyChecked] " +
                "= ?) AND ((? = 1 AND [ImportDutyCheckedDate] IS NULL) OR ([ImportDutyCheckedDate" +
                "] = ?)) AND ((? = 1 AND [InputVATCurrencyId] IS NULL) OR ([InputVATCurrencyId] =" +
                " ?)) AND ([InputVATCalculatedAmt] = ?) AND ([InputVATActualAmt] = ?) AND ([IsInp" +
                "utVATChecked] = ?) AND ((? = 1 AND [InputVATCheckedDate] IS NULL) OR ([InputVATC" +
                "heckedDate] = ?)) AND ((? = 1 AND [OutputVATCurrencyId] IS NULL) OR ([OutputVATC" +
                "urrencyId] = ?)) AND ([OutputVATCalculatedAmt] = ?) AND ([OutputVATActualAmt] = " +
                "?) AND ([IsOutputVATChecked] = ?) AND ((? = 1 AND [OutputVATCheckedDate] IS NULL" +
                ") OR ([OutputVATCheckedDate] = ?)) AND ((? = 1 AND [InvoiceRemark] IS NULL) OR (" +
                "[InvoiceRemark] = ?)) AND ((? = 1 AND [DFDebitNoteNo] IS NULL) OR ([DFDebitNoteN" +
                "o] = ?)) AND ([DFDocumentationCharge] = ?) AND ([DFTransportationCharge] = ?) AN" +
                "D ((? = 1 AND [SalesScanDate] IS NULL) OR ([SalesScanDate] = ?)) AND ([SalesScan" +
                "Amt] = ?) AND ((? = 1 AND [SalesScanBy] IS NULL) OR ([SalesScanBy] = ?)) AND ((?" +
                " = 1 AND [PurchaseScanDate] IS NULL) OR ([PurchaseScanDate] = ?)) AND ([Purchase" +
                "ScanAmt] = ?) AND ((? = 1 AND [PurchaseScanBy] IS NULL) OR ([PurchaseScanBy] = ?" +
                ")) AND ((? = 1 AND [EInvoiceBatchId] IS NULL) OR ([EInvoiceBatchId] = ?)) AND ([" +
                "IsILSQtyUploadAllowed] = ?) AND ((? = 1 AND [NSLCommissionSettlementDate] IS NUL" +
                "L) OR ([NSLCommissionSettlementDate] = ?)) AND ([NSLCommissionSettlementExchange" +
                "Rate] = ?) AND ([NSLCommissionSettlementAmt] = ?) AND ((? = 1 AND [NSLCommission" +
                "RefNo] IS NULL) OR ([NSLCommissionRefNo] = ?)) AND ([ChoiceOrderTotalShippedAmt]" +
                " = ?) AND ([ChoiceOrderTotalShippedSupplierGmtAmt] = ?) AND ([ChoiceOrderNSLComm" +
                "issionAmt] = ?) AND ([IsUploadDMSDocument] = ?) AND ((? = 1 AND [LastSendDMSDocu" +
                "mentDate] IS NULL) OR ([LastSendDMSDocumentDate] = ?)) AND ((? = 1 AND [Shipping" +
                "DocCheckedBy] IS NULL) OR ([ShippingDocCheckedBy] = ?)) AND ((? = 1 AND [Shippin" +
                "gDocCheckedOn] IS NULL) OR ([ShippingDocCheckedOn] = ?)) AND ((? = 1 AND [Shippi" +
                "ngCheckedTotalNetAmount] IS NULL) OR ([ShippingCheckedTotalNetAmount] = ?)) AND " +
                "([Status] = ?) AND ([CreatedBy] = ?) AND ([CreatedOn] = ?) AND ((? = 1 AND [Modi" +
                "fiedBy] IS NULL) OR ([ModifiedBy] = ?)) AND ((? = 1 AND [ModifiedOn] IS NULL) OR" +
                " ([ModifiedOn] = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipmentId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipmentId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoicePrefix", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrefix", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceSeq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSeq", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceYear", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceYear", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SequenceNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SequenceNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceUploadDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceUploadUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadUserId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoicePrintDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoicePrintUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintUserId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsReadyToSendInvoice", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsReadyToSendInvoice", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceSentDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSentDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SupplierInvoiceNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierInvoiceNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingRemark", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "NSLCommissionAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceSellExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "InvoiceSellExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceBuyExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "InvoiceBuyExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ARDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ARExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "ARExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ARAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ARAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ARRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARRefNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "APExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "APAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("APRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APRefNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCBillRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCBillRefNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCIssueDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCIssueDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCExpiryDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCExpiryDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "LCAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsLCPaymentChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsLCPaymentChecked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LCPaymentCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCPaymentCheckedDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ExportLicenceFee", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ExportLicenceFee", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QuotaCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "QuotaCharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc1", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc3", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc4", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemDesc5", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ItemColour", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemColour", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShipFromCountryId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipFromCountryId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CustomerDestinationId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerDestinationId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PackingMethodId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackingMethodId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PiecesPerDeliveryUnit", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PiecesPerDeliveryUnit", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingDocReceiptDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocReceiptDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("AccountDocReceiptDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AccountDocReceiptDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsSelfBilledOrder", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsSelfBilledOrder", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CourierChargeToNUK", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "CourierChargeToNUK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CourierChargeToNUKDebitNoteNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CourierChargeToNUKDebitNoteNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("QccRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QccRemark", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsSyncToFactory", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsSyncToFactory", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BookingSONo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingSONo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BookingDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BookingQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingQty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BookingAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ActualAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ILSActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ILSActualAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDutyCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCurrencyId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDutyCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ImportDutyCalculatedAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDutyActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ImportDutyActualAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsImportDutyChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsImportDutyChecked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ImportDutyCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCheckedDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCurrencyId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InputVATCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "InputVATCalculatedAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InputVATActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "InputVATActualAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsInputVATChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsInputVATChecked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InputVATCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCheckedDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OutputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCurrencyId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OutputVATCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "OutputVATCalculatedAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OutputVATActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "OutputVATActualAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsOutputVATChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsOutputVATChecked", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("OutputVATCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCheckedDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("InvoiceRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceRemark", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DFDebitNoteNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DFDebitNoteNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DFDocumentationCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "DFDocumentationCharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("DFTransportationCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "DFTransportationCharge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SalesScanDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SalesScanAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "SalesScanAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SalesScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PurchaseScanDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PurchaseScanAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "PurchaseScanAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PurchaseScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("EInvoiceBatchId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EInvoiceBatchId", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsILSQtyUploadAllowed", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsILSQtyUploadAllowed", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionSettlementDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionSettlementDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionSettlementExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "NSLCommissionSettlementExchangeRate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionSettlementAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "NSLCommissionSettlementAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NSLCommissionRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionRefNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ChoiceOrderTotalShippedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderTotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ChoiceOrderTotalShippedSupplierGmtAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderTotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ChoiceOrderNSLCommissionAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderNSLCommissionAmt", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsUploadDMSDocument", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsUploadDMSDocument", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("LastSendDMSDocumentDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSendDMSDocumentDate", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingDocCheckedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingDocCheckedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedOn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ShippingCheckedTotalNetAmount", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ShippingCheckedTotalNetAmount", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CreatedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreatedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("CreatedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreatedOn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifiedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ModifiedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedOn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipmentId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipmentId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoicePrefix", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrefix", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoicePrefix", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrefix", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceSeq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSeq", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceSeq", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSeq", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceYear", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceYear", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceYear", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceYear", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SequenceNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SequenceNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SequenceNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SequenceNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceUploadDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceUploadDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceUploadUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadUserId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceUploadUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceUploadUserId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoicePrintDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoicePrintDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoicePrintUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintUserId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoicePrintUserId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoicePrintUserId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsReadyToSendInvoice", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsReadyToSendInvoice", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceSentDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSentDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceSentDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceSentDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SupplierInvoiceNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierInvoiceNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SupplierInvoiceNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SupplierInvoiceNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingRemark", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingRemark", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingRemark", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "NSLCommissionAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceSellExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "InvoiceSellExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceBuyExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "InvoiceBuyExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ARDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ARDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ARExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "ARExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ARAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ARAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ARRefNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARRefNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ARRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ARRefNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_APDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "APExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "APAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_APRefNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APRefNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_APRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APRefNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCBillRefNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCBillRefNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCBillRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCBillRefNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCIssueDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCIssueDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCIssueDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCIssueDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCExpiryDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCExpiryDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCExpiryDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCExpiryDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "LCAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsLCPaymentChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsLCPaymentChecked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LCPaymentCheckedDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCPaymentCheckedDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LCPaymentCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LCPaymentCheckedDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ExportLicenceFee", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ExportLicenceFee", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_QuotaCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "QuotaCharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc1", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc3", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc4", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc4", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemDesc5", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc5", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemDesc5", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemDesc5", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ItemColour", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemColour", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ItemColour", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ItemColour", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShipFromCountryId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipFromCountryId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShipFromCountryId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShipFromCountryId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CustomerDestinationId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerDestinationId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CustomerDestinationId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CustomerDestinationId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PackingMethodId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PackingMethodId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PiecesPerDeliveryUnit", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PiecesPerDeliveryUnit", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingDocReceiptDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocReceiptDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingDocReceiptDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocReceiptDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_AccountDocReceiptDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AccountDocReceiptDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_AccountDocReceiptDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AccountDocReceiptDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsSelfBilledOrder", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsSelfBilledOrder", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CourierChargeToNUK", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "CourierChargeToNUK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_CourierChargeToNUKDebitNoteNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CourierChargeToNUKDebitNoteNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CourierChargeToNUKDebitNoteNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CourierChargeToNUKDebitNoteNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_QccRemark", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QccRemark", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_QccRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "QccRemark", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsSyncToFactory", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsSyncToFactory", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BookingSONo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingSONo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BookingSONo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingSONo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BookingDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BookingDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BookingQty", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingQty", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BookingAtWarehouseDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingAtWarehouseDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BookingAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BookingAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ActualAtWarehouseDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ActualAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ILSActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ILSActualAtWarehouseDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ILSActualAtWarehouseDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ILSActualAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ImportDutyCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCurrencyId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDutyCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCurrencyId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDutyCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ImportDutyCalculatedAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDutyActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ImportDutyActualAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsImportDutyChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsImportDutyChecked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ImportDutyCheckedDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCheckedDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ImportDutyCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ImportDutyCheckedDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCurrencyId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCurrencyId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InputVATCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "InputVATCalculatedAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InputVATActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "InputVATActualAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsInputVATChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsInputVATChecked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InputVATCheckedDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCheckedDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InputVATCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InputVATCheckedDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_OutputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCurrencyId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OutputVATCurrencyId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCurrencyId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OutputVATCalculatedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "OutputVATCalculatedAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OutputVATActualAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "OutputVATActualAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsOutputVATChecked", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsOutputVATChecked", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_OutputVATCheckedDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCheckedDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_OutputVATCheckedDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "OutputVATCheckedDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_InvoiceRemark", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceRemark", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_InvoiceRemark", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "InvoiceRemark", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_DFDebitNoteNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DFDebitNoteNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DFDebitNoteNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DFDebitNoteNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DFDocumentationCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "DFDocumentationCharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_DFTransportationCharge", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "DFTransportationCharge", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SalesScanDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SalesScanDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SalesScanAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "SalesScanAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SalesScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanBy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SalesScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SalesScanBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PurchaseScanDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PurchaseScanDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PurchaseScanAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "PurchaseScanAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PurchaseScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanBy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PurchaseScanBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PurchaseScanBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_EInvoiceBatchId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EInvoiceBatchId", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_EInvoiceBatchId", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EInvoiceBatchId", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsILSQtyUploadAllowed", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsILSQtyUploadAllowed", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NSLCommissionSettlementDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionSettlementDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionSettlementDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionSettlementDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionSettlementExchangeRate", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(10)), "NSLCommissionSettlementExchangeRate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionSettlementAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "NSLCommissionSettlementAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NSLCommissionRefNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionRefNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NSLCommissionRefNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NSLCommissionRefNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ChoiceOrderTotalShippedAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderTotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ChoiceOrderTotalShippedSupplierGmtAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderTotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ChoiceOrderNSLCommissionAmt", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ChoiceOrderNSLCommissionAmt", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_IsUploadDMSDocument", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IsUploadDMSDocument", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_LastSendDMSDocumentDate", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSendDMSDocumentDate", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_LastSendDMSDocumentDate", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LastSendDMSDocumentDate", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingDocCheckedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedBy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingDocCheckedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingDocCheckedOn", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedOn", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingDocCheckedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingDocCheckedOn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ShippingCheckedTotalNetAmount", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ShippingCheckedTotalNetAmount", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ShippingCheckedTotalNetAmount", global::System.Data.OleDb.OleDbType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(2)), "ShippingCheckedTotalNetAmount", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CreatedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreatedBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_CreatedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CreatedOn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ModifiedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ModifiedBy", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedBy", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ModifiedOn", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedOn", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ModifiedOn", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModifiedOn", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            //this._connection.ConnectionString = global::com.next.isam.dataserver.Properties.Settings.Default.ConnectionString6;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ShipmentId, InvoicePrefix, InvoiceSeq, InvoiceYear, SequenceNo, InvoiceDat" +
                "e, InvoiceUploadDate, InvoiceUploadUserId, InvoicePrintDate, InvoicePrintUserId," +
                " IsReadyToSendInvoice, InvoiceSentDate, SupplierInvoiceNo, ShippingRemark, NSLCo" +
                "mmissionAmt, InvoiceSellExchangeRate, InvoiceBuyExchangeRate, ARDate, ARExchange" +
                "Rate, ARAmt, ARRefNo, APDate, APExchangeRate, APAmt, APRefNo, LCNo, LCBillRefNo," +
                " LCIssueDate, LCExpiryDate, LCAmt, IsLCPaymentChecked, LCPaymentCheckedDate, Exp" +
                "ortLicenceFee, QuotaCharge, ItemDesc1, ItemDesc2, ItemDesc3, ItemDesc4, ItemDesc" +
                "5, ItemColour, ShipFromCountryId, CustomerDestinationId, PackingMethodId, Pieces" +
                "PerDeliveryUnit, ShippingDocReceiptDate, AccountDocReceiptDate, IsSelfBilledOrde" +
                "r, CourierChargeToNUK, CourierChargeToNUKDebitNoteNo, QccRemark, IsSyncToFactory" +
                ", BookingSONo, BookingDate, BookingQty, BookingAtWarehouseDate, ActualAtWarehous" +
                "eDate, ILSActualAtWarehouseDate, ImportDutyCurrencyId, ImportDutyCalculatedAmt, " +
                "ImportDutyActualAmt, IsImportDutyChecked, ImportDutyCheckedDate, InputVATCurrenc" +
                "yId, InputVATCalculatedAmt, InputVATActualAmt, IsInputVATChecked, InputVATChecke" +
                "dDate, OutputVATCurrencyId, OutputVATCalculatedAmt, OutputVATActualAmt, IsOutput" +
                "VATChecked, OutputVATCheckedDate, InvoiceRemark, DFDebitNoteNo, DFDocumentationC" +
                "harge, DFTransportationCharge, SalesScanDate, SalesScanAmt, SalesScanBy, Purchas" +
                "eScanDate, PurchaseScanAmt, PurchaseScanBy, EInvoiceBatchId, IsILSQtyUploadAllow" +
                "ed, NSLCommissionSettlementDate, NSLCommissionSettlementExchangeRate, NSLCommiss" +
                "ionSettlementAmt, NSLCommissionRefNo, ChoiceOrderTotalShippedAmt, ChoiceOrderTot" +
                "alShippedSupplierGmtAmt, ChoiceOrderNSLCommissionAmt, IsUploadDMSDocument, LastS" +
                "endDMSDocumentDate, ShippingDocCheckedBy, ShippingDocCheckedOn, ShippingCheckedT" +
                "otalNetAmount, Status, CreatedBy, CreatedOn, ModifiedBy, ModifiedOn FROM dbo.Inv" +
                "oice";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InvoiceDs.InvoiceDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InvoiceDs.InvoiceDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InvoiceDs.InvoiceDataTable dataTable = new InvoiceDs.InvoiceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InvoiceDs.InvoiceDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InvoiceDs dataSet) {
            return this.Adapter.Update(dataSet, "Invoice");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ShipmentId, 
                    string Original_InvoicePrefix, 
                    global::System.Nullable<int> Original_InvoiceSeq, 
                    global::System.Nullable<int> Original_InvoiceYear, 
                    global::System.Nullable<int> Original_SequenceNo, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceUploadDate, 
                    global::System.Nullable<int> Original_InvoiceUploadUserId, 
                    global::System.Nullable<global::System.DateTime> Original_InvoicePrintDate, 
                    global::System.Nullable<int> Original_InvoicePrintUserId, 
                    bool Original_IsReadyToSendInvoice, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceSentDate, 
                    string Original_SupplierInvoiceNo, 
                    string Original_ShippingRemark, 
                    decimal Original_NSLCommissionAmt, 
                    decimal Original_InvoiceSellExchangeRate, 
                    decimal Original_InvoiceBuyExchangeRate, 
                    global::System.Nullable<global::System.DateTime> Original_ARDate, 
                    decimal Original_ARExchangeRate, 
                    decimal Original_ARAmt, 
                    string Original_ARRefNo, 
                    global::System.Nullable<global::System.DateTime> Original_APDate, 
                    decimal Original_APExchangeRate, 
                    decimal Original_APAmt, 
                    string Original_APRefNo, 
                    string Original_LCNo, 
                    string Original_LCBillRefNo, 
                    global::System.Nullable<global::System.DateTime> Original_LCIssueDate, 
                    global::System.Nullable<global::System.DateTime> Original_LCExpiryDate, 
                    decimal Original_LCAmt, 
                    int Original_IsLCPaymentChecked, 
                    global::System.Nullable<global::System.DateTime> Original_LCPaymentCheckedDate, 
                    decimal Original_ExportLicenceFee, 
                    decimal Original_QuotaCharge, 
                    string Original_ItemDesc1, 
                    string Original_ItemDesc2, 
                    string Original_ItemDesc3, 
                    string Original_ItemDesc4, 
                    string Original_ItemDesc5, 
                    string Original_ItemColour, 
                    global::System.Nullable<int> Original_ShipFromCountryId, 
                    global::System.Nullable<int> Original_CustomerDestinationId, 
                    int Original_PackingMethodId, 
                    int Original_PiecesPerDeliveryUnit, 
                    global::System.Nullable<global::System.DateTime> Original_ShippingDocReceiptDate, 
                    global::System.Nullable<global::System.DateTime> Original_AccountDocReceiptDate, 
                    bool Original_IsSelfBilledOrder, 
                    decimal Original_CourierChargeToNUK, 
                    string Original_CourierChargeToNUKDebitNoteNo, 
                    string Original_QccRemark, 
                    bool Original_IsSyncToFactory, 
                    string Original_BookingSONo, 
                    global::System.Nullable<global::System.DateTime> Original_BookingDate, 
                    int Original_BookingQty, 
                    global::System.Nullable<global::System.DateTime> Original_BookingAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> Original_ActualAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> Original_ILSActualAtWarehouseDate, 
                    global::System.Nullable<int> Original_ImportDutyCurrencyId, 
                    decimal Original_ImportDutyCalculatedAmt, 
                    decimal Original_ImportDutyActualAmt, 
                    int Original_IsImportDutyChecked, 
                    global::System.Nullable<global::System.DateTime> Original_ImportDutyCheckedDate, 
                    global::System.Nullable<int> Original_InputVATCurrencyId, 
                    decimal Original_InputVATCalculatedAmt, 
                    decimal Original_InputVATActualAmt, 
                    int Original_IsInputVATChecked, 
                    global::System.Nullable<global::System.DateTime> Original_InputVATCheckedDate, 
                    global::System.Nullable<int> Original_OutputVATCurrencyId, 
                    decimal Original_OutputVATCalculatedAmt, 
                    decimal Original_OutputVATActualAmt, 
                    int Original_IsOutputVATChecked, 
                    global::System.Nullable<global::System.DateTime> Original_OutputVATCheckedDate, 
                    string Original_InvoiceRemark, 
                    string Original_DFDebitNoteNo, 
                    decimal Original_DFDocumentationCharge, 
                    decimal Original_DFTransportationCharge, 
                    global::System.Nullable<global::System.DateTime> Original_SalesScanDate, 
                    decimal Original_SalesScanAmt, 
                    global::System.Nullable<int> Original_SalesScanBy, 
                    global::System.Nullable<global::System.DateTime> Original_PurchaseScanDate, 
                    decimal Original_PurchaseScanAmt, 
                    global::System.Nullable<int> Original_PurchaseScanBy, 
                    global::System.Nullable<int> Original_EInvoiceBatchId, 
                    bool Original_IsILSQtyUploadAllowed, 
                    global::System.Nullable<global::System.DateTime> Original_NSLCommissionSettlementDate, 
                    decimal Original_NSLCommissionSettlementExchangeRate, 
                    decimal Original_NSLCommissionSettlementAmt, 
                    string Original_NSLCommissionRefNo, 
                    decimal Original_ChoiceOrderTotalShippedAmt, 
                    decimal Original_ChoiceOrderTotalShippedSupplierGmtAmt, 
                    decimal Original_ChoiceOrderNSLCommissionAmt, 
                    bool Original_IsUploadDMSDocument, 
                    global::System.Nullable<global::System.DateTime> Original_LastSendDMSDocumentDate, 
                    global::System.Nullable<int> Original_ShippingDocCheckedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ShippingDocCheckedOn, 
                    global::System.Nullable<decimal> Original_ShippingCheckedTotalNetAmount, 
                    int Original_Status, 
                    int Original_CreatedBy, 
                    System.DateTime Original_CreatedOn, 
                    global::System.Nullable<int> Original_ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ModifiedOn) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ShipmentId));
            if ((Original_InvoicePrefix == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_InvoicePrefix));
            }
            if ((Original_InvoiceSeq.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_InvoiceSeq.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceYear.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_InvoiceYear.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_SequenceNo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_SequenceNo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceUploadDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_InvoiceUploadDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceUploadUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_InvoiceUploadUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoicePrintDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_InvoicePrintDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoicePrintUserId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_InvoicePrintUserId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_IsReadyToSendInvoice));
            if ((Original_InvoiceSentDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((System.DateTime)(Original_InvoiceSentDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SupplierInvoiceNo == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_SupplierInvoiceNo));
            }
            if ((Original_ShippingRemark == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_ShippingRemark));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_NSLCommissionAmt));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_InvoiceSellExchangeRate));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_InvoiceBuyExchangeRate));
            if ((Original_ARDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((System.DateTime)(Original_ARDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_ARExchangeRate));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_ARAmt));
            if ((Original_ARRefNo == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ARRefNo));
            }
            if ((Original_APDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((System.DateTime)(Original_APDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_APExchangeRate));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_APAmt));
            if ((Original_APRefNo == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_APRefNo));
            }
            if ((Original_LCNo == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_LCNo));
            }
            if ((Original_LCBillRefNo == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_LCBillRefNo));
            }
            if ((Original_LCIssueDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((System.DateTime)(Original_LCIssueDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_LCExpiryDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_LCExpiryDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[49].Value = ((decimal)(Original_LCAmt));
            this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_IsLCPaymentChecked));
            if ((Original_LCPaymentCheckedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((System.DateTime)(Original_LCPaymentCheckedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[53].Value = ((decimal)(Original_ExportLicenceFee));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_QuotaCharge));
            if ((Original_ItemDesc1 == null)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((string)(Original_ItemDesc1));
            }
            if ((Original_ItemDesc2 == null)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_ItemDesc2));
            }
            if ((Original_ItemDesc3 == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_ItemDesc3));
            }
            if ((Original_ItemDesc4 == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_ItemDesc4));
            }
            if ((Original_ItemDesc5 == null)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((string)(Original_ItemDesc5));
            }
            if ((Original_ItemColour == null)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_ItemColour));
            }
            if ((Original_ShipFromCountryId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_ShipFromCountryId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerDestinationId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((int)(Original_CustomerDestinationId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[71].Value = ((int)(Original_PackingMethodId));
            this.Adapter.DeleteCommand.Parameters[72].Value = ((int)(Original_PiecesPerDeliveryUnit));
            if ((Original_ShippingDocReceiptDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((System.DateTime)(Original_ShippingDocReceiptDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_AccountDocReceiptDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((System.DateTime)(Original_AccountDocReceiptDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[77].Value = ((bool)(Original_IsSelfBilledOrder));
            this.Adapter.DeleteCommand.Parameters[78].Value = ((decimal)(Original_CourierChargeToNUK));
            if ((Original_CourierChargeToNUKDebitNoteNo == null)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((string)(Original_CourierChargeToNUKDebitNoteNo));
            }
            if ((Original_QccRemark == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_QccRemark));
            }
            this.Adapter.DeleteCommand.Parameters[83].Value = ((bool)(Original_IsSyncToFactory));
            if ((Original_BookingSONo == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_BookingSONo));
            }
            if ((Original_BookingDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((System.DateTime)(Original_BookingDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[88].Value = ((int)(Original_BookingQty));
            if ((Original_BookingAtWarehouseDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((System.DateTime)(Original_BookingAtWarehouseDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_ActualAtWarehouseDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((System.DateTime)(Original_ActualAtWarehouseDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_ILSActualAtWarehouseDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((System.DateTime)(Original_ILSActualAtWarehouseDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_ImportDutyCurrencyId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((int)(Original_ImportDutyCurrencyId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[97].Value = ((decimal)(Original_ImportDutyCalculatedAmt));
            this.Adapter.DeleteCommand.Parameters[98].Value = ((decimal)(Original_ImportDutyActualAmt));
            this.Adapter.DeleteCommand.Parameters[99].Value = ((int)(Original_IsImportDutyChecked));
            if ((Original_ImportDutyCheckedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[101].Value = ((System.DateTime)(Original_ImportDutyCheckedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_InputVATCurrencyId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[103].Value = ((int)(Original_InputVATCurrencyId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[104].Value = ((decimal)(Original_InputVATCalculatedAmt));
            this.Adapter.DeleteCommand.Parameters[105].Value = ((decimal)(Original_InputVATActualAmt));
            this.Adapter.DeleteCommand.Parameters[106].Value = ((int)(Original_IsInputVATChecked));
            if ((Original_InputVATCheckedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((System.DateTime)(Original_InputVATCheckedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_OutputVATCurrencyId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((int)(Original_OutputVATCurrencyId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[111].Value = ((decimal)(Original_OutputVATCalculatedAmt));
            this.Adapter.DeleteCommand.Parameters[112].Value = ((decimal)(Original_OutputVATActualAmt));
            this.Adapter.DeleteCommand.Parameters[113].Value = ((int)(Original_IsOutputVATChecked));
            if ((Original_OutputVATCheckedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[115].Value = ((System.DateTime)(Original_OutputVATCheckedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceRemark == null)) {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[117].Value = ((string)(Original_InvoiceRemark));
            }
            if ((Original_DFDebitNoteNo == null)) {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[119].Value = ((string)(Original_DFDebitNoteNo));
            }
            this.Adapter.DeleteCommand.Parameters[120].Value = ((decimal)(Original_DFDocumentationCharge));
            this.Adapter.DeleteCommand.Parameters[121].Value = ((decimal)(Original_DFTransportationCharge));
            if ((Original_SalesScanDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[123].Value = ((System.DateTime)(Original_SalesScanDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[124].Value = ((decimal)(Original_SalesScanAmt));
            if ((Original_SalesScanBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((int)(Original_SalesScanBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_PurchaseScanDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((System.DateTime)(Original_PurchaseScanDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[129].Value = ((decimal)(Original_PurchaseScanAmt));
            if ((Original_PurchaseScanBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[131].Value = ((int)(Original_PurchaseScanBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_EInvoiceBatchId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[133].Value = ((int)(Original_EInvoiceBatchId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[134].Value = ((bool)(Original_IsILSQtyUploadAllowed));
            if ((Original_NSLCommissionSettlementDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((System.DateTime)(Original_NSLCommissionSettlementDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[137].Value = ((decimal)(Original_NSLCommissionSettlementExchangeRate));
            this.Adapter.DeleteCommand.Parameters[138].Value = ((decimal)(Original_NSLCommissionSettlementAmt));
            if ((Original_NSLCommissionRefNo == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_NSLCommissionRefNo));
            }
            this.Adapter.DeleteCommand.Parameters[141].Value = ((decimal)(Original_ChoiceOrderTotalShippedAmt));
            this.Adapter.DeleteCommand.Parameters[142].Value = ((decimal)(Original_ChoiceOrderTotalShippedSupplierGmtAmt));
            this.Adapter.DeleteCommand.Parameters[143].Value = ((decimal)(Original_ChoiceOrderNSLCommissionAmt));
            this.Adapter.DeleteCommand.Parameters[144].Value = ((bool)(Original_IsUploadDMSDocument));
            if ((Original_LastSendDMSDocumentDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((System.DateTime)(Original_LastSendDMSDocumentDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_ShippingDocCheckedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((int)(Original_ShippingDocCheckedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_ShippingDocCheckedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((System.DateTime)(Original_ShippingDocCheckedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_ShippingCheckedTotalNetAmount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((decimal)(Original_ShippingCheckedTotalNetAmount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[153].Value = ((int)(Original_Status));
            this.Adapter.DeleteCommand.Parameters[154].Value = ((int)(Original_CreatedBy));
            this.Adapter.DeleteCommand.Parameters[155].Value = ((System.DateTime)(Original_CreatedOn));
            if ((Original_ModifiedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[157].Value = ((int)(Original_ModifiedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[159].Value = ((System.DateTime)(Original_ModifiedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int ShipmentId, 
                    string InvoicePrefix, 
                    global::System.Nullable<int> InvoiceSeq, 
                    global::System.Nullable<int> InvoiceYear, 
                    global::System.Nullable<int> SequenceNo, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> InvoiceUploadDate, 
                    global::System.Nullable<int> InvoiceUploadUserId, 
                    global::System.Nullable<global::System.DateTime> InvoicePrintDate, 
                    global::System.Nullable<int> InvoicePrintUserId, 
                    bool IsReadyToSendInvoice, 
                    global::System.Nullable<global::System.DateTime> InvoiceSentDate, 
                    string SupplierInvoiceNo, 
                    string ShippingRemark, 
                    decimal NSLCommissionAmt, 
                    decimal InvoiceSellExchangeRate, 
                    decimal InvoiceBuyExchangeRate, 
                    global::System.Nullable<global::System.DateTime> ARDate, 
                    decimal ARExchangeRate, 
                    decimal ARAmt, 
                    string ARRefNo, 
                    global::System.Nullable<global::System.DateTime> APDate, 
                    decimal APExchangeRate, 
                    decimal APAmt, 
                    string APRefNo, 
                    string LCNo, 
                    string LCBillRefNo, 
                    global::System.Nullable<global::System.DateTime> LCIssueDate, 
                    global::System.Nullable<global::System.DateTime> LCExpiryDate, 
                    decimal LCAmt, 
                    int IsLCPaymentChecked, 
                    global::System.Nullable<global::System.DateTime> LCPaymentCheckedDate, 
                    decimal ExportLicenceFee, 
                    decimal QuotaCharge, 
                    string ItemDesc1, 
                    string ItemDesc2, 
                    string ItemDesc3, 
                    string ItemDesc4, 
                    string ItemDesc5, 
                    string ItemColour, 
                    global::System.Nullable<int> ShipFromCountryId, 
                    global::System.Nullable<int> CustomerDestinationId, 
                    int PackingMethodId, 
                    int PiecesPerDeliveryUnit, 
                    global::System.Nullable<global::System.DateTime> ShippingDocReceiptDate, 
                    global::System.Nullable<global::System.DateTime> AccountDocReceiptDate, 
                    bool IsSelfBilledOrder, 
                    decimal CourierChargeToNUK, 
                    string CourierChargeToNUKDebitNoteNo, 
                    string QccRemark, 
                    bool IsSyncToFactory, 
                    string BookingSONo, 
                    global::System.Nullable<global::System.DateTime> BookingDate, 
                    int BookingQty, 
                    global::System.Nullable<global::System.DateTime> BookingAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> ActualAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> ILSActualAtWarehouseDate, 
                    global::System.Nullable<int> ImportDutyCurrencyId, 
                    decimal ImportDutyCalculatedAmt, 
                    decimal ImportDutyActualAmt, 
                    int IsImportDutyChecked, 
                    global::System.Nullable<global::System.DateTime> ImportDutyCheckedDate, 
                    global::System.Nullable<int> InputVATCurrencyId, 
                    decimal InputVATCalculatedAmt, 
                    decimal InputVATActualAmt, 
                    int IsInputVATChecked, 
                    global::System.Nullable<global::System.DateTime> InputVATCheckedDate, 
                    global::System.Nullable<int> OutputVATCurrencyId, 
                    decimal OutputVATCalculatedAmt, 
                    decimal OutputVATActualAmt, 
                    int IsOutputVATChecked, 
                    global::System.Nullable<global::System.DateTime> OutputVATCheckedDate, 
                    string InvoiceRemark, 
                    string DFDebitNoteNo, 
                    decimal DFDocumentationCharge, 
                    decimal DFTransportationCharge, 
                    global::System.Nullable<global::System.DateTime> SalesScanDate, 
                    decimal SalesScanAmt, 
                    global::System.Nullable<int> SalesScanBy, 
                    global::System.Nullable<global::System.DateTime> PurchaseScanDate, 
                    decimal PurchaseScanAmt, 
                    global::System.Nullable<int> PurchaseScanBy, 
                    global::System.Nullable<int> EInvoiceBatchId, 
                    bool IsILSQtyUploadAllowed, 
                    global::System.Nullable<global::System.DateTime> NSLCommissionSettlementDate, 
                    decimal NSLCommissionSettlementExchangeRate, 
                    decimal NSLCommissionSettlementAmt, 
                    string NSLCommissionRefNo, 
                    decimal ChoiceOrderTotalShippedAmt, 
                    decimal ChoiceOrderTotalShippedSupplierGmtAmt, 
                    decimal ChoiceOrderNSLCommissionAmt, 
                    bool IsUploadDMSDocument, 
                    global::System.Nullable<global::System.DateTime> LastSendDMSDocumentDate, 
                    global::System.Nullable<int> ShippingDocCheckedBy, 
                    global::System.Nullable<global::System.DateTime> ShippingDocCheckedOn, 
                    global::System.Nullable<decimal> ShippingCheckedTotalNetAmount, 
                    int Status, 
                    int CreatedBy, 
                    System.DateTime CreatedOn, 
                    global::System.Nullable<int> ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifiedOn) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ShipmentId));
            if ((InvoicePrefix == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(InvoicePrefix));
            }
            if ((InvoiceSeq.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(InvoiceSeq.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((InvoiceYear.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(InvoiceYear.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SequenceNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(SequenceNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((InvoiceUploadDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(InvoiceUploadDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((InvoiceUploadUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(InvoiceUploadUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((InvoicePrintDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(InvoicePrintDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((InvoicePrintUserId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(InvoicePrintUserId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(IsReadyToSendInvoice));
            if ((InvoiceSentDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(InvoiceSentDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SupplierInvoiceNo == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SupplierInvoiceNo));
            }
            if ((ShippingRemark == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ShippingRemark));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(NSLCommissionAmt));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(InvoiceSellExchangeRate));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(InvoiceBuyExchangeRate));
            if ((ARDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(ARDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(ARExchangeRate));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(ARAmt));
            if ((ARRefNo == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ARRefNo));
            }
            if ((APDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(APDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(APExchangeRate));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(APAmt));
            if ((APRefNo == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(APRefNo));
            }
            if ((LCNo == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(LCNo));
            }
            if ((LCBillRefNo == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(LCBillRefNo));
            }
            if ((LCIssueDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(LCIssueDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((LCExpiryDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(LCExpiryDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(LCAmt));
            this.Adapter.InsertCommand.Parameters[30].Value = ((int)(IsLCPaymentChecked));
            if ((LCPaymentCheckedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(LCPaymentCheckedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(ExportLicenceFee));
            this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(QuotaCharge));
            if ((ItemDesc1 == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(ItemDesc1));
            }
            if ((ItemDesc2 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(ItemDesc2));
            }
            if ((ItemDesc3 == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(ItemDesc3));
            }
            if ((ItemDesc4 == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(ItemDesc4));
            }
            if ((ItemDesc5 == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(ItemDesc5));
            }
            if ((ItemColour == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(ItemColour));
            }
            if ((ShipFromCountryId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(ShipFromCountryId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CustomerDestinationId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(CustomerDestinationId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(PackingMethodId));
            this.Adapter.InsertCommand.Parameters[43].Value = ((int)(PiecesPerDeliveryUnit));
            if ((ShippingDocReceiptDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(ShippingDocReceiptDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((AccountDocReceiptDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((System.DateTime)(AccountDocReceiptDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(IsSelfBilledOrder));
            this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(CourierChargeToNUK));
            if ((CourierChargeToNUKDebitNoteNo == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(CourierChargeToNUKDebitNoteNo));
            }
            if ((QccRemark == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(QccRemark));
            }
            this.Adapter.InsertCommand.Parameters[50].Value = ((bool)(IsSyncToFactory));
            if ((BookingSONo == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(BookingSONo));
            }
            if ((BookingDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((System.DateTime)(BookingDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[53].Value = ((int)(BookingQty));
            if ((BookingAtWarehouseDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((System.DateTime)(BookingAtWarehouseDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((ActualAtWarehouseDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(ActualAtWarehouseDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((ILSActualAtWarehouseDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(ILSActualAtWarehouseDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((ImportDutyCurrencyId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((int)(ImportDutyCurrencyId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(ImportDutyCalculatedAmt));
            this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(ImportDutyActualAmt));
            this.Adapter.InsertCommand.Parameters[60].Value = ((int)(IsImportDutyChecked));
            if ((ImportDutyCheckedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((System.DateTime)(ImportDutyCheckedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((InputVATCurrencyId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((int)(InputVATCurrencyId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[63].Value = ((decimal)(InputVATCalculatedAmt));
            this.Adapter.InsertCommand.Parameters[64].Value = ((decimal)(InputVATActualAmt));
            this.Adapter.InsertCommand.Parameters[65].Value = ((int)(IsInputVATChecked));
            if ((InputVATCheckedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((System.DateTime)(InputVATCheckedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((OutputVATCurrencyId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((int)(OutputVATCurrencyId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[68].Value = ((decimal)(OutputVATCalculatedAmt));
            this.Adapter.InsertCommand.Parameters[69].Value = ((decimal)(OutputVATActualAmt));
            this.Adapter.InsertCommand.Parameters[70].Value = ((int)(IsOutputVATChecked));
            if ((OutputVATCheckedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((System.DateTime)(OutputVATCheckedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((InvoiceRemark == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(InvoiceRemark));
            }
            if ((DFDebitNoteNo == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(DFDebitNoteNo));
            }
            this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(DFDocumentationCharge));
            this.Adapter.InsertCommand.Parameters[75].Value = ((decimal)(DFTransportationCharge));
            if ((SalesScanDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((System.DateTime)(SalesScanDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[77].Value = ((decimal)(SalesScanAmt));
            if ((SalesScanBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((int)(SalesScanBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((PurchaseScanDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((System.DateTime)(PurchaseScanDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[80].Value = ((decimal)(PurchaseScanAmt));
            if ((PurchaseScanBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((int)(PurchaseScanBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((EInvoiceBatchId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((int)(EInvoiceBatchId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[83].Value = ((bool)(IsILSQtyUploadAllowed));
            if ((NSLCommissionSettlementDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((System.DateTime)(NSLCommissionSettlementDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[85].Value = ((decimal)(NSLCommissionSettlementExchangeRate));
            this.Adapter.InsertCommand.Parameters[86].Value = ((decimal)(NSLCommissionSettlementAmt));
            if ((NSLCommissionRefNo == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(NSLCommissionRefNo));
            }
            this.Adapter.InsertCommand.Parameters[88].Value = ((decimal)(ChoiceOrderTotalShippedAmt));
            this.Adapter.InsertCommand.Parameters[89].Value = ((decimal)(ChoiceOrderTotalShippedSupplierGmtAmt));
            this.Adapter.InsertCommand.Parameters[90].Value = ((decimal)(ChoiceOrderNSLCommissionAmt));
            this.Adapter.InsertCommand.Parameters[91].Value = ((bool)(IsUploadDMSDocument));
            if ((LastSendDMSDocumentDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[92].Value = ((System.DateTime)(LastSendDMSDocumentDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((ShippingDocCheckedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[93].Value = ((int)(ShippingDocCheckedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((ShippingDocCheckedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[94].Value = ((System.DateTime)(ShippingDocCheckedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((ShippingCheckedTotalNetAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[95].Value = ((decimal)(ShippingCheckedTotalNetAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[96].Value = ((int)(Status));
            this.Adapter.InsertCommand.Parameters[97].Value = ((int)(CreatedBy));
            this.Adapter.InsertCommand.Parameters[98].Value = ((System.DateTime)(CreatedOn));
            if ((ModifiedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[99].Value = ((int)(ModifiedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((ModifiedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((System.DateTime)(ModifiedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ShipmentId, 
                    string InvoicePrefix, 
                    global::System.Nullable<int> InvoiceSeq, 
                    global::System.Nullable<int> InvoiceYear, 
                    global::System.Nullable<int> SequenceNo, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> InvoiceUploadDate, 
                    global::System.Nullable<int> InvoiceUploadUserId, 
                    global::System.Nullable<global::System.DateTime> InvoicePrintDate, 
                    global::System.Nullable<int> InvoicePrintUserId, 
                    bool IsReadyToSendInvoice, 
                    global::System.Nullable<global::System.DateTime> InvoiceSentDate, 
                    string SupplierInvoiceNo, 
                    string ShippingRemark, 
                    decimal NSLCommissionAmt, 
                    decimal InvoiceSellExchangeRate, 
                    decimal InvoiceBuyExchangeRate, 
                    global::System.Nullable<global::System.DateTime> ARDate, 
                    decimal ARExchangeRate, 
                    decimal ARAmt, 
                    string ARRefNo, 
                    global::System.Nullable<global::System.DateTime> APDate, 
                    decimal APExchangeRate, 
                    decimal APAmt, 
                    string APRefNo, 
                    string LCNo, 
                    string LCBillRefNo, 
                    global::System.Nullable<global::System.DateTime> LCIssueDate, 
                    global::System.Nullable<global::System.DateTime> LCExpiryDate, 
                    decimal LCAmt, 
                    int IsLCPaymentChecked, 
                    global::System.Nullable<global::System.DateTime> LCPaymentCheckedDate, 
                    decimal ExportLicenceFee, 
                    decimal QuotaCharge, 
                    string ItemDesc1, 
                    string ItemDesc2, 
                    string ItemDesc3, 
                    string ItemDesc4, 
                    string ItemDesc5, 
                    string ItemColour, 
                    global::System.Nullable<int> ShipFromCountryId, 
                    global::System.Nullable<int> CustomerDestinationId, 
                    int PackingMethodId, 
                    int PiecesPerDeliveryUnit, 
                    global::System.Nullable<global::System.DateTime> ShippingDocReceiptDate, 
                    global::System.Nullable<global::System.DateTime> AccountDocReceiptDate, 
                    bool IsSelfBilledOrder, 
                    decimal CourierChargeToNUK, 
                    string CourierChargeToNUKDebitNoteNo, 
                    string QccRemark, 
                    bool IsSyncToFactory, 
                    string BookingSONo, 
                    global::System.Nullable<global::System.DateTime> BookingDate, 
                    int BookingQty, 
                    global::System.Nullable<global::System.DateTime> BookingAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> ActualAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> ILSActualAtWarehouseDate, 
                    global::System.Nullable<int> ImportDutyCurrencyId, 
                    decimal ImportDutyCalculatedAmt, 
                    decimal ImportDutyActualAmt, 
                    int IsImportDutyChecked, 
                    global::System.Nullable<global::System.DateTime> ImportDutyCheckedDate, 
                    global::System.Nullable<int> InputVATCurrencyId, 
                    decimal InputVATCalculatedAmt, 
                    decimal InputVATActualAmt, 
                    int IsInputVATChecked, 
                    global::System.Nullable<global::System.DateTime> InputVATCheckedDate, 
                    global::System.Nullable<int> OutputVATCurrencyId, 
                    decimal OutputVATCalculatedAmt, 
                    decimal OutputVATActualAmt, 
                    int IsOutputVATChecked, 
                    global::System.Nullable<global::System.DateTime> OutputVATCheckedDate, 
                    string InvoiceRemark, 
                    string DFDebitNoteNo, 
                    decimal DFDocumentationCharge, 
                    decimal DFTransportationCharge, 
                    global::System.Nullable<global::System.DateTime> SalesScanDate, 
                    decimal SalesScanAmt, 
                    global::System.Nullable<int> SalesScanBy, 
                    global::System.Nullable<global::System.DateTime> PurchaseScanDate, 
                    decimal PurchaseScanAmt, 
                    global::System.Nullable<int> PurchaseScanBy, 
                    global::System.Nullable<int> EInvoiceBatchId, 
                    bool IsILSQtyUploadAllowed, 
                    global::System.Nullable<global::System.DateTime> NSLCommissionSettlementDate, 
                    decimal NSLCommissionSettlementExchangeRate, 
                    decimal NSLCommissionSettlementAmt, 
                    string NSLCommissionRefNo, 
                    decimal ChoiceOrderTotalShippedAmt, 
                    decimal ChoiceOrderTotalShippedSupplierGmtAmt, 
                    decimal ChoiceOrderNSLCommissionAmt, 
                    bool IsUploadDMSDocument, 
                    global::System.Nullable<global::System.DateTime> LastSendDMSDocumentDate, 
                    global::System.Nullable<int> ShippingDocCheckedBy, 
                    global::System.Nullable<global::System.DateTime> ShippingDocCheckedOn, 
                    global::System.Nullable<decimal> ShippingCheckedTotalNetAmount, 
                    int Status, 
                    int CreatedBy, 
                    System.DateTime CreatedOn, 
                    global::System.Nullable<int> ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifiedOn, 
                    int Original_ShipmentId, 
                    string Original_InvoicePrefix, 
                    global::System.Nullable<int> Original_InvoiceSeq, 
                    global::System.Nullable<int> Original_InvoiceYear, 
                    global::System.Nullable<int> Original_SequenceNo, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceUploadDate, 
                    global::System.Nullable<int> Original_InvoiceUploadUserId, 
                    global::System.Nullable<global::System.DateTime> Original_InvoicePrintDate, 
                    global::System.Nullable<int> Original_InvoicePrintUserId, 
                    bool Original_IsReadyToSendInvoice, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceSentDate, 
                    string Original_SupplierInvoiceNo, 
                    string Original_ShippingRemark, 
                    decimal Original_NSLCommissionAmt, 
                    decimal Original_InvoiceSellExchangeRate, 
                    decimal Original_InvoiceBuyExchangeRate, 
                    global::System.Nullable<global::System.DateTime> Original_ARDate, 
                    decimal Original_ARExchangeRate, 
                    decimal Original_ARAmt, 
                    string Original_ARRefNo, 
                    global::System.Nullable<global::System.DateTime> Original_APDate, 
                    decimal Original_APExchangeRate, 
                    decimal Original_APAmt, 
                    string Original_APRefNo, 
                    string Original_LCNo, 
                    string Original_LCBillRefNo, 
                    global::System.Nullable<global::System.DateTime> Original_LCIssueDate, 
                    global::System.Nullable<global::System.DateTime> Original_LCExpiryDate, 
                    decimal Original_LCAmt, 
                    int Original_IsLCPaymentChecked, 
                    global::System.Nullable<global::System.DateTime> Original_LCPaymentCheckedDate, 
                    decimal Original_ExportLicenceFee, 
                    decimal Original_QuotaCharge, 
                    string Original_ItemDesc1, 
                    string Original_ItemDesc2, 
                    string Original_ItemDesc3, 
                    string Original_ItemDesc4, 
                    string Original_ItemDesc5, 
                    string Original_ItemColour, 
                    global::System.Nullable<int> Original_ShipFromCountryId, 
                    global::System.Nullable<int> Original_CustomerDestinationId, 
                    int Original_PackingMethodId, 
                    int Original_PiecesPerDeliveryUnit, 
                    global::System.Nullable<global::System.DateTime> Original_ShippingDocReceiptDate, 
                    global::System.Nullable<global::System.DateTime> Original_AccountDocReceiptDate, 
                    bool Original_IsSelfBilledOrder, 
                    decimal Original_CourierChargeToNUK, 
                    string Original_CourierChargeToNUKDebitNoteNo, 
                    string Original_QccRemark, 
                    bool Original_IsSyncToFactory, 
                    string Original_BookingSONo, 
                    global::System.Nullable<global::System.DateTime> Original_BookingDate, 
                    int Original_BookingQty, 
                    global::System.Nullable<global::System.DateTime> Original_BookingAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> Original_ActualAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> Original_ILSActualAtWarehouseDate, 
                    global::System.Nullable<int> Original_ImportDutyCurrencyId, 
                    decimal Original_ImportDutyCalculatedAmt, 
                    decimal Original_ImportDutyActualAmt, 
                    int Original_IsImportDutyChecked, 
                    global::System.Nullable<global::System.DateTime> Original_ImportDutyCheckedDate, 
                    global::System.Nullable<int> Original_InputVATCurrencyId, 
                    decimal Original_InputVATCalculatedAmt, 
                    decimal Original_InputVATActualAmt, 
                    int Original_IsInputVATChecked, 
                    global::System.Nullable<global::System.DateTime> Original_InputVATCheckedDate, 
                    global::System.Nullable<int> Original_OutputVATCurrencyId, 
                    decimal Original_OutputVATCalculatedAmt, 
                    decimal Original_OutputVATActualAmt, 
                    int Original_IsOutputVATChecked, 
                    global::System.Nullable<global::System.DateTime> Original_OutputVATCheckedDate, 
                    string Original_InvoiceRemark, 
                    string Original_DFDebitNoteNo, 
                    decimal Original_DFDocumentationCharge, 
                    decimal Original_DFTransportationCharge, 
                    global::System.Nullable<global::System.DateTime> Original_SalesScanDate, 
                    decimal Original_SalesScanAmt, 
                    global::System.Nullable<int> Original_SalesScanBy, 
                    global::System.Nullable<global::System.DateTime> Original_PurchaseScanDate, 
                    decimal Original_PurchaseScanAmt, 
                    global::System.Nullable<int> Original_PurchaseScanBy, 
                    global::System.Nullable<int> Original_EInvoiceBatchId, 
                    bool Original_IsILSQtyUploadAllowed, 
                    global::System.Nullable<global::System.DateTime> Original_NSLCommissionSettlementDate, 
                    decimal Original_NSLCommissionSettlementExchangeRate, 
                    decimal Original_NSLCommissionSettlementAmt, 
                    string Original_NSLCommissionRefNo, 
                    decimal Original_ChoiceOrderTotalShippedAmt, 
                    decimal Original_ChoiceOrderTotalShippedSupplierGmtAmt, 
                    decimal Original_ChoiceOrderNSLCommissionAmt, 
                    bool Original_IsUploadDMSDocument, 
                    global::System.Nullable<global::System.DateTime> Original_LastSendDMSDocumentDate, 
                    global::System.Nullable<int> Original_ShippingDocCheckedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ShippingDocCheckedOn, 
                    global::System.Nullable<decimal> Original_ShippingCheckedTotalNetAmount, 
                    int Original_Status, 
                    int Original_CreatedBy, 
                    System.DateTime Original_CreatedOn, 
                    global::System.Nullable<int> Original_ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ModifiedOn) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ShipmentId));
            if ((InvoicePrefix == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(InvoicePrefix));
            }
            if ((InvoiceSeq.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(InvoiceSeq.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((InvoiceYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(InvoiceYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SequenceNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(SequenceNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((InvoiceUploadDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(InvoiceUploadDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((InvoiceUploadUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(InvoiceUploadUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((InvoicePrintDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(InvoicePrintDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((InvoicePrintUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(InvoicePrintUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(IsReadyToSendInvoice));
            if ((InvoiceSentDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(InvoiceSentDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((SupplierInvoiceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SupplierInvoiceNo));
            }
            if ((ShippingRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ShippingRemark));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(NSLCommissionAmt));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(InvoiceSellExchangeRate));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(InvoiceBuyExchangeRate));
            if ((ARDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(ARDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(ARExchangeRate));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(ARAmt));
            if ((ARRefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(ARRefNo));
            }
            if ((APDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(APDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(APExchangeRate));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(APAmt));
            if ((APRefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(APRefNo));
            }
            if ((LCNo == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(LCNo));
            }
            if ((LCBillRefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(LCBillRefNo));
            }
            if ((LCIssueDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(LCIssueDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((LCExpiryDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(LCExpiryDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(LCAmt));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(IsLCPaymentChecked));
            if ((LCPaymentCheckedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(LCPaymentCheckedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(ExportLicenceFee));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(QuotaCharge));
            if ((ItemDesc1 == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(ItemDesc1));
            }
            if ((ItemDesc2 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(ItemDesc2));
            }
            if ((ItemDesc3 == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(ItemDesc3));
            }
            if ((ItemDesc4 == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(ItemDesc4));
            }
            if ((ItemDesc5 == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(ItemDesc5));
            }
            if ((ItemColour == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(ItemColour));
            }
            if ((ShipFromCountryId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(ShipFromCountryId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CustomerDestinationId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(CustomerDestinationId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(PackingMethodId));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(PiecesPerDeliveryUnit));
            if ((ShippingDocReceiptDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(ShippingDocReceiptDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((AccountDocReceiptDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(AccountDocReceiptDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(IsSelfBilledOrder));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(CourierChargeToNUK));
            if ((CourierChargeToNUKDebitNoteNo == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(CourierChargeToNUKDebitNoteNo));
            }
            if ((QccRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(QccRemark));
            }
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(IsSyncToFactory));
            if ((BookingSONo == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(BookingSONo));
            }
            if ((BookingDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(BookingDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(BookingQty));
            if ((BookingAtWarehouseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(BookingAtWarehouseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((ActualAtWarehouseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(ActualAtWarehouseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((ILSActualAtWarehouseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(ILSActualAtWarehouseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((ImportDutyCurrencyId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(ImportDutyCurrencyId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(ImportDutyCalculatedAmt));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(ImportDutyActualAmt));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(IsImportDutyChecked));
            if ((ImportDutyCheckedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(ImportDutyCheckedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((InputVATCurrencyId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(InputVATCurrencyId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(InputVATCalculatedAmt));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(InputVATActualAmt));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(IsInputVATChecked));
            if ((InputVATCheckedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(InputVATCheckedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((OutputVATCurrencyId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(OutputVATCurrencyId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(OutputVATCalculatedAmt));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((decimal)(OutputVATActualAmt));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(IsOutputVATChecked));
            if ((OutputVATCheckedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((System.DateTime)(OutputVATCheckedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((InvoiceRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(InvoiceRemark));
            }
            if ((DFDebitNoteNo == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(DFDebitNoteNo));
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(DFDocumentationCharge));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(DFTransportationCharge));
            if ((SalesScanDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((System.DateTime)(SalesScanDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(SalesScanAmt));
            if ((SalesScanBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(SalesScanBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((PurchaseScanDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(PurchaseScanDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(PurchaseScanAmt));
            if ((PurchaseScanBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(PurchaseScanBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((EInvoiceBatchId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(EInvoiceBatchId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(IsILSQtyUploadAllowed));
            if ((NSLCommissionSettlementDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((System.DateTime)(NSLCommissionSettlementDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(NSLCommissionSettlementExchangeRate));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(NSLCommissionSettlementAmt));
            if ((NSLCommissionRefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(NSLCommissionRefNo));
            }
            this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(ChoiceOrderTotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(ChoiceOrderTotalShippedSupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(ChoiceOrderNSLCommissionAmt));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((bool)(IsUploadDMSDocument));
            if ((LastSendDMSDocumentDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((System.DateTime)(LastSendDMSDocumentDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((ShippingDocCheckedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(ShippingDocCheckedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((ShippingDocCheckedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((System.DateTime)(ShippingDocCheckedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((ShippingCheckedTotalNetAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((decimal)(ShippingCheckedTotalNetAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[96].Value = ((int)(Status));
            this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(CreatedBy));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((System.DateTime)(CreatedOn));
            if ((ModifiedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(ModifiedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((ModifiedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((System.DateTime)(ModifiedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Original_ShipmentId));
            if ((Original_InvoicePrefix == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_InvoicePrefix));
            }
            if ((Original_InvoiceSeq.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((int)(Original_InvoiceSeq.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((int)(Original_InvoiceYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((Original_SequenceNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(Original_SequenceNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceUploadDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((System.DateTime)(Original_InvoiceUploadDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceUploadUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((int)(Original_InvoiceUploadUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoicePrintDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((System.DateTime)(Original_InvoicePrintDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoicePrintUserId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((int)(Original_InvoicePrintUserId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[120].Value = ((bool)(Original_IsReadyToSendInvoice));
            if ((Original_InvoiceSentDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((System.DateTime)(Original_InvoiceSentDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_SupplierInvoiceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_SupplierInvoiceNo));
            }
            if ((Original_ShippingRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_ShippingRemark));
            }
            this.Adapter.UpdateCommand.Parameters[127].Value = ((decimal)(Original_NSLCommissionAmt));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(Original_InvoiceSellExchangeRate));
            this.Adapter.UpdateCommand.Parameters[129].Value = ((decimal)(Original_InvoiceBuyExchangeRate));
            if ((Original_ARDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((System.DateTime)(Original_ARDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[132].Value = ((decimal)(Original_ARExchangeRate));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((decimal)(Original_ARAmt));
            if ((Original_ARRefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_ARRefNo));
            }
            if ((Original_APDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((System.DateTime)(Original_APDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[138].Value = ((decimal)(Original_APExchangeRate));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((decimal)(Original_APAmt));
            if ((Original_APRefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(Original_APRefNo));
            }
            if ((Original_LCNo == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_LCNo));
            }
            if ((Original_LCBillRefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_LCBillRefNo));
            }
            if ((Original_LCIssueDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((System.DateTime)(Original_LCIssueDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_LCExpiryDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((System.DateTime)(Original_LCExpiryDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[150].Value = ((decimal)(Original_LCAmt));
            this.Adapter.UpdateCommand.Parameters[151].Value = ((int)(Original_IsLCPaymentChecked));
            if ((Original_LCPaymentCheckedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((System.DateTime)(Original_LCPaymentCheckedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[154].Value = ((decimal)(Original_ExportLicenceFee));
            this.Adapter.UpdateCommand.Parameters[155].Value = ((decimal)(Original_QuotaCharge));
            if ((Original_ItemDesc1 == null)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_ItemDesc1));
            }
            if ((Original_ItemDesc2 == null)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((string)(Original_ItemDesc2));
            }
            if ((Original_ItemDesc3 == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_ItemDesc3));
            }
            if ((Original_ItemDesc4 == null)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((string)(Original_ItemDesc4));
            }
            if ((Original_ItemDesc5 == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_ItemDesc5));
            }
            if ((Original_ItemColour == null)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((string)(Original_ItemColour));
            }
            if ((Original_ShipFromCountryId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((int)(Original_ShipFromCountryId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_CustomerDestinationId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((int)(Original_CustomerDestinationId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[172].Value = ((int)(Original_PackingMethodId));
            this.Adapter.UpdateCommand.Parameters[173].Value = ((int)(Original_PiecesPerDeliveryUnit));
            if ((Original_ShippingDocReceiptDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((System.DateTime)(Original_ShippingDocReceiptDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_AccountDocReceiptDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((System.DateTime)(Original_AccountDocReceiptDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[178].Value = ((bool)(Original_IsSelfBilledOrder));
            this.Adapter.UpdateCommand.Parameters[179].Value = ((decimal)(Original_CourierChargeToNUK));
            if ((Original_CourierChargeToNUKDebitNoteNo == null)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((string)(Original_CourierChargeToNUKDebitNoteNo));
            }
            if ((Original_QccRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((string)(Original_QccRemark));
            }
            this.Adapter.UpdateCommand.Parameters[184].Value = ((bool)(Original_IsSyncToFactory));
            if ((Original_BookingSONo == null)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((string)(Original_BookingSONo));
            }
            if ((Original_BookingDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((System.DateTime)(Original_BookingDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[189].Value = ((int)(Original_BookingQty));
            if ((Original_BookingAtWarehouseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((System.DateTime)(Original_BookingAtWarehouseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_ActualAtWarehouseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((System.DateTime)(Original_ActualAtWarehouseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_ILSActualAtWarehouseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((System.DateTime)(Original_ILSActualAtWarehouseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_ImportDutyCurrencyId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((int)(Original_ImportDutyCurrencyId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[198].Value = ((decimal)(Original_ImportDutyCalculatedAmt));
            this.Adapter.UpdateCommand.Parameters[199].Value = ((decimal)(Original_ImportDutyActualAmt));
            this.Adapter.UpdateCommand.Parameters[200].Value = ((int)(Original_IsImportDutyChecked));
            if ((Original_ImportDutyCheckedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((System.DateTime)(Original_ImportDutyCheckedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_InputVATCurrencyId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((int)(Original_InputVATCurrencyId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[205].Value = ((decimal)(Original_InputVATCalculatedAmt));
            this.Adapter.UpdateCommand.Parameters[206].Value = ((decimal)(Original_InputVATActualAmt));
            this.Adapter.UpdateCommand.Parameters[207].Value = ((int)(Original_IsInputVATChecked));
            if ((Original_InputVATCheckedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((System.DateTime)(Original_InputVATCheckedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_OutputVATCurrencyId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((int)(Original_OutputVATCurrencyId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[212].Value = ((decimal)(Original_OutputVATCalculatedAmt));
            this.Adapter.UpdateCommand.Parameters[213].Value = ((decimal)(Original_OutputVATActualAmt));
            this.Adapter.UpdateCommand.Parameters[214].Value = ((int)(Original_IsOutputVATChecked));
            if ((Original_OutputVATCheckedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((System.DateTime)(Original_OutputVATCheckedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_InvoiceRemark));
            }
            if ((Original_DFDebitNoteNo == null)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((string)(Original_DFDebitNoteNo));
            }
            this.Adapter.UpdateCommand.Parameters[221].Value = ((decimal)(Original_DFDocumentationCharge));
            this.Adapter.UpdateCommand.Parameters[222].Value = ((decimal)(Original_DFTransportationCharge));
            if ((Original_SalesScanDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((System.DateTime)(Original_SalesScanDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[225].Value = ((decimal)(Original_SalesScanAmt));
            if ((Original_SalesScanBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((int)(Original_SalesScanBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            if ((Original_PurchaseScanDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((System.DateTime)(Original_PurchaseScanDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[230].Value = ((decimal)(Original_PurchaseScanAmt));
            if ((Original_PurchaseScanBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((int)(Original_PurchaseScanBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            if ((Original_EInvoiceBatchId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[234].Value = ((int)(Original_EInvoiceBatchId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[233].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[234].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[235].Value = ((bool)(Original_IsILSQtyUploadAllowed));
            if ((Original_NSLCommissionSettlementDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((System.DateTime)(Original_NSLCommissionSettlementDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[238].Value = ((decimal)(Original_NSLCommissionSettlementExchangeRate));
            this.Adapter.UpdateCommand.Parameters[239].Value = ((decimal)(Original_NSLCommissionSettlementAmt));
            if ((Original_NSLCommissionRefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((string)(Original_NSLCommissionRefNo));
            }
            this.Adapter.UpdateCommand.Parameters[242].Value = ((decimal)(Original_ChoiceOrderTotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[243].Value = ((decimal)(Original_ChoiceOrderTotalShippedSupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[244].Value = ((decimal)(Original_ChoiceOrderNSLCommissionAmt));
            this.Adapter.UpdateCommand.Parameters[245].Value = ((bool)(Original_IsUploadDMSDocument));
            if ((Original_LastSendDMSDocumentDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((System.DateTime)(Original_LastSendDMSDocumentDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            if ((Original_ShippingDocCheckedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((int)(Original_ShippingDocCheckedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            if ((Original_ShippingDocCheckedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((System.DateTime)(Original_ShippingDocCheckedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            if ((Original_ShippingCheckedTotalNetAmount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((decimal)(Original_ShippingCheckedTotalNetAmount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[254].Value = ((int)(Original_Status));
            this.Adapter.UpdateCommand.Parameters[255].Value = ((int)(Original_CreatedBy));
            this.Adapter.UpdateCommand.Parameters[256].Value = ((System.DateTime)(Original_CreatedOn));
            if ((Original_ModifiedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[257].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[258].Value = ((int)(Original_ModifiedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[257].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[258].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[259].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[260].Value = ((System.DateTime)(Original_ModifiedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[259].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[260].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string InvoicePrefix, 
                    global::System.Nullable<int> InvoiceSeq, 
                    global::System.Nullable<int> InvoiceYear, 
                    global::System.Nullable<int> SequenceNo, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> InvoiceUploadDate, 
                    global::System.Nullable<int> InvoiceUploadUserId, 
                    global::System.Nullable<global::System.DateTime> InvoicePrintDate, 
                    global::System.Nullable<int> InvoicePrintUserId, 
                    bool IsReadyToSendInvoice, 
                    global::System.Nullable<global::System.DateTime> InvoiceSentDate, 
                    string SupplierInvoiceNo, 
                    string ShippingRemark, 
                    decimal NSLCommissionAmt, 
                    decimal InvoiceSellExchangeRate, 
                    decimal InvoiceBuyExchangeRate, 
                    global::System.Nullable<global::System.DateTime> ARDate, 
                    decimal ARExchangeRate, 
                    decimal ARAmt, 
                    string ARRefNo, 
                    global::System.Nullable<global::System.DateTime> APDate, 
                    decimal APExchangeRate, 
                    decimal APAmt, 
                    string APRefNo, 
                    string LCNo, 
                    string LCBillRefNo, 
                    global::System.Nullable<global::System.DateTime> LCIssueDate, 
                    global::System.Nullable<global::System.DateTime> LCExpiryDate, 
                    decimal LCAmt, 
                    int IsLCPaymentChecked, 
                    global::System.Nullable<global::System.DateTime> LCPaymentCheckedDate, 
                    decimal ExportLicenceFee, 
                    decimal QuotaCharge, 
                    string ItemDesc1, 
                    string ItemDesc2, 
                    string ItemDesc3, 
                    string ItemDesc4, 
                    string ItemDesc5, 
                    string ItemColour, 
                    global::System.Nullable<int> ShipFromCountryId, 
                    global::System.Nullable<int> CustomerDestinationId, 
                    int PackingMethodId, 
                    int PiecesPerDeliveryUnit, 
                    global::System.Nullable<global::System.DateTime> ShippingDocReceiptDate, 
                    global::System.Nullable<global::System.DateTime> AccountDocReceiptDate, 
                    bool IsSelfBilledOrder, 
                    decimal CourierChargeToNUK, 
                    string CourierChargeToNUKDebitNoteNo, 
                    string QccRemark, 
                    bool IsSyncToFactory, 
                    string BookingSONo, 
                    global::System.Nullable<global::System.DateTime> BookingDate, 
                    int BookingQty, 
                    global::System.Nullable<global::System.DateTime> BookingAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> ActualAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> ILSActualAtWarehouseDate, 
                    global::System.Nullable<int> ImportDutyCurrencyId, 
                    decimal ImportDutyCalculatedAmt, 
                    decimal ImportDutyActualAmt, 
                    int IsImportDutyChecked, 
                    global::System.Nullable<global::System.DateTime> ImportDutyCheckedDate, 
                    global::System.Nullable<int> InputVATCurrencyId, 
                    decimal InputVATCalculatedAmt, 
                    decimal InputVATActualAmt, 
                    int IsInputVATChecked, 
                    global::System.Nullable<global::System.DateTime> InputVATCheckedDate, 
                    global::System.Nullable<int> OutputVATCurrencyId, 
                    decimal OutputVATCalculatedAmt, 
                    decimal OutputVATActualAmt, 
                    int IsOutputVATChecked, 
                    global::System.Nullable<global::System.DateTime> OutputVATCheckedDate, 
                    string InvoiceRemark, 
                    string DFDebitNoteNo, 
                    decimal DFDocumentationCharge, 
                    decimal DFTransportationCharge, 
                    global::System.Nullable<global::System.DateTime> SalesScanDate, 
                    decimal SalesScanAmt, 
                    global::System.Nullable<int> SalesScanBy, 
                    global::System.Nullable<global::System.DateTime> PurchaseScanDate, 
                    decimal PurchaseScanAmt, 
                    global::System.Nullable<int> PurchaseScanBy, 
                    global::System.Nullable<int> EInvoiceBatchId, 
                    bool IsILSQtyUploadAllowed, 
                    global::System.Nullable<global::System.DateTime> NSLCommissionSettlementDate, 
                    decimal NSLCommissionSettlementExchangeRate, 
                    decimal NSLCommissionSettlementAmt, 
                    string NSLCommissionRefNo, 
                    decimal ChoiceOrderTotalShippedAmt, 
                    decimal ChoiceOrderTotalShippedSupplierGmtAmt, 
                    decimal ChoiceOrderNSLCommissionAmt, 
                    bool IsUploadDMSDocument, 
                    global::System.Nullable<global::System.DateTime> LastSendDMSDocumentDate, 
                    global::System.Nullable<int> ShippingDocCheckedBy, 
                    global::System.Nullable<global::System.DateTime> ShippingDocCheckedOn, 
                    global::System.Nullable<decimal> ShippingCheckedTotalNetAmount, 
                    int Status, 
                    int CreatedBy, 
                    System.DateTime CreatedOn, 
                    global::System.Nullable<int> ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifiedOn, 
                    int Original_ShipmentId, 
                    string Original_InvoicePrefix, 
                    global::System.Nullable<int> Original_InvoiceSeq, 
                    global::System.Nullable<int> Original_InvoiceYear, 
                    global::System.Nullable<int> Original_SequenceNo, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceUploadDate, 
                    global::System.Nullable<int> Original_InvoiceUploadUserId, 
                    global::System.Nullable<global::System.DateTime> Original_InvoicePrintDate, 
                    global::System.Nullable<int> Original_InvoicePrintUserId, 
                    bool Original_IsReadyToSendInvoice, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceSentDate, 
                    string Original_SupplierInvoiceNo, 
                    string Original_ShippingRemark, 
                    decimal Original_NSLCommissionAmt, 
                    decimal Original_InvoiceSellExchangeRate, 
                    decimal Original_InvoiceBuyExchangeRate, 
                    global::System.Nullable<global::System.DateTime> Original_ARDate, 
                    decimal Original_ARExchangeRate, 
                    decimal Original_ARAmt, 
                    string Original_ARRefNo, 
                    global::System.Nullable<global::System.DateTime> Original_APDate, 
                    decimal Original_APExchangeRate, 
                    decimal Original_APAmt, 
                    string Original_APRefNo, 
                    string Original_LCNo, 
                    string Original_LCBillRefNo, 
                    global::System.Nullable<global::System.DateTime> Original_LCIssueDate, 
                    global::System.Nullable<global::System.DateTime> Original_LCExpiryDate, 
                    decimal Original_LCAmt, 
                    int Original_IsLCPaymentChecked, 
                    global::System.Nullable<global::System.DateTime> Original_LCPaymentCheckedDate, 
                    decimal Original_ExportLicenceFee, 
                    decimal Original_QuotaCharge, 
                    string Original_ItemDesc1, 
                    string Original_ItemDesc2, 
                    string Original_ItemDesc3, 
                    string Original_ItemDesc4, 
                    string Original_ItemDesc5, 
                    string Original_ItemColour, 
                    global::System.Nullable<int> Original_ShipFromCountryId, 
                    global::System.Nullable<int> Original_CustomerDestinationId, 
                    int Original_PackingMethodId, 
                    int Original_PiecesPerDeliveryUnit, 
                    global::System.Nullable<global::System.DateTime> Original_ShippingDocReceiptDate, 
                    global::System.Nullable<global::System.DateTime> Original_AccountDocReceiptDate, 
                    bool Original_IsSelfBilledOrder, 
                    decimal Original_CourierChargeToNUK, 
                    string Original_CourierChargeToNUKDebitNoteNo, 
                    string Original_QccRemark, 
                    bool Original_IsSyncToFactory, 
                    string Original_BookingSONo, 
                    global::System.Nullable<global::System.DateTime> Original_BookingDate, 
                    int Original_BookingQty, 
                    global::System.Nullable<global::System.DateTime> Original_BookingAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> Original_ActualAtWarehouseDate, 
                    global::System.Nullable<global::System.DateTime> Original_ILSActualAtWarehouseDate, 
                    global::System.Nullable<int> Original_ImportDutyCurrencyId, 
                    decimal Original_ImportDutyCalculatedAmt, 
                    decimal Original_ImportDutyActualAmt, 
                    int Original_IsImportDutyChecked, 
                    global::System.Nullable<global::System.DateTime> Original_ImportDutyCheckedDate, 
                    global::System.Nullable<int> Original_InputVATCurrencyId, 
                    decimal Original_InputVATCalculatedAmt, 
                    decimal Original_InputVATActualAmt, 
                    int Original_IsInputVATChecked, 
                    global::System.Nullable<global::System.DateTime> Original_InputVATCheckedDate, 
                    global::System.Nullable<int> Original_OutputVATCurrencyId, 
                    decimal Original_OutputVATCalculatedAmt, 
                    decimal Original_OutputVATActualAmt, 
                    int Original_IsOutputVATChecked, 
                    global::System.Nullable<global::System.DateTime> Original_OutputVATCheckedDate, 
                    string Original_InvoiceRemark, 
                    string Original_DFDebitNoteNo, 
                    decimal Original_DFDocumentationCharge, 
                    decimal Original_DFTransportationCharge, 
                    global::System.Nullable<global::System.DateTime> Original_SalesScanDate, 
                    decimal Original_SalesScanAmt, 
                    global::System.Nullable<int> Original_SalesScanBy, 
                    global::System.Nullable<global::System.DateTime> Original_PurchaseScanDate, 
                    decimal Original_PurchaseScanAmt, 
                    global::System.Nullable<int> Original_PurchaseScanBy, 
                    global::System.Nullable<int> Original_EInvoiceBatchId, 
                    bool Original_IsILSQtyUploadAllowed, 
                    global::System.Nullable<global::System.DateTime> Original_NSLCommissionSettlementDate, 
                    decimal Original_NSLCommissionSettlementExchangeRate, 
                    decimal Original_NSLCommissionSettlementAmt, 
                    string Original_NSLCommissionRefNo, 
                    decimal Original_ChoiceOrderTotalShippedAmt, 
                    decimal Original_ChoiceOrderTotalShippedSupplierGmtAmt, 
                    decimal Original_ChoiceOrderNSLCommissionAmt, 
                    bool Original_IsUploadDMSDocument, 
                    global::System.Nullable<global::System.DateTime> Original_LastSendDMSDocumentDate, 
                    global::System.Nullable<int> Original_ShippingDocCheckedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ShippingDocCheckedOn, 
                    global::System.Nullable<decimal> Original_ShippingCheckedTotalNetAmount, 
                    int Original_Status, 
                    int Original_CreatedBy, 
                    System.DateTime Original_CreatedOn, 
                    global::System.Nullable<int> Original_ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ModifiedOn) {
            return this.Update(Original_ShipmentId, InvoicePrefix, InvoiceSeq, InvoiceYear, SequenceNo, InvoiceDate, InvoiceUploadDate, InvoiceUploadUserId, InvoicePrintDate, InvoicePrintUserId, IsReadyToSendInvoice, InvoiceSentDate, SupplierInvoiceNo, ShippingRemark, NSLCommissionAmt, InvoiceSellExchangeRate, InvoiceBuyExchangeRate, ARDate, ARExchangeRate, ARAmt, ARRefNo, APDate, APExchangeRate, APAmt, APRefNo, LCNo, LCBillRefNo, LCIssueDate, LCExpiryDate, LCAmt, IsLCPaymentChecked, LCPaymentCheckedDate, ExportLicenceFee, QuotaCharge, ItemDesc1, ItemDesc2, ItemDesc3, ItemDesc4, ItemDesc5, ItemColour, ShipFromCountryId, CustomerDestinationId, PackingMethodId, PiecesPerDeliveryUnit, ShippingDocReceiptDate, AccountDocReceiptDate, IsSelfBilledOrder, CourierChargeToNUK, CourierChargeToNUKDebitNoteNo, QccRemark, IsSyncToFactory, BookingSONo, BookingDate, BookingQty, BookingAtWarehouseDate, ActualAtWarehouseDate, ILSActualAtWarehouseDate, ImportDutyCurrencyId, ImportDutyCalculatedAmt, ImportDutyActualAmt, IsImportDutyChecked, ImportDutyCheckedDate, InputVATCurrencyId, InputVATCalculatedAmt, InputVATActualAmt, IsInputVATChecked, InputVATCheckedDate, OutputVATCurrencyId, OutputVATCalculatedAmt, OutputVATActualAmt, IsOutputVATChecked, OutputVATCheckedDate, InvoiceRemark, DFDebitNoteNo, DFDocumentationCharge, DFTransportationCharge, SalesScanDate, SalesScanAmt, SalesScanBy, PurchaseScanDate, PurchaseScanAmt, PurchaseScanBy, EInvoiceBatchId, IsILSQtyUploadAllowed, NSLCommissionSettlementDate, NSLCommissionSettlementExchangeRate, NSLCommissionSettlementAmt, NSLCommissionRefNo, ChoiceOrderTotalShippedAmt, ChoiceOrderTotalShippedSupplierGmtAmt, ChoiceOrderNSLCommissionAmt, IsUploadDMSDocument, LastSendDMSDocumentDate, ShippingDocCheckedBy, ShippingDocCheckedOn, ShippingCheckedTotalNetAmount, Status, CreatedBy, CreatedOn, ModifiedBy, ModifiedOn, Original_ShipmentId, Original_InvoicePrefix, Original_InvoiceSeq, Original_InvoiceYear, Original_SequenceNo, Original_InvoiceDate, Original_InvoiceUploadDate, Original_InvoiceUploadUserId, Original_InvoicePrintDate, Original_InvoicePrintUserId, Original_IsReadyToSendInvoice, Original_InvoiceSentDate, Original_SupplierInvoiceNo, Original_ShippingRemark, Original_NSLCommissionAmt, Original_InvoiceSellExchangeRate, Original_InvoiceBuyExchangeRate, Original_ARDate, Original_ARExchangeRate, Original_ARAmt, Original_ARRefNo, Original_APDate, Original_APExchangeRate, Original_APAmt, Original_APRefNo, Original_LCNo, Original_LCBillRefNo, Original_LCIssueDate, Original_LCExpiryDate, Original_LCAmt, Original_IsLCPaymentChecked, Original_LCPaymentCheckedDate, Original_ExportLicenceFee, Original_QuotaCharge, Original_ItemDesc1, Original_ItemDesc2, Original_ItemDesc3, Original_ItemDesc4, Original_ItemDesc5, Original_ItemColour, Original_ShipFromCountryId, Original_CustomerDestinationId, Original_PackingMethodId, Original_PiecesPerDeliveryUnit, Original_ShippingDocReceiptDate, Original_AccountDocReceiptDate, Original_IsSelfBilledOrder, Original_CourierChargeToNUK, Original_CourierChargeToNUKDebitNoteNo, Original_QccRemark, Original_IsSyncToFactory, Original_BookingSONo, Original_BookingDate, Original_BookingQty, Original_BookingAtWarehouseDate, Original_ActualAtWarehouseDate, Original_ILSActualAtWarehouseDate, Original_ImportDutyCurrencyId, Original_ImportDutyCalculatedAmt, Original_ImportDutyActualAmt, Original_IsImportDutyChecked, Original_ImportDutyCheckedDate, Original_InputVATCurrencyId, Original_InputVATCalculatedAmt, Original_InputVATActualAmt, Original_IsInputVATChecked, Original_InputVATCheckedDate, Original_OutputVATCurrencyId, Original_OutputVATCalculatedAmt, Original_OutputVATActualAmt, Original_IsOutputVATChecked, Original_OutputVATCheckedDate, Original_InvoiceRemark, Original_DFDebitNoteNo, Original_DFDocumentationCharge, Original_DFTransportationCharge, Original_SalesScanDate, Original_SalesScanAmt, Original_SalesScanBy, Original_PurchaseScanDate, Original_PurchaseScanAmt, Original_PurchaseScanBy, Original_EInvoiceBatchId, Original_IsILSQtyUploadAllowed, Original_NSLCommissionSettlementDate, Original_NSLCommissionSettlementExchangeRate, Original_NSLCommissionSettlementAmt, Original_NSLCommissionRefNo, Original_ChoiceOrderTotalShippedAmt, Original_ChoiceOrderTotalShippedSupplierGmtAmt, Original_ChoiceOrderNSLCommissionAmt, Original_IsUploadDMSDocument, Original_LastSendDMSDocumentDate, Original_ShippingDocCheckedBy, Original_ShippingDocCheckedOn, Original_ShippingCheckedTotalNetAmount, Original_Status, Original_CreatedBy, Original_CreatedOn, Original_ModifiedBy, Original_ModifiedOn);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private InvoiceTableAdapter _invoiceTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public InvoiceTableAdapter InvoiceTableAdapter {
            get {
                return this._invoiceTableAdapter;
            }
            set {
                this._invoiceTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._invoiceTableAdapter != null) 
                            && (this._invoiceTableAdapter.Connection != null))) {
                    return this._invoiceTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._invoiceTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(InvoiceDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._invoiceTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Invoice.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._invoiceTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(InvoiceDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._invoiceTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Invoice.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._invoiceTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(InvoiceDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._invoiceTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Invoice.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._invoiceTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(InvoiceDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._invoiceTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._invoiceTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._invoiceTableAdapter != null)) {
                    revertConnections.Add(this._invoiceTableAdapter, this._invoiceTableAdapter.Connection);
                    this._invoiceTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._invoiceTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._invoiceTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._invoiceTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._invoiceTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._invoiceTableAdapter != null)) {
                    this._invoiceTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._invoiceTableAdapter]));
                    this._invoiceTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591