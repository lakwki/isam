//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.dataserver.model.nss {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NssSplitShipmentDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NssSplitShipmentDs : global::System.Data.DataSet {
        
        private SplitShipmentDataTable tableSplitShipment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public NssSplitShipmentDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected NssSplitShipmentDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SplitShipment"] != null)) {
                    base.Tables.Add(new SplitShipmentDataTable(ds.Tables["SplitShipment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SplitShipmentDataTable SplitShipment {
            get {
                return this.tableSplitShipment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            NssSplitShipmentDs cln = ((NssSplitShipmentDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SplitShipment"] != null)) {
                    base.Tables.Add(new SplitShipmentDataTable(ds.Tables["SplitShipment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSplitShipment = ((SplitShipmentDataTable)(base.Tables["SplitShipment"]));
            if ((initTable == true)) {
                if ((this.tableSplitShipment != null)) {
                    this.tableSplitShipment.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "NssSplitShipmentDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/NssSplitShipmentDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSplitShipment = new SplitShipmentDataTable();
            base.Tables.Add(this.tableSplitShipment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSplitShipment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NssSplitShipmentDs ds = new NssSplitShipmentDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SplitShipmentRowChangeEventHandler(object sender, SplitShipmentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SplitShipmentDataTable : global::System.Data.TypedTableBase<SplitShipmentRow> {
            
            private global::System.Data.DataColumn columnSplitShipmentId;
            
            private global::System.Data.DataColumn columnShipmentId;
            
            private global::System.Data.DataColumn columnSplitSuffix;
            
            private global::System.Data.DataColumn columnProductId;
            
            private global::System.Data.DataColumn columnPiecesPerPack;
            
            private global::System.Data.DataColumn columnPackingUnitId;
            
            private global::System.Data.DataColumn columnQtyIncreasePercent;
            
            private global::System.Data.DataColumn columnVendorId;
            
            private global::System.Data.DataColumn columnFirstApprovedSupplierAtWarehouseDate;
            
            private global::System.Data.DataColumn columnSupplierAtWarehouseDate;
            
            private global::System.Data.DataColumn columnPaymentTermId;
            
            private global::System.Data.DataColumn columnQuotaCategoryGroupId;
            
            private global::System.Data.DataColumn columnCountryOfOriginId;
            
            private global::System.Data.DataColumn columnSellCurrencyId;
            
            private global::System.Data.DataColumn columnBuyCurrencyId;
            
            private global::System.Data.DataColumn columnPOExchangeRate;
            
            private global::System.Data.DataColumn columnMockShopSampleRemark;
            
            private global::System.Data.DataColumn columnOtherPOTermRemark;
            
            private global::System.Data.DataColumn columnShipDeptRemark;
            
            private global::System.Data.DataColumn columnTotalOrderQty;
            
            private global::System.Data.DataColumn columnTotalOrderAmt;
            
            private global::System.Data.DataColumn columnTotalPOQty;
            
            private global::System.Data.DataColumn columnTotalPOAmt;
            
            private global::System.Data.DataColumn columnTotalPONetFOBAmt;
            
            private global::System.Data.DataColumn columnTotalShippedQty;
            
            private global::System.Data.DataColumn columnTotalShippedAmt;
            
            private global::System.Data.DataColumn columnTotalNetFOBAmt;
            
            private global::System.Data.DataColumn columnTotalShippedNetFOBAmt;
            
            private global::System.Data.DataColumn columnTotalSupplierGmtAmt;
            
            private global::System.Data.DataColumn columnTotalShippedSupplierGmtAmt;
            
            private global::System.Data.DataColumn columnTotalOPAUpcharge;
            
            private global::System.Data.DataColumn columnTotalShippedOPAUpcharge;
            
            private global::System.Data.DataColumn columnVendorPaymentDiscountPercent;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedOn;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedOn;
            
            private global::System.Data.DataColumn columnIsVirtualSetSplit;
            
            private global::System.Data.DataColumn columnIsKnitwearComponent;
            
            private global::System.Data.DataColumn columnIsFobOrder;
            
            private global::System.Data.DataColumn columnQaCommissionPercent;
            
            private global::System.Data.DataColumn columnColour;
            
            private global::System.Data.DataColumn columnLabTestIncome;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SplitShipmentDataTable() {
                this.TableName = "SplitShipment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SplitShipmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SplitShipmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SplitShipmentIdColumn {
                get {
                    return this.columnSplitShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIdColumn {
                get {
                    return this.columnShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SplitSuffixColumn {
                get {
                    return this.columnSplitSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIdColumn {
                get {
                    return this.columnProductId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PiecesPerPackColumn {
                get {
                    return this.columnPiecesPerPack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackingUnitIdColumn {
                get {
                    return this.columnPackingUnitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QtyIncreasePercentColumn {
                get {
                    return this.columnQtyIncreasePercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorIdColumn {
                get {
                    return this.columnVendorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstApprovedSupplierAtWarehouseDateColumn {
                get {
                    return this.columnFirstApprovedSupplierAtWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierAtWarehouseDateColumn {
                get {
                    return this.columnSupplierAtWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTermIdColumn {
                get {
                    return this.columnPaymentTermId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QuotaCategoryGroupIdColumn {
                get {
                    return this.columnQuotaCategoryGroupId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryOfOriginIdColumn {
                get {
                    return this.columnCountryOfOriginId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellCurrencyIdColumn {
                get {
                    return this.columnSellCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BuyCurrencyIdColumn {
                get {
                    return this.columnBuyCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POExchangeRateColumn {
                get {
                    return this.columnPOExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MockShopSampleRemarkColumn {
                get {
                    return this.columnMockShopSampleRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherPOTermRemarkColumn {
                get {
                    return this.columnOtherPOTermRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipDeptRemarkColumn {
                get {
                    return this.columnShipDeptRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalOrderQtyColumn {
                get {
                    return this.columnTotalOrderQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalOrderAmtColumn {
                get {
                    return this.columnTotalOrderAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPOQtyColumn {
                get {
                    return this.columnTotalPOQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPOAmtColumn {
                get {
                    return this.columnTotalPOAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPONetFOBAmtColumn {
                get {
                    return this.columnTotalPONetFOBAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedQtyColumn {
                get {
                    return this.columnTotalShippedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedAmtColumn {
                get {
                    return this.columnTotalShippedAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalNetFOBAmtColumn {
                get {
                    return this.columnTotalNetFOBAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedNetFOBAmtColumn {
                get {
                    return this.columnTotalShippedNetFOBAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalSupplierGmtAmtColumn {
                get {
                    return this.columnTotalSupplierGmtAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedSupplierGmtAmtColumn {
                get {
                    return this.columnTotalShippedSupplierGmtAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalOPAUpchargeColumn {
                get {
                    return this.columnTotalOPAUpcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedOPAUpchargeColumn {
                get {
                    return this.columnTotalShippedOPAUpcharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorPaymentDiscountPercentColumn {
                get {
                    return this.columnVendorPaymentDiscountPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedOnColumn {
                get {
                    return this.columnCreatedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedOnColumn {
                get {
                    return this.columnModifiedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsVirtualSetSplitColumn {
                get {
                    return this.columnIsVirtualSetSplit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsKnitwearComponentColumn {
                get {
                    return this.columnIsKnitwearComponent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsFobOrderColumn {
                get {
                    return this.columnIsFobOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QaCommissionPercentColumn {
                get {
                    return this.columnQaCommissionPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColourColumn {
                get {
                    return this.columnColour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabTestIncomeColumn {
                get {
                    return this.columnLabTestIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SplitShipmentRow this[int index] {
                get {
                    return ((SplitShipmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SplitShipmentRowChangeEventHandler SplitShipmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SplitShipmentRowChangeEventHandler SplitShipmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SplitShipmentRowChangeEventHandler SplitShipmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SplitShipmentRowChangeEventHandler SplitShipmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSplitShipmentRow(SplitShipmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SplitShipmentRow AddSplitShipmentRow(
                        int SplitShipmentId, 
                        int ShipmentId, 
                        string SplitSuffix, 
                        int ProductId, 
                        int PiecesPerPack, 
                        int PackingUnitId, 
                        decimal QtyIncreasePercent, 
                        int VendorId, 
                        System.DateTime FirstApprovedSupplierAtWarehouseDate, 
                        System.DateTime SupplierAtWarehouseDate, 
                        int PaymentTermId, 
                        int QuotaCategoryGroupId, 
                        int CountryOfOriginId, 
                        int SellCurrencyId, 
                        int BuyCurrencyId, 
                        decimal POExchangeRate, 
                        string MockShopSampleRemark, 
                        string OtherPOTermRemark, 
                        string ShipDeptRemark, 
                        int TotalOrderQty, 
                        decimal TotalOrderAmt, 
                        int TotalPOQty, 
                        decimal TotalPOAmt, 
                        decimal TotalPONetFOBAmt, 
                        int TotalShippedQty, 
                        decimal TotalShippedAmt, 
                        decimal TotalNetFOBAmt, 
                        decimal TotalShippedNetFOBAmt, 
                        decimal TotalSupplierGmtAmt, 
                        decimal TotalShippedSupplierGmtAmt, 
                        decimal TotalOPAUpcharge, 
                        decimal TotalShippedOPAUpcharge, 
                        decimal VendorPaymentDiscountPercent, 
                        int Status, 
                        int CreatedBy, 
                        System.DateTime CreatedOn, 
                        int ModifiedBy, 
                        System.DateTime ModifiedOn, 
                        int IsVirtualSetSplit, 
                        int IsKnitwearComponent, 
                        int IsFobOrder, 
                        decimal QaCommissionPercent, 
                        string Colour, 
                        decimal LabTestIncome) {
                SplitShipmentRow rowSplitShipmentRow = ((SplitShipmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SplitShipmentId,
                        ShipmentId,
                        SplitSuffix,
                        ProductId,
                        PiecesPerPack,
                        PackingUnitId,
                        QtyIncreasePercent,
                        VendorId,
                        FirstApprovedSupplierAtWarehouseDate,
                        SupplierAtWarehouseDate,
                        PaymentTermId,
                        QuotaCategoryGroupId,
                        CountryOfOriginId,
                        SellCurrencyId,
                        BuyCurrencyId,
                        POExchangeRate,
                        MockShopSampleRemark,
                        OtherPOTermRemark,
                        ShipDeptRemark,
                        TotalOrderQty,
                        TotalOrderAmt,
                        TotalPOQty,
                        TotalPOAmt,
                        TotalPONetFOBAmt,
                        TotalShippedQty,
                        TotalShippedAmt,
                        TotalNetFOBAmt,
                        TotalShippedNetFOBAmt,
                        TotalSupplierGmtAmt,
                        TotalShippedSupplierGmtAmt,
                        TotalOPAUpcharge,
                        TotalShippedOPAUpcharge,
                        VendorPaymentDiscountPercent,
                        Status,
                        CreatedBy,
                        CreatedOn,
                        ModifiedBy,
                        ModifiedOn,
                        IsVirtualSetSplit,
                        IsKnitwearComponent,
                        IsFobOrder,
                        QaCommissionPercent,
                        Colour,
                        LabTestIncome};
                rowSplitShipmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSplitShipmentRow);
                return rowSplitShipmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SplitShipmentRow FindBySplitShipmentId(int SplitShipmentId) {
                return ((SplitShipmentRow)(this.Rows.Find(new object[] {
                            SplitShipmentId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SplitShipmentDataTable cln = ((SplitShipmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SplitShipmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSplitShipmentId = base.Columns["SplitShipmentId"];
                this.columnShipmentId = base.Columns["ShipmentId"];
                this.columnSplitSuffix = base.Columns["SplitSuffix"];
                this.columnProductId = base.Columns["ProductId"];
                this.columnPiecesPerPack = base.Columns["PiecesPerPack"];
                this.columnPackingUnitId = base.Columns["PackingUnitId"];
                this.columnQtyIncreasePercent = base.Columns["QtyIncreasePercent"];
                this.columnVendorId = base.Columns["VendorId"];
                this.columnFirstApprovedSupplierAtWarehouseDate = base.Columns["FirstApprovedSupplierAtWarehouseDate"];
                this.columnSupplierAtWarehouseDate = base.Columns["SupplierAtWarehouseDate"];
                this.columnPaymentTermId = base.Columns["PaymentTermId"];
                this.columnQuotaCategoryGroupId = base.Columns["QuotaCategoryGroupId"];
                this.columnCountryOfOriginId = base.Columns["CountryOfOriginId"];
                this.columnSellCurrencyId = base.Columns["SellCurrencyId"];
                this.columnBuyCurrencyId = base.Columns["BuyCurrencyId"];
                this.columnPOExchangeRate = base.Columns["POExchangeRate"];
                this.columnMockShopSampleRemark = base.Columns["MockShopSampleRemark"];
                this.columnOtherPOTermRemark = base.Columns["OtherPOTermRemark"];
                this.columnShipDeptRemark = base.Columns["ShipDeptRemark"];
                this.columnTotalOrderQty = base.Columns["TotalOrderQty"];
                this.columnTotalOrderAmt = base.Columns["TotalOrderAmt"];
                this.columnTotalPOQty = base.Columns["TotalPOQty"];
                this.columnTotalPOAmt = base.Columns["TotalPOAmt"];
                this.columnTotalPONetFOBAmt = base.Columns["TotalPONetFOBAmt"];
                this.columnTotalShippedQty = base.Columns["TotalShippedQty"];
                this.columnTotalShippedAmt = base.Columns["TotalShippedAmt"];
                this.columnTotalNetFOBAmt = base.Columns["TotalNetFOBAmt"];
                this.columnTotalShippedNetFOBAmt = base.Columns["TotalShippedNetFOBAmt"];
                this.columnTotalSupplierGmtAmt = base.Columns["TotalSupplierGmtAmt"];
                this.columnTotalShippedSupplierGmtAmt = base.Columns["TotalShippedSupplierGmtAmt"];
                this.columnTotalOPAUpcharge = base.Columns["TotalOPAUpcharge"];
                this.columnTotalShippedOPAUpcharge = base.Columns["TotalShippedOPAUpcharge"];
                this.columnVendorPaymentDiscountPercent = base.Columns["VendorPaymentDiscountPercent"];
                this.columnStatus = base.Columns["Status"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedOn = base.Columns["ModifiedOn"];
                this.columnIsVirtualSetSplit = base.Columns["IsVirtualSetSplit"];
                this.columnIsKnitwearComponent = base.Columns["IsKnitwearComponent"];
                this.columnIsFobOrder = base.Columns["IsFobOrder"];
                this.columnQaCommissionPercent = base.Columns["QaCommissionPercent"];
                this.columnColour = base.Columns["Colour"];
                this.columnLabTestIncome = base.Columns["LabTestIncome"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSplitShipmentId = new global::System.Data.DataColumn("SplitShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSplitShipmentId);
                this.columnShipmentId = new global::System.Data.DataColumn("ShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentId);
                this.columnSplitSuffix = new global::System.Data.DataColumn("SplitSuffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSplitSuffix);
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnPiecesPerPack = new global::System.Data.DataColumn("PiecesPerPack", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiecesPerPack);
                this.columnPackingUnitId = new global::System.Data.DataColumn("PackingUnitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingUnitId);
                this.columnQtyIncreasePercent = new global::System.Data.DataColumn("QtyIncreasePercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyIncreasePercent);
                this.columnVendorId = new global::System.Data.DataColumn("VendorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorId);
                this.columnFirstApprovedSupplierAtWarehouseDate = new global::System.Data.DataColumn("FirstApprovedSupplierAtWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstApprovedSupplierAtWarehouseDate);
                this.columnSupplierAtWarehouseDate = new global::System.Data.DataColumn("SupplierAtWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierAtWarehouseDate);
                this.columnPaymentTermId = new global::System.Data.DataColumn("PaymentTermId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTermId);
                this.columnQuotaCategoryGroupId = new global::System.Data.DataColumn("QuotaCategoryGroupId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotaCategoryGroupId);
                this.columnCountryOfOriginId = new global::System.Data.DataColumn("CountryOfOriginId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryOfOriginId);
                this.columnSellCurrencyId = new global::System.Data.DataColumn("SellCurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellCurrencyId);
                this.columnBuyCurrencyId = new global::System.Data.DataColumn("BuyCurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyCurrencyId);
                this.columnPOExchangeRate = new global::System.Data.DataColumn("POExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOExchangeRate);
                this.columnMockShopSampleRemark = new global::System.Data.DataColumn("MockShopSampleRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMockShopSampleRemark);
                this.columnOtherPOTermRemark = new global::System.Data.DataColumn("OtherPOTermRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherPOTermRemark);
                this.columnShipDeptRemark = new global::System.Data.DataColumn("ShipDeptRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipDeptRemark);
                this.columnTotalOrderQty = new global::System.Data.DataColumn("TotalOrderQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalOrderQty);
                this.columnTotalOrderAmt = new global::System.Data.DataColumn("TotalOrderAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalOrderAmt);
                this.columnTotalPOQty = new global::System.Data.DataColumn("TotalPOQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPOQty);
                this.columnTotalPOAmt = new global::System.Data.DataColumn("TotalPOAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPOAmt);
                this.columnTotalPONetFOBAmt = new global::System.Data.DataColumn("TotalPONetFOBAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPONetFOBAmt);
                this.columnTotalShippedQty = new global::System.Data.DataColumn("TotalShippedQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedQty);
                this.columnTotalShippedAmt = new global::System.Data.DataColumn("TotalShippedAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedAmt);
                this.columnTotalNetFOBAmt = new global::System.Data.DataColumn("TotalNetFOBAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNetFOBAmt);
                this.columnTotalShippedNetFOBAmt = new global::System.Data.DataColumn("TotalShippedNetFOBAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedNetFOBAmt);
                this.columnTotalSupplierGmtAmt = new global::System.Data.DataColumn("TotalSupplierGmtAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSupplierGmtAmt);
                this.columnTotalShippedSupplierGmtAmt = new global::System.Data.DataColumn("TotalShippedSupplierGmtAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedSupplierGmtAmt);
                this.columnTotalOPAUpcharge = new global::System.Data.DataColumn("TotalOPAUpcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalOPAUpcharge);
                this.columnTotalShippedOPAUpcharge = new global::System.Data.DataColumn("TotalShippedOPAUpcharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedOPAUpcharge);
                this.columnVendorPaymentDiscountPercent = new global::System.Data.DataColumn("VendorPaymentDiscountPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaymentDiscountPercent);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedOn = new global::System.Data.DataColumn("ModifiedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedOn);
                this.columnIsVirtualSetSplit = new global::System.Data.DataColumn("IsVirtualSetSplit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsVirtualSetSplit);
                this.columnIsKnitwearComponent = new global::System.Data.DataColumn("IsKnitwearComponent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsKnitwearComponent);
                this.columnIsFobOrder = new global::System.Data.DataColumn("IsFobOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFobOrder);
                this.columnQaCommissionPercent = new global::System.Data.DataColumn("QaCommissionPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQaCommissionPercent);
                this.columnColour = new global::System.Data.DataColumn("Colour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColour);
                this.columnLabTestIncome = new global::System.Data.DataColumn("LabTestIncome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabTestIncome);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSplitShipmentId}, true));
                this.columnSplitShipmentId.AllowDBNull = false;
                this.columnSplitShipmentId.Unique = true;
                this.columnShipmentId.AllowDBNull = false;
                this.columnSplitSuffix.AllowDBNull = false;
                this.columnSplitSuffix.MaxLength = 2;
                this.columnProductId.AllowDBNull = false;
                this.columnPiecesPerPack.AllowDBNull = false;
                this.columnPackingUnitId.AllowDBNull = false;
                this.columnQtyIncreasePercent.AllowDBNull = false;
                this.columnSupplierAtWarehouseDate.AllowDBNull = false;
                this.columnSellCurrencyId.AllowDBNull = false;
                this.columnBuyCurrencyId.AllowDBNull = false;
                this.columnMockShopSampleRemark.MaxLength = 100;
                this.columnOtherPOTermRemark.MaxLength = 200;
                this.columnShipDeptRemark.MaxLength = 100;
                this.columnTotalOrderQty.AllowDBNull = false;
                this.columnTotalOrderAmt.AllowDBNull = false;
                this.columnTotalPOQty.AllowDBNull = false;
                this.columnTotalPOAmt.AllowDBNull = false;
                this.columnTotalShippedQty.AllowDBNull = false;
                this.columnTotalShippedAmt.AllowDBNull = false;
                this.columnTotalNetFOBAmt.AllowDBNull = false;
                this.columnTotalShippedNetFOBAmt.AllowDBNull = false;
                this.columnTotalSupplierGmtAmt.AllowDBNull = false;
                this.columnTotalShippedSupplierGmtAmt.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnCreatedBy.AllowDBNull = false;
                this.columnCreatedOn.AllowDBNull = false;
                this.columnColour.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SplitShipmentRow NewSplitShipmentRow() {
                return ((SplitShipmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SplitShipmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SplitShipmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SplitShipmentRowChanged != null)) {
                    this.SplitShipmentRowChanged(this, new SplitShipmentRowChangeEvent(((SplitShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SplitShipmentRowChanging != null)) {
                    this.SplitShipmentRowChanging(this, new SplitShipmentRowChangeEvent(((SplitShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SplitShipmentRowDeleted != null)) {
                    this.SplitShipmentRowDeleted(this, new SplitShipmentRowChangeEvent(((SplitShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SplitShipmentRowDeleting != null)) {
                    this.SplitShipmentRowDeleting(this, new SplitShipmentRowChangeEvent(((SplitShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSplitShipmentRow(SplitShipmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NssSplitShipmentDs ds = new NssSplitShipmentDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SplitShipmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SplitShipmentRow : global::System.Data.DataRow {
            
            private SplitShipmentDataTable tableSplitShipment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SplitShipmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSplitShipment = ((SplitShipmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SplitShipmentId {
                get {
                    return ((int)(this[this.tableSplitShipment.SplitShipmentIdColumn]));
                }
                set {
                    this[this.tableSplitShipment.SplitShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipmentId {
                get {
                    return ((int)(this[this.tableSplitShipment.ShipmentIdColumn]));
                }
                set {
                    this[this.tableSplitShipment.ShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SplitSuffix {
                get {
                    return ((string)(this[this.tableSplitShipment.SplitSuffixColumn]));
                }
                set {
                    this[this.tableSplitShipment.SplitSuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductId {
                get {
                    return ((int)(this[this.tableSplitShipment.ProductIdColumn]));
                }
                set {
                    this[this.tableSplitShipment.ProductIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PiecesPerPack {
                get {
                    return ((int)(this[this.tableSplitShipment.PiecesPerPackColumn]));
                }
                set {
                    this[this.tableSplitShipment.PiecesPerPackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PackingUnitId {
                get {
                    return ((int)(this[this.tableSplitShipment.PackingUnitIdColumn]));
                }
                set {
                    this[this.tableSplitShipment.PackingUnitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QtyIncreasePercent {
                get {
                    return ((decimal)(this[this.tableSplitShipment.QtyIncreasePercentColumn]));
                }
                set {
                    this[this.tableSplitShipment.QtyIncreasePercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VendorId {
                get {
                    try {
                        return ((int)(this[this.tableSplitShipment.VendorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorId\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.VendorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FirstApprovedSupplierAtWarehouseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSplitShipment.FirstApprovedSupplierAtWarehouseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstApprovedSupplierAtWarehouseDate\' in table \'SplitShipme" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.FirstApprovedSupplierAtWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SupplierAtWarehouseDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSplitShipment.SupplierAtWarehouseDateColumn]));
                }
                set {
                    this[this.tableSplitShipment.SupplierAtWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PaymentTermId {
                get {
                    try {
                        return ((int)(this[this.tableSplitShipment.PaymentTermIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentTermId\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.PaymentTermIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QuotaCategoryGroupId {
                get {
                    try {
                        return ((int)(this[this.tableSplitShipment.QuotaCategoryGroupIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuotaCategoryGroupId\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.QuotaCategoryGroupIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountryOfOriginId {
                get {
                    try {
                        return ((int)(this[this.tableSplitShipment.CountryOfOriginIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryOfOriginId\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.CountryOfOriginIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SellCurrencyId {
                get {
                    return ((int)(this[this.tableSplitShipment.SellCurrencyIdColumn]));
                }
                set {
                    this[this.tableSplitShipment.SellCurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BuyCurrencyId {
                get {
                    return ((int)(this[this.tableSplitShipment.BuyCurrencyIdColumn]));
                }
                set {
                    this[this.tableSplitShipment.BuyCurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal POExchangeRate {
                get {
                    try {
                        return ((decimal)(this[this.tableSplitShipment.POExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POExchangeRate\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.POExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MockShopSampleRemark {
                get {
                    try {
                        return ((string)(this[this.tableSplitShipment.MockShopSampleRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MockShopSampleRemark\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.MockShopSampleRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherPOTermRemark {
                get {
                    try {
                        return ((string)(this[this.tableSplitShipment.OtherPOTermRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherPOTermRemark\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.OtherPOTermRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShipDeptRemark {
                get {
                    try {
                        return ((string)(this[this.tableSplitShipment.ShipDeptRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipDeptRemark\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.ShipDeptRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalOrderQty {
                get {
                    return ((int)(this[this.tableSplitShipment.TotalOrderQtyColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalOrderQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalOrderAmt {
                get {
                    return ((decimal)(this[this.tableSplitShipment.TotalOrderAmtColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalOrderAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalPOQty {
                get {
                    return ((int)(this[this.tableSplitShipment.TotalPOQtyColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalPOQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalPOAmt {
                get {
                    return ((decimal)(this[this.tableSplitShipment.TotalPOAmtColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalPOAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalPONetFOBAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSplitShipment.TotalPONetFOBAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPONetFOBAmt\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.TotalPONetFOBAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalShippedQty {
                get {
                    return ((int)(this[this.tableSplitShipment.TotalShippedQtyColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalShippedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalShippedAmt {
                get {
                    return ((decimal)(this[this.tableSplitShipment.TotalShippedAmtColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalShippedAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalNetFOBAmt {
                get {
                    return ((decimal)(this[this.tableSplitShipment.TotalNetFOBAmtColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalNetFOBAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalShippedNetFOBAmt {
                get {
                    return ((decimal)(this[this.tableSplitShipment.TotalShippedNetFOBAmtColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalShippedNetFOBAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalSupplierGmtAmt {
                get {
                    return ((decimal)(this[this.tableSplitShipment.TotalSupplierGmtAmtColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalSupplierGmtAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalShippedSupplierGmtAmt {
                get {
                    return ((decimal)(this[this.tableSplitShipment.TotalShippedSupplierGmtAmtColumn]));
                }
                set {
                    this[this.tableSplitShipment.TotalShippedSupplierGmtAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalOPAUpcharge {
                get {
                    try {
                        return ((decimal)(this[this.tableSplitShipment.TotalOPAUpchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalOPAUpcharge\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.TotalOPAUpchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalShippedOPAUpcharge {
                get {
                    try {
                        return ((decimal)(this[this.tableSplitShipment.TotalShippedOPAUpchargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalShippedOPAUpcharge\' in table \'SplitShipment\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.TotalShippedOPAUpchargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VendorPaymentDiscountPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableSplitShipment.VendorPaymentDiscountPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorPaymentDiscountPercent\' in table \'SplitShipment\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.VendorPaymentDiscountPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Status {
                get {
                    return ((int)(this[this.tableSplitShipment.StatusColumn]));
                }
                set {
                    this[this.tableSplitShipment.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CreatedBy {
                get {
                    return ((int)(this[this.tableSplitShipment.CreatedByColumn]));
                }
                set {
                    this[this.tableSplitShipment.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedOn {
                get {
                    return ((global::System.DateTime)(this[this.tableSplitShipment.CreatedOnColumn]));
                }
                set {
                    this[this.tableSplitShipment.CreatedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ModifiedBy {
                get {
                    try {
                        return ((int)(this[this.tableSplitShipment.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifiedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSplitShipment.ModifiedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedOn\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.ModifiedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsVirtualSetSplit {
                get {
                    try {
                        return ((int)(this[this.tableSplitShipment.IsVirtualSetSplitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsVirtualSetSplit\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.IsVirtualSetSplitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsKnitwearComponent {
                get {
                    try {
                        return ((int)(this[this.tableSplitShipment.IsKnitwearComponentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsKnitwearComponent\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.IsKnitwearComponentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsFobOrder {
                get {
                    try {
                        return ((int)(this[this.tableSplitShipment.IsFobOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsFobOrder\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.IsFobOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QaCommissionPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableSplitShipment.QaCommissionPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QaCommissionPercent\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.QaCommissionPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Colour {
                get {
                    try {
                        return ((string)(this[this.tableSplitShipment.ColourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Colour\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.ColourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LabTestIncome {
                get {
                    try {
                        return ((decimal)(this[this.tableSplitShipment.LabTestIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabTestIncome\' in table \'SplitShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSplitShipment.LabTestIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorIdNull() {
                return this.IsNull(this.tableSplitShipment.VendorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorIdNull() {
                this[this.tableSplitShipment.VendorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstApprovedSupplierAtWarehouseDateNull() {
                return this.IsNull(this.tableSplitShipment.FirstApprovedSupplierAtWarehouseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstApprovedSupplierAtWarehouseDateNull() {
                this[this.tableSplitShipment.FirstApprovedSupplierAtWarehouseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentTermIdNull() {
                return this.IsNull(this.tableSplitShipment.PaymentTermIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentTermIdNull() {
                this[this.tableSplitShipment.PaymentTermIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuotaCategoryGroupIdNull() {
                return this.IsNull(this.tableSplitShipment.QuotaCategoryGroupIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuotaCategoryGroupIdNull() {
                this[this.tableSplitShipment.QuotaCategoryGroupIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryOfOriginIdNull() {
                return this.IsNull(this.tableSplitShipment.CountryOfOriginIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryOfOriginIdNull() {
                this[this.tableSplitShipment.CountryOfOriginIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPOExchangeRateNull() {
                return this.IsNull(this.tableSplitShipment.POExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPOExchangeRateNull() {
                this[this.tableSplitShipment.POExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMockShopSampleRemarkNull() {
                return this.IsNull(this.tableSplitShipment.MockShopSampleRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMockShopSampleRemarkNull() {
                this[this.tableSplitShipment.MockShopSampleRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherPOTermRemarkNull() {
                return this.IsNull(this.tableSplitShipment.OtherPOTermRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherPOTermRemarkNull() {
                this[this.tableSplitShipment.OtherPOTermRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShipDeptRemarkNull() {
                return this.IsNull(this.tableSplitShipment.ShipDeptRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShipDeptRemarkNull() {
                this[this.tableSplitShipment.ShipDeptRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPONetFOBAmtNull() {
                return this.IsNull(this.tableSplitShipment.TotalPONetFOBAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPONetFOBAmtNull() {
                this[this.tableSplitShipment.TotalPONetFOBAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalOPAUpchargeNull() {
                return this.IsNull(this.tableSplitShipment.TotalOPAUpchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalOPAUpchargeNull() {
                this[this.tableSplitShipment.TotalOPAUpchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalShippedOPAUpchargeNull() {
                return this.IsNull(this.tableSplitShipment.TotalShippedOPAUpchargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalShippedOPAUpchargeNull() {
                this[this.tableSplitShipment.TotalShippedOPAUpchargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorPaymentDiscountPercentNull() {
                return this.IsNull(this.tableSplitShipment.VendorPaymentDiscountPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorPaymentDiscountPercentNull() {
                this[this.tableSplitShipment.VendorPaymentDiscountPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableSplitShipment.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedByNull() {
                this[this.tableSplitShipment.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedOnNull() {
                return this.IsNull(this.tableSplitShipment.ModifiedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedOnNull() {
                this[this.tableSplitShipment.ModifiedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsVirtualSetSplitNull() {
                return this.IsNull(this.tableSplitShipment.IsVirtualSetSplitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsVirtualSetSplitNull() {
                this[this.tableSplitShipment.IsVirtualSetSplitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsKnitwearComponentNull() {
                return this.IsNull(this.tableSplitShipment.IsKnitwearComponentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsKnitwearComponentNull() {
                this[this.tableSplitShipment.IsKnitwearComponentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsFobOrderNull() {
                return this.IsNull(this.tableSplitShipment.IsFobOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsFobOrderNull() {
                this[this.tableSplitShipment.IsFobOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQaCommissionPercentNull() {
                return this.IsNull(this.tableSplitShipment.QaCommissionPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQaCommissionPercentNull() {
                this[this.tableSplitShipment.QaCommissionPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColourNull() {
                return this.IsNull(this.tableSplitShipment.ColourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColourNull() {
                this[this.tableSplitShipment.ColourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabTestIncomeNull() {
                return this.IsNull(this.tableSplitShipment.LabTestIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabTestIncomeNull() {
                this[this.tableSplitShipment.LabTestIncomeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SplitShipmentRowChangeEvent : global::System.EventArgs {
            
            private SplitShipmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SplitShipmentRowChangeEvent(SplitShipmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SplitShipmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.dataserver.model.nss.NssSplitShipmentDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SplitShipmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SplitShipmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SplitShipment";
            tableMapping.ColumnMappings.Add("SplitShipmentId", "SplitShipmentId");
            tableMapping.ColumnMappings.Add("ShipmentId", "ShipmentId");
            tableMapping.ColumnMappings.Add("SplitSuffix", "SplitSuffix");
            tableMapping.ColumnMappings.Add("ProductId", "ProductId");
            tableMapping.ColumnMappings.Add("PiecesPerPack", "PiecesPerPack");
            tableMapping.ColumnMappings.Add("PackingUnitId", "PackingUnitId");
            tableMapping.ColumnMappings.Add("QtyIncreasePercent", "QtyIncreasePercent");
            tableMapping.ColumnMappings.Add("VendorId", "VendorId");
            tableMapping.ColumnMappings.Add("FirstApprovedSupplierAtWarehouseDate", "FirstApprovedSupplierAtWarehouseDate");
            tableMapping.ColumnMappings.Add("SupplierAtWarehouseDate", "SupplierAtWarehouseDate");
            tableMapping.ColumnMappings.Add("PaymentTermId", "PaymentTermId");
            tableMapping.ColumnMappings.Add("QuotaCategoryGroupId", "QuotaCategoryGroupId");
            tableMapping.ColumnMappings.Add("CountryOfOriginId", "CountryOfOriginId");
            tableMapping.ColumnMappings.Add("SellCurrencyId", "SellCurrencyId");
            tableMapping.ColumnMappings.Add("BuyCurrencyId", "BuyCurrencyId");
            tableMapping.ColumnMappings.Add("POExchangeRate", "POExchangeRate");
            tableMapping.ColumnMappings.Add("MockShopSampleRemark", "MockShopSampleRemark");
            tableMapping.ColumnMappings.Add("OtherPOTermRemark", "OtherPOTermRemark");
            tableMapping.ColumnMappings.Add("ShipDeptRemark", "ShipDeptRemark");
            tableMapping.ColumnMappings.Add("TotalOrderQty", "TotalOrderQty");
            tableMapping.ColumnMappings.Add("TotalOrderAmt", "TotalOrderAmt");
            tableMapping.ColumnMappings.Add("TotalPOQty", "TotalPOQty");
            tableMapping.ColumnMappings.Add("TotalPOAmt", "TotalPOAmt");
            tableMapping.ColumnMappings.Add("TotalPONetFOBAmt", "TotalPONetFOBAmt");
            tableMapping.ColumnMappings.Add("TotalShippedQty", "TotalShippedQty");
            tableMapping.ColumnMappings.Add("TotalShippedAmt", "TotalShippedAmt");
            tableMapping.ColumnMappings.Add("TotalNetFOBAmt", "TotalNetFOBAmt");
            tableMapping.ColumnMappings.Add("TotalShippedNetFOBAmt", "TotalShippedNetFOBAmt");
            tableMapping.ColumnMappings.Add("TotalSupplierGmtAmt", "TotalSupplierGmtAmt");
            tableMapping.ColumnMappings.Add("TotalShippedSupplierGmtAmt", "TotalShippedSupplierGmtAmt");
            tableMapping.ColumnMappings.Add("TotalOPAUpcharge", "TotalOPAUpcharge");
            tableMapping.ColumnMappings.Add("TotalShippedOPAUpcharge", "TotalShippedOPAUpcharge");
            tableMapping.ColumnMappings.Add("VendorPaymentDiscountPercent", "VendorPaymentDiscountPercent");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            tableMapping.ColumnMappings.Add("ModifiedBy", "ModifiedBy");
            tableMapping.ColumnMappings.Add("ModifiedOn", "ModifiedOn");
            tableMapping.ColumnMappings.Add("IsVirtualSetSplit", "IsVirtualSetSplit");
            tableMapping.ColumnMappings.Add("IsKnitwearComponent", "IsKnitwearComponent");
            tableMapping.ColumnMappings.Add("IsFobOrder", "IsFobOrder");
            tableMapping.ColumnMappings.Add("QaCommissionPercent", "QaCommissionPercent");
            tableMapping.ColumnMappings.Add("Colour", "Colour");
            tableMapping.ColumnMappings.Add("LabTestIncome", "LabTestIncome");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SplitShipment] WHERE (([SplitShipmentId] = @Original_SplitShip" +
                "mentId) AND ([ShipmentId] = @Original_ShipmentId) AND ([SplitSuffix] = @Original" +
                "_SplitSuffix) AND ([ProductId] = @Original_ProductId) AND ([PiecesPerPack] = @Or" +
                "iginal_PiecesPerPack) AND ([PackingUnitId] = @Original_PackingUnitId) AND ([QtyI" +
                "ncreasePercent] = @Original_QtyIncreasePercent) AND ((@IsNull_VendorId = 1 AND [" +
                "VendorId] IS NULL) OR ([VendorId] = @Original_VendorId)) AND ((@IsNull_FirstAppr" +
                "ovedSupplierAtWarehouseDate = 1 AND [FirstApprovedSupplierAtWarehouseDate] IS NU" +
                "LL) OR ([FirstApprovedSupplierAtWarehouseDate] = @Original_FirstApprovedSupplier" +
                "AtWarehouseDate)) AND ([SupplierAtWarehouseDate] = @Original_SupplierAtWarehouse" +
                "Date) AND ((@IsNull_PaymentTermId = 1 AND [PaymentTermId] IS NULL) OR ([PaymentT" +
                "ermId] = @Original_PaymentTermId)) AND ((@IsNull_QuotaCategoryGroupId = 1 AND [Q" +
                "uotaCategoryGroupId] IS NULL) OR ([QuotaCategoryGroupId] = @Original_QuotaCatego" +
                "ryGroupId)) AND ((@IsNull_CountryOfOriginId = 1 AND [CountryOfOriginId] IS NULL)" +
                " OR ([CountryOfOriginId] = @Original_CountryOfOriginId)) AND ([SellCurrencyId] =" +
                " @Original_SellCurrencyId) AND ([BuyCurrencyId] = @Original_BuyCurrencyId) AND (" +
                "(@IsNull_POExchangeRate = 1 AND [POExchangeRate] IS NULL) OR ([POExchangeRate] =" +
                " @Original_POExchangeRate)) AND ((@IsNull_MockShopSampleRemark = 1 AND [MockShop" +
                "SampleRemark] IS NULL) OR ([MockShopSampleRemark] = @Original_MockShopSampleRema" +
                "rk)) AND ((@IsNull_OtherPOTermRemark = 1 AND [OtherPOTermRemark] IS NULL) OR ([O" +
                "therPOTermRemark] = @Original_OtherPOTermRemark)) AND ((@IsNull_ShipDeptRemark =" +
                " 1 AND [ShipDeptRemark] IS NULL) OR ([ShipDeptRemark] = @Original_ShipDeptRemark" +
                ")) AND ([TotalOrderQty] = @Original_TotalOrderQty) AND ([TotalOrderAmt] = @Origi" +
                "nal_TotalOrderAmt) AND ([TotalPOQty] = @Original_TotalPOQty) AND ([TotalPOAmt] =" +
                " @Original_TotalPOAmt) AND ((@IsNull_TotalPONetFOBAmt = 1 AND [TotalPONetFOBAmt]" +
                " IS NULL) OR ([TotalPONetFOBAmt] = @Original_TotalPONetFOBAmt)) AND ([TotalShipp" +
                "edQty] = @Original_TotalShippedQty) AND ([TotalShippedAmt] = @Original_TotalShip" +
                "pedAmt) AND ([TotalNetFOBAmt] = @Original_TotalNetFOBAmt) AND ([TotalShippedNetF" +
                "OBAmt] = @Original_TotalShippedNetFOBAmt) AND ([TotalSupplierGmtAmt] = @Original" +
                "_TotalSupplierGmtAmt) AND ([TotalShippedSupplierGmtAmt] = @Original_TotalShipped" +
                "SupplierGmtAmt) AND ((@IsNull_TotalOPAUpcharge = 1 AND [TotalOPAUpcharge] IS NUL" +
                "L) OR ([TotalOPAUpcharge] = @Original_TotalOPAUpcharge)) AND ((@IsNull_TotalShip" +
                "pedOPAUpcharge = 1 AND [TotalShippedOPAUpcharge] IS NULL) OR ([TotalShippedOPAUp" +
                "charge] = @Original_TotalShippedOPAUpcharge)) AND ((@IsNull_VendorPaymentDiscoun" +
                "tPercent = 1 AND [VendorPaymentDiscountPercent] IS NULL) OR ([VendorPaymentDisco" +
                "untPercent] = @Original_VendorPaymentDiscountPercent)) AND ([Status] = @Original" +
                "_Status) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedOn] = @Original_Cr" +
                "eatedOn) AND ((@IsNull_ModifiedBy = 1 AND [ModifiedBy] IS NULL) OR ([ModifiedBy]" +
                " = @Original_ModifiedBy)) AND ((@IsNull_ModifiedOn = 1 AND [ModifiedOn] IS NULL)" +
                " OR ([ModifiedOn] = @Original_ModifiedOn)) AND ((@IsNull_IsVirtualSetSplit = 1 A" +
                "ND [IsVirtualSetSplit] IS NULL) OR ([IsVirtualSetSplit] = @Original_IsVirtualSet" +
                "Split)) AND ((@IsNull_IsKnitwearComponent = 1 AND [IsKnitwearComponent] IS NULL)" +
                " OR ([IsKnitwearComponent] = @Original_IsKnitwearComponent)) AND ((@IsNull_IsFob" +
                "Order = 1 AND [IsFobOrder] IS NULL) OR ([IsFobOrder] = @Original_IsFobOrder)) AN" +
                "D ((@IsNull_QaCommissionPercent = 1 AND [QaCommissionPercent] IS NULL) OR ([QaCo" +
                "mmissionPercent] = @Original_QaCommissionPercent)) AND ((@IsNull_Colour = 1 AND " +
                "[Colour] IS NULL) OR ([Colour] = @Original_Colour)) AND ((@IsNull_LabTestIncome " +
                "= 1 AND [LabTestIncome] IS NULL) OR ([LabTestIncome] = @Original_LabTestIncome))" +
                ")";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SplitShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SplitSuffix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitSuffix", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PiecesPerPack", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiecesPerPack", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QtyIncreasePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 2, 0, "QtyIncreasePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FirstApprovedSupplierAtWarehouseDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstApprovedSupplierAtWarehouseDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstApprovedSupplierAtWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstApprovedSupplierAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierAtWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QuotaCategoryGroupId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotaCategoryGroupId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuotaCategoryGroupId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotaCategoryGroupId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuyCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POExchangeRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POExchangeRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "POExchangeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MockShopSampleRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MockShopSampleRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MockShopSampleRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MockShopSampleRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherPOTermRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherPOTermRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherPOTermRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherPOTermRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShipDeptRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDeptRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipDeptRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDeptRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalOrderQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalOrderQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalOrderAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalOrderAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPOQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPOQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPOAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalPOAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalPONetFOBAmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPONetFOBAmt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPONetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalPONetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalNetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalOPAUpcharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalOPAUpcharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalOPAUpcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalOPAUpcharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalShippedOPAUpcharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedOPAUpcharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedOPAUpcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedOPAUpcharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsVirtualSetSplit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsVirtualSetSplit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsVirtualSetSplit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsVirtualSetSplit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsKnitwearComponent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKnitwearComponent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsKnitwearComponent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKnitwearComponent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsFobOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFobOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsFobOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFobOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QaCommissionPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QaCommissionPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QaCommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "QaCommissionPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Colour", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Colour", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LabTestIncome", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabTestIncome", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SplitShipment] ([SplitShipmentId], [ShipmentId], [SplitSuffix]" +
                ", [ProductId], [PiecesPerPack], [PackingUnitId], [QtyIncreasePercent], [VendorId" +
                "], [FirstApprovedSupplierAtWarehouseDate], [SupplierAtWarehouseDate], [PaymentTe" +
                "rmId], [QuotaCategoryGroupId], [CountryOfOriginId], [SellCurrencyId], [BuyCurren" +
                "cyId], [POExchangeRate], [MockShopSampleRemark], [OtherPOTermRemark], [ShipDeptR" +
                "emark], [TotalOrderQty], [TotalOrderAmt], [TotalPOQty], [TotalPOAmt], [TotalPONe" +
                "tFOBAmt], [TotalShippedQty], [TotalShippedAmt], [TotalNetFOBAmt], [TotalShippedN" +
                "etFOBAmt], [TotalSupplierGmtAmt], [TotalShippedSupplierGmtAmt], [TotalOPAUpcharg" +
                "e], [TotalShippedOPAUpcharge], [VendorPaymentDiscountPercent], [Status], [Create" +
                "dBy], [CreatedOn], [ModifiedBy], [ModifiedOn], [IsVirtualSetSplit], [IsKnitwearC" +
                "omponent], [IsFobOrder], [QaCommissionPercent], [Colour], [LabTestIncome]) VALUE" +
                "S (@SplitShipmentId, @ShipmentId, @SplitSuffix, @ProductId, @PiecesPerPack, @Pac" +
                "kingUnitId, @QtyIncreasePercent, @VendorId, @FirstApprovedSupplierAtWarehouseDat" +
                "e, @SupplierAtWarehouseDate, @PaymentTermId, @QuotaCategoryGroupId, @CountryOfOr" +
                "iginId, @SellCurrencyId, @BuyCurrencyId, @POExchangeRate, @MockShopSampleRemark," +
                " @OtherPOTermRemark, @ShipDeptRemark, @TotalOrderQty, @TotalOrderAmt, @TotalPOQt" +
                "y, @TotalPOAmt, @TotalPONetFOBAmt, @TotalShippedQty, @TotalShippedAmt, @TotalNet" +
                "FOBAmt, @TotalShippedNetFOBAmt, @TotalSupplierGmtAmt, @TotalShippedSupplierGmtAm" +
                "t, @TotalOPAUpcharge, @TotalShippedOPAUpcharge, @VendorPaymentDiscountPercent, @" +
                "Status, @CreatedBy, @CreatedOn, @ModifiedBy, @ModifiedOn, @IsVirtualSetSplit, @I" +
                "sKnitwearComponent, @IsFobOrder, @QaCommissionPercent, @Colour, @LabTestIncome);" +
                "\r\nSELECT SplitShipmentId, ShipmentId, SplitSuffix, ProductId, PiecesPerPack, Pac" +
                "kingUnitId, QtyIncreasePercent, VendorId, FirstApprovedSupplierAtWarehouseDate, " +
                "SupplierAtWarehouseDate, PaymentTermId, QuotaCategoryGroupId, CountryOfOriginId," +
                " SellCurrencyId, BuyCurrencyId, POExchangeRate, MockShopSampleRemark, OtherPOTer" +
                "mRemark, ShipDeptRemark, TotalOrderQty, TotalOrderAmt, TotalPOQty, TotalPOAmt, T" +
                "otalPONetFOBAmt, TotalShippedQty, TotalShippedAmt, TotalNetFOBAmt, TotalShippedN" +
                "etFOBAmt, TotalSupplierGmtAmt, TotalShippedSupplierGmtAmt, TotalOPAUpcharge, Tot" +
                "alShippedOPAUpcharge, VendorPaymentDiscountPercent, Status, CreatedBy, CreatedOn" +
                ", ModifiedBy, ModifiedOn, IsVirtualSetSplit, IsKnitwearComponent, IsFobOrder, Qa" +
                "CommissionPercent, Colour, LabTestIncome FROM SplitShipment WHERE (SplitShipment" +
                "Id = @SplitShipmentId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SplitShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SplitSuffix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitSuffix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PiecesPerPack", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiecesPerPack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QtyIncreasePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 2, 0, "QtyIncreasePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstApprovedSupplierAtWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstApprovedSupplierAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierAtWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotaCategoryGroupId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotaCategoryGroupId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "POExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MockShopSampleRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MockShopSampleRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherPOTermRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherPOTermRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDeptRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDeptRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalOrderQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalOrderQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalOrderAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalOrderAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPOQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPOQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPOAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalPOAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPONetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalPONetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalNetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalOPAUpcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalOPAUpcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedOPAUpcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedOPAUpcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsVirtualSetSplit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsVirtualSetSplit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsKnitwearComponent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKnitwearComponent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsFobOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFobOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QaCommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "QaCommissionPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Colour", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SplitShipment] SET [SplitShipmentId] = @SplitShipmentId, [ShipmentI" +
                "d] = @ShipmentId, [SplitSuffix] = @SplitSuffix, [ProductId] = @ProductId, [Piece" +
                "sPerPack] = @PiecesPerPack, [PackingUnitId] = @PackingUnitId, [QtyIncreasePercen" +
                "t] = @QtyIncreasePercent, [VendorId] = @VendorId, [FirstApprovedSupplierAtWareho" +
                "useDate] = @FirstApprovedSupplierAtWarehouseDate, [SupplierAtWarehouseDate] = @S" +
                "upplierAtWarehouseDate, [PaymentTermId] = @PaymentTermId, [QuotaCategoryGroupId]" +
                " = @QuotaCategoryGroupId, [CountryOfOriginId] = @CountryOfOriginId, [SellCurrenc" +
                "yId] = @SellCurrencyId, [BuyCurrencyId] = @BuyCurrencyId, [POExchangeRate] = @PO" +
                "ExchangeRate, [MockShopSampleRemark] = @MockShopSampleRemark, [OtherPOTermRemark" +
                "] = @OtherPOTermRemark, [ShipDeptRemark] = @ShipDeptRemark, [TotalOrderQty] = @T" +
                "otalOrderQty, [TotalOrderAmt] = @TotalOrderAmt, [TotalPOQty] = @TotalPOQty, [Tot" +
                "alPOAmt] = @TotalPOAmt, [TotalPONetFOBAmt] = @TotalPONetFOBAmt, [TotalShippedQty" +
                "] = @TotalShippedQty, [TotalShippedAmt] = @TotalShippedAmt, [TotalNetFOBAmt] = @" +
                "TotalNetFOBAmt, [TotalShippedNetFOBAmt] = @TotalShippedNetFOBAmt, [TotalSupplier" +
                "GmtAmt] = @TotalSupplierGmtAmt, [TotalShippedSupplierGmtAmt] = @TotalShippedSupp" +
                "lierGmtAmt, [TotalOPAUpcharge] = @TotalOPAUpcharge, [TotalShippedOPAUpcharge] = " +
                "@TotalShippedOPAUpcharge, [VendorPaymentDiscountPercent] = @VendorPaymentDiscoun" +
                "tPercent, [Status] = @Status, [CreatedBy] = @CreatedBy, [CreatedOn] = @CreatedOn" +
                ", [ModifiedBy] = @ModifiedBy, [ModifiedOn] = @ModifiedOn, [IsVirtualSetSplit] = " +
                "@IsVirtualSetSplit, [IsKnitwearComponent] = @IsKnitwearComponent, [IsFobOrder] =" +
                " @IsFobOrder, [QaCommissionPercent] = @QaCommissionPercent, [Colour] = @Colour, " +
                "[LabTestIncome] = @LabTestIncome WHERE (([SplitShipmentId] = @Original_SplitShip" +
                "mentId) AND ([ShipmentId] = @Original_ShipmentId) AND ([SplitSuffix] = @Original" +
                "_SplitSuffix) AND ([ProductId] = @Original_ProductId) AND ([PiecesPerPack] = @Or" +
                "iginal_PiecesPerPack) AND ([PackingUnitId] = @Original_PackingUnitId) AND ([QtyI" +
                "ncreasePercent] = @Original_QtyIncreasePercent) AND ((@IsNull_VendorId = 1 AND [" +
                "VendorId] IS NULL) OR ([VendorId] = @Original_VendorId)) AND ((@IsNull_FirstAppr" +
                "ovedSupplierAtWarehouseDate = 1 AND [FirstApprovedSupplierAtWarehouseDate] IS NU" +
                "LL) OR ([FirstApprovedSupplierAtWarehouseDate] = @Original_FirstApprovedSupplier" +
                "AtWarehouseDate)) AND ([SupplierAtWarehouseDate] = @Original_SupplierAtWarehouse" +
                "Date) AND ((@IsNull_PaymentTermId = 1 AND [PaymentTermId] IS NULL) OR ([PaymentT" +
                "ermId] = @Original_PaymentTermId)) AND ((@IsNull_QuotaCategoryGroupId = 1 AND [Q" +
                "uotaCategoryGroupId] IS NULL) OR ([QuotaCategoryGroupId] = @Original_QuotaCatego" +
                "ryGroupId)) AND ((@IsNull_CountryOfOriginId = 1 AND [CountryOfOriginId] IS NULL)" +
                " OR ([CountryOfOriginId] = @Original_CountryOfOriginId)) AND ([SellCurrencyId] =" +
                " @Original_SellCurrencyId) AND ([BuyCurrencyId] = @Original_BuyCurrencyId) AND (" +
                "(@IsNull_POExchangeRate = 1 AND [POExchangeRate] IS NULL) OR ([POExchangeRate] =" +
                " @Original_POExchangeRate)) AND ((@IsNull_MockShopSampleRemark = 1 AND [MockShop" +
                "SampleRemark] IS NULL) OR ([MockShopSampleRemark] = @Original_MockShopSampleRema" +
                "rk)) AND ((@IsNull_OtherPOTermRemark = 1 AND [OtherPOTermRemark] IS NULL) OR ([O" +
                "therPOTermRemark] = @Original_OtherPOTermRemark)) AND ((@IsNull_ShipDeptRemark =" +
                " 1 AND [ShipDeptRemark] IS NULL) OR ([ShipDeptRemark] = @Original_ShipDeptRemark" +
                ")) AND ([TotalOrderQty] = @Original_TotalOrderQty) AND ([TotalOrderAmt] = @Origi" +
                "nal_TotalOrderAmt) AND ([TotalPOQty] = @Original_TotalPOQty) AND ([TotalPOAmt] =" +
                " @Original_TotalPOAmt) AND ((@IsNull_TotalPONetFOBAmt = 1 AND [TotalPONetFOBAmt]" +
                " IS NULL) OR ([TotalPONetFOBAmt] = @Original_TotalPONetFOBAmt)) AND ([TotalShipp" +
                "edQty] = @Original_TotalShippedQty) AND ([TotalShippedAmt] = @Original_TotalShip" +
                "pedAmt) AND ([TotalNetFOBAmt] = @Original_TotalNetFOBAmt) AND ([TotalShippedNetF" +
                "OBAmt] = @Original_TotalShippedNetFOBAmt) AND ([TotalSupplierGmtAmt] = @Original" +
                "_TotalSupplierGmtAmt) AND ([TotalShippedSupplierGmtAmt] = @Original_TotalShipped" +
                "SupplierGmtAmt) AND ((@IsNull_TotalOPAUpcharge = 1 AND [TotalOPAUpcharge] IS NUL" +
                "L) OR ([TotalOPAUpcharge] = @Original_TotalOPAUpcharge)) AND ((@IsNull_TotalShip" +
                "pedOPAUpcharge = 1 AND [TotalShippedOPAUpcharge] IS NULL) OR ([TotalShippedOPAUp" +
                "charge] = @Original_TotalShippedOPAUpcharge)) AND ((@IsNull_VendorPaymentDiscoun" +
                "tPercent = 1 AND [VendorPaymentDiscountPercent] IS NULL) OR ([VendorPaymentDisco" +
                "untPercent] = @Original_VendorPaymentDiscountPercent)) AND ([Status] = @Original" +
                "_Status) AND ([CreatedBy] = @Original_CreatedBy) AND ([CreatedOn] = @Original_Cr" +
                "eatedOn) AND ((@IsNull_ModifiedBy = 1 AND [ModifiedBy] IS NULL) OR ([ModifiedBy]" +
                " = @Original_ModifiedBy)) AND ((@IsNull_ModifiedOn = 1 AND [ModifiedOn] IS NULL)" +
                " OR ([ModifiedOn] = @Original_ModifiedOn)) AND ((@IsNull_IsVirtualSetSplit = 1 A" +
                "ND [IsVirtualSetSplit] IS NULL) OR ([IsVirtualSetSplit] = @Original_IsVirtualSet" +
                "Split)) AND ((@IsNull_IsKnitwearComponent = 1 AND [IsKnitwearComponent] IS NULL)" +
                " OR ([IsKnitwearComponent] = @Original_IsKnitwearComponent)) AND ((@IsNull_IsFob" +
                "Order = 1 AND [IsFobOrder] IS NULL) OR ([IsFobOrder] = @Original_IsFobOrder)) AN" +
                "D ((@IsNull_QaCommissionPercent = 1 AND [QaCommissionPercent] IS NULL) OR ([QaCo" +
                "mmissionPercent] = @Original_QaCommissionPercent)) AND ((@IsNull_Colour = 1 AND " +
                "[Colour] IS NULL) OR ([Colour] = @Original_Colour)) AND ((@IsNull_LabTestIncome " +
                "= 1 AND [LabTestIncome] IS NULL) OR ([LabTestIncome] = @Original_LabTestIncome))" +
                ");\r\nSELECT SplitShipmentId, ShipmentId, SplitSuffix, ProductId, PiecesPerPack, P" +
                "ackingUnitId, QtyIncreasePercent, VendorId, FirstApprovedSupplierAtWarehouseDate" +
                ", SupplierAtWarehouseDate, PaymentTermId, QuotaCategoryGroupId, CountryOfOriginI" +
                "d, SellCurrencyId, BuyCurrencyId, POExchangeRate, MockShopSampleRemark, OtherPOT" +
                "ermRemark, ShipDeptRemark, TotalOrderQty, TotalOrderAmt, TotalPOQty, TotalPOAmt," +
                " TotalPONetFOBAmt, TotalShippedQty, TotalShippedAmt, TotalNetFOBAmt, TotalShippe" +
                "dNetFOBAmt, TotalSupplierGmtAmt, TotalShippedSupplierGmtAmt, TotalOPAUpcharge, T" +
                "otalShippedOPAUpcharge, VendorPaymentDiscountPercent, Status, CreatedBy, Created" +
                "On, ModifiedBy, ModifiedOn, IsVirtualSetSplit, IsKnitwearComponent, IsFobOrder, " +
                "QaCommissionPercent, Colour, LabTestIncome FROM SplitShipment WHERE (SplitShipme" +
                "ntId = @SplitShipmentId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SplitShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SplitSuffix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitSuffix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PiecesPerPack", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiecesPerPack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QtyIncreasePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 2, 0, "QtyIncreasePercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstApprovedSupplierAtWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstApprovedSupplierAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierAtWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierAtWarehouseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QuotaCategoryGroupId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotaCategoryGroupId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BuyCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "POExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MockShopSampleRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MockShopSampleRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherPOTermRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherPOTermRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipDeptRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDeptRemark", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalOrderQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalOrderQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalOrderAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalOrderAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPOQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPOQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPOAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalPOAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPONetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalPONetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalNetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalOPAUpcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalOPAUpcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedOPAUpcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedOPAUpcharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsVirtualSetSplit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsVirtualSetSplit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsKnitwearComponent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKnitwearComponent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsFobOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFobOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QaCommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "QaCommissionPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Colour", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SplitShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SplitSuffix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitSuffix", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PiecesPerPack", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiecesPerPack", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QtyIncreasePercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 2, 0, "QtyIncreasePercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FirstApprovedSupplierAtWarehouseDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstApprovedSupplierAtWarehouseDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstApprovedSupplierAtWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstApprovedSupplierAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierAtWarehouseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierAtWarehouseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QuotaCategoryGroupId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotaCategoryGroupId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QuotaCategoryGroupId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QuotaCategoryGroupId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BuyCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BuyCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POExchangeRate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POExchangeRate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 10, "POExchangeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MockShopSampleRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MockShopSampleRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MockShopSampleRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MockShopSampleRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherPOTermRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherPOTermRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherPOTermRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherPOTermRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShipDeptRemark", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDeptRemark", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipDeptRemark", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipDeptRemark", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalOrderQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalOrderQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalOrderAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalOrderAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPOQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPOQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPOAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalPOAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalPONetFOBAmt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPONetFOBAmt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPONetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalPONetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalNetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalOPAUpcharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalOPAUpcharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalOPAUpcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalOPAUpcharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalShippedOPAUpcharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedOPAUpcharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedOPAUpcharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedOPAUpcharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ModifiedOn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsVirtualSetSplit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsVirtualSetSplit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsVirtualSetSplit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsVirtualSetSplit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsKnitwearComponent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKnitwearComponent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsKnitwearComponent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsKnitwearComponent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsFobOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFobOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsFobOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsFobOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_QaCommissionPercent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QaCommissionPercent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QaCommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "QaCommissionPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Colour", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Colour", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Colour", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LabTestIncome", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LabTestIncome", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.next.isam.dataserver.Properties.Settings.Default.NSSConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SplitShipmentId, ShipmentId, SplitSuffix, ProductId, PiecesPerPack, PackingUnitId, QtyIncreasePercent, VendorId, FirstApprovedSupplierAtWarehouseDate, SupplierAtWarehouseDate, PaymentTermId, QuotaCategoryGroupId, CountryOfOriginId, SellCurrencyId, BuyCurrencyId, POExchangeRate, MockShopSampleRemark, OtherPOTermRemark, ShipDeptRemark, TotalOrderQty, TotalOrderAmt, TotalPOQty, TotalPOAmt, TotalPONetFOBAmt, TotalShippedQty, TotalShippedAmt, TotalNetFOBAmt, TotalShippedNetFOBAmt, TotalSupplierGmtAmt, TotalShippedSupplierGmtAmt, TotalOPAUpcharge, TotalShippedOPAUpcharge, VendorPaymentDiscountPercent, Status, CreatedBy, CreatedOn, ModifiedBy, ModifiedOn, IsVirtualSetSplit, IsKnitwearComponent, IsFobOrder, QaCommissionPercent, Colour, LabTestIncome FROM dbo.SplitShipment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(NssSplitShipmentDs.SplitShipmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual NssSplitShipmentDs.SplitShipmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            NssSplitShipmentDs.SplitShipmentDataTable dataTable = new NssSplitShipmentDs.SplitShipmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NssSplitShipmentDs.SplitShipmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(NssSplitShipmentDs dataSet) {
            return this.Adapter.Update(dataSet, "SplitShipment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_SplitShipmentId, 
                    int Original_ShipmentId, 
                    string Original_SplitSuffix, 
                    int Original_ProductId, 
                    int Original_PiecesPerPack, 
                    int Original_PackingUnitId, 
                    decimal Original_QtyIncreasePercent, 
                    global::System.Nullable<int> Original_VendorId, 
                    global::System.Nullable<global::System.DateTime> Original_FirstApprovedSupplierAtWarehouseDate, 
                    System.DateTime Original_SupplierAtWarehouseDate, 
                    global::System.Nullable<int> Original_PaymentTermId, 
                    global::System.Nullable<int> Original_QuotaCategoryGroupId, 
                    global::System.Nullable<int> Original_CountryOfOriginId, 
                    int Original_SellCurrencyId, 
                    int Original_BuyCurrencyId, 
                    global::System.Nullable<decimal> Original_POExchangeRate, 
                    string Original_MockShopSampleRemark, 
                    string Original_OtherPOTermRemark, 
                    string Original_ShipDeptRemark, 
                    int Original_TotalOrderQty, 
                    decimal Original_TotalOrderAmt, 
                    int Original_TotalPOQty, 
                    decimal Original_TotalPOAmt, 
                    global::System.Nullable<decimal> Original_TotalPONetFOBAmt, 
                    int Original_TotalShippedQty, 
                    decimal Original_TotalShippedAmt, 
                    decimal Original_TotalNetFOBAmt, 
                    decimal Original_TotalShippedNetFOBAmt, 
                    decimal Original_TotalSupplierGmtAmt, 
                    decimal Original_TotalShippedSupplierGmtAmt, 
                    global::System.Nullable<decimal> Original_TotalOPAUpcharge, 
                    global::System.Nullable<decimal> Original_TotalShippedOPAUpcharge, 
                    global::System.Nullable<decimal> Original_VendorPaymentDiscountPercent, 
                    int Original_Status, 
                    int Original_CreatedBy, 
                    System.DateTime Original_CreatedOn, 
                    global::System.Nullable<int> Original_ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ModifiedOn, 
                    global::System.Nullable<int> Original_IsVirtualSetSplit, 
                    global::System.Nullable<int> Original_IsKnitwearComponent, 
                    global::System.Nullable<int> Original_IsFobOrder, 
                    global::System.Nullable<decimal> Original_QaCommissionPercent, 
                    string Original_Colour, 
                    global::System.Nullable<decimal> Original_LabTestIncome) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SplitShipmentId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ShipmentId));
            if ((Original_SplitSuffix == null)) {
                throw new global::System.ArgumentNullException("Original_SplitSuffix");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SplitSuffix));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ProductId));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_PiecesPerPack));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_PackingUnitId));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_QtyIncreasePercent));
            if ((Original_VendorId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_VendorId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstApprovedSupplierAtWarehouseDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_FirstApprovedSupplierAtWarehouseDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_SupplierAtWarehouseDate));
            if ((Original_PaymentTermId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_PaymentTermId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_QuotaCategoryGroupId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_QuotaCategoryGroupId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_CountryOfOriginId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_CountryOfOriginId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_SellCurrencyId));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_BuyCurrencyId));
            if ((Original_POExchangeRate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_POExchangeRate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_MockShopSampleRemark == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_MockShopSampleRemark));
            }
            if ((Original_OtherPOTermRemark == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_OtherPOTermRemark));
            }
            if ((Original_ShipDeptRemark == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_ShipDeptRemark));
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_TotalOrderQty));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_TotalOrderAmt));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_TotalPOQty));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_TotalPOAmt));
            if ((Original_TotalPONetFOBAmt.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((decimal)(Original_TotalPONetFOBAmt.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_TotalShippedQty));
            this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_TotalShippedAmt));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_TotalNetFOBAmt));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_TotalShippedNetFOBAmt));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_TotalSupplierGmtAmt));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_TotalShippedSupplierGmtAmt));
            if ((Original_TotalOPAUpcharge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_TotalOPAUpcharge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalShippedOPAUpcharge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((decimal)(Original_TotalShippedOPAUpcharge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_VendorPaymentDiscountPercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((decimal)(Original_VendorPaymentDiscountPercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[46].Value = ((int)(Original_Status));
            this.Adapter.DeleteCommand.Parameters[47].Value = ((int)(Original_CreatedBy));
            this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_CreatedOn));
            if ((Original_ModifiedBy.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((int)(Original_ModifiedBy.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedOn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((System.DateTime)(Original_ModifiedOn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_IsVirtualSetSplit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_IsVirtualSetSplit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_IsKnitwearComponent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_IsKnitwearComponent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_IsFobOrder.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_IsFobOrder.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_QaCommissionPercent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_QaCommissionPercent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Colour == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_Colour));
            }
            if ((Original_LabTestIncome.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((decimal)(Original_LabTestIncome.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int SplitShipmentId, 
                    int ShipmentId, 
                    string SplitSuffix, 
                    int ProductId, 
                    int PiecesPerPack, 
                    int PackingUnitId, 
                    decimal QtyIncreasePercent, 
                    global::System.Nullable<int> VendorId, 
                    global::System.Nullable<global::System.DateTime> FirstApprovedSupplierAtWarehouseDate, 
                    System.DateTime SupplierAtWarehouseDate, 
                    global::System.Nullable<int> PaymentTermId, 
                    global::System.Nullable<int> QuotaCategoryGroupId, 
                    global::System.Nullable<int> CountryOfOriginId, 
                    int SellCurrencyId, 
                    int BuyCurrencyId, 
                    global::System.Nullable<decimal> POExchangeRate, 
                    string MockShopSampleRemark, 
                    string OtherPOTermRemark, 
                    string ShipDeptRemark, 
                    int TotalOrderQty, 
                    decimal TotalOrderAmt, 
                    int TotalPOQty, 
                    decimal TotalPOAmt, 
                    global::System.Nullable<decimal> TotalPONetFOBAmt, 
                    int TotalShippedQty, 
                    decimal TotalShippedAmt, 
                    decimal TotalNetFOBAmt, 
                    decimal TotalShippedNetFOBAmt, 
                    decimal TotalSupplierGmtAmt, 
                    decimal TotalShippedSupplierGmtAmt, 
                    global::System.Nullable<decimal> TotalOPAUpcharge, 
                    global::System.Nullable<decimal> TotalShippedOPAUpcharge, 
                    global::System.Nullable<decimal> VendorPaymentDiscountPercent, 
                    int Status, 
                    int CreatedBy, 
                    System.DateTime CreatedOn, 
                    global::System.Nullable<int> ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifiedOn, 
                    global::System.Nullable<int> IsVirtualSetSplit, 
                    global::System.Nullable<int> IsKnitwearComponent, 
                    global::System.Nullable<int> IsFobOrder, 
                    global::System.Nullable<decimal> QaCommissionPercent, 
                    string Colour, 
                    global::System.Nullable<decimal> LabTestIncome) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SplitShipmentId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ShipmentId));
            if ((SplitSuffix == null)) {
                throw new global::System.ArgumentNullException("SplitSuffix");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SplitSuffix));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ProductId));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(PiecesPerPack));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(PackingUnitId));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(QtyIncreasePercent));
            if ((VendorId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(VendorId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((FirstApprovedSupplierAtWarehouseDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(FirstApprovedSupplierAtWarehouseDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(SupplierAtWarehouseDate));
            if ((PaymentTermId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(PaymentTermId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((QuotaCategoryGroupId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(QuotaCategoryGroupId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CountryOfOriginId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(CountryOfOriginId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(SellCurrencyId));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(BuyCurrencyId));
            if ((POExchangeRate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(POExchangeRate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MockShopSampleRemark == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(MockShopSampleRemark));
            }
            if ((OtherPOTermRemark == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(OtherPOTermRemark));
            }
            if ((ShipDeptRemark == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ShipDeptRemark));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(TotalOrderQty));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(TotalOrderAmt));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(TotalPOQty));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(TotalPOAmt));
            if ((TotalPONetFOBAmt.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(TotalPONetFOBAmt.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(TotalShippedQty));
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(TotalShippedAmt));
            this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(TotalNetFOBAmt));
            this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(TotalShippedNetFOBAmt));
            this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(TotalSupplierGmtAmt));
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(TotalShippedSupplierGmtAmt));
            if ((TotalOPAUpcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(TotalOPAUpcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((TotalShippedOPAUpcharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(TotalShippedOPAUpcharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((VendorPaymentDiscountPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(VendorPaymentDiscountPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[33].Value = ((int)(Status));
            this.Adapter.InsertCommand.Parameters[34].Value = ((int)(CreatedBy));
            this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(CreatedOn));
            if ((ModifiedBy.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(ModifiedBy.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ModifiedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(ModifiedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((IsVirtualSetSplit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(IsVirtualSetSplit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((IsKnitwearComponent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((int)(IsKnitwearComponent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((IsFobOrder.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(IsFobOrder.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((QaCommissionPercent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(QaCommissionPercent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Colour == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(Colour));
            }
            if ((LabTestIncome.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(LabTestIncome.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SplitShipmentId, 
                    int ShipmentId, 
                    string SplitSuffix, 
                    int ProductId, 
                    int PiecesPerPack, 
                    int PackingUnitId, 
                    decimal QtyIncreasePercent, 
                    global::System.Nullable<int> VendorId, 
                    global::System.Nullable<global::System.DateTime> FirstApprovedSupplierAtWarehouseDate, 
                    System.DateTime SupplierAtWarehouseDate, 
                    global::System.Nullable<int> PaymentTermId, 
                    global::System.Nullable<int> QuotaCategoryGroupId, 
                    global::System.Nullable<int> CountryOfOriginId, 
                    int SellCurrencyId, 
                    int BuyCurrencyId, 
                    global::System.Nullable<decimal> POExchangeRate, 
                    string MockShopSampleRemark, 
                    string OtherPOTermRemark, 
                    string ShipDeptRemark, 
                    int TotalOrderQty, 
                    decimal TotalOrderAmt, 
                    int TotalPOQty, 
                    decimal TotalPOAmt, 
                    global::System.Nullable<decimal> TotalPONetFOBAmt, 
                    int TotalShippedQty, 
                    decimal TotalShippedAmt, 
                    decimal TotalNetFOBAmt, 
                    decimal TotalShippedNetFOBAmt, 
                    decimal TotalSupplierGmtAmt, 
                    decimal TotalShippedSupplierGmtAmt, 
                    global::System.Nullable<decimal> TotalOPAUpcharge, 
                    global::System.Nullable<decimal> TotalShippedOPAUpcharge, 
                    global::System.Nullable<decimal> VendorPaymentDiscountPercent, 
                    int Status, 
                    int CreatedBy, 
                    System.DateTime CreatedOn, 
                    global::System.Nullable<int> ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifiedOn, 
                    global::System.Nullable<int> IsVirtualSetSplit, 
                    global::System.Nullable<int> IsKnitwearComponent, 
                    global::System.Nullable<int> IsFobOrder, 
                    global::System.Nullable<decimal> QaCommissionPercent, 
                    string Colour, 
                    global::System.Nullable<decimal> LabTestIncome, 
                    int Original_SplitShipmentId, 
                    int Original_ShipmentId, 
                    string Original_SplitSuffix, 
                    int Original_ProductId, 
                    int Original_PiecesPerPack, 
                    int Original_PackingUnitId, 
                    decimal Original_QtyIncreasePercent, 
                    global::System.Nullable<int> Original_VendorId, 
                    global::System.Nullable<global::System.DateTime> Original_FirstApprovedSupplierAtWarehouseDate, 
                    System.DateTime Original_SupplierAtWarehouseDate, 
                    global::System.Nullable<int> Original_PaymentTermId, 
                    global::System.Nullable<int> Original_QuotaCategoryGroupId, 
                    global::System.Nullable<int> Original_CountryOfOriginId, 
                    int Original_SellCurrencyId, 
                    int Original_BuyCurrencyId, 
                    global::System.Nullable<decimal> Original_POExchangeRate, 
                    string Original_MockShopSampleRemark, 
                    string Original_OtherPOTermRemark, 
                    string Original_ShipDeptRemark, 
                    int Original_TotalOrderQty, 
                    decimal Original_TotalOrderAmt, 
                    int Original_TotalPOQty, 
                    decimal Original_TotalPOAmt, 
                    global::System.Nullable<decimal> Original_TotalPONetFOBAmt, 
                    int Original_TotalShippedQty, 
                    decimal Original_TotalShippedAmt, 
                    decimal Original_TotalNetFOBAmt, 
                    decimal Original_TotalShippedNetFOBAmt, 
                    decimal Original_TotalSupplierGmtAmt, 
                    decimal Original_TotalShippedSupplierGmtAmt, 
                    global::System.Nullable<decimal> Original_TotalOPAUpcharge, 
                    global::System.Nullable<decimal> Original_TotalShippedOPAUpcharge, 
                    global::System.Nullable<decimal> Original_VendorPaymentDiscountPercent, 
                    int Original_Status, 
                    int Original_CreatedBy, 
                    System.DateTime Original_CreatedOn, 
                    global::System.Nullable<int> Original_ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ModifiedOn, 
                    global::System.Nullable<int> Original_IsVirtualSetSplit, 
                    global::System.Nullable<int> Original_IsKnitwearComponent, 
                    global::System.Nullable<int> Original_IsFobOrder, 
                    global::System.Nullable<decimal> Original_QaCommissionPercent, 
                    string Original_Colour, 
                    global::System.Nullable<decimal> Original_LabTestIncome) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SplitShipmentId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ShipmentId));
            if ((SplitSuffix == null)) {
                throw new global::System.ArgumentNullException("SplitSuffix");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SplitSuffix));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ProductId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(PiecesPerPack));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(PackingUnitId));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(QtyIncreasePercent));
            if ((VendorId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(VendorId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((FirstApprovedSupplierAtWarehouseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(FirstApprovedSupplierAtWarehouseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(SupplierAtWarehouseDate));
            if ((PaymentTermId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(PaymentTermId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((QuotaCategoryGroupId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(QuotaCategoryGroupId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((CountryOfOriginId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(CountryOfOriginId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(SellCurrencyId));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(BuyCurrencyId));
            if ((POExchangeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(POExchangeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MockShopSampleRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(MockShopSampleRemark));
            }
            if ((OtherPOTermRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(OtherPOTermRemark));
            }
            if ((ShipDeptRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ShipDeptRemark));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(TotalOrderQty));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(TotalOrderAmt));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(TotalPOQty));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(TotalPOAmt));
            if ((TotalPONetFOBAmt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(TotalPONetFOBAmt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(TotalShippedQty));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(TotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(TotalNetFOBAmt));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(TotalShippedNetFOBAmt));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(TotalSupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(TotalShippedSupplierGmtAmt));
            if ((TotalOPAUpcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(TotalOPAUpcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((TotalShippedOPAUpcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(TotalShippedOPAUpcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((VendorPaymentDiscountPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(VendorPaymentDiscountPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Status));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(CreatedBy));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(CreatedOn));
            if ((ModifiedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(ModifiedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ModifiedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(ModifiedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((IsVirtualSetSplit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(IsVirtualSetSplit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((IsKnitwearComponent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(IsKnitwearComponent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((IsFobOrder.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(IsFobOrder.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((QaCommissionPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(QaCommissionPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Colour == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Colour));
            }
            if ((LabTestIncome.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(LabTestIncome.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_SplitShipmentId));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_ShipmentId));
            if ((Original_SplitSuffix == null)) {
                throw new global::System.ArgumentNullException("Original_SplitSuffix");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_SplitSuffix));
            }
            this.Adapter.UpdateCommand.Parameters[47].Value = ((int)(Original_ProductId));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Original_PiecesPerPack));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Original_PackingUnitId));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(Original_QtyIncreasePercent));
            if ((Original_VendorId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Original_VendorId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_FirstApprovedSupplierAtWarehouseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((System.DateTime)(Original_FirstApprovedSupplierAtWarehouseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(Original_SupplierAtWarehouseDate));
            if ((Original_PaymentTermId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(Original_PaymentTermId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_QuotaCategoryGroupId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(Original_QuotaCategoryGroupId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_CountryOfOriginId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(Original_CountryOfOriginId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(Original_SellCurrencyId));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(Original_BuyCurrencyId));
            if ((Original_POExchangeRate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(Original_POExchangeRate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_MockShopSampleRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_MockShopSampleRemark));
            }
            if ((Original_OtherPOTermRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_OtherPOTermRemark));
            }
            if ((Original_ShipDeptRemark == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(Original_ShipDeptRemark));
            }
            this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_TotalOrderQty));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(Original_TotalOrderAmt));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_TotalPOQty));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_TotalPOAmt));
            if ((Original_TotalPONetFOBAmt.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_TotalPONetFOBAmt.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[78].Value = ((int)(Original_TotalShippedQty));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(Original_TotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(Original_TotalNetFOBAmt));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((decimal)(Original_TotalShippedNetFOBAmt));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(Original_TotalSupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(Original_TotalShippedSupplierGmtAmt));
            if ((Original_TotalOPAUpcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(Original_TotalOPAUpcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalShippedOPAUpcharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(Original_TotalShippedOPAUpcharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_VendorPaymentDiscountPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(Original_VendorPaymentDiscountPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Original_Status));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_CreatedBy));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((System.DateTime)(Original_CreatedOn));
            if ((Original_ModifiedBy.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(Original_ModifiedBy.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_ModifiedOn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((System.DateTime)(Original_ModifiedOn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_IsVirtualSetSplit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((int)(Original_IsVirtualSetSplit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_IsKnitwearComponent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((int)(Original_IsKnitwearComponent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_IsFobOrder.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((int)(Original_IsFobOrder.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_QaCommissionPercent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((decimal)(Original_QaCommissionPercent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_Colour == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_Colour));
            }
            if ((Original_LabTestIncome.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((decimal)(Original_LabTestIncome.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int ShipmentId, 
                    string SplitSuffix, 
                    int ProductId, 
                    int PiecesPerPack, 
                    int PackingUnitId, 
                    decimal QtyIncreasePercent, 
                    global::System.Nullable<int> VendorId, 
                    global::System.Nullable<global::System.DateTime> FirstApprovedSupplierAtWarehouseDate, 
                    System.DateTime SupplierAtWarehouseDate, 
                    global::System.Nullable<int> PaymentTermId, 
                    global::System.Nullable<int> QuotaCategoryGroupId, 
                    global::System.Nullable<int> CountryOfOriginId, 
                    int SellCurrencyId, 
                    int BuyCurrencyId, 
                    global::System.Nullable<decimal> POExchangeRate, 
                    string MockShopSampleRemark, 
                    string OtherPOTermRemark, 
                    string ShipDeptRemark, 
                    int TotalOrderQty, 
                    decimal TotalOrderAmt, 
                    int TotalPOQty, 
                    decimal TotalPOAmt, 
                    global::System.Nullable<decimal> TotalPONetFOBAmt, 
                    int TotalShippedQty, 
                    decimal TotalShippedAmt, 
                    decimal TotalNetFOBAmt, 
                    decimal TotalShippedNetFOBAmt, 
                    decimal TotalSupplierGmtAmt, 
                    decimal TotalShippedSupplierGmtAmt, 
                    global::System.Nullable<decimal> TotalOPAUpcharge, 
                    global::System.Nullable<decimal> TotalShippedOPAUpcharge, 
                    global::System.Nullable<decimal> VendorPaymentDiscountPercent, 
                    int Status, 
                    int CreatedBy, 
                    System.DateTime CreatedOn, 
                    global::System.Nullable<int> ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> ModifiedOn, 
                    global::System.Nullable<int> IsVirtualSetSplit, 
                    global::System.Nullable<int> IsKnitwearComponent, 
                    global::System.Nullable<int> IsFobOrder, 
                    global::System.Nullable<decimal> QaCommissionPercent, 
                    string Colour, 
                    global::System.Nullable<decimal> LabTestIncome, 
                    int Original_SplitShipmentId, 
                    int Original_ShipmentId, 
                    string Original_SplitSuffix, 
                    int Original_ProductId, 
                    int Original_PiecesPerPack, 
                    int Original_PackingUnitId, 
                    decimal Original_QtyIncreasePercent, 
                    global::System.Nullable<int> Original_VendorId, 
                    global::System.Nullable<global::System.DateTime> Original_FirstApprovedSupplierAtWarehouseDate, 
                    System.DateTime Original_SupplierAtWarehouseDate, 
                    global::System.Nullable<int> Original_PaymentTermId, 
                    global::System.Nullable<int> Original_QuotaCategoryGroupId, 
                    global::System.Nullable<int> Original_CountryOfOriginId, 
                    int Original_SellCurrencyId, 
                    int Original_BuyCurrencyId, 
                    global::System.Nullable<decimal> Original_POExchangeRate, 
                    string Original_MockShopSampleRemark, 
                    string Original_OtherPOTermRemark, 
                    string Original_ShipDeptRemark, 
                    int Original_TotalOrderQty, 
                    decimal Original_TotalOrderAmt, 
                    int Original_TotalPOQty, 
                    decimal Original_TotalPOAmt, 
                    global::System.Nullable<decimal> Original_TotalPONetFOBAmt, 
                    int Original_TotalShippedQty, 
                    decimal Original_TotalShippedAmt, 
                    decimal Original_TotalNetFOBAmt, 
                    decimal Original_TotalShippedNetFOBAmt, 
                    decimal Original_TotalSupplierGmtAmt, 
                    decimal Original_TotalShippedSupplierGmtAmt, 
                    global::System.Nullable<decimal> Original_TotalOPAUpcharge, 
                    global::System.Nullable<decimal> Original_TotalShippedOPAUpcharge, 
                    global::System.Nullable<decimal> Original_VendorPaymentDiscountPercent, 
                    int Original_Status, 
                    int Original_CreatedBy, 
                    System.DateTime Original_CreatedOn, 
                    global::System.Nullable<int> Original_ModifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_ModifiedOn, 
                    global::System.Nullable<int> Original_IsVirtualSetSplit, 
                    global::System.Nullable<int> Original_IsKnitwearComponent, 
                    global::System.Nullable<int> Original_IsFobOrder, 
                    global::System.Nullable<decimal> Original_QaCommissionPercent, 
                    string Original_Colour, 
                    global::System.Nullable<decimal> Original_LabTestIncome) {
            return this.Update(Original_SplitShipmentId, ShipmentId, SplitSuffix, ProductId, PiecesPerPack, PackingUnitId, QtyIncreasePercent, VendorId, FirstApprovedSupplierAtWarehouseDate, SupplierAtWarehouseDate, PaymentTermId, QuotaCategoryGroupId, CountryOfOriginId, SellCurrencyId, BuyCurrencyId, POExchangeRate, MockShopSampleRemark, OtherPOTermRemark, ShipDeptRemark, TotalOrderQty, TotalOrderAmt, TotalPOQty, TotalPOAmt, TotalPONetFOBAmt, TotalShippedQty, TotalShippedAmt, TotalNetFOBAmt, TotalShippedNetFOBAmt, TotalSupplierGmtAmt, TotalShippedSupplierGmtAmt, TotalOPAUpcharge, TotalShippedOPAUpcharge, VendorPaymentDiscountPercent, Status, CreatedBy, CreatedOn, ModifiedBy, ModifiedOn, IsVirtualSetSplit, IsKnitwearComponent, IsFobOrder, QaCommissionPercent, Colour, LabTestIncome, Original_SplitShipmentId, Original_ShipmentId, Original_SplitSuffix, Original_ProductId, Original_PiecesPerPack, Original_PackingUnitId, Original_QtyIncreasePercent, Original_VendorId, Original_FirstApprovedSupplierAtWarehouseDate, Original_SupplierAtWarehouseDate, Original_PaymentTermId, Original_QuotaCategoryGroupId, Original_CountryOfOriginId, Original_SellCurrencyId, Original_BuyCurrencyId, Original_POExchangeRate, Original_MockShopSampleRemark, Original_OtherPOTermRemark, Original_ShipDeptRemark, Original_TotalOrderQty, Original_TotalOrderAmt, Original_TotalPOQty, Original_TotalPOAmt, Original_TotalPONetFOBAmt, Original_TotalShippedQty, Original_TotalShippedAmt, Original_TotalNetFOBAmt, Original_TotalShippedNetFOBAmt, Original_TotalSupplierGmtAmt, Original_TotalShippedSupplierGmtAmt, Original_TotalOPAUpcharge, Original_TotalShippedOPAUpcharge, Original_VendorPaymentDiscountPercent, Original_Status, Original_CreatedBy, Original_CreatedOn, Original_ModifiedBy, Original_ModifiedOn, Original_IsVirtualSetSplit, Original_IsKnitwearComponent, Original_IsFobOrder, Original_QaCommissionPercent, Original_Colour, Original_LabTestIncome);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SplitShipmentTableAdapter _splitShipmentTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SplitShipmentTableAdapter SplitShipmentTableAdapter {
            get {
                return this._splitShipmentTableAdapter;
            }
            set {
                this._splitShipmentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._splitShipmentTableAdapter != null) 
                            && (this._splitShipmentTableAdapter.Connection != null))) {
                    return this._splitShipmentTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._splitShipmentTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(NssSplitShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._splitShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SplitShipment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._splitShipmentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(NssSplitShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._splitShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SplitShipment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._splitShipmentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(NssSplitShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._splitShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SplitShipment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._splitShipmentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(NssSplitShipmentDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._splitShipmentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._splitShipmentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._splitShipmentTableAdapter != null)) {
                    revertConnections.Add(this._splitShipmentTableAdapter, this._splitShipmentTableAdapter.Connection);
                    this._splitShipmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._splitShipmentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._splitShipmentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._splitShipmentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._splitShipmentTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._splitShipmentTableAdapter != null)) {
                    this._splitShipmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._splitShipmentTableAdapter]));
                    this._splitShipmentTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591