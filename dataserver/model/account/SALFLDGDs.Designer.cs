//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.dataserver.model.account {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SALFLDGDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SALFLDGDs : global::System.Data.DataSet {
        
        private SALFLDGDataTable tableSALFLDG;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SALFLDGDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SALFLDGDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SALFLDG"] != null)) {
                    base.Tables.Add(new SALFLDGDataTable(ds.Tables["SALFLDG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALFLDGDataTable SALFLDG {
            get {
                return this.tableSALFLDG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SALFLDGDs cln = ((SALFLDGDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SALFLDG"] != null)) {
                    base.Tables.Add(new SALFLDGDataTable(ds.Tables["SALFLDG"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSALFLDG = ((SALFLDGDataTable)(base.Tables["SALFLDG"]));
            if ((initTable == true)) {
                if ((this.tableSALFLDG != null)) {
                    this.tableSALFLDG.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SALFLDGDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SALFLDGDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSALFLDG = new SALFLDGDataTable();
            base.Tables.Add(this.tableSALFLDG);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSALFLDG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SALFLDGDs ds = new SALFLDGDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SALFLDGRowChangeEventHandler(object sender, SALFLDGRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALFLDGDataTable : global::System.Data.TypedTableBase<SALFLDGRow> {
            
            private global::System.Data.DataColumn columnACCNT_CODE;
            
            private global::System.Data.DataColumn columnPERIOD;
            
            private global::System.Data.DataColumn columnTRANS_DATE;
            
            private global::System.Data.DataColumn columnJRNAL_NO;
            
            private global::System.Data.DataColumn columnJRNAL_LINE;
            
            private global::System.Data.DataColumn columnAMOUNT;
            
            private global::System.Data.DataColumn columnD_C;
            
            private global::System.Data.DataColumn columnALLOCATION;
            
            private global::System.Data.DataColumn columnJRNAL_TYPE;
            
            private global::System.Data.DataColumn columnJRNAL_SRCE;
            
            private global::System.Data.DataColumn columnTREFERENCE;
            
            private global::System.Data.DataColumn columnDESCRIPTN;
            
            private global::System.Data.DataColumn columnENTRY_DATE;
            
            private global::System.Data.DataColumn columnENTRY_PRD;
            
            private global::System.Data.DataColumn columnDUE_DATE;
            
            private global::System.Data.DataColumn columnALLOC_REF;
            
            private global::System.Data.DataColumn columnALLOC_DATE;
            
            private global::System.Data.DataColumn columnALLOC_PERIOD;
            
            private global::System.Data.DataColumn columnASSET_IND;
            
            private global::System.Data.DataColumn columnASSET_CODE;
            
            private global::System.Data.DataColumn columnASSET_SUB;
            
            private global::System.Data.DataColumn columnCONV_CODE;
            
            private global::System.Data.DataColumn columnCONV_RATE;
            
            private global::System.Data.DataColumn columnOTHER_AMT;
            
            private global::System.Data.DataColumn columnOTHER_DP;
            
            private global::System.Data.DataColumn columnCLEARDOWN;
            
            private global::System.Data.DataColumn columnREVERSAL;
            
            private global::System.Data.DataColumn columnLOSS_GAIN;
            
            private global::System.Data.DataColumn columnROUGH_FLAG;
            
            private global::System.Data.DataColumn columnIN_USE_FLAG;
            
            private global::System.Data.DataColumn columnANAL_T0;
            
            private global::System.Data.DataColumn columnANAL_T1;
            
            private global::System.Data.DataColumn columnANAL_T2;
            
            private global::System.Data.DataColumn columnANAL_T3;
            
            private global::System.Data.DataColumn columnANAL_T4;
            
            private global::System.Data.DataColumn columnANAL_T5;
            
            private global::System.Data.DataColumn columnANAL_T6;
            
            private global::System.Data.DataColumn columnANAL_T7;
            
            private global::System.Data.DataColumn columnANAL_T8;
            
            private global::System.Data.DataColumn columnANAL_T9;
            
            private global::System.Data.DataColumn columnPOSTING_DATE;
            
            private global::System.Data.DataColumn columnALLOC_IN_PROGRESS;
            
            private global::System.Data.DataColumn columnHOLD_REF;
            
            private global::System.Data.DataColumn columnHOLD_OP_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALFLDGDataTable() {
                this.TableName = "SALFLDG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SALFLDGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SALFLDGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCNT_CODEColumn {
                get {
                    return this.columnACCNT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PERIODColumn {
                get {
                    return this.columnPERIOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRANS_DATEColumn {
                get {
                    return this.columnTRANS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JRNAL_NOColumn {
                get {
                    return this.columnJRNAL_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JRNAL_LINEColumn {
                get {
                    return this.columnJRNAL_LINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AMOUNTColumn {
                get {
                    return this.columnAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D_CColumn {
                get {
                    return this.columnD_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALLOCATIONColumn {
                get {
                    return this.columnALLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JRNAL_TYPEColumn {
                get {
                    return this.columnJRNAL_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JRNAL_SRCEColumn {
                get {
                    return this.columnJRNAL_SRCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TREFERENCEColumn {
                get {
                    return this.columnTREFERENCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRIPTNColumn {
                get {
                    return this.columnDESCRIPTN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRY_DATEColumn {
                get {
                    return this.columnENTRY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ENTRY_PRDColumn {
                get {
                    return this.columnENTRY_PRD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DUE_DATEColumn {
                get {
                    return this.columnDUE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALLOC_REFColumn {
                get {
                    return this.columnALLOC_REF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALLOC_DATEColumn {
                get {
                    return this.columnALLOC_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALLOC_PERIODColumn {
                get {
                    return this.columnALLOC_PERIOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASSET_INDColumn {
                get {
                    return this.columnASSET_IND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASSET_CODEColumn {
                get {
                    return this.columnASSET_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ASSET_SUBColumn {
                get {
                    return this.columnASSET_SUB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONV_CODEColumn {
                get {
                    return this.columnCONV_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONV_RATEColumn {
                get {
                    return this.columnCONV_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTHER_AMTColumn {
                get {
                    return this.columnOTHER_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTHER_DPColumn {
                get {
                    return this.columnOTHER_DP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLEARDOWNColumn {
                get {
                    return this.columnCLEARDOWN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REVERSALColumn {
                get {
                    return this.columnREVERSAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOSS_GAINColumn {
                get {
                    return this.columnLOSS_GAIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROUGH_FLAGColumn {
                get {
                    return this.columnROUGH_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IN_USE_FLAGColumn {
                get {
                    return this.columnIN_USE_FLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T0Column {
                get {
                    return this.columnANAL_T0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T1Column {
                get {
                    return this.columnANAL_T1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T2Column {
                get {
                    return this.columnANAL_T2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T3Column {
                get {
                    return this.columnANAL_T3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T4Column {
                get {
                    return this.columnANAL_T4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T5Column {
                get {
                    return this.columnANAL_T5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T6Column {
                get {
                    return this.columnANAL_T6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T7Column {
                get {
                    return this.columnANAL_T7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T8Column {
                get {
                    return this.columnANAL_T8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANAL_T9Column {
                get {
                    return this.columnANAL_T9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POSTING_DATEColumn {
                get {
                    return this.columnPOSTING_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALLOC_IN_PROGRESSColumn {
                get {
                    return this.columnALLOC_IN_PROGRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HOLD_REFColumn {
                get {
                    return this.columnHOLD_REF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HOLD_OP_IDColumn {
                get {
                    return this.columnHOLD_OP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALFLDGRow this[int index] {
                get {
                    return ((SALFLDGRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALFLDGRowChangeEventHandler SALFLDGRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALFLDGRowChangeEventHandler SALFLDGRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALFLDGRowChangeEventHandler SALFLDGRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALFLDGRowChangeEventHandler SALFLDGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSALFLDGRow(SALFLDGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALFLDGRow AddSALFLDGRow(
                        string ACCNT_CODE, 
                        int PERIOD, 
                        int TRANS_DATE, 
                        int JRNAL_NO, 
                        int JRNAL_LINE, 
                        decimal AMOUNT, 
                        string D_C, 
                        string ALLOCATION, 
                        string JRNAL_TYPE, 
                        string JRNAL_SRCE, 
                        string TREFERENCE, 
                        string DESCRIPTN, 
                        int ENTRY_DATE, 
                        int ENTRY_PRD, 
                        int DUE_DATE, 
                        int ALLOC_REF, 
                        int ALLOC_DATE, 
                        int ALLOC_PERIOD, 
                        string ASSET_IND, 
                        string ASSET_CODE, 
                        string ASSET_SUB, 
                        string CONV_CODE, 
                        decimal CONV_RATE, 
                        decimal OTHER_AMT, 
                        string OTHER_DP, 
                        string CLEARDOWN, 
                        string REVERSAL, 
                        string LOSS_GAIN, 
                        string ROUGH_FLAG, 
                        string IN_USE_FLAG, 
                        string ANAL_T0, 
                        string ANAL_T1, 
                        string ANAL_T2, 
                        string ANAL_T3, 
                        string ANAL_T4, 
                        string ANAL_T5, 
                        string ANAL_T6, 
                        string ANAL_T7, 
                        string ANAL_T8, 
                        string ANAL_T9, 
                        int POSTING_DATE, 
                        string ALLOC_IN_PROGRESS, 
                        int HOLD_REF, 
                        string HOLD_OP_ID) {
                SALFLDGRow rowSALFLDGRow = ((SALFLDGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ACCNT_CODE,
                        PERIOD,
                        TRANS_DATE,
                        JRNAL_NO,
                        JRNAL_LINE,
                        AMOUNT,
                        D_C,
                        ALLOCATION,
                        JRNAL_TYPE,
                        JRNAL_SRCE,
                        TREFERENCE,
                        DESCRIPTN,
                        ENTRY_DATE,
                        ENTRY_PRD,
                        DUE_DATE,
                        ALLOC_REF,
                        ALLOC_DATE,
                        ALLOC_PERIOD,
                        ASSET_IND,
                        ASSET_CODE,
                        ASSET_SUB,
                        CONV_CODE,
                        CONV_RATE,
                        OTHER_AMT,
                        OTHER_DP,
                        CLEARDOWN,
                        REVERSAL,
                        LOSS_GAIN,
                        ROUGH_FLAG,
                        IN_USE_FLAG,
                        ANAL_T0,
                        ANAL_T1,
                        ANAL_T2,
                        ANAL_T3,
                        ANAL_T4,
                        ANAL_T5,
                        ANAL_T6,
                        ANAL_T7,
                        ANAL_T8,
                        ANAL_T9,
                        POSTING_DATE,
                        ALLOC_IN_PROGRESS,
                        HOLD_REF,
                        HOLD_OP_ID};
                rowSALFLDGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALFLDGRow);
                return rowSALFLDGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALFLDGRow FindByACCNT_CODEPERIODTRANS_DATEJRNAL_NOJRNAL_LINE(string ACCNT_CODE, int PERIOD, int TRANS_DATE, int JRNAL_NO, int JRNAL_LINE) {
                return ((SALFLDGRow)(this.Rows.Find(new object[] {
                            ACCNT_CODE,
                            PERIOD,
                            TRANS_DATE,
                            JRNAL_NO,
                            JRNAL_LINE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALFLDGDataTable cln = ((SALFLDGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALFLDGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnACCNT_CODE = base.Columns["ACCNT_CODE"];
                this.columnPERIOD = base.Columns["PERIOD"];
                this.columnTRANS_DATE = base.Columns["TRANS_DATE"];
                this.columnJRNAL_NO = base.Columns["JRNAL_NO"];
                this.columnJRNAL_LINE = base.Columns["JRNAL_LINE"];
                this.columnAMOUNT = base.Columns["AMOUNT"];
                this.columnD_C = base.Columns["D_C"];
                this.columnALLOCATION = base.Columns["ALLOCATION"];
                this.columnJRNAL_TYPE = base.Columns["JRNAL_TYPE"];
                this.columnJRNAL_SRCE = base.Columns["JRNAL_SRCE"];
                this.columnTREFERENCE = base.Columns["TREFERENCE"];
                this.columnDESCRIPTN = base.Columns["DESCRIPTN"];
                this.columnENTRY_DATE = base.Columns["ENTRY_DATE"];
                this.columnENTRY_PRD = base.Columns["ENTRY_PRD"];
                this.columnDUE_DATE = base.Columns["DUE_DATE"];
                this.columnALLOC_REF = base.Columns["ALLOC_REF"];
                this.columnALLOC_DATE = base.Columns["ALLOC_DATE"];
                this.columnALLOC_PERIOD = base.Columns["ALLOC_PERIOD"];
                this.columnASSET_IND = base.Columns["ASSET_IND"];
                this.columnASSET_CODE = base.Columns["ASSET_CODE"];
                this.columnASSET_SUB = base.Columns["ASSET_SUB"];
                this.columnCONV_CODE = base.Columns["CONV_CODE"];
                this.columnCONV_RATE = base.Columns["CONV_RATE"];
                this.columnOTHER_AMT = base.Columns["OTHER_AMT"];
                this.columnOTHER_DP = base.Columns["OTHER_DP"];
                this.columnCLEARDOWN = base.Columns["CLEARDOWN"];
                this.columnREVERSAL = base.Columns["REVERSAL"];
                this.columnLOSS_GAIN = base.Columns["LOSS_GAIN"];
                this.columnROUGH_FLAG = base.Columns["ROUGH_FLAG"];
                this.columnIN_USE_FLAG = base.Columns["IN_USE_FLAG"];
                this.columnANAL_T0 = base.Columns["ANAL_T0"];
                this.columnANAL_T1 = base.Columns["ANAL_T1"];
                this.columnANAL_T2 = base.Columns["ANAL_T2"];
                this.columnANAL_T3 = base.Columns["ANAL_T3"];
                this.columnANAL_T4 = base.Columns["ANAL_T4"];
                this.columnANAL_T5 = base.Columns["ANAL_T5"];
                this.columnANAL_T6 = base.Columns["ANAL_T6"];
                this.columnANAL_T7 = base.Columns["ANAL_T7"];
                this.columnANAL_T8 = base.Columns["ANAL_T8"];
                this.columnANAL_T9 = base.Columns["ANAL_T9"];
                this.columnPOSTING_DATE = base.Columns["POSTING_DATE"];
                this.columnALLOC_IN_PROGRESS = base.Columns["ALLOC_IN_PROGRESS"];
                this.columnHOLD_REF = base.Columns["HOLD_REF"];
                this.columnHOLD_OP_ID = base.Columns["HOLD_OP_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnACCNT_CODE = new global::System.Data.DataColumn("ACCNT_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCNT_CODE);
                this.columnPERIOD = new global::System.Data.DataColumn("PERIOD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERIOD);
                this.columnTRANS_DATE = new global::System.Data.DataColumn("TRANS_DATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_DATE);
                this.columnJRNAL_NO = new global::System.Data.DataColumn("JRNAL_NO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJRNAL_NO);
                this.columnJRNAL_LINE = new global::System.Data.DataColumn("JRNAL_LINE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJRNAL_LINE);
                this.columnAMOUNT = new global::System.Data.DataColumn("AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT);
                this.columnD_C = new global::System.Data.DataColumn("D_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_C);
                this.columnALLOCATION = new global::System.Data.DataColumn("ALLOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOCATION);
                this.columnJRNAL_TYPE = new global::System.Data.DataColumn("JRNAL_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJRNAL_TYPE);
                this.columnJRNAL_SRCE = new global::System.Data.DataColumn("JRNAL_SRCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJRNAL_SRCE);
                this.columnTREFERENCE = new global::System.Data.DataColumn("TREFERENCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTREFERENCE);
                this.columnDESCRIPTN = new global::System.Data.DataColumn("DESCRIPTN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCRIPTN);
                this.columnENTRY_DATE = new global::System.Data.DataColumn("ENTRY_DATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRY_DATE);
                this.columnENTRY_PRD = new global::System.Data.DataColumn("ENTRY_PRD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENTRY_PRD);
                this.columnDUE_DATE = new global::System.Data.DataColumn("DUE_DATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUE_DATE);
                this.columnALLOC_REF = new global::System.Data.DataColumn("ALLOC_REF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOC_REF);
                this.columnALLOC_DATE = new global::System.Data.DataColumn("ALLOC_DATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOC_DATE);
                this.columnALLOC_PERIOD = new global::System.Data.DataColumn("ALLOC_PERIOD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOC_PERIOD);
                this.columnASSET_IND = new global::System.Data.DataColumn("ASSET_IND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSET_IND);
                this.columnASSET_CODE = new global::System.Data.DataColumn("ASSET_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSET_CODE);
                this.columnASSET_SUB = new global::System.Data.DataColumn("ASSET_SUB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnASSET_SUB);
                this.columnCONV_CODE = new global::System.Data.DataColumn("CONV_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONV_CODE);
                this.columnCONV_RATE = new global::System.Data.DataColumn("CONV_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONV_RATE);
                this.columnOTHER_AMT = new global::System.Data.DataColumn("OTHER_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_AMT);
                this.columnOTHER_DP = new global::System.Data.DataColumn("OTHER_DP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTHER_DP);
                this.columnCLEARDOWN = new global::System.Data.DataColumn("CLEARDOWN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLEARDOWN);
                this.columnREVERSAL = new global::System.Data.DataColumn("REVERSAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREVERSAL);
                this.columnLOSS_GAIN = new global::System.Data.DataColumn("LOSS_GAIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOSS_GAIN);
                this.columnROUGH_FLAG = new global::System.Data.DataColumn("ROUGH_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUGH_FLAG);
                this.columnIN_USE_FLAG = new global::System.Data.DataColumn("IN_USE_FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_USE_FLAG);
                this.columnANAL_T0 = new global::System.Data.DataColumn("ANAL_T0", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T0);
                this.columnANAL_T1 = new global::System.Data.DataColumn("ANAL_T1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T1);
                this.columnANAL_T2 = new global::System.Data.DataColumn("ANAL_T2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T2);
                this.columnANAL_T3 = new global::System.Data.DataColumn("ANAL_T3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T3);
                this.columnANAL_T4 = new global::System.Data.DataColumn("ANAL_T4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T4);
                this.columnANAL_T5 = new global::System.Data.DataColumn("ANAL_T5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T5);
                this.columnANAL_T6 = new global::System.Data.DataColumn("ANAL_T6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T6);
                this.columnANAL_T7 = new global::System.Data.DataColumn("ANAL_T7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T7);
                this.columnANAL_T8 = new global::System.Data.DataColumn("ANAL_T8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T8);
                this.columnANAL_T9 = new global::System.Data.DataColumn("ANAL_T9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANAL_T9);
                this.columnPOSTING_DATE = new global::System.Data.DataColumn("POSTING_DATE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOSTING_DATE);
                this.columnALLOC_IN_PROGRESS = new global::System.Data.DataColumn("ALLOC_IN_PROGRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLOC_IN_PROGRESS);
                this.columnHOLD_REF = new global::System.Data.DataColumn("HOLD_REF", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLD_REF);
                this.columnHOLD_OP_ID = new global::System.Data.DataColumn("HOLD_OP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLD_OP_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnACCNT_CODE,
                                this.columnPERIOD,
                                this.columnTRANS_DATE,
                                this.columnJRNAL_NO,
                                this.columnJRNAL_LINE}, true));
                this.columnACCNT_CODE.AllowDBNull = false;
                this.columnACCNT_CODE.MaxLength = 15;
                this.columnPERIOD.AllowDBNull = false;
                this.columnTRANS_DATE.AllowDBNull = false;
                this.columnJRNAL_NO.AllowDBNull = false;
                this.columnJRNAL_LINE.AllowDBNull = false;
                this.columnAMOUNT.AllowDBNull = false;
                this.columnD_C.AllowDBNull = false;
                this.columnD_C.MaxLength = 1;
                this.columnALLOCATION.AllowDBNull = false;
                this.columnALLOCATION.MaxLength = 1;
                this.columnJRNAL_TYPE.AllowDBNull = false;
                this.columnJRNAL_TYPE.MaxLength = 5;
                this.columnJRNAL_SRCE.AllowDBNull = false;
                this.columnJRNAL_SRCE.MaxLength = 5;
                this.columnTREFERENCE.AllowDBNull = false;
                this.columnTREFERENCE.MaxLength = 15;
                this.columnDESCRIPTN.AllowDBNull = false;
                this.columnDESCRIPTN.MaxLength = 25;
                this.columnENTRY_DATE.AllowDBNull = false;
                this.columnENTRY_PRD.AllowDBNull = false;
                this.columnDUE_DATE.AllowDBNull = false;
                this.columnALLOC_REF.AllowDBNull = false;
                this.columnALLOC_DATE.AllowDBNull = false;
                this.columnALLOC_PERIOD.AllowDBNull = false;
                this.columnASSET_IND.AllowDBNull = false;
                this.columnASSET_IND.MaxLength = 1;
                this.columnASSET_CODE.AllowDBNull = false;
                this.columnASSET_CODE.MaxLength = 10;
                this.columnASSET_SUB.AllowDBNull = false;
                this.columnASSET_SUB.MaxLength = 5;
                this.columnCONV_CODE.AllowDBNull = false;
                this.columnCONV_CODE.MaxLength = 5;
                this.columnCONV_RATE.AllowDBNull = false;
                this.columnOTHER_AMT.AllowDBNull = false;
                this.columnOTHER_DP.AllowDBNull = false;
                this.columnOTHER_DP.MaxLength = 1;
                this.columnCLEARDOWN.AllowDBNull = false;
                this.columnCLEARDOWN.MaxLength = 5;
                this.columnREVERSAL.AllowDBNull = false;
                this.columnREVERSAL.MaxLength = 1;
                this.columnLOSS_GAIN.AllowDBNull = false;
                this.columnLOSS_GAIN.MaxLength = 1;
                this.columnROUGH_FLAG.AllowDBNull = false;
                this.columnROUGH_FLAG.MaxLength = 1;
                this.columnIN_USE_FLAG.AllowDBNull = false;
                this.columnIN_USE_FLAG.MaxLength = 1;
                this.columnANAL_T0.AllowDBNull = false;
                this.columnANAL_T0.MaxLength = 15;
                this.columnANAL_T1.AllowDBNull = false;
                this.columnANAL_T1.MaxLength = 15;
                this.columnANAL_T2.AllowDBNull = false;
                this.columnANAL_T2.MaxLength = 15;
                this.columnANAL_T3.AllowDBNull = false;
                this.columnANAL_T3.MaxLength = 15;
                this.columnANAL_T4.AllowDBNull = false;
                this.columnANAL_T4.MaxLength = 15;
                this.columnANAL_T5.AllowDBNull = false;
                this.columnANAL_T5.MaxLength = 15;
                this.columnANAL_T6.AllowDBNull = false;
                this.columnANAL_T6.MaxLength = 15;
                this.columnANAL_T7.AllowDBNull = false;
                this.columnANAL_T7.MaxLength = 15;
                this.columnANAL_T8.AllowDBNull = false;
                this.columnANAL_T8.MaxLength = 15;
                this.columnANAL_T9.AllowDBNull = false;
                this.columnANAL_T9.MaxLength = 15;
                this.columnPOSTING_DATE.AllowDBNull = false;
                this.columnALLOC_IN_PROGRESS.AllowDBNull = false;
                this.columnALLOC_IN_PROGRESS.MaxLength = 1;
                this.columnHOLD_REF.AllowDBNull = false;
                this.columnHOLD_OP_ID.AllowDBNull = false;
                this.columnHOLD_OP_ID.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALFLDGRow NewSALFLDGRow() {
                return ((SALFLDGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALFLDGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALFLDGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALFLDGRowChanged != null)) {
                    this.SALFLDGRowChanged(this, new SALFLDGRowChangeEvent(((SALFLDGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALFLDGRowChanging != null)) {
                    this.SALFLDGRowChanging(this, new SALFLDGRowChangeEvent(((SALFLDGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALFLDGRowDeleted != null)) {
                    this.SALFLDGRowDeleted(this, new SALFLDGRowChangeEvent(((SALFLDGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALFLDGRowDeleting != null)) {
                    this.SALFLDGRowDeleting(this, new SALFLDGRowChangeEvent(((SALFLDGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSALFLDGRow(SALFLDGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SALFLDGDs ds = new SALFLDGDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALFLDGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALFLDGRow : global::System.Data.DataRow {
            
            private SALFLDGDataTable tableSALFLDG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SALFLDGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALFLDG = ((SALFLDGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCNT_CODE {
                get {
                    return ((string)(this[this.tableSALFLDG.ACCNT_CODEColumn]));
                }
                set {
                    this[this.tableSALFLDG.ACCNT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PERIOD {
                get {
                    return ((int)(this[this.tableSALFLDG.PERIODColumn]));
                }
                set {
                    this[this.tableSALFLDG.PERIODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TRANS_DATE {
                get {
                    return ((int)(this[this.tableSALFLDG.TRANS_DATEColumn]));
                }
                set {
                    this[this.tableSALFLDG.TRANS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JRNAL_NO {
                get {
                    return ((int)(this[this.tableSALFLDG.JRNAL_NOColumn]));
                }
                set {
                    this[this.tableSALFLDG.JRNAL_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JRNAL_LINE {
                get {
                    return ((int)(this[this.tableSALFLDG.JRNAL_LINEColumn]));
                }
                set {
                    this[this.tableSALFLDG.JRNAL_LINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AMOUNT {
                get {
                    return ((decimal)(this[this.tableSALFLDG.AMOUNTColumn]));
                }
                set {
                    this[this.tableSALFLDG.AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_C {
                get {
                    return ((string)(this[this.tableSALFLDG.D_CColumn]));
                }
                set {
                    this[this.tableSALFLDG.D_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ALLOCATION {
                get {
                    return ((string)(this[this.tableSALFLDG.ALLOCATIONColumn]));
                }
                set {
                    this[this.tableSALFLDG.ALLOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JRNAL_TYPE {
                get {
                    return ((string)(this[this.tableSALFLDG.JRNAL_TYPEColumn]));
                }
                set {
                    this[this.tableSALFLDG.JRNAL_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JRNAL_SRCE {
                get {
                    return ((string)(this[this.tableSALFLDG.JRNAL_SRCEColumn]));
                }
                set {
                    this[this.tableSALFLDG.JRNAL_SRCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TREFERENCE {
                get {
                    return ((string)(this[this.tableSALFLDG.TREFERENCEColumn]));
                }
                set {
                    this[this.tableSALFLDG.TREFERENCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCRIPTN {
                get {
                    return ((string)(this[this.tableSALFLDG.DESCRIPTNColumn]));
                }
                set {
                    this[this.tableSALFLDG.DESCRIPTNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRY_DATE {
                get {
                    return ((int)(this[this.tableSALFLDG.ENTRY_DATEColumn]));
                }
                set {
                    this[this.tableSALFLDG.ENTRY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ENTRY_PRD {
                get {
                    return ((int)(this[this.tableSALFLDG.ENTRY_PRDColumn]));
                }
                set {
                    this[this.tableSALFLDG.ENTRY_PRDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DUE_DATE {
                get {
                    return ((int)(this[this.tableSALFLDG.DUE_DATEColumn]));
                }
                set {
                    this[this.tableSALFLDG.DUE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ALLOC_REF {
                get {
                    return ((int)(this[this.tableSALFLDG.ALLOC_REFColumn]));
                }
                set {
                    this[this.tableSALFLDG.ALLOC_REFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ALLOC_DATE {
                get {
                    return ((int)(this[this.tableSALFLDG.ALLOC_DATEColumn]));
                }
                set {
                    this[this.tableSALFLDG.ALLOC_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ALLOC_PERIOD {
                get {
                    return ((int)(this[this.tableSALFLDG.ALLOC_PERIODColumn]));
                }
                set {
                    this[this.tableSALFLDG.ALLOC_PERIODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ASSET_IND {
                get {
                    return ((string)(this[this.tableSALFLDG.ASSET_INDColumn]));
                }
                set {
                    this[this.tableSALFLDG.ASSET_INDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ASSET_CODE {
                get {
                    return ((string)(this[this.tableSALFLDG.ASSET_CODEColumn]));
                }
                set {
                    this[this.tableSALFLDG.ASSET_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ASSET_SUB {
                get {
                    return ((string)(this[this.tableSALFLDG.ASSET_SUBColumn]));
                }
                set {
                    this[this.tableSALFLDG.ASSET_SUBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CONV_CODE {
                get {
                    return ((string)(this[this.tableSALFLDG.CONV_CODEColumn]));
                }
                set {
                    this[this.tableSALFLDG.CONV_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CONV_RATE {
                get {
                    return ((decimal)(this[this.tableSALFLDG.CONV_RATEColumn]));
                }
                set {
                    this[this.tableSALFLDG.CONV_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OTHER_AMT {
                get {
                    return ((decimal)(this[this.tableSALFLDG.OTHER_AMTColumn]));
                }
                set {
                    this[this.tableSALFLDG.OTHER_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OTHER_DP {
                get {
                    return ((string)(this[this.tableSALFLDG.OTHER_DPColumn]));
                }
                set {
                    this[this.tableSALFLDG.OTHER_DPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CLEARDOWN {
                get {
                    return ((string)(this[this.tableSALFLDG.CLEARDOWNColumn]));
                }
                set {
                    this[this.tableSALFLDG.CLEARDOWNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REVERSAL {
                get {
                    return ((string)(this[this.tableSALFLDG.REVERSALColumn]));
                }
                set {
                    this[this.tableSALFLDG.REVERSALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOSS_GAIN {
                get {
                    return ((string)(this[this.tableSALFLDG.LOSS_GAINColumn]));
                }
                set {
                    this[this.tableSALFLDG.LOSS_GAINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROUGH_FLAG {
                get {
                    return ((string)(this[this.tableSALFLDG.ROUGH_FLAGColumn]));
                }
                set {
                    this[this.tableSALFLDG.ROUGH_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IN_USE_FLAG {
                get {
                    return ((string)(this[this.tableSALFLDG.IN_USE_FLAGColumn]));
                }
                set {
                    this[this.tableSALFLDG.IN_USE_FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T0 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T0Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T1 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T1Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T2 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T2Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T3 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T3Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T4 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T4Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T5 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T5Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T6 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T6Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T7 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T7Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T8 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T8Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANAL_T9 {
                get {
                    return ((string)(this[this.tableSALFLDG.ANAL_T9Column]));
                }
                set {
                    this[this.tableSALFLDG.ANAL_T9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int POSTING_DATE {
                get {
                    return ((int)(this[this.tableSALFLDG.POSTING_DATEColumn]));
                }
                set {
                    this[this.tableSALFLDG.POSTING_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ALLOC_IN_PROGRESS {
                get {
                    return ((string)(this[this.tableSALFLDG.ALLOC_IN_PROGRESSColumn]));
                }
                set {
                    this[this.tableSALFLDG.ALLOC_IN_PROGRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HOLD_REF {
                get {
                    return ((int)(this[this.tableSALFLDG.HOLD_REFColumn]));
                }
                set {
                    this[this.tableSALFLDG.HOLD_REFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HOLD_OP_ID {
                get {
                    return ((string)(this[this.tableSALFLDG.HOLD_OP_IDColumn]));
                }
                set {
                    this[this.tableSALFLDG.HOLD_OP_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SALFLDGRowChangeEvent : global::System.EventArgs {
            
            private SALFLDGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALFLDGRowChangeEvent(SALFLDGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALFLDGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.dataserver.model.account.SALFLDGDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALFLDGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SALFLDGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALFLDG";
            tableMapping.ColumnMappings.Add("ACCNT_CODE", "ACCNT_CODE");
            tableMapping.ColumnMappings.Add("PERIOD", "PERIOD");
            tableMapping.ColumnMappings.Add("TRANS_DATE", "TRANS_DATE");
            tableMapping.ColumnMappings.Add("JRNAL_NO", "JRNAL_NO");
            tableMapping.ColumnMappings.Add("JRNAL_LINE", "JRNAL_LINE");
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT");
            tableMapping.ColumnMappings.Add("D_C", "D_C");
            tableMapping.ColumnMappings.Add("ALLOCATION", "ALLOCATION");
            tableMapping.ColumnMappings.Add("JRNAL_TYPE", "JRNAL_TYPE");
            tableMapping.ColumnMappings.Add("JRNAL_SRCE", "JRNAL_SRCE");
            tableMapping.ColumnMappings.Add("TREFERENCE", "TREFERENCE");
            tableMapping.ColumnMappings.Add("DESCRIPTN", "DESCRIPTN");
            tableMapping.ColumnMappings.Add("ENTRY_DATE", "ENTRY_DATE");
            tableMapping.ColumnMappings.Add("ENTRY_PRD", "ENTRY_PRD");
            tableMapping.ColumnMappings.Add("DUE_DATE", "DUE_DATE");
            tableMapping.ColumnMappings.Add("ALLOC_REF", "ALLOC_REF");
            tableMapping.ColumnMappings.Add("ALLOC_DATE", "ALLOC_DATE");
            tableMapping.ColumnMappings.Add("ALLOC_PERIOD", "ALLOC_PERIOD");
            tableMapping.ColumnMappings.Add("ASSET_IND", "ASSET_IND");
            tableMapping.ColumnMappings.Add("ASSET_CODE", "ASSET_CODE");
            tableMapping.ColumnMappings.Add("ASSET_SUB", "ASSET_SUB");
            tableMapping.ColumnMappings.Add("CONV_CODE", "CONV_CODE");
            tableMapping.ColumnMappings.Add("CONV_RATE", "CONV_RATE");
            tableMapping.ColumnMappings.Add("OTHER_AMT", "OTHER_AMT");
            tableMapping.ColumnMappings.Add("OTHER_DP", "OTHER_DP");
            tableMapping.ColumnMappings.Add("CLEARDOWN", "CLEARDOWN");
            tableMapping.ColumnMappings.Add("REVERSAL", "REVERSAL");
            tableMapping.ColumnMappings.Add("LOSS_GAIN", "LOSS_GAIN");
            tableMapping.ColumnMappings.Add("ROUGH_FLAG", "ROUGH_FLAG");
            tableMapping.ColumnMappings.Add("IN_USE_FLAG", "IN_USE_FLAG");
            tableMapping.ColumnMappings.Add("ANAL_T0", "ANAL_T0");
            tableMapping.ColumnMappings.Add("ANAL_T1", "ANAL_T1");
            tableMapping.ColumnMappings.Add("ANAL_T2", "ANAL_T2");
            tableMapping.ColumnMappings.Add("ANAL_T3", "ANAL_T3");
            tableMapping.ColumnMappings.Add("ANAL_T4", "ANAL_T4");
            tableMapping.ColumnMappings.Add("ANAL_T5", "ANAL_T5");
            tableMapping.ColumnMappings.Add("ANAL_T6", "ANAL_T6");
            tableMapping.ColumnMappings.Add("ANAL_T7", "ANAL_T7");
            tableMapping.ColumnMappings.Add("ANAL_T8", "ANAL_T8");
            tableMapping.ColumnMappings.Add("ANAL_T9", "ANAL_T9");
            tableMapping.ColumnMappings.Add("POSTING_DATE", "POSTING_DATE");
            tableMapping.ColumnMappings.Add("ALLOC_IN_PROGRESS", "ALLOC_IN_PROGRESS");
            tableMapping.ColumnMappings.Add("HOLD_REF", "HOLD_REF");
            tableMapping.ColumnMappings.Add("HOLD_OP_ID", "HOLD_OP_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SADFLDG1NS] ([ACCNT_CODE], [PERIOD], [TRANS_DATE], [JRNAL_NO], [JRNAL_LINE], [AMOUNT], [D_C], [ALLOCATION], [JRNAL_TYPE], [JRNAL_SRCE], [TREFERENCE], [DESCRIPTN], [ENTRY_DATE], [ENTRY_PRD], [DUE_DATE], [ALLOC_REF], [ALLOC_DATE], [ALLOC_PERIOD], [ASSET_IND], [ASSET_CODE], [ASSET_SUB], [CONV_CODE], [CONV_RATE], [OTHER_AMT], [OTHER_DP], [CLEARDOWN], [REVERSAL], [LOSS_GAIN], [ROUGH_FLAG], [IN_USE_FLAG], [ANAL_T0], [ANAL_T1], [ANAL_T2], [ANAL_T3], [ANAL_T4], [ANAL_T5], [ANAL_T6], [ANAL_T7], [ANAL_T8], [ANAL_T9], [POSTING_DATE], [ALLOC_IN_PROGRESS], [HOLD_REF], [HOLD_OP_ID]) VALUES (@ACCNT_CODE, @PERIOD, @TRANS_DATE, @JRNAL_NO, @JRNAL_LINE, @AMOUNT, @D_C, @ALLOCATION, @JRNAL_TYPE, @JRNAL_SRCE, @TREFERENCE, @DESCRIPTN, @ENTRY_DATE, @ENTRY_PRD, @DUE_DATE, @ALLOC_REF, @ALLOC_DATE, @ALLOC_PERIOD, @ASSET_IND, @ASSET_CODE, @ASSET_SUB, @CONV_CODE, @CONV_RATE, @OTHER_AMT, @OTHER_DP, @CLEARDOWN, @REVERSAL, @LOSS_GAIN, @ROUGH_FLAG, @IN_USE_FLAG, @ANAL_T0, @ANAL_T1, @ANAL_T2, @ANAL_T3, @ANAL_T4, @ANAL_T5, @ANAL_T6, @ANAL_T7, @ANAL_T8, @ANAL_T9, @POSTING_DATE, @ALLOC_IN_PROGRESS, @HOLD_REF, @HOLD_OP_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCNT_CODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCNT_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERIOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PERIOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRANS_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRANS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JRNAL_NO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JRNAL_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JRNAL_LINE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JRNAL_LINE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMOUNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "AMOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_C", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOCATION", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLOCATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JRNAL_TYPE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JRNAL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JRNAL_SRCE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JRNAL_SRCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TREFERENCE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TREFERENCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCRIPTN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTRY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ENTRY_PRD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ENTRY_PRD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DUE_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DUE_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOC_REF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLOC_REF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOC_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLOC_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOC_PERIOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLOC_PERIOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASSET_IND", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASSET_IND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASSET_CODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASSET_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ASSET_SUB", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ASSET_SUB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONV_CODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONV_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONV_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 9, "CONV_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHER_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 3, "OTHER_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTHER_DP", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTHER_DP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLEARDOWN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLEARDOWN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REVERSAL", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REVERSAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOSS_GAIN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOSS_GAIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROUGH_FLAG", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROUGH_FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_USE_FLAG", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_USE_FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T0", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T0", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T4", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T5", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T6", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T7", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T8", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ANAL_T9", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ANAL_T9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POSTING_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POSTING_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLOC_IN_PROGRESS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ALLOC_IN_PROGRESS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLD_REF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLD_REF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLD_OP_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLD_OP_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ACCNT_CODE, PERIOD, TRANS_DATE, JRNAL_NO, JRNAL_LINE, AMOUNT, D_C, ALLOCATION, JRNAL_TYPE, JRNAL_SRCE, TREFERENCE, DESCRIPTN, ENTRY_DATE, ENTRY_PRD, DUE_DATE, ALLOC_REF, ALLOC_DATE, ALLOC_PERIOD, ASSET_IND, ASSET_CODE, ASSET_SUB, CONV_CODE, CONV_RATE, OTHER_AMT, OTHER_DP, CLEARDOWN, REVERSAL, LOSS_GAIN, ROUGH_FLAG, IN_USE_FLAG, ANAL_T0, ANAL_T1, ANAL_T2, ANAL_T3, ANAL_T4, ANAL_T5, ANAL_T6, ANAL_T7, ANAL_T8, ANAL_T9, POSTING_DATE, ALLOC_IN_PROGRESS, HOLD_REF, HOLD_OP_ID FROM dbo.SADFLDG1NS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SALFLDGDs.SALFLDGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SALFLDGDs.SALFLDGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SALFLDGDs.SALFLDGDataTable dataTable = new SALFLDGDs.SALFLDGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SALFLDGDs.SALFLDGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SALFLDGDs dataSet) {
            return this.Adapter.Update(dataSet, "SALFLDG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ACCNT_CODE, 
                    int PERIOD, 
                    int TRANS_DATE, 
                    int JRNAL_NO, 
                    int JRNAL_LINE, 
                    decimal AMOUNT, 
                    string D_C, 
                    string ALLOCATION, 
                    string JRNAL_TYPE, 
                    string JRNAL_SRCE, 
                    string TREFERENCE, 
                    string DESCRIPTN, 
                    int ENTRY_DATE, 
                    int ENTRY_PRD, 
                    int DUE_DATE, 
                    int ALLOC_REF, 
                    int ALLOC_DATE, 
                    int ALLOC_PERIOD, 
                    string ASSET_IND, 
                    string ASSET_CODE, 
                    string ASSET_SUB, 
                    string CONV_CODE, 
                    decimal CONV_RATE, 
                    decimal OTHER_AMT, 
                    string OTHER_DP, 
                    string CLEARDOWN, 
                    string REVERSAL, 
                    string LOSS_GAIN, 
                    string ROUGH_FLAG, 
                    string IN_USE_FLAG, 
                    string ANAL_T0, 
                    string ANAL_T1, 
                    string ANAL_T2, 
                    string ANAL_T3, 
                    string ANAL_T4, 
                    string ANAL_T5, 
                    string ANAL_T6, 
                    string ANAL_T7, 
                    string ANAL_T8, 
                    string ANAL_T9, 
                    int POSTING_DATE, 
                    string ALLOC_IN_PROGRESS, 
                    int HOLD_REF, 
                    string HOLD_OP_ID) {
            if ((ACCNT_CODE == null)) {
                throw new global::System.ArgumentNullException("ACCNT_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ACCNT_CODE));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PERIOD));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(TRANS_DATE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(JRNAL_NO));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(JRNAL_LINE));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(AMOUNT));
            if ((D_C == null)) {
                throw new global::System.ArgumentNullException("D_C");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(D_C));
            }
            if ((ALLOCATION == null)) {
                throw new global::System.ArgumentNullException("ALLOCATION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ALLOCATION));
            }
            if ((JRNAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("JRNAL_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(JRNAL_TYPE));
            }
            if ((JRNAL_SRCE == null)) {
                throw new global::System.ArgumentNullException("JRNAL_SRCE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(JRNAL_SRCE));
            }
            if ((TREFERENCE == null)) {
                throw new global::System.ArgumentNullException("TREFERENCE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(TREFERENCE));
            }
            if ((DESCRIPTN == null)) {
                throw new global::System.ArgumentNullException("DESCRIPTN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(DESCRIPTN));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(ENTRY_DATE));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(ENTRY_PRD));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(DUE_DATE));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(ALLOC_REF));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(ALLOC_DATE));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(ALLOC_PERIOD));
            if ((ASSET_IND == null)) {
                throw new global::System.ArgumentNullException("ASSET_IND");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ASSET_IND));
            }
            if ((ASSET_CODE == null)) {
                throw new global::System.ArgumentNullException("ASSET_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(ASSET_CODE));
            }
            if ((ASSET_SUB == null)) {
                throw new global::System.ArgumentNullException("ASSET_SUB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(ASSET_SUB));
            }
            if ((CONV_CODE == null)) {
                throw new global::System.ArgumentNullException("CONV_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(CONV_CODE));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(CONV_RATE));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(OTHER_AMT));
            if ((OTHER_DP == null)) {
                throw new global::System.ArgumentNullException("OTHER_DP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(OTHER_DP));
            }
            if ((CLEARDOWN == null)) {
                throw new global::System.ArgumentNullException("CLEARDOWN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(CLEARDOWN));
            }
            if ((REVERSAL == null)) {
                throw new global::System.ArgumentNullException("REVERSAL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(REVERSAL));
            }
            if ((LOSS_GAIN == null)) {
                throw new global::System.ArgumentNullException("LOSS_GAIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(LOSS_GAIN));
            }
            if ((ROUGH_FLAG == null)) {
                throw new global::System.ArgumentNullException("ROUGH_FLAG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(ROUGH_FLAG));
            }
            if ((IN_USE_FLAG == null)) {
                throw new global::System.ArgumentNullException("IN_USE_FLAG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(IN_USE_FLAG));
            }
            if ((ANAL_T0 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T0");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(ANAL_T0));
            }
            if ((ANAL_T1 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(ANAL_T1));
            }
            if ((ANAL_T2 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(ANAL_T2));
            }
            if ((ANAL_T3 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(ANAL_T3));
            }
            if ((ANAL_T4 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T4");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(ANAL_T4));
            }
            if ((ANAL_T5 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T5");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(ANAL_T5));
            }
            if ((ANAL_T6 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T6");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(ANAL_T6));
            }
            if ((ANAL_T7 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T7");
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(ANAL_T7));
            }
            if ((ANAL_T8 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T8");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(ANAL_T8));
            }
            if ((ANAL_T9 == null)) {
                throw new global::System.ArgumentNullException("ANAL_T9");
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(ANAL_T9));
            }
            this.Adapter.InsertCommand.Parameters[40].Value = ((int)(POSTING_DATE));
            if ((ALLOC_IN_PROGRESS == null)) {
                throw new global::System.ArgumentNullException("ALLOC_IN_PROGRESS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(ALLOC_IN_PROGRESS));
            }
            this.Adapter.InsertCommand.Parameters[42].Value = ((int)(HOLD_REF));
            if ((HOLD_OP_ID == null)) {
                throw new global::System.ArgumentNullException("HOLD_OP_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(HOLD_OP_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SALFLDGTableAdapter _sALFLDGTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALFLDGTableAdapter SALFLDGTableAdapter {
            get {
                return this._sALFLDGTableAdapter;
            }
            set {
                this._sALFLDGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._sALFLDGTableAdapter != null) 
                            && (this._sALFLDGTableAdapter.Connection != null))) {
                    return this._sALFLDGTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._sALFLDGTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SALFLDGDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sALFLDGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALFLDG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALFLDGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SALFLDGDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sALFLDGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALFLDG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALFLDGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SALFLDGDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sALFLDGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALFLDG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALFLDGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SALFLDGDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._sALFLDGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALFLDGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._sALFLDGTableAdapter != null)) {
                    revertConnections.Add(this._sALFLDGTableAdapter, this._sALFLDGTableAdapter.Connection);
                    this._sALFLDGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALFLDGTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALFLDGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALFLDGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALFLDGTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._sALFLDGTableAdapter != null)) {
                    this._sALFLDGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALFLDGTableAdapter]));
                    this._sALFLDGTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591