//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.dataserver.model.account {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MockShopDCNoteShipmentDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MockShopDCNoteShipmentDs : global::System.Data.DataSet {
        
        private MockShopDCNoteShipmentDataTable tableMockShopDCNoteShipment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MockShopDCNoteShipmentDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MockShopDCNoteShipmentDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MockShopDCNoteShipment"] != null)) {
                    base.Tables.Add(new MockShopDCNoteShipmentDataTable(ds.Tables["MockShopDCNoteShipment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MockShopDCNoteShipmentDataTable MockShopDCNoteShipment {
            get {
                return this.tableMockShopDCNoteShipment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MockShopDCNoteShipmentDs cln = ((MockShopDCNoteShipmentDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MockShopDCNoteShipment"] != null)) {
                    base.Tables.Add(new MockShopDCNoteShipmentDataTable(ds.Tables["MockShopDCNoteShipment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableMockShopDCNoteShipment = ((MockShopDCNoteShipmentDataTable)(base.Tables["MockShopDCNoteShipment"]));
            if ((initTable == true)) {
                if ((this.tableMockShopDCNoteShipment != null)) {
                    this.tableMockShopDCNoteShipment.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MockShopDCNoteShipmentDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MockShopDCNoteShipmentDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMockShopDCNoteShipment = new MockShopDCNoteShipmentDataTable();
            base.Tables.Add(this.tableMockShopDCNoteShipment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMockShopDCNoteShipment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MockShopDCNoteShipmentDs ds = new MockShopDCNoteShipmentDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MockShopDCNoteShipmentRowChangeEventHandler(object sender, MockShopDCNoteShipmentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MockShopDCNoteShipmentDataTable : global::System.Data.TypedTableBase<MockShopDCNoteShipmentRow> {
            
            private global::System.Data.DataColumn columnDCNoteId;
            
            private global::System.Data.DataColumn columnDCNoteShipmentId;
            
            private global::System.Data.DataColumn columnOfficeId;
            
            private global::System.Data.DataColumn columnTradingAgencyId;
            
            private global::System.Data.DataColumn columnDeptId;
            
            private global::System.Data.DataColumn columnProductTeamId;
            
            private global::System.Data.DataColumn columnContractId;
            
            private global::System.Data.DataColumn columnProductId;
            
            private global::System.Data.DataColumn columnShipmentId;
            
            private global::System.Data.DataColumn columnSeasonId;
            
            private global::System.Data.DataColumn columnVendorId;
            
            private global::System.Data.DataColumn columnCountryOfOriginId;
            
            private global::System.Data.DataColumn columnPackingUnitId;
            
            private global::System.Data.DataColumn columnSellCurrencyId;
            
            private global::System.Data.DataColumn columnTotalCourierCharge;
            
            private global::System.Data.DataColumn columnTotalShippedQty;
            
            private global::System.Data.DataColumn columnNSLCommissionPercent;
            
            private global::System.Data.DataColumn columnNSLCommissionAmt;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnTotalShippedAmt;
            
            private global::System.Data.DataColumn columnTermOfPurchaseId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MockShopDCNoteShipmentDataTable() {
                this.TableName = "MockShopDCNoteShipment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MockShopDCNoteShipmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MockShopDCNoteShipmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DCNoteIdColumn {
                get {
                    return this.columnDCNoteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DCNoteShipmentIdColumn {
                get {
                    return this.columnDCNoteShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeIdColumn {
                get {
                    return this.columnOfficeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingAgencyIdColumn {
                get {
                    return this.columnTradingAgencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeptIdColumn {
                get {
                    return this.columnDeptId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTeamIdColumn {
                get {
                    return this.columnProductTeamId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractIdColumn {
                get {
                    return this.columnContractId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIdColumn {
                get {
                    return this.columnProductId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIdColumn {
                get {
                    return this.columnShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeasonIdColumn {
                get {
                    return this.columnSeasonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorIdColumn {
                get {
                    return this.columnVendorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryOfOriginIdColumn {
                get {
                    return this.columnCountryOfOriginId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackingUnitIdColumn {
                get {
                    return this.columnPackingUnitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellCurrencyIdColumn {
                get {
                    return this.columnSellCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalCourierChargeColumn {
                get {
                    return this.columnTotalCourierCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedQtyColumn {
                get {
                    return this.columnTotalShippedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLCommissionPercentColumn {
                get {
                    return this.columnNSLCommissionPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLCommissionAmtColumn {
                get {
                    return this.columnNSLCommissionAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedAmtColumn {
                get {
                    return this.columnTotalShippedAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TermOfPurchaseIdColumn {
                get {
                    return this.columnTermOfPurchaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MockShopDCNoteShipmentRow this[int index] {
                get {
                    return ((MockShopDCNoteShipmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MockShopDCNoteShipmentRowChangeEventHandler MockShopDCNoteShipmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MockShopDCNoteShipmentRowChangeEventHandler MockShopDCNoteShipmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MockShopDCNoteShipmentRowChangeEventHandler MockShopDCNoteShipmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MockShopDCNoteShipmentRowChangeEventHandler MockShopDCNoteShipmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMockShopDCNoteShipmentRow(MockShopDCNoteShipmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MockShopDCNoteShipmentRow AddMockShopDCNoteShipmentRow(
                        int DCNoteId, 
                        int DCNoteShipmentId, 
                        int OfficeId, 
                        int TradingAgencyId, 
                        int DeptId, 
                        int ProductTeamId, 
                        int ContractId, 
                        int ProductId, 
                        int ShipmentId, 
                        int SeasonId, 
                        int VendorId, 
                        int CountryOfOriginId, 
                        int PackingUnitId, 
                        int SellCurrencyId, 
                        decimal TotalCourierCharge, 
                        int TotalShippedQty, 
                        decimal NSLCommissionPercent, 
                        decimal NSLCommissionAmt, 
                        int Status, 
                        decimal TotalShippedAmt, 
                        int TermOfPurchaseId) {
                MockShopDCNoteShipmentRow rowMockShopDCNoteShipmentRow = ((MockShopDCNoteShipmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DCNoteId,
                        DCNoteShipmentId,
                        OfficeId,
                        TradingAgencyId,
                        DeptId,
                        ProductTeamId,
                        ContractId,
                        ProductId,
                        ShipmentId,
                        SeasonId,
                        VendorId,
                        CountryOfOriginId,
                        PackingUnitId,
                        SellCurrencyId,
                        TotalCourierCharge,
                        TotalShippedQty,
                        NSLCommissionPercent,
                        NSLCommissionAmt,
                        Status,
                        TotalShippedAmt,
                        TermOfPurchaseId};
                rowMockShopDCNoteShipmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMockShopDCNoteShipmentRow);
                return rowMockShopDCNoteShipmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MockShopDCNoteShipmentRow FindByDCNoteShipmentId(int DCNoteShipmentId) {
                return ((MockShopDCNoteShipmentRow)(this.Rows.Find(new object[] {
                            DCNoteShipmentId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MockShopDCNoteShipmentDataTable cln = ((MockShopDCNoteShipmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MockShopDCNoteShipmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDCNoteId = base.Columns["DCNoteId"];
                this.columnDCNoteShipmentId = base.Columns["DCNoteShipmentId"];
                this.columnOfficeId = base.Columns["OfficeId"];
                this.columnTradingAgencyId = base.Columns["TradingAgencyId"];
                this.columnDeptId = base.Columns["DeptId"];
                this.columnProductTeamId = base.Columns["ProductTeamId"];
                this.columnContractId = base.Columns["ContractId"];
                this.columnProductId = base.Columns["ProductId"];
                this.columnShipmentId = base.Columns["ShipmentId"];
                this.columnSeasonId = base.Columns["SeasonId"];
                this.columnVendorId = base.Columns["VendorId"];
                this.columnCountryOfOriginId = base.Columns["CountryOfOriginId"];
                this.columnPackingUnitId = base.Columns["PackingUnitId"];
                this.columnSellCurrencyId = base.Columns["SellCurrencyId"];
                this.columnTotalCourierCharge = base.Columns["TotalCourierCharge"];
                this.columnTotalShippedQty = base.Columns["TotalShippedQty"];
                this.columnNSLCommissionPercent = base.Columns["NSLCommissionPercent"];
                this.columnNSLCommissionAmt = base.Columns["NSLCommissionAmt"];
                this.columnStatus = base.Columns["Status"];
                this.columnTotalShippedAmt = base.Columns["TotalShippedAmt"];
                this.columnTermOfPurchaseId = base.Columns["TermOfPurchaseId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDCNoteId = new global::System.Data.DataColumn("DCNoteId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNoteId);
                this.columnDCNoteShipmentId = new global::System.Data.DataColumn("DCNoteShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNoteShipmentId);
                this.columnOfficeId = new global::System.Data.DataColumn("OfficeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeId);
                this.columnTradingAgencyId = new global::System.Data.DataColumn("TradingAgencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingAgencyId);
                this.columnDeptId = new global::System.Data.DataColumn("DeptId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptId);
                this.columnProductTeamId = new global::System.Data.DataColumn("ProductTeamId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTeamId);
                this.columnContractId = new global::System.Data.DataColumn("ContractId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractId);
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnShipmentId = new global::System.Data.DataColumn("ShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentId);
                this.columnSeasonId = new global::System.Data.DataColumn("SeasonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeasonId);
                this.columnVendorId = new global::System.Data.DataColumn("VendorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorId);
                this.columnCountryOfOriginId = new global::System.Data.DataColumn("CountryOfOriginId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryOfOriginId);
                this.columnPackingUnitId = new global::System.Data.DataColumn("PackingUnitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingUnitId);
                this.columnSellCurrencyId = new global::System.Data.DataColumn("SellCurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellCurrencyId);
                this.columnTotalCourierCharge = new global::System.Data.DataColumn("TotalCourierCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCourierCharge);
                this.columnTotalShippedQty = new global::System.Data.DataColumn("TotalShippedQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedQty);
                this.columnNSLCommissionPercent = new global::System.Data.DataColumn("NSLCommissionPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLCommissionPercent);
                this.columnNSLCommissionAmt = new global::System.Data.DataColumn("NSLCommissionAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLCommissionAmt);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnTotalShippedAmt = new global::System.Data.DataColumn("TotalShippedAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedAmt);
                this.columnTermOfPurchaseId = new global::System.Data.DataColumn("TermOfPurchaseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermOfPurchaseId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDCNoteShipmentId}, true));
                this.columnDCNoteId.AllowDBNull = false;
                this.columnDCNoteShipmentId.AllowDBNull = false;
                this.columnDCNoteShipmentId.Unique = true;
                this.columnOfficeId.AllowDBNull = false;
                this.columnTradingAgencyId.AllowDBNull = false;
                this.columnDeptId.AllowDBNull = false;
                this.columnProductTeamId.AllowDBNull = false;
                this.columnContractId.AllowDBNull = false;
                this.columnProductId.AllowDBNull = false;
                this.columnShipmentId.AllowDBNull = false;
                this.columnSeasonId.AllowDBNull = false;
                this.columnSellCurrencyId.AllowDBNull = false;
                this.columnTotalShippedQty.AllowDBNull = false;
                this.columnNSLCommissionPercent.AllowDBNull = false;
                this.columnNSLCommissionAmt.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnTotalShippedAmt.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MockShopDCNoteShipmentRow NewMockShopDCNoteShipmentRow() {
                return ((MockShopDCNoteShipmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MockShopDCNoteShipmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MockShopDCNoteShipmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MockShopDCNoteShipmentRowChanged != null)) {
                    this.MockShopDCNoteShipmentRowChanged(this, new MockShopDCNoteShipmentRowChangeEvent(((MockShopDCNoteShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MockShopDCNoteShipmentRowChanging != null)) {
                    this.MockShopDCNoteShipmentRowChanging(this, new MockShopDCNoteShipmentRowChangeEvent(((MockShopDCNoteShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MockShopDCNoteShipmentRowDeleted != null)) {
                    this.MockShopDCNoteShipmentRowDeleted(this, new MockShopDCNoteShipmentRowChangeEvent(((MockShopDCNoteShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MockShopDCNoteShipmentRowDeleting != null)) {
                    this.MockShopDCNoteShipmentRowDeleting(this, new MockShopDCNoteShipmentRowChangeEvent(((MockShopDCNoteShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMockShopDCNoteShipmentRow(MockShopDCNoteShipmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MockShopDCNoteShipmentDs ds = new MockShopDCNoteShipmentDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MockShopDCNoteShipmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MockShopDCNoteShipmentRow : global::System.Data.DataRow {
            
            private MockShopDCNoteShipmentDataTable tableMockShopDCNoteShipment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MockShopDCNoteShipmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMockShopDCNoteShipment = ((MockShopDCNoteShipmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DCNoteId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.DCNoteIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.DCNoteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DCNoteShipmentId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.DCNoteShipmentIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.DCNoteShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OfficeId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.OfficeIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.OfficeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradingAgencyId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.TradingAgencyIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.TradingAgencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeptId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.DeptIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.DeptIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductTeamId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.ProductTeamIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.ProductTeamIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ContractId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.ContractIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.ContractIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.ProductIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.ProductIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipmentId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.ShipmentIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.ShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SeasonId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.SeasonIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.SeasonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VendorId {
                get {
                    try {
                        return ((int)(this[this.tableMockShopDCNoteShipment.VendorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorId\' in table \'MockShopDCNoteShipment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMockShopDCNoteShipment.VendorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountryOfOriginId {
                get {
                    try {
                        return ((int)(this[this.tableMockShopDCNoteShipment.CountryOfOriginIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryOfOriginId\' in table \'MockShopDCNoteShipment\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableMockShopDCNoteShipment.CountryOfOriginIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PackingUnitId {
                get {
                    try {
                        return ((int)(this[this.tableMockShopDCNoteShipment.PackingUnitIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackingUnitId\' in table \'MockShopDCNoteShipment\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableMockShopDCNoteShipment.PackingUnitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SellCurrencyId {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.SellCurrencyIdColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.SellCurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalCourierCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableMockShopDCNoteShipment.TotalCourierChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCourierCharge\' in table \'MockShopDCNoteShipment\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableMockShopDCNoteShipment.TotalCourierChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalShippedQty {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.TotalShippedQtyColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.TotalShippedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NSLCommissionPercent {
                get {
                    return ((decimal)(this[this.tableMockShopDCNoteShipment.NSLCommissionPercentColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.NSLCommissionPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NSLCommissionAmt {
                get {
                    return ((decimal)(this[this.tableMockShopDCNoteShipment.NSLCommissionAmtColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.NSLCommissionAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Status {
                get {
                    return ((int)(this[this.tableMockShopDCNoteShipment.StatusColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalShippedAmt {
                get {
                    return ((decimal)(this[this.tableMockShopDCNoteShipment.TotalShippedAmtColumn]));
                }
                set {
                    this[this.tableMockShopDCNoteShipment.TotalShippedAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TermOfPurchaseId {
                get {
                    try {
                        return ((int)(this[this.tableMockShopDCNoteShipment.TermOfPurchaseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TermOfPurchaseId\' in table \'MockShopDCNoteShipment\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableMockShopDCNoteShipment.TermOfPurchaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorIdNull() {
                return this.IsNull(this.tableMockShopDCNoteShipment.VendorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorIdNull() {
                this[this.tableMockShopDCNoteShipment.VendorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryOfOriginIdNull() {
                return this.IsNull(this.tableMockShopDCNoteShipment.CountryOfOriginIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryOfOriginIdNull() {
                this[this.tableMockShopDCNoteShipment.CountryOfOriginIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackingUnitIdNull() {
                return this.IsNull(this.tableMockShopDCNoteShipment.PackingUnitIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackingUnitIdNull() {
                this[this.tableMockShopDCNoteShipment.PackingUnitIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalCourierChargeNull() {
                return this.IsNull(this.tableMockShopDCNoteShipment.TotalCourierChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalCourierChargeNull() {
                this[this.tableMockShopDCNoteShipment.TotalCourierChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTermOfPurchaseIdNull() {
                return this.IsNull(this.tableMockShopDCNoteShipment.TermOfPurchaseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTermOfPurchaseIdNull() {
                this[this.tableMockShopDCNoteShipment.TermOfPurchaseIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MockShopDCNoteShipmentRowChangeEvent : global::System.EventArgs {
            
            private MockShopDCNoteShipmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MockShopDCNoteShipmentRowChangeEvent(MockShopDCNoteShipmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MockShopDCNoteShipmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.dataserver.model.account.MockShopDCNoteShipmentDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MockShopDCNoteShipmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MockShopDCNoteShipmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MockShopDCNoteShipment";
            tableMapping.ColumnMappings.Add("DCNoteId", "DCNoteId");
            tableMapping.ColumnMappings.Add("DCNoteShipmentId", "DCNoteShipmentId");
            tableMapping.ColumnMappings.Add("OfficeId", "OfficeId");
            tableMapping.ColumnMappings.Add("TradingAgencyId", "TradingAgencyId");
            tableMapping.ColumnMappings.Add("DeptId", "DeptId");
            tableMapping.ColumnMappings.Add("ProductTeamId", "ProductTeamId");
            tableMapping.ColumnMappings.Add("ContractId", "ContractId");
            tableMapping.ColumnMappings.Add("ProductId", "ProductId");
            tableMapping.ColumnMappings.Add("ShipmentId", "ShipmentId");
            tableMapping.ColumnMappings.Add("SeasonId", "SeasonId");
            tableMapping.ColumnMappings.Add("VendorId", "VendorId");
            tableMapping.ColumnMappings.Add("CountryOfOriginId", "CountryOfOriginId");
            tableMapping.ColumnMappings.Add("PackingUnitId", "PackingUnitId");
            tableMapping.ColumnMappings.Add("SellCurrencyId", "SellCurrencyId");
            tableMapping.ColumnMappings.Add("TotalCourierCharge", "TotalCourierCharge");
            tableMapping.ColumnMappings.Add("TotalShippedQty", "TotalShippedQty");
            tableMapping.ColumnMappings.Add("NSLCommissionPercent", "NSLCommissionPercent");
            tableMapping.ColumnMappings.Add("NSLCommissionAmt", "NSLCommissionAmt");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("TotalShippedAmt", "TotalShippedAmt");
            tableMapping.ColumnMappings.Add("TermOfPurchaseId", "TermOfPurchaseId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [MockShopDCNoteShipment] WHERE (([DCNoteId] = @Original_DCNoteId) AND ([DCNoteShipmentId] = @Original_DCNoteShipmentId) AND ([OfficeId] = @Original_OfficeId) AND ([TradingAgencyId] = @Original_TradingAgencyId) AND ([DeptId] = @Original_DeptId) AND ([ProductTeamId] = @Original_ProductTeamId) AND ([ContractId] = @Original_ContractId) AND ([ProductId] = @Original_ProductId) AND ([ShipmentId] = @Original_ShipmentId) AND ([SeasonId] = @Original_SeasonId) AND ((@IsNull_VendorId = 1 AND [VendorId] IS NULL) OR ([VendorId] = @Original_VendorId)) AND ((@IsNull_CountryOfOriginId = 1 AND [CountryOfOriginId] IS NULL) OR ([CountryOfOriginId] = @Original_CountryOfOriginId)) AND ((@IsNull_PackingUnitId = 1 AND [PackingUnitId] IS NULL) OR ([PackingUnitId] = @Original_PackingUnitId)) AND ([SellCurrencyId] = @Original_SellCurrencyId) AND ((@IsNull_TotalCourierCharge = 1 AND [TotalCourierCharge] IS NULL) OR ([TotalCourierCharge] = @Original_TotalCourierCharge)) AND ([TotalShippedAmt] = @Original_TotalShippedAmt) AND ([TotalShippedQty] = @Original_TotalShippedQty) AND ([NSLCommissionPercent] = @Original_NSLCommissionPercent) AND ([NSLCommissionAmt] = @Original_NSLCommissionAmt) AND ([Status] = @Original_Status) AND ((@IsNull_TermOfPurchaseId = 1 AND [TermOfPurchaseId] IS NULL) OR ([TermOfPurchaseId] = @Original_TermOfPurchaseId)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradingAgencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalCourierCharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCourierCharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCourierCharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalCourierCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NSLCommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "NSLCommissionPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NSLCommissionAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NSLCommissionAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [MockShopDCNoteShipment] ([DCNoteId], [DCNoteShipmentId], [OfficeId], [TradingAgencyId], [DeptId], [ProductTeamId], [ContractId], [ProductId], [ShipmentId], [SeasonId], [VendorId], [CountryOfOriginId], [PackingUnitId], [SellCurrencyId], [TotalCourierCharge], [TotalShippedAmt], [TotalShippedQty], [NSLCommissionPercent], [NSLCommissionAmt], [Status], [TermOfPurchaseId]) VALUES (@DCNoteId, @DCNoteShipmentId, @OfficeId, @TradingAgencyId, @DeptId, @ProductTeamId, @ContractId, @ProductId, @ShipmentId, @SeasonId, @VendorId, @CountryOfOriginId, @PackingUnitId, @SellCurrencyId, @TotalCourierCharge, @TotalShippedAmt, @TotalShippedQty, @NSLCommissionPercent, @NSLCommissionAmt, @Status, @TermOfPurchaseId);
SELECT DCNoteId, DCNoteShipmentId, OfficeId, TradingAgencyId, DeptId, ProductTeamId, ContractId, ProductId, ShipmentId, SeasonId, VendorId, CountryOfOriginId, PackingUnitId, SellCurrencyId, TotalCourierCharge, TotalShippedAmt, TotalShippedQty, NSLCommissionPercent, NSLCommissionAmt, Status, TermOfPurchaseId FROM MockShopDCNoteShipment WHERE (DCNoteShipmentId = @DCNoteShipmentId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradingAgencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCourierCharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalCourierCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NSLCommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "NSLCommissionPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NSLCommissionAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NSLCommissionAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [MockShopDCNoteShipment] SET [DCNoteId] = @DCNoteId, [DCNoteShipmentId] = " +
                "@DCNoteShipmentId, [OfficeId] = @OfficeId, [TradingAgencyId] = @TradingAgencyId," +
                " [DeptId] = @DeptId, [ProductTeamId] = @ProductTeamId, [ContractId] = @ContractI" +
                "d, [ProductId] = @ProductId, [ShipmentId] = @ShipmentId, [SeasonId] = @SeasonId," +
                " [VendorId] = @VendorId, [CountryOfOriginId] = @CountryOfOriginId, [PackingUnitI" +
                "d] = @PackingUnitId, [SellCurrencyId] = @SellCurrencyId, [TotalCourierCharge] = " +
                "@TotalCourierCharge, [TotalShippedAmt] = @TotalShippedAmt, [TotalShippedQty] = @" +
                "TotalShippedQty, [NSLCommissionPercent] = @NSLCommissionPercent, [NSLCommissionA" +
                "mt] = @NSLCommissionAmt, [Status] = @Status, [TermOfPurchaseId] = @TermOfPurchas" +
                "eId WHERE (([DCNoteId] = @Original_DCNoteId) AND ([DCNoteShipmentId] = @Original" +
                "_DCNoteShipmentId) AND ([OfficeId] = @Original_OfficeId) AND ([TradingAgencyId] " +
                "= @Original_TradingAgencyId) AND ([DeptId] = @Original_DeptId) AND ([ProductTeam" +
                "Id] = @Original_ProductTeamId) AND ([ContractId] = @Original_ContractId) AND ([P" +
                "roductId] = @Original_ProductId) AND ([ShipmentId] = @Original_ShipmentId) AND (" +
                "[SeasonId] = @Original_SeasonId) AND ((@IsNull_VendorId = 1 AND [VendorId] IS NU" +
                "LL) OR ([VendorId] = @Original_VendorId)) AND ((@IsNull_CountryOfOriginId = 1 AN" +
                "D [CountryOfOriginId] IS NULL) OR ([CountryOfOriginId] = @Original_CountryOfOrig" +
                "inId)) AND ((@IsNull_PackingUnitId = 1 AND [PackingUnitId] IS NULL) OR ([Packing" +
                "UnitId] = @Original_PackingUnitId)) AND ([SellCurrencyId] = @Original_SellCurren" +
                "cyId) AND ((@IsNull_TotalCourierCharge = 1 AND [TotalCourierCharge] IS NULL) OR " +
                "([TotalCourierCharge] = @Original_TotalCourierCharge)) AND ([TotalShippedAmt] = " +
                "@Original_TotalShippedAmt) AND ([TotalShippedQty] = @Original_TotalShippedQty) A" +
                "ND ([NSLCommissionPercent] = @Original_NSLCommissionPercent) AND ([NSLCommission" +
                "Amt] = @Original_NSLCommissionAmt) AND ([Status] = @Original_Status) AND ((@IsNu" +
                "ll_TermOfPurchaseId = 1 AND [TermOfPurchaseId] IS NULL) OR ([TermOfPurchaseId] =" +
                " @Original_TermOfPurchaseId)));\r\nSELECT DCNoteId, DCNoteShipmentId, OfficeId, Tr" +
                "adingAgencyId, DeptId, ProductTeamId, ContractId, ProductId, ShipmentId, SeasonI" +
                "d, VendorId, CountryOfOriginId, PackingUnitId, SellCurrencyId, TotalCourierCharg" +
                "e, TotalShippedAmt, TotalShippedQty, NSLCommissionPercent, NSLCommissionAmt, Sta" +
                "tus, TermOfPurchaseId FROM MockShopDCNoteShipment WHERE (DCNoteShipmentId = @DCN" +
                "oteShipmentId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradingAgencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalCourierCharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalCourierCharge", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NSLCommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "NSLCommissionPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NSLCommissionAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NSLCommissionAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradingAgencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalCourierCharge", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalCourierCharge", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalCourierCharge", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "TotalCourierCharge", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NSLCommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 5, 2, "NSLCommissionPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NSLCommissionAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NSLCommissionAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.next.isam.dataserver.Properties.Settings.Default.ISAM_20091215ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        DCNoteId, DCNoteShipmentId, OfficeId, TradingAgencyId, DeptId, ProductTeamId, ContractId, ProductId, ShipmentId, SeasonId, VendorId, CountryOfOriginId, 
                         PackingUnitId, SellCurrencyId, TotalCourierCharge, TotalShippedAmt, TotalShippedQty, NSLCommissionPercent, NSLCommissionAmt, Status, 
                         TermOfPurchaseId
FROM            MockShopDCNoteShipment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MockShopDCNoteShipmentDs.MockShopDCNoteShipmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MockShopDCNoteShipmentDs.MockShopDCNoteShipmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MockShopDCNoteShipmentDs.MockShopDCNoteShipmentDataTable dataTable = new MockShopDCNoteShipmentDs.MockShopDCNoteShipmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MockShopDCNoteShipmentDs.MockShopDCNoteShipmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MockShopDCNoteShipmentDs dataSet) {
            return this.Adapter.Update(dataSet, "MockShopDCNoteShipment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_DCNoteId, 
                    int Original_DCNoteShipmentId, 
                    int Original_OfficeId, 
                    int Original_TradingAgencyId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ContractId, 
                    int Original_ProductId, 
                    int Original_ShipmentId, 
                    int Original_SeasonId, 
                    global::System.Nullable<int> Original_VendorId, 
                    global::System.Nullable<int> Original_CountryOfOriginId, 
                    global::System.Nullable<int> Original_PackingUnitId, 
                    int Original_SellCurrencyId, 
                    global::System.Nullable<decimal> Original_TotalCourierCharge, 
                    decimal Original_TotalShippedAmt, 
                    int Original_TotalShippedQty, 
                    decimal Original_NSLCommissionPercent, 
                    decimal Original_NSLCommissionAmt, 
                    int Original_Status, 
                    global::System.Nullable<int> Original_TermOfPurchaseId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_DCNoteId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_DCNoteShipmentId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_OfficeId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_TradingAgencyId));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_DeptId));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_ProductTeamId));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ContractId));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_ProductId));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ShipmentId));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_SeasonId));
            if ((Original_VendorId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_VendorId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_CountryOfOriginId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_CountryOfOriginId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_PackingUnitId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_PackingUnitId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_SellCurrencyId));
            if ((Original_TotalCourierCharge.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_TotalCourierCharge.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_TotalShippedAmt));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_TotalShippedQty));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_NSLCommissionPercent));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_NSLCommissionAmt));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_Status));
            if ((Original_TermOfPurchaseId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((int)(Original_TermOfPurchaseId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int DCNoteId, 
                    int DCNoteShipmentId, 
                    int OfficeId, 
                    int TradingAgencyId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ContractId, 
                    int ProductId, 
                    int ShipmentId, 
                    int SeasonId, 
                    global::System.Nullable<int> VendorId, 
                    global::System.Nullable<int> CountryOfOriginId, 
                    global::System.Nullable<int> PackingUnitId, 
                    int SellCurrencyId, 
                    global::System.Nullable<decimal> TotalCourierCharge, 
                    decimal TotalShippedAmt, 
                    int TotalShippedQty, 
                    decimal NSLCommissionPercent, 
                    decimal NSLCommissionAmt, 
                    int Status, 
                    global::System.Nullable<int> TermOfPurchaseId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(DCNoteId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(DCNoteShipmentId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(OfficeId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(TradingAgencyId));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(DeptId));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ProductTeamId));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ContractId));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ProductId));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(ShipmentId));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(SeasonId));
            if ((VendorId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(VendorId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CountryOfOriginId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(CountryOfOriginId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PackingUnitId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(PackingUnitId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(SellCurrencyId));
            if ((TotalCourierCharge.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(TotalCourierCharge.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(TotalShippedAmt));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(TotalShippedQty));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(NSLCommissionPercent));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(NSLCommissionAmt));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Status));
            if ((TermOfPurchaseId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(TermOfPurchaseId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int DCNoteId, 
                    int DCNoteShipmentId, 
                    int OfficeId, 
                    int TradingAgencyId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ContractId, 
                    int ProductId, 
                    int ShipmentId, 
                    int SeasonId, 
                    global::System.Nullable<int> VendorId, 
                    global::System.Nullable<int> CountryOfOriginId, 
                    global::System.Nullable<int> PackingUnitId, 
                    int SellCurrencyId, 
                    global::System.Nullable<decimal> TotalCourierCharge, 
                    decimal TotalShippedAmt, 
                    int TotalShippedQty, 
                    decimal NSLCommissionPercent, 
                    decimal NSLCommissionAmt, 
                    int Status, 
                    global::System.Nullable<int> TermOfPurchaseId, 
                    int Original_DCNoteId, 
                    int Original_DCNoteShipmentId, 
                    int Original_OfficeId, 
                    int Original_TradingAgencyId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ContractId, 
                    int Original_ProductId, 
                    int Original_ShipmentId, 
                    int Original_SeasonId, 
                    global::System.Nullable<int> Original_VendorId, 
                    global::System.Nullable<int> Original_CountryOfOriginId, 
                    global::System.Nullable<int> Original_PackingUnitId, 
                    int Original_SellCurrencyId, 
                    global::System.Nullable<decimal> Original_TotalCourierCharge, 
                    decimal Original_TotalShippedAmt, 
                    int Original_TotalShippedQty, 
                    decimal Original_NSLCommissionPercent, 
                    decimal Original_NSLCommissionAmt, 
                    int Original_Status, 
                    global::System.Nullable<int> Original_TermOfPurchaseId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(DCNoteId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(DCNoteShipmentId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(OfficeId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(TradingAgencyId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(DeptId));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ProductTeamId));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ContractId));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ProductId));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(ShipmentId));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(SeasonId));
            if ((VendorId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(VendorId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((CountryOfOriginId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(CountryOfOriginId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PackingUnitId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(PackingUnitId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(SellCurrencyId));
            if ((TotalCourierCharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(TotalCourierCharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(TotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(TotalShippedQty));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(NSLCommissionPercent));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(NSLCommissionAmt));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Status));
            if ((TermOfPurchaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(TermOfPurchaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_DCNoteId));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_DCNoteShipmentId));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_OfficeId));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_TradingAgencyId));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_DeptId));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_ProductTeamId));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_ContractId));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_ProductId));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_ShipmentId));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_SeasonId));
            if ((Original_VendorId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_VendorId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_CountryOfOriginId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_CountryOfOriginId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_PackingUnitId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(Original_PackingUnitId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_SellCurrencyId));
            if ((Original_TotalCourierCharge.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_TotalCourierCharge.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_TotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_TotalShippedQty));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_NSLCommissionPercent));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_NSLCommissionAmt));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(Original_Status));
            if ((Original_TermOfPurchaseId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_TermOfPurchaseId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int DCNoteId, 
                    int OfficeId, 
                    int TradingAgencyId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ContractId, 
                    int ProductId, 
                    int ShipmentId, 
                    int SeasonId, 
                    global::System.Nullable<int> VendorId, 
                    global::System.Nullable<int> CountryOfOriginId, 
                    global::System.Nullable<int> PackingUnitId, 
                    int SellCurrencyId, 
                    global::System.Nullable<decimal> TotalCourierCharge, 
                    decimal TotalShippedAmt, 
                    int TotalShippedQty, 
                    decimal NSLCommissionPercent, 
                    decimal NSLCommissionAmt, 
                    int Status, 
                    global::System.Nullable<int> TermOfPurchaseId, 
                    int Original_DCNoteId, 
                    int Original_DCNoteShipmentId, 
                    int Original_OfficeId, 
                    int Original_TradingAgencyId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ContractId, 
                    int Original_ProductId, 
                    int Original_ShipmentId, 
                    int Original_SeasonId, 
                    global::System.Nullable<int> Original_VendorId, 
                    global::System.Nullable<int> Original_CountryOfOriginId, 
                    global::System.Nullable<int> Original_PackingUnitId, 
                    int Original_SellCurrencyId, 
                    global::System.Nullable<decimal> Original_TotalCourierCharge, 
                    decimal Original_TotalShippedAmt, 
                    int Original_TotalShippedQty, 
                    decimal Original_NSLCommissionPercent, 
                    decimal Original_NSLCommissionAmt, 
                    int Original_Status, 
                    global::System.Nullable<int> Original_TermOfPurchaseId) {
            return this.Update(DCNoteId, Original_DCNoteShipmentId, OfficeId, TradingAgencyId, DeptId, ProductTeamId, ContractId, ProductId, ShipmentId, SeasonId, VendorId, CountryOfOriginId, PackingUnitId, SellCurrencyId, TotalCourierCharge, TotalShippedAmt, TotalShippedQty, NSLCommissionPercent, NSLCommissionAmt, Status, TermOfPurchaseId, Original_DCNoteId, Original_DCNoteShipmentId, Original_OfficeId, Original_TradingAgencyId, Original_DeptId, Original_ProductTeamId, Original_ContractId, Original_ProductId, Original_ShipmentId, Original_SeasonId, Original_VendorId, Original_CountryOfOriginId, Original_PackingUnitId, Original_SellCurrencyId, Original_TotalCourierCharge, Original_TotalShippedAmt, Original_TotalShippedQty, Original_NSLCommissionPercent, Original_NSLCommissionAmt, Original_Status, Original_TermOfPurchaseId);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private MockShopDCNoteShipmentTableAdapter _mockShopDCNoteShipmentTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MockShopDCNoteShipmentTableAdapter MockShopDCNoteShipmentTableAdapter {
            get {
                return this._mockShopDCNoteShipmentTableAdapter;
            }
            set {
                this._mockShopDCNoteShipmentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._mockShopDCNoteShipmentTableAdapter != null) 
                            && (this._mockShopDCNoteShipmentTableAdapter.Connection != null))) {
                    return this._mockShopDCNoteShipmentTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._mockShopDCNoteShipmentTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(MockShopDCNoteShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mockShopDCNoteShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MockShopDCNoteShipment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mockShopDCNoteShipmentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(MockShopDCNoteShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._mockShopDCNoteShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MockShopDCNoteShipment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mockShopDCNoteShipmentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(MockShopDCNoteShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._mockShopDCNoteShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MockShopDCNoteShipment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mockShopDCNoteShipmentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(MockShopDCNoteShipmentDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._mockShopDCNoteShipmentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mockShopDCNoteShipmentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._mockShopDCNoteShipmentTableAdapter != null)) {
                    revertConnections.Add(this._mockShopDCNoteShipmentTableAdapter, this._mockShopDCNoteShipmentTableAdapter.Connection);
                    this._mockShopDCNoteShipmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mockShopDCNoteShipmentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mockShopDCNoteShipmentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mockShopDCNoteShipmentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mockShopDCNoteShipmentTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._mockShopDCNoteShipmentTableAdapter != null)) {
                    this._mockShopDCNoteShipmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mockShopDCNoteShipmentTableAdapter]));
                    this._mockShopDCNoteShipmentTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591