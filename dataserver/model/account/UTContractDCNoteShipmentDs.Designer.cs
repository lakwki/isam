//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36388
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.dataserver.model.account {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("UTContractDCNoteShipmentDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class UTContractDCNoteShipmentDs : global::System.Data.DataSet {
        
        private UTContractDCNoteShipmentDataTable tableUTContractDCNoteShipment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UTContractDCNoteShipmentDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected UTContractDCNoteShipmentDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["UTContractDCNoteShipment"] != null)) {
                    base.Tables.Add(new UTContractDCNoteShipmentDataTable(ds.Tables["UTContractDCNoteShipment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UTContractDCNoteShipmentDataTable UTContractDCNoteShipment {
            get {
                return this.tableUTContractDCNoteShipment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            UTContractDCNoteShipmentDs cln = ((UTContractDCNoteShipmentDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["UTContractDCNoteShipment"] != null)) {
                    base.Tables.Add(new UTContractDCNoteShipmentDataTable(ds.Tables["UTContractDCNoteShipment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableUTContractDCNoteShipment = ((UTContractDCNoteShipmentDataTable)(base.Tables["UTContractDCNoteShipment"]));
            if ((initTable == true)) {
                if ((this.tableUTContractDCNoteShipment != null)) {
                    this.tableUTContractDCNoteShipment.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "UTContractDCNoteShipmentDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/UTContractDCNoteShipmentDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableUTContractDCNoteShipment = new UTContractDCNoteShipmentDataTable();
            base.Tables.Add(this.tableUTContractDCNoteShipment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUTContractDCNoteShipment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            UTContractDCNoteShipmentDs ds = new UTContractDCNoteShipmentDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UTContractDCNoteShipmentRowChangeEventHandler(object sender, UTContractDCNoteShipmentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UTContractDCNoteShipmentDataTable : global::System.Data.TypedTableBase<UTContractDCNoteShipmentRow> {
            
            private global::System.Data.DataColumn columnDCNoteId;
            
            private global::System.Data.DataColumn columnDCNoteShipmentId;
            
            private global::System.Data.DataColumn columnOfficeId;
            
            private global::System.Data.DataColumn columnDeptId;
            
            private global::System.Data.DataColumn columnProductTeamId;
            
            private global::System.Data.DataColumn columnContractId;
            
            private global::System.Data.DataColumn columnProductId;
            
            private global::System.Data.DataColumn columnShipmentId;
            
            private global::System.Data.DataColumn columnSeasonId;
            
            private global::System.Data.DataColumn columnVendorId;
            
            private global::System.Data.DataColumn columnCountryOfOriginId;
            
            private global::System.Data.DataColumn columnPackingUnitId;
            
            private global::System.Data.DataColumn columnSellCurrencyId;
            
            private global::System.Data.DataColumn columnTermOfPurchaseId;
            
            private global::System.Data.DataColumn columnCommission;
            
            private global::System.Data.DataColumn columnMargin;
            
            private global::System.Data.DataColumn columnServiceFee;
            
            private global::System.Data.DataColumn columnSupplierCommission;
            
            private global::System.Data.DataColumn columnSupplierGmtAmt;
            
            private global::System.Data.DataColumn columnCNYExchangeRate;
            
            private global::System.Data.DataColumn columnSupplierGmtAmtInCNY;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UTContractDCNoteShipmentDataTable() {
                this.TableName = "UTContractDCNoteShipment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UTContractDCNoteShipmentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UTContractDCNoteShipmentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DCNoteIdColumn {
                get {
                    return this.columnDCNoteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DCNoteShipmentIdColumn {
                get {
                    return this.columnDCNoteShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeIdColumn {
                get {
                    return this.columnOfficeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeptIdColumn {
                get {
                    return this.columnDeptId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTeamIdColumn {
                get {
                    return this.columnProductTeamId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractIdColumn {
                get {
                    return this.columnContractId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIdColumn {
                get {
                    return this.columnProductId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIdColumn {
                get {
                    return this.columnShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeasonIdColumn {
                get {
                    return this.columnSeasonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorIdColumn {
                get {
                    return this.columnVendorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryOfOriginIdColumn {
                get {
                    return this.columnCountryOfOriginId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackingUnitIdColumn {
                get {
                    return this.columnPackingUnitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellCurrencyIdColumn {
                get {
                    return this.columnSellCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TermOfPurchaseIdColumn {
                get {
                    return this.columnTermOfPurchaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommissionColumn {
                get {
                    return this.columnCommission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarginColumn {
                get {
                    return this.columnMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceFeeColumn {
                get {
                    return this.columnServiceFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierCommissionColumn {
                get {
                    return this.columnSupplierCommission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierGmtAmtColumn {
                get {
                    return this.columnSupplierGmtAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CNYExchangeRateColumn {
                get {
                    return this.columnCNYExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierGmtAmtInCNYColumn {
                get {
                    return this.columnSupplierGmtAmtInCNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UTContractDCNoteShipmentRow this[int index] {
                get {
                    return ((UTContractDCNoteShipmentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UTContractDCNoteShipmentRowChangeEventHandler UTContractDCNoteShipmentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UTContractDCNoteShipmentRowChangeEventHandler UTContractDCNoteShipmentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UTContractDCNoteShipmentRowChangeEventHandler UTContractDCNoteShipmentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UTContractDCNoteShipmentRowChangeEventHandler UTContractDCNoteShipmentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUTContractDCNoteShipmentRow(UTContractDCNoteShipmentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UTContractDCNoteShipmentRow AddUTContractDCNoteShipmentRow(
                        int DCNoteId, 
                        int DCNoteShipmentId, 
                        int OfficeId, 
                        int DeptId, 
                        int ProductTeamId, 
                        int ContractId, 
                        int ProductId, 
                        int ShipmentId, 
                        int SeasonId, 
                        int VendorId, 
                        int CountryOfOriginId, 
                        int PackingUnitId, 
                        int SellCurrencyId, 
                        int TermOfPurchaseId, 
                        decimal Commission, 
                        decimal Margin, 
                        decimal ServiceFee, 
                        decimal SupplierCommission, 
                        decimal SupplierGmtAmt, 
                        decimal CNYExchangeRate, 
                        decimal SupplierGmtAmtInCNY, 
                        int Status) {
                UTContractDCNoteShipmentRow rowUTContractDCNoteShipmentRow = ((UTContractDCNoteShipmentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DCNoteId,
                        DCNoteShipmentId,
                        OfficeId,
                        DeptId,
                        ProductTeamId,
                        ContractId,
                        ProductId,
                        ShipmentId,
                        SeasonId,
                        VendorId,
                        CountryOfOriginId,
                        PackingUnitId,
                        SellCurrencyId,
                        TermOfPurchaseId,
                        Commission,
                        Margin,
                        ServiceFee,
                        SupplierCommission,
                        SupplierGmtAmt,
                        CNYExchangeRate,
                        SupplierGmtAmtInCNY,
                        Status};
                rowUTContractDCNoteShipmentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUTContractDCNoteShipmentRow);
                return rowUTContractDCNoteShipmentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UTContractDCNoteShipmentRow FindByDCNoteShipmentId(int DCNoteShipmentId) {
                return ((UTContractDCNoteShipmentRow)(this.Rows.Find(new object[] {
                            DCNoteShipmentId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UTContractDCNoteShipmentDataTable cln = ((UTContractDCNoteShipmentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UTContractDCNoteShipmentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDCNoteId = base.Columns["DCNoteId"];
                this.columnDCNoteShipmentId = base.Columns["DCNoteShipmentId"];
                this.columnOfficeId = base.Columns["OfficeId"];
                this.columnDeptId = base.Columns["DeptId"];
                this.columnProductTeamId = base.Columns["ProductTeamId"];
                this.columnContractId = base.Columns["ContractId"];
                this.columnProductId = base.Columns["ProductId"];
                this.columnShipmentId = base.Columns["ShipmentId"];
                this.columnSeasonId = base.Columns["SeasonId"];
                this.columnVendorId = base.Columns["VendorId"];
                this.columnCountryOfOriginId = base.Columns["CountryOfOriginId"];
                this.columnPackingUnitId = base.Columns["PackingUnitId"];
                this.columnSellCurrencyId = base.Columns["SellCurrencyId"];
                this.columnTermOfPurchaseId = base.Columns["TermOfPurchaseId"];
                this.columnCommission = base.Columns["Commission"];
                this.columnMargin = base.Columns["Margin"];
                this.columnServiceFee = base.Columns["ServiceFee"];
                this.columnSupplierCommission = base.Columns["SupplierCommission"];
                this.columnSupplierGmtAmt = base.Columns["SupplierGmtAmt"];
                this.columnCNYExchangeRate = base.Columns["CNYExchangeRate"];
                this.columnSupplierGmtAmtInCNY = base.Columns["SupplierGmtAmtInCNY"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDCNoteId = new global::System.Data.DataColumn("DCNoteId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNoteId);
                this.columnDCNoteShipmentId = new global::System.Data.DataColumn("DCNoteShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNoteShipmentId);
                this.columnOfficeId = new global::System.Data.DataColumn("OfficeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeId);
                this.columnDeptId = new global::System.Data.DataColumn("DeptId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptId);
                this.columnProductTeamId = new global::System.Data.DataColumn("ProductTeamId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTeamId);
                this.columnContractId = new global::System.Data.DataColumn("ContractId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractId);
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnShipmentId = new global::System.Data.DataColumn("ShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentId);
                this.columnSeasonId = new global::System.Data.DataColumn("SeasonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeasonId);
                this.columnVendorId = new global::System.Data.DataColumn("VendorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorId);
                this.columnCountryOfOriginId = new global::System.Data.DataColumn("CountryOfOriginId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryOfOriginId);
                this.columnPackingUnitId = new global::System.Data.DataColumn("PackingUnitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingUnitId);
                this.columnSellCurrencyId = new global::System.Data.DataColumn("SellCurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellCurrencyId);
                this.columnTermOfPurchaseId = new global::System.Data.DataColumn("TermOfPurchaseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermOfPurchaseId);
                this.columnCommission = new global::System.Data.DataColumn("Commission", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommission);
                this.columnMargin = new global::System.Data.DataColumn("Margin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMargin);
                this.columnServiceFee = new global::System.Data.DataColumn("ServiceFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceFee);
                this.columnSupplierCommission = new global::System.Data.DataColumn("SupplierCommission", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCommission);
                this.columnSupplierGmtAmt = new global::System.Data.DataColumn("SupplierGmtAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierGmtAmt);
                this.columnCNYExchangeRate = new global::System.Data.DataColumn("CNYExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNYExchangeRate);
                this.columnSupplierGmtAmtInCNY = new global::System.Data.DataColumn("SupplierGmtAmtInCNY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierGmtAmtInCNY);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDCNoteShipmentId}, true));
                this.columnDCNoteId.AllowDBNull = false;
                this.columnDCNoteShipmentId.AllowDBNull = false;
                this.columnDCNoteShipmentId.Unique = true;
                this.columnOfficeId.AllowDBNull = false;
                this.columnDeptId.AllowDBNull = false;
                this.columnProductTeamId.AllowDBNull = false;
                this.columnContractId.AllowDBNull = false;
                this.columnProductId.AllowDBNull = false;
                this.columnShipmentId.AllowDBNull = false;
                this.columnSeasonId.AllowDBNull = false;
                this.columnVendorId.AllowDBNull = false;
                this.columnCountryOfOriginId.AllowDBNull = false;
                this.columnPackingUnitId.AllowDBNull = false;
                this.columnSellCurrencyId.AllowDBNull = false;
                this.columnTermOfPurchaseId.AllowDBNull = false;
                this.columnCommission.AllowDBNull = false;
                this.columnMargin.AllowDBNull = false;
                this.columnServiceFee.AllowDBNull = false;
                this.columnSupplierCommission.AllowDBNull = false;
                this.columnSupplierGmtAmt.AllowDBNull = false;
                this.columnCNYExchangeRate.AllowDBNull = false;
                this.columnSupplierGmtAmtInCNY.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UTContractDCNoteShipmentRow NewUTContractDCNoteShipmentRow() {
                return ((UTContractDCNoteShipmentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UTContractDCNoteShipmentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UTContractDCNoteShipmentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UTContractDCNoteShipmentRowChanged != null)) {
                    this.UTContractDCNoteShipmentRowChanged(this, new UTContractDCNoteShipmentRowChangeEvent(((UTContractDCNoteShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UTContractDCNoteShipmentRowChanging != null)) {
                    this.UTContractDCNoteShipmentRowChanging(this, new UTContractDCNoteShipmentRowChangeEvent(((UTContractDCNoteShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UTContractDCNoteShipmentRowDeleted != null)) {
                    this.UTContractDCNoteShipmentRowDeleted(this, new UTContractDCNoteShipmentRowChangeEvent(((UTContractDCNoteShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UTContractDCNoteShipmentRowDeleting != null)) {
                    this.UTContractDCNoteShipmentRowDeleting(this, new UTContractDCNoteShipmentRowChangeEvent(((UTContractDCNoteShipmentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUTContractDCNoteShipmentRow(UTContractDCNoteShipmentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UTContractDCNoteShipmentDs ds = new UTContractDCNoteShipmentDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UTContractDCNoteShipmentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UTContractDCNoteShipmentRow : global::System.Data.DataRow {
            
            private UTContractDCNoteShipmentDataTable tableUTContractDCNoteShipment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UTContractDCNoteShipmentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUTContractDCNoteShipment = ((UTContractDCNoteShipmentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DCNoteId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.DCNoteIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.DCNoteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DCNoteShipmentId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.DCNoteShipmentIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.DCNoteShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OfficeId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.OfficeIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.OfficeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeptId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.DeptIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.DeptIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductTeamId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.ProductTeamIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.ProductTeamIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ContractId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.ContractIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.ContractIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.ProductIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.ProductIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipmentId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.ShipmentIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.ShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SeasonId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.SeasonIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.SeasonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VendorId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.VendorIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.VendorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountryOfOriginId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.CountryOfOriginIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.CountryOfOriginIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PackingUnitId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.PackingUnitIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.PackingUnitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SellCurrencyId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.SellCurrencyIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.SellCurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TermOfPurchaseId {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.TermOfPurchaseIdColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.TermOfPurchaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Commission {
                get {
                    return ((decimal)(this[this.tableUTContractDCNoteShipment.CommissionColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.CommissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Margin {
                get {
                    return ((decimal)(this[this.tableUTContractDCNoteShipment.MarginColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.MarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ServiceFee {
                get {
                    return ((decimal)(this[this.tableUTContractDCNoteShipment.ServiceFeeColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.ServiceFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SupplierCommission {
                get {
                    return ((decimal)(this[this.tableUTContractDCNoteShipment.SupplierCommissionColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.SupplierCommissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SupplierGmtAmt {
                get {
                    return ((decimal)(this[this.tableUTContractDCNoteShipment.SupplierGmtAmtColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.SupplierGmtAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CNYExchangeRate {
                get {
                    return ((decimal)(this[this.tableUTContractDCNoteShipment.CNYExchangeRateColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.CNYExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SupplierGmtAmtInCNY {
                get {
                    return ((decimal)(this[this.tableUTContractDCNoteShipment.SupplierGmtAmtInCNYColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.SupplierGmtAmtInCNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Status {
                get {
                    return ((int)(this[this.tableUTContractDCNoteShipment.StatusColumn]));
                }
                set {
                    this[this.tableUTContractDCNoteShipment.StatusColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UTContractDCNoteShipmentRowChangeEvent : global::System.EventArgs {
            
            private UTContractDCNoteShipmentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UTContractDCNoteShipmentRowChangeEvent(UTContractDCNoteShipmentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UTContractDCNoteShipmentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.dataserver.model.account.UTContractDCNoteShipmentDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UTContractDCNoteShipmentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UTContractDCNoteShipmentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UTContractDCNoteShipment";
            tableMapping.ColumnMappings.Add("DCNoteId", "DCNoteId");
            tableMapping.ColumnMappings.Add("DCNoteShipmentId", "DCNoteShipmentId");
            tableMapping.ColumnMappings.Add("OfficeId", "OfficeId");
            tableMapping.ColumnMappings.Add("DeptId", "DeptId");
            tableMapping.ColumnMappings.Add("ProductTeamId", "ProductTeamId");
            tableMapping.ColumnMappings.Add("ContractId", "ContractId");
            tableMapping.ColumnMappings.Add("ProductId", "ProductId");
            tableMapping.ColumnMappings.Add("ShipmentId", "ShipmentId");
            tableMapping.ColumnMappings.Add("SeasonId", "SeasonId");
            tableMapping.ColumnMappings.Add("VendorId", "VendorId");
            tableMapping.ColumnMappings.Add("CountryOfOriginId", "CountryOfOriginId");
            tableMapping.ColumnMappings.Add("PackingUnitId", "PackingUnitId");
            tableMapping.ColumnMappings.Add("SellCurrencyId", "SellCurrencyId");
            tableMapping.ColumnMappings.Add("TermOfPurchaseId", "TermOfPurchaseId");
            tableMapping.ColumnMappings.Add("Commission", "Commission");
            tableMapping.ColumnMappings.Add("Margin", "Margin");
            tableMapping.ColumnMappings.Add("ServiceFee", "ServiceFee");
            tableMapping.ColumnMappings.Add("SupplierCommission", "SupplierCommission");
            tableMapping.ColumnMappings.Add("SupplierGmtAmt", "SupplierGmtAmt");
            tableMapping.ColumnMappings.Add("CNYExchangeRate", "CNYExchangeRate");
            tableMapping.ColumnMappings.Add("SupplierGmtAmtInCNY", "SupplierGmtAmtInCNY");
            tableMapping.ColumnMappings.Add("Status", "Status");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UTContractDCNoteShipment] WHERE (([DCNoteId] = @Original_DCNoteId) AND ([DCNoteShipmentId] = @Original_DCNoteShipmentId) AND ([OfficeId] = @Original_OfficeId) AND ([DeptId] = @Original_DeptId) AND ([ProductTeamId] = @Original_ProductTeamId) AND ([ContractId] = @Original_ContractId) AND ([ProductId] = @Original_ProductId) AND ([ShipmentId] = @Original_ShipmentId) AND ([SeasonId] = @Original_SeasonId) AND ([VendorId] = @Original_VendorId) AND ([CountryOfOriginId] = @Original_CountryOfOriginId) AND ([PackingUnitId] = @Original_PackingUnitId) AND ([SellCurrencyId] = @Original_SellCurrencyId) AND ([TermOfPurchaseId] = @Original_TermOfPurchaseId) AND ([Commission] = @Original_Commission) AND ([Margin] = @Original_Margin) AND ([ServiceFee] = @Original_ServiceFee) AND ([SupplierCommission] = @Original_SupplierCommission) AND ([SupplierGmtAmt] = @Original_SupplierGmtAmt) AND ([CNYExchangeRate] = @Original_CNYExchangeRate) AND ([SupplierGmtAmtInCNY] = @Original_SupplierGmtAmtInCNY) AND ([Status] = @Original_Status))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Commission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Commission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Margin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Margin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServiceFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ServiceFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierCommission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNYExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CNYExchangeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierGmtAmtInCNY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierGmtAmtInCNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UTContractDCNoteShipment] ([DCNoteId], [DCNoteShipmentId], [OfficeId], [DeptId], [ProductTeamId], [ContractId], [ProductId], [ShipmentId], [SeasonId], [VendorId], [CountryOfOriginId], [PackingUnitId], [SellCurrencyId], [TermOfPurchaseId], [Commission], [Margin], [ServiceFee], [SupplierCommission], [SupplierGmtAmt], [CNYExchangeRate], [SupplierGmtAmtInCNY], [Status]) VALUES (@DCNoteId, @DCNoteShipmentId, @OfficeId, @DeptId, @ProductTeamId, @ContractId, @ProductId, @ShipmentId, @SeasonId, @VendorId, @CountryOfOriginId, @PackingUnitId, @SellCurrencyId, @TermOfPurchaseId, @Commission, @Margin, @ServiceFee, @SupplierCommission, @SupplierGmtAmt, @CNYExchangeRate, @SupplierGmtAmtInCNY, @Status);
SELECT DCNoteId, DCNoteShipmentId, OfficeId, DeptId, ProductTeamId, ContractId, ProductId, ShipmentId, SeasonId, VendorId, CountryOfOriginId, PackingUnitId, SellCurrencyId, TermOfPurchaseId, Commission, Margin, ServiceFee, SupplierCommission, SupplierGmtAmt, CNYExchangeRate, SupplierGmtAmtInCNY, Status FROM UTContractDCNoteShipment WHERE (DCNoteShipmentId = @DCNoteShipmentId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Commission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Commission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Margin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Margin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ServiceFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierCommission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNYExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CNYExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierGmtAmtInCNY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierGmtAmtInCNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[UTContractDCNoteShipment] SET [DCNoteId] = @DCNoteId, [DCNoteShipme" +
                "ntId] = @DCNoteShipmentId, [OfficeId] = @OfficeId, [DeptId] = @DeptId, [ProductT" +
                "eamId] = @ProductTeamId, [ContractId] = @ContractId, [ProductId] = @ProductId, [" +
                "ShipmentId] = @ShipmentId, [SeasonId] = @SeasonId, [VendorId] = @VendorId, [Coun" +
                "tryOfOriginId] = @CountryOfOriginId, [PackingUnitId] = @PackingUnitId, [SellCurr" +
                "encyId] = @SellCurrencyId, [TermOfPurchaseId] = @TermOfPurchaseId, [Commission] " +
                "= @Commission, [Margin] = @Margin, [ServiceFee] = @ServiceFee, [SupplierCommissi" +
                "on] = @SupplierCommission, [SupplierGmtAmt] = @SupplierGmtAmt, [CNYExchangeRate]" +
                " = @CNYExchangeRate, [SupplierGmtAmtInCNY] = @SupplierGmtAmtInCNY, [Status] = @S" +
                "tatus WHERE (([DCNoteId] = @Original_DCNoteId) AND ([DCNoteShipmentId] = @Origin" +
                "al_DCNoteShipmentId) AND ([OfficeId] = @Original_OfficeId) AND ([DeptId] = @Orig" +
                "inal_DeptId) AND ([ProductTeamId] = @Original_ProductTeamId) AND ([ContractId] =" +
                " @Original_ContractId) AND ([ProductId] = @Original_ProductId) AND ([ShipmentId]" +
                " = @Original_ShipmentId) AND ([SeasonId] = @Original_SeasonId) AND ([VendorId] =" +
                " @Original_VendorId) AND ([CountryOfOriginId] = @Original_CountryOfOriginId) AND" +
                " ([PackingUnitId] = @Original_PackingUnitId) AND ([SellCurrencyId] = @Original_S" +
                "ellCurrencyId) AND ([TermOfPurchaseId] = @Original_TermOfPurchaseId) AND ([Commi" +
                "ssion] = @Original_Commission) AND ([Margin] = @Original_Margin) AND ([ServiceFe" +
                "e] = @Original_ServiceFee) AND ([SupplierCommission] = @Original_SupplierCommiss" +
                "ion) AND ([SupplierGmtAmt] = @Original_SupplierGmtAmt) AND ([CNYExchangeRate] = " +
                "@Original_CNYExchangeRate) AND ([SupplierGmtAmtInCNY] = @Original_SupplierGmtAmt" +
                "InCNY) AND ([Status] = @Original_Status));\r\nSELECT DCNoteId, DCNoteShipmentId, O" +
                "fficeId, DeptId, ProductTeamId, ContractId, ProductId, ShipmentId, SeasonId, Ven" +
                "dorId, CountryOfOriginId, PackingUnitId, SellCurrencyId, TermOfPurchaseId, Commi" +
                "ssion, Margin, ServiceFee, SupplierCommission, SupplierGmtAmt, CNYExchangeRate, " +
                "SupplierGmtAmtInCNY, Status FROM UTContractDCNoteShipment WHERE (DCNoteShipmentI" +
                "d = @DCNoteShipmentId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Commission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Commission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Margin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Margin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ServiceFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ServiceFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierCommission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNYExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CNYExchangeRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierGmtAmtInCNY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierGmtAmtInCNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SellCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SellCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Commission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Commission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Margin", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "Margin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ServiceFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ServiceFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierCommission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNYExchangeRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "CNYExchangeRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierGmtAmtInCNY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SupplierGmtAmtInCNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.next.isam.dataserver.Properties.Settings.Default.ISAMConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT DCNoteId, DCNoteShipmentId, OfficeId, DeptId, ProductTeamId, ContractId, ProductId, ShipmentId, SeasonId, VendorId, CountryOfOriginId, PackingUnitId, SellCurrencyId, TermOfPurchaseId, Commission, Margin, ServiceFee, SupplierCommission, SupplierGmtAmt, CNYExchangeRate, SupplierGmtAmtInCNY, Status FROM dbo.UTContractDCNoteShipment";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(UTContractDCNoteShipmentDs.UTContractDCNoteShipmentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual UTContractDCNoteShipmentDs.UTContractDCNoteShipmentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            UTContractDCNoteShipmentDs.UTContractDCNoteShipmentDataTable dataTable = new UTContractDCNoteShipmentDs.UTContractDCNoteShipmentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(UTContractDCNoteShipmentDs.UTContractDCNoteShipmentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(UTContractDCNoteShipmentDs dataSet) {
            return this.Adapter.Update(dataSet, "UTContractDCNoteShipment");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_DCNoteId, 
                    int Original_DCNoteShipmentId, 
                    int Original_OfficeId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ContractId, 
                    int Original_ProductId, 
                    int Original_ShipmentId, 
                    int Original_SeasonId, 
                    int Original_VendorId, 
                    int Original_CountryOfOriginId, 
                    int Original_PackingUnitId, 
                    int Original_SellCurrencyId, 
                    int Original_TermOfPurchaseId, 
                    decimal Original_Commission, 
                    decimal Original_Margin, 
                    decimal Original_ServiceFee, 
                    decimal Original_SupplierCommission, 
                    decimal Original_SupplierGmtAmt, 
                    decimal Original_CNYExchangeRate, 
                    decimal Original_SupplierGmtAmtInCNY, 
                    int Original_Status) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_DCNoteId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_DCNoteShipmentId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_OfficeId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_DeptId));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ProductTeamId));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_ContractId));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ProductId));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_ShipmentId));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_SeasonId));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_VendorId));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_CountryOfOriginId));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_PackingUnitId));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_SellCurrencyId));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_TermOfPurchaseId));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_Commission));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_Margin));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_ServiceFee));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_SupplierCommission));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_SupplierGmtAmt));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_CNYExchangeRate));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_SupplierGmtAmtInCNY));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_Status));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int DCNoteId, 
                    int DCNoteShipmentId, 
                    int OfficeId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ContractId, 
                    int ProductId, 
                    int ShipmentId, 
                    int SeasonId, 
                    int VendorId, 
                    int CountryOfOriginId, 
                    int PackingUnitId, 
                    int SellCurrencyId, 
                    int TermOfPurchaseId, 
                    decimal Commission, 
                    decimal Margin, 
                    decimal ServiceFee, 
                    decimal SupplierCommission, 
                    decimal SupplierGmtAmt, 
                    decimal CNYExchangeRate, 
                    decimal SupplierGmtAmtInCNY, 
                    int Status) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(DCNoteId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(DCNoteShipmentId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(OfficeId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(DeptId));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(ProductTeamId));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ContractId));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ProductId));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ShipmentId));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(SeasonId));
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(VendorId));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(CountryOfOriginId));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(PackingUnitId));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(SellCurrencyId));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(TermOfPurchaseId));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(Commission));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(Margin));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(ServiceFee));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(SupplierCommission));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(SupplierGmtAmt));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(CNYExchangeRate));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(SupplierGmtAmtInCNY));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Status));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int DCNoteId, 
                    int DCNoteShipmentId, 
                    int OfficeId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ContractId, 
                    int ProductId, 
                    int ShipmentId, 
                    int SeasonId, 
                    int VendorId, 
                    int CountryOfOriginId, 
                    int PackingUnitId, 
                    int SellCurrencyId, 
                    int TermOfPurchaseId, 
                    decimal Commission, 
                    decimal Margin, 
                    decimal ServiceFee, 
                    decimal SupplierCommission, 
                    decimal SupplierGmtAmt, 
                    decimal CNYExchangeRate, 
                    decimal SupplierGmtAmtInCNY, 
                    int Status, 
                    int Original_DCNoteId, 
                    int Original_DCNoteShipmentId, 
                    int Original_OfficeId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ContractId, 
                    int Original_ProductId, 
                    int Original_ShipmentId, 
                    int Original_SeasonId, 
                    int Original_VendorId, 
                    int Original_CountryOfOriginId, 
                    int Original_PackingUnitId, 
                    int Original_SellCurrencyId, 
                    int Original_TermOfPurchaseId, 
                    decimal Original_Commission, 
                    decimal Original_Margin, 
                    decimal Original_ServiceFee, 
                    decimal Original_SupplierCommission, 
                    decimal Original_SupplierGmtAmt, 
                    decimal Original_CNYExchangeRate, 
                    decimal Original_SupplierGmtAmtInCNY, 
                    int Original_Status) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(DCNoteId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(DCNoteShipmentId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(OfficeId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(DeptId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(ProductTeamId));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ContractId));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ProductId));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ShipmentId));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(SeasonId));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(VendorId));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(CountryOfOriginId));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(PackingUnitId));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(SellCurrencyId));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(TermOfPurchaseId));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Commission));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Margin));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(ServiceFee));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(SupplierCommission));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(SupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(CNYExchangeRate));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(SupplierGmtAmtInCNY));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Status));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_DCNoteId));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_DCNoteShipmentId));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_OfficeId));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_DeptId));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(Original_ProductTeamId));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(Original_ContractId));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_ProductId));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_ShipmentId));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_SeasonId));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_VendorId));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Original_CountryOfOriginId));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_PackingUnitId));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Original_SellCurrencyId));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_TermOfPurchaseId));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Original_Commission));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Original_Margin));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Original_ServiceFee));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_SupplierCommission));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_SupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_CNYExchangeRate));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_SupplierGmtAmtInCNY));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_Status));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int DCNoteId, 
                    int OfficeId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ContractId, 
                    int ProductId, 
                    int ShipmentId, 
                    int SeasonId, 
                    int VendorId, 
                    int CountryOfOriginId, 
                    int PackingUnitId, 
                    int SellCurrencyId, 
                    int TermOfPurchaseId, 
                    decimal Commission, 
                    decimal Margin, 
                    decimal ServiceFee, 
                    decimal SupplierCommission, 
                    decimal SupplierGmtAmt, 
                    decimal CNYExchangeRate, 
                    decimal SupplierGmtAmtInCNY, 
                    int Status, 
                    int Original_DCNoteId, 
                    int Original_DCNoteShipmentId, 
                    int Original_OfficeId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ContractId, 
                    int Original_ProductId, 
                    int Original_ShipmentId, 
                    int Original_SeasonId, 
                    int Original_VendorId, 
                    int Original_CountryOfOriginId, 
                    int Original_PackingUnitId, 
                    int Original_SellCurrencyId, 
                    int Original_TermOfPurchaseId, 
                    decimal Original_Commission, 
                    decimal Original_Margin, 
                    decimal Original_ServiceFee, 
                    decimal Original_SupplierCommission, 
                    decimal Original_SupplierGmtAmt, 
                    decimal Original_CNYExchangeRate, 
                    decimal Original_SupplierGmtAmtInCNY, 
                    int Original_Status) {
            return this.Update(DCNoteId, Original_DCNoteShipmentId, OfficeId, DeptId, ProductTeamId, ContractId, ProductId, ShipmentId, SeasonId, VendorId, CountryOfOriginId, PackingUnitId, SellCurrencyId, TermOfPurchaseId, Commission, Margin, ServiceFee, SupplierCommission, SupplierGmtAmt, CNYExchangeRate, SupplierGmtAmtInCNY, Status, Original_DCNoteId, Original_DCNoteShipmentId, Original_OfficeId, Original_DeptId, Original_ProductTeamId, Original_ContractId, Original_ProductId, Original_ShipmentId, Original_SeasonId, Original_VendorId, Original_CountryOfOriginId, Original_PackingUnitId, Original_SellCurrencyId, Original_TermOfPurchaseId, Original_Commission, Original_Margin, Original_ServiceFee, Original_SupplierCommission, Original_SupplierGmtAmt, Original_CNYExchangeRate, Original_SupplierGmtAmtInCNY, Original_Status);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private UTContractDCNoteShipmentTableAdapter _uTContractDCNoteShipmentTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UTContractDCNoteShipmentTableAdapter UTContractDCNoteShipmentTableAdapter {
            get {
                return this._uTContractDCNoteShipmentTableAdapter;
            }
            set {
                this._uTContractDCNoteShipmentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._uTContractDCNoteShipmentTableAdapter != null) 
                            && (this._uTContractDCNoteShipmentTableAdapter.Connection != null))) {
                    return this._uTContractDCNoteShipmentTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._uTContractDCNoteShipmentTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(UTContractDCNoteShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._uTContractDCNoteShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UTContractDCNoteShipment.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uTContractDCNoteShipmentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(UTContractDCNoteShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._uTContractDCNoteShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UTContractDCNoteShipment.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uTContractDCNoteShipmentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(UTContractDCNoteShipmentDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._uTContractDCNoteShipmentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UTContractDCNoteShipment.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uTContractDCNoteShipmentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(UTContractDCNoteShipmentDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._uTContractDCNoteShipmentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uTContractDCNoteShipmentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._uTContractDCNoteShipmentTableAdapter != null)) {
                    revertConnections.Add(this._uTContractDCNoteShipmentTableAdapter, this._uTContractDCNoteShipmentTableAdapter.Connection);
                    this._uTContractDCNoteShipmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uTContractDCNoteShipmentTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uTContractDCNoteShipmentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uTContractDCNoteShipmentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uTContractDCNoteShipmentTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._uTContractDCNoteShipmentTableAdapter != null)) {
                    this._uTContractDCNoteShipmentTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uTContractDCNoteShipmentTableAdapter]));
                    this._uTContractDCNoteShipmentTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591