//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.dataserver.model.account {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SunInterfaceLogDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SunInterfaceLogDs : global::System.Data.DataSet {
        
        private SunInterfaceLogDataTable tableSunInterfaceLog;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SunInterfaceLogDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SunInterfaceLogDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SunInterfaceLog"] != null)) {
                    base.Tables.Add(new SunInterfaceLogDataTable(ds.Tables["SunInterfaceLog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SunInterfaceLogDataTable SunInterfaceLog {
            get {
                return this.tableSunInterfaceLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SunInterfaceLogDs cln = ((SunInterfaceLogDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SunInterfaceLog"] != null)) {
                    base.Tables.Add(new SunInterfaceLogDataTable(ds.Tables["SunInterfaceLog"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSunInterfaceLog = ((SunInterfaceLogDataTable)(base.Tables["SunInterfaceLog"]));
            if ((initTable == true)) {
                if ((this.tableSunInterfaceLog != null)) {
                    this.tableSunInterfaceLog.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SunInterfaceLogDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SunInterfaceLogDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSunInterfaceLog = new SunInterfaceLogDataTable();
            base.Tables.Add(this.tableSunInterfaceLog);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSunInterfaceLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SunInterfaceLogDs ds = new SunInterfaceLogDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SunInterfaceLogRowChangeEventHandler(object sender, SunInterfaceLogRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SunInterfaceLogDataTable : global::System.Data.TypedTableBase<SunInterfaceLogRow> {
            
            private global::System.Data.DataColumn columnSunInterfaceLogId;
            
            private global::System.Data.DataColumn columnSunInterfaceTypeId;
            
            private global::System.Data.DataColumn columnShipmentId;
            
            private global::System.Data.DataColumn columnSplitShipmentId;
            
            private global::System.Data.DataColumn columnFiscalYear;
            
            private global::System.Data.DataColumn columnPeriod;
            
            private global::System.Data.DataColumn columnTransactionDate;
            
            private global::System.Data.DataColumn columnContractNo;
            
            private global::System.Data.DataColumn columnNSLPONo;
            
            private global::System.Data.DataColumn columnDeliveryNo;
            
            private global::System.Data.DataColumn columnOfficeId;
            
            private global::System.Data.DataColumn columnDeptId;
            
            private global::System.Data.DataColumn columnProductTeamId;
            
            private global::System.Data.DataColumn columnProductId;
            
            private global::System.Data.DataColumn columnSeasonId;
            
            private global::System.Data.DataColumn columnVendorId;
            
            private global::System.Data.DataColumn columnCustomerId;
            
            private global::System.Data.DataColumn columnTermOfPurchaseId;
            
            private global::System.Data.DataColumn columnCustomerDestinationId;
            
            private global::System.Data.DataColumn columnTradingAgencyId;
            
            private global::System.Data.DataColumn columnCurrencyId;
            
            private global::System.Data.DataColumn columnPaymentTermId;
            
            private global::System.Data.DataColumn columnCountryOfOriginId;
            
            private global::System.Data.DataColumn columnDesignSourceId;
            
            private global::System.Data.DataColumn columnWithOPRFabric;
            
            private global::System.Data.DataColumn columnInvoicePrefix;
            
            private global::System.Data.DataColumn columnInvoiceSeq;
            
            private global::System.Data.DataColumn columnInvoiceYear;
            
            private global::System.Data.DataColumn columnSequenceNo;
            
            private global::System.Data.DataColumn columnInvoiceUploadDate;
            
            private global::System.Data.DataColumn columnBaseAmt;
            
            private global::System.Data.DataColumn columnOtherAmt;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnPiecesPerPack;
            
            private global::System.Data.DataColumn columnPackingUnitId;
            
            private global::System.Data.DataColumn columnSupplierInvoiceNo;
            
            private global::System.Data.DataColumn columnRefNo;
            
            private global::System.Data.DataColumn columnDCNoteNo;
            
            private global::System.Data.DataColumn columnBaseTax;
            
            private global::System.Data.DataColumn columnOtherTax;
            
            private global::System.Data.DataColumn columnSetSplitCount;
            
            private global::System.Data.DataColumn columnQACommissionPercent;
            
            private global::System.Data.DataColumn columnVendorPaymentDiscountPercent;
            
            private global::System.Data.DataColumn columnLabTestIncome;
            
            private global::System.Data.DataColumn columnUKSupplierCode;
            
            private global::System.Data.DataColumn columnSalesCommission;
            
            private global::System.Data.DataColumn columnTotalShippedAmt;
            
            private global::System.Data.DataColumn columnTotalShippedNetFOBAmt;
            
            private global::System.Data.DataColumn columnTotalShippedSupplierGmtAmt;
            
            private global::System.Data.DataColumn columnUTInputVATAmt;
            
            private global::System.Data.DataColumn columnUTOutputVATAmt;
            
            private global::System.Data.DataColumn columnUTImportDuty;
            
            private global::System.Data.DataColumn columnUTImportDutyInBaseCurrency;
            
            private global::System.Data.DataColumn columnUTTotalShippedAmt;
            
            private global::System.Data.DataColumn columnUTTotalShippedNetFOBAmt;
            
            private global::System.Data.DataColumn columnUTTotalShippedSupplierGmtAmt;
            
            private global::System.Data.DataColumn columnUTSalesCommission;
            
            private global::System.Data.DataColumn columnIsNextMfgOrder;
            
            private global::System.Data.DataColumn columnIsPOIssueToNextMfg;
            
            private global::System.Data.DataColumn columnIsMockShopSample;
            
            private global::System.Data.DataColumn columnIsStudioSample;
            
            private global::System.Data.DataColumn columnIsSelfBilledOrder;
            
            private global::System.Data.DataColumn columnCategoryId;
            
            private global::System.Data.DataColumn columnFullBaseAmt;
            
            private global::System.Data.DataColumn columnFullOtherAmt;
            
            private global::System.Data.DataColumn columnFullBaseTax;
            
            private global::System.Data.DataColumn columnFullOtherTax;
            
            private global::System.Data.DataColumn columnFullQty;
            
            private global::System.Data.DataColumn columnIsReversalEntry;
            
            private global::System.Data.DataColumn columnQueueId;
            
            private global::System.Data.DataColumn columnCreatedOn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SunInterfaceLogDataTable() {
                this.TableName = "SunInterfaceLog";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SunInterfaceLogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SunInterfaceLogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SunInterfaceLogIdColumn {
                get {
                    return this.columnSunInterfaceLogId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SunInterfaceTypeIdColumn {
                get {
                    return this.columnSunInterfaceTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIdColumn {
                get {
                    return this.columnShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SplitShipmentIdColumn {
                get {
                    return this.columnSplitShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FiscalYearColumn {
                get {
                    return this.columnFiscalYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PeriodColumn {
                get {
                    return this.columnPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionDateColumn {
                get {
                    return this.columnTransactionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractNoColumn {
                get {
                    return this.columnContractNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NSLPONoColumn {
                get {
                    return this.columnNSLPONo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryNoColumn {
                get {
                    return this.columnDeliveryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeIdColumn {
                get {
                    return this.columnOfficeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeptIdColumn {
                get {
                    return this.columnDeptId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTeamIdColumn {
                get {
                    return this.columnProductTeamId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIdColumn {
                get {
                    return this.columnProductId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeasonIdColumn {
                get {
                    return this.columnSeasonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorIdColumn {
                get {
                    return this.columnVendorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.columnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TermOfPurchaseIdColumn {
                get {
                    return this.columnTermOfPurchaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerDestinationIdColumn {
                get {
                    return this.columnCustomerDestinationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingAgencyIdColumn {
                get {
                    return this.columnTradingAgencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIdColumn {
                get {
                    return this.columnCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTermIdColumn {
                get {
                    return this.columnPaymentTermId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryOfOriginIdColumn {
                get {
                    return this.columnCountryOfOriginId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DesignSourceIdColumn {
                get {
                    return this.columnDesignSourceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WithOPRFabricColumn {
                get {
                    return this.columnWithOPRFabric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrefixColumn {
                get {
                    return this.columnInvoicePrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceSeqColumn {
                get {
                    return this.columnInvoiceSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceYearColumn {
                get {
                    return this.columnInvoiceYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SequenceNoColumn {
                get {
                    return this.columnSequenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceUploadDateColumn {
                get {
                    return this.columnInvoiceUploadDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseAmtColumn {
                get {
                    return this.columnBaseAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherAmtColumn {
                get {
                    return this.columnOtherAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PiecesPerPackColumn {
                get {
                    return this.columnPiecesPerPack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackingUnitIdColumn {
                get {
                    return this.columnPackingUnitId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierInvoiceNoColumn {
                get {
                    return this.columnSupplierInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefNoColumn {
                get {
                    return this.columnRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DCNoteNoColumn {
                get {
                    return this.columnDCNoteNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseTaxColumn {
                get {
                    return this.columnBaseTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherTaxColumn {
                get {
                    return this.columnOtherTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SetSplitCountColumn {
                get {
                    return this.columnSetSplitCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QACommissionPercentColumn {
                get {
                    return this.columnQACommissionPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorPaymentDiscountPercentColumn {
                get {
                    return this.columnVendorPaymentDiscountPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabTestIncomeColumn {
                get {
                    return this.columnLabTestIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UKSupplierCodeColumn {
                get {
                    return this.columnUKSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesCommissionColumn {
                get {
                    return this.columnSalesCommission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedAmtColumn {
                get {
                    return this.columnTotalShippedAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedNetFOBAmtColumn {
                get {
                    return this.columnTotalShippedNetFOBAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedSupplierGmtAmtColumn {
                get {
                    return this.columnTotalShippedSupplierGmtAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTInputVATAmtColumn {
                get {
                    return this.columnUTInputVATAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTOutputVATAmtColumn {
                get {
                    return this.columnUTOutputVATAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTImportDutyColumn {
                get {
                    return this.columnUTImportDuty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTImportDutyInBaseCurrencyColumn {
                get {
                    return this.columnUTImportDutyInBaseCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTTotalShippedAmtColumn {
                get {
                    return this.columnUTTotalShippedAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTTotalShippedNetFOBAmtColumn {
                get {
                    return this.columnUTTotalShippedNetFOBAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTTotalShippedSupplierGmtAmtColumn {
                get {
                    return this.columnUTTotalShippedSupplierGmtAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UTSalesCommissionColumn {
                get {
                    return this.columnUTSalesCommission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsNextMfgOrderColumn {
                get {
                    return this.columnIsNextMfgOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsPOIssueToNextMfgColumn {
                get {
                    return this.columnIsPOIssueToNextMfg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsMockShopSampleColumn {
                get {
                    return this.columnIsMockShopSample;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsStudioSampleColumn {
                get {
                    return this.columnIsStudioSample;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSelfBilledOrderColumn {
                get {
                    return this.columnIsSelfBilledOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CategoryIdColumn {
                get {
                    return this.columnCategoryId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullBaseAmtColumn {
                get {
                    return this.columnFullBaseAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullOtherAmtColumn {
                get {
                    return this.columnFullOtherAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullBaseTaxColumn {
                get {
                    return this.columnFullBaseTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullOtherTaxColumn {
                get {
                    return this.columnFullOtherTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullQtyColumn {
                get {
                    return this.columnFullQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsReversalEntryColumn {
                get {
                    return this.columnIsReversalEntry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QueueIdColumn {
                get {
                    return this.columnQueueId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedOnColumn {
                get {
                    return this.columnCreatedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SunInterfaceLogRow this[int index] {
                get {
                    return ((SunInterfaceLogRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SunInterfaceLogRowChangeEventHandler SunInterfaceLogRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SunInterfaceLogRowChangeEventHandler SunInterfaceLogRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SunInterfaceLogRowChangeEventHandler SunInterfaceLogRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SunInterfaceLogRowChangeEventHandler SunInterfaceLogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSunInterfaceLogRow(SunInterfaceLogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SunInterfaceLogRow AddSunInterfaceLogRow(
                        int SunInterfaceLogId, 
                        int SunInterfaceTypeId, 
                        int ShipmentId, 
                        int SplitShipmentId, 
                        int FiscalYear, 
                        int Period, 
                        System.DateTime TransactionDate, 
                        string ContractNo, 
                        string NSLPONo, 
                        int DeliveryNo, 
                        int OfficeId, 
                        int DeptId, 
                        int ProductTeamId, 
                        int ProductId, 
                        int SeasonId, 
                        int VendorId, 
                        int CustomerId, 
                        int TermOfPurchaseId, 
                        int CustomerDestinationId, 
                        int TradingAgencyId, 
                        int CurrencyId, 
                        int PaymentTermId, 
                        int CountryOfOriginId, 
                        int DesignSourceId, 
                        int WithOPRFabric, 
                        string InvoicePrefix, 
                        int InvoiceSeq, 
                        int InvoiceYear, 
                        int SequenceNo, 
                        System.DateTime InvoiceUploadDate, 
                        decimal BaseAmt, 
                        decimal OtherAmt, 
                        int Qty, 
                        int PiecesPerPack, 
                        int PackingUnitId, 
                        string SupplierInvoiceNo, 
                        string RefNo, 
                        string DCNoteNo, 
                        decimal BaseTax, 
                        decimal OtherTax, 
                        int SetSplitCount, 
                        decimal QACommissionPercent, 
                        decimal VendorPaymentDiscountPercent, 
                        decimal LabTestIncome, 
                        string UKSupplierCode, 
                        decimal SalesCommission, 
                        decimal TotalShippedAmt, 
                        decimal TotalShippedNetFOBAmt, 
                        decimal TotalShippedSupplierGmtAmt, 
                        decimal UTInputVATAmt, 
                        decimal UTOutputVATAmt, 
                        decimal UTImportDuty, 
                        decimal UTImportDutyInBaseCurrency, 
                        decimal UTTotalShippedAmt, 
                        decimal UTTotalShippedNetFOBAmt, 
                        decimal UTTotalShippedSupplierGmtAmt, 
                        decimal UTSalesCommission, 
                        int IsNextMfgOrder, 
                        int IsPOIssueToNextMfg, 
                        int IsMockShopSample, 
                        int IsStudioSample, 
                        bool IsSelfBilledOrder, 
                        int CategoryId, 
                        decimal FullBaseAmt, 
                        decimal FullOtherAmt, 
                        decimal FullBaseTax, 
                        decimal FullOtherTax, 
                        int FullQty, 
                        bool IsReversalEntry, 
                        int QueueId, 
                        System.DateTime CreatedOn) {
                SunInterfaceLogRow rowSunInterfaceLogRow = ((SunInterfaceLogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SunInterfaceLogId,
                        SunInterfaceTypeId,
                        ShipmentId,
                        SplitShipmentId,
                        FiscalYear,
                        Period,
                        TransactionDate,
                        ContractNo,
                        NSLPONo,
                        DeliveryNo,
                        OfficeId,
                        DeptId,
                        ProductTeamId,
                        ProductId,
                        SeasonId,
                        VendorId,
                        CustomerId,
                        TermOfPurchaseId,
                        CustomerDestinationId,
                        TradingAgencyId,
                        CurrencyId,
                        PaymentTermId,
                        CountryOfOriginId,
                        DesignSourceId,
                        WithOPRFabric,
                        InvoicePrefix,
                        InvoiceSeq,
                        InvoiceYear,
                        SequenceNo,
                        InvoiceUploadDate,
                        BaseAmt,
                        OtherAmt,
                        Qty,
                        PiecesPerPack,
                        PackingUnitId,
                        SupplierInvoiceNo,
                        RefNo,
                        DCNoteNo,
                        BaseTax,
                        OtherTax,
                        SetSplitCount,
                        QACommissionPercent,
                        VendorPaymentDiscountPercent,
                        LabTestIncome,
                        UKSupplierCode,
                        SalesCommission,
                        TotalShippedAmt,
                        TotalShippedNetFOBAmt,
                        TotalShippedSupplierGmtAmt,
                        UTInputVATAmt,
                        UTOutputVATAmt,
                        UTImportDuty,
                        UTImportDutyInBaseCurrency,
                        UTTotalShippedAmt,
                        UTTotalShippedNetFOBAmt,
                        UTTotalShippedSupplierGmtAmt,
                        UTSalesCommission,
                        IsNextMfgOrder,
                        IsPOIssueToNextMfg,
                        IsMockShopSample,
                        IsStudioSample,
                        IsSelfBilledOrder,
                        CategoryId,
                        FullBaseAmt,
                        FullOtherAmt,
                        FullBaseTax,
                        FullOtherTax,
                        FullQty,
                        IsReversalEntry,
                        QueueId,
                        CreatedOn};
                rowSunInterfaceLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSunInterfaceLogRow);
                return rowSunInterfaceLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SunInterfaceLogRow FindBySunInterfaceLogId(int SunInterfaceLogId) {
                return ((SunInterfaceLogRow)(this.Rows.Find(new object[] {
                            SunInterfaceLogId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SunInterfaceLogDataTable cln = ((SunInterfaceLogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SunInterfaceLogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSunInterfaceLogId = base.Columns["SunInterfaceLogId"];
                this.columnSunInterfaceTypeId = base.Columns["SunInterfaceTypeId"];
                this.columnShipmentId = base.Columns["ShipmentId"];
                this.columnSplitShipmentId = base.Columns["SplitShipmentId"];
                this.columnFiscalYear = base.Columns["FiscalYear"];
                this.columnPeriod = base.Columns["Period"];
                this.columnTransactionDate = base.Columns["TransactionDate"];
                this.columnContractNo = base.Columns["ContractNo"];
                this.columnNSLPONo = base.Columns["NSLPONo"];
                this.columnDeliveryNo = base.Columns["DeliveryNo"];
                this.columnOfficeId = base.Columns["OfficeId"];
                this.columnDeptId = base.Columns["DeptId"];
                this.columnProductTeamId = base.Columns["ProductTeamId"];
                this.columnProductId = base.Columns["ProductId"];
                this.columnSeasonId = base.Columns["SeasonId"];
                this.columnVendorId = base.Columns["VendorId"];
                this.columnCustomerId = base.Columns["CustomerId"];
                this.columnTermOfPurchaseId = base.Columns["TermOfPurchaseId"];
                this.columnCustomerDestinationId = base.Columns["CustomerDestinationId"];
                this.columnTradingAgencyId = base.Columns["TradingAgencyId"];
                this.columnCurrencyId = base.Columns["CurrencyId"];
                this.columnPaymentTermId = base.Columns["PaymentTermId"];
                this.columnCountryOfOriginId = base.Columns["CountryOfOriginId"];
                this.columnDesignSourceId = base.Columns["DesignSourceId"];
                this.columnWithOPRFabric = base.Columns["WithOPRFabric"];
                this.columnInvoicePrefix = base.Columns["InvoicePrefix"];
                this.columnInvoiceSeq = base.Columns["InvoiceSeq"];
                this.columnInvoiceYear = base.Columns["InvoiceYear"];
                this.columnSequenceNo = base.Columns["SequenceNo"];
                this.columnInvoiceUploadDate = base.Columns["InvoiceUploadDate"];
                this.columnBaseAmt = base.Columns["BaseAmt"];
                this.columnOtherAmt = base.Columns["OtherAmt"];
                this.columnQty = base.Columns["Qty"];
                this.columnPiecesPerPack = base.Columns["PiecesPerPack"];
                this.columnPackingUnitId = base.Columns["PackingUnitId"];
                this.columnSupplierInvoiceNo = base.Columns["SupplierInvoiceNo"];
                this.columnRefNo = base.Columns["RefNo"];
                this.columnDCNoteNo = base.Columns["DCNoteNo"];
                this.columnBaseTax = base.Columns["BaseTax"];
                this.columnOtherTax = base.Columns["OtherTax"];
                this.columnSetSplitCount = base.Columns["SetSplitCount"];
                this.columnQACommissionPercent = base.Columns["QACommissionPercent"];
                this.columnVendorPaymentDiscountPercent = base.Columns["VendorPaymentDiscountPercent"];
                this.columnLabTestIncome = base.Columns["LabTestIncome"];
                this.columnUKSupplierCode = base.Columns["UKSupplierCode"];
                this.columnSalesCommission = base.Columns["SalesCommission"];
                this.columnTotalShippedAmt = base.Columns["TotalShippedAmt"];
                this.columnTotalShippedNetFOBAmt = base.Columns["TotalShippedNetFOBAmt"];
                this.columnTotalShippedSupplierGmtAmt = base.Columns["TotalShippedSupplierGmtAmt"];
                this.columnUTInputVATAmt = base.Columns["UTInputVATAmt"];
                this.columnUTOutputVATAmt = base.Columns["UTOutputVATAmt"];
                this.columnUTImportDuty = base.Columns["UTImportDuty"];
                this.columnUTImportDutyInBaseCurrency = base.Columns["UTImportDutyInBaseCurrency"];
                this.columnUTTotalShippedAmt = base.Columns["UTTotalShippedAmt"];
                this.columnUTTotalShippedNetFOBAmt = base.Columns["UTTotalShippedNetFOBAmt"];
                this.columnUTTotalShippedSupplierGmtAmt = base.Columns["UTTotalShippedSupplierGmtAmt"];
                this.columnUTSalesCommission = base.Columns["UTSalesCommission"];
                this.columnIsNextMfgOrder = base.Columns["IsNextMfgOrder"];
                this.columnIsPOIssueToNextMfg = base.Columns["IsPOIssueToNextMfg"];
                this.columnIsMockShopSample = base.Columns["IsMockShopSample"];
                this.columnIsStudioSample = base.Columns["IsStudioSample"];
                this.columnIsSelfBilledOrder = base.Columns["IsSelfBilledOrder"];
                this.columnCategoryId = base.Columns["CategoryId"];
                this.columnFullBaseAmt = base.Columns["FullBaseAmt"];
                this.columnFullOtherAmt = base.Columns["FullOtherAmt"];
                this.columnFullBaseTax = base.Columns["FullBaseTax"];
                this.columnFullOtherTax = base.Columns["FullOtherTax"];
                this.columnFullQty = base.Columns["FullQty"];
                this.columnIsReversalEntry = base.Columns["IsReversalEntry"];
                this.columnQueueId = base.Columns["QueueId"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSunInterfaceLogId = new global::System.Data.DataColumn("SunInterfaceLogId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunInterfaceLogId);
                this.columnSunInterfaceTypeId = new global::System.Data.DataColumn("SunInterfaceTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSunInterfaceTypeId);
                this.columnShipmentId = new global::System.Data.DataColumn("ShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentId);
                this.columnSplitShipmentId = new global::System.Data.DataColumn("SplitShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSplitShipmentId);
                this.columnFiscalYear = new global::System.Data.DataColumn("FiscalYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYear);
                this.columnPeriod = new global::System.Data.DataColumn("Period", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod);
                this.columnTransactionDate = new global::System.Data.DataColumn("TransactionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionDate);
                this.columnContractNo = new global::System.Data.DataColumn("ContractNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractNo);
                this.columnNSLPONo = new global::System.Data.DataColumn("NSLPONo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNSLPONo);
                this.columnDeliveryNo = new global::System.Data.DataColumn("DeliveryNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryNo);
                this.columnOfficeId = new global::System.Data.DataColumn("OfficeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeId);
                this.columnDeptId = new global::System.Data.DataColumn("DeptId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptId);
                this.columnProductTeamId = new global::System.Data.DataColumn("ProductTeamId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTeamId);
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnSeasonId = new global::System.Data.DataColumn("SeasonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeasonId);
                this.columnVendorId = new global::System.Data.DataColumn("VendorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorId);
                this.columnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerId);
                this.columnTermOfPurchaseId = new global::System.Data.DataColumn("TermOfPurchaseId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermOfPurchaseId);
                this.columnCustomerDestinationId = new global::System.Data.DataColumn("CustomerDestinationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerDestinationId);
                this.columnTradingAgencyId = new global::System.Data.DataColumn("TradingAgencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingAgencyId);
                this.columnCurrencyId = new global::System.Data.DataColumn("CurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyId);
                this.columnPaymentTermId = new global::System.Data.DataColumn("PaymentTermId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTermId);
                this.columnCountryOfOriginId = new global::System.Data.DataColumn("CountryOfOriginId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryOfOriginId);
                this.columnDesignSourceId = new global::System.Data.DataColumn("DesignSourceId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignSourceId);
                this.columnWithOPRFabric = new global::System.Data.DataColumn("WithOPRFabric", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWithOPRFabric);
                this.columnInvoicePrefix = new global::System.Data.DataColumn("InvoicePrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrefix);
                this.columnInvoiceSeq = new global::System.Data.DataColumn("InvoiceSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceSeq);
                this.columnInvoiceYear = new global::System.Data.DataColumn("InvoiceYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceYear);
                this.columnSequenceNo = new global::System.Data.DataColumn("SequenceNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNo);
                this.columnInvoiceUploadDate = new global::System.Data.DataColumn("InvoiceUploadDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceUploadDate);
                this.columnBaseAmt = new global::System.Data.DataColumn("BaseAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAmt);
                this.columnOtherAmt = new global::System.Data.DataColumn("OtherAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAmt);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnPiecesPerPack = new global::System.Data.DataColumn("PiecesPerPack", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiecesPerPack);
                this.columnPackingUnitId = new global::System.Data.DataColumn("PackingUnitId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingUnitId);
                this.columnSupplierInvoiceNo = new global::System.Data.DataColumn("SupplierInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierInvoiceNo);
                this.columnRefNo = new global::System.Data.DataColumn("RefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo);
                this.columnDCNoteNo = new global::System.Data.DataColumn("DCNoteNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNoteNo);
                this.columnBaseTax = new global::System.Data.DataColumn("BaseTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseTax);
                this.columnOtherTax = new global::System.Data.DataColumn("OtherTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTax);
                this.columnSetSplitCount = new global::System.Data.DataColumn("SetSplitCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetSplitCount);
                this.columnQACommissionPercent = new global::System.Data.DataColumn("QACommissionPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQACommissionPercent);
                this.columnVendorPaymentDiscountPercent = new global::System.Data.DataColumn("VendorPaymentDiscountPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaymentDiscountPercent);
                this.columnLabTestIncome = new global::System.Data.DataColumn("LabTestIncome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabTestIncome);
                this.columnUKSupplierCode = new global::System.Data.DataColumn("UKSupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUKSupplierCode);
                this.columnSalesCommission = new global::System.Data.DataColumn("SalesCommission", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCommission);
                this.columnTotalShippedAmt = new global::System.Data.DataColumn("TotalShippedAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedAmt);
                this.columnTotalShippedNetFOBAmt = new global::System.Data.DataColumn("TotalShippedNetFOBAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedNetFOBAmt);
                this.columnTotalShippedSupplierGmtAmt = new global::System.Data.DataColumn("TotalShippedSupplierGmtAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedSupplierGmtAmt);
                this.columnUTInputVATAmt = new global::System.Data.DataColumn("UTInputVATAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTInputVATAmt);
                this.columnUTOutputVATAmt = new global::System.Data.DataColumn("UTOutputVATAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTOutputVATAmt);
                this.columnUTImportDuty = new global::System.Data.DataColumn("UTImportDuty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTImportDuty);
                this.columnUTImportDutyInBaseCurrency = new global::System.Data.DataColumn("UTImportDutyInBaseCurrency", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTImportDutyInBaseCurrency);
                this.columnUTTotalShippedAmt = new global::System.Data.DataColumn("UTTotalShippedAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTTotalShippedAmt);
                this.columnUTTotalShippedNetFOBAmt = new global::System.Data.DataColumn("UTTotalShippedNetFOBAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTTotalShippedNetFOBAmt);
                this.columnUTTotalShippedSupplierGmtAmt = new global::System.Data.DataColumn("UTTotalShippedSupplierGmtAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTTotalShippedSupplierGmtAmt);
                this.columnUTSalesCommission = new global::System.Data.DataColumn("UTSalesCommission", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUTSalesCommission);
                this.columnIsNextMfgOrder = new global::System.Data.DataColumn("IsNextMfgOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNextMfgOrder);
                this.columnIsPOIssueToNextMfg = new global::System.Data.DataColumn("IsPOIssueToNextMfg", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPOIssueToNextMfg);
                this.columnIsMockShopSample = new global::System.Data.DataColumn("IsMockShopSample", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMockShopSample);
                this.columnIsStudioSample = new global::System.Data.DataColumn("IsStudioSample", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsStudioSample);
                this.columnIsSelfBilledOrder = new global::System.Data.DataColumn("IsSelfBilledOrder", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSelfBilledOrder);
                this.columnCategoryId = new global::System.Data.DataColumn("CategoryId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryId);
                this.columnFullBaseAmt = new global::System.Data.DataColumn("FullBaseAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullBaseAmt);
                this.columnFullOtherAmt = new global::System.Data.DataColumn("FullOtherAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullOtherAmt);
                this.columnFullBaseTax = new global::System.Data.DataColumn("FullBaseTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullBaseTax);
                this.columnFullOtherTax = new global::System.Data.DataColumn("FullOtherTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullOtherTax);
                this.columnFullQty = new global::System.Data.DataColumn("FullQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullQty);
                this.columnIsReversalEntry = new global::System.Data.DataColumn("IsReversalEntry", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReversalEntry);
                this.columnQueueId = new global::System.Data.DataColumn("QueueId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueueId);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSunInterfaceLogId}, true));
                this.columnSunInterfaceLogId.AllowDBNull = false;
                this.columnSunInterfaceLogId.Unique = true;
                this.columnSunInterfaceTypeId.AllowDBNull = false;
                this.columnShipmentId.AllowDBNull = false;
                this.columnSplitShipmentId.AllowDBNull = false;
                this.columnFiscalYear.AllowDBNull = false;
                this.columnPeriod.AllowDBNull = false;
                this.columnTransactionDate.AllowDBNull = false;
                this.columnContractNo.AllowDBNull = false;
                this.columnContractNo.MaxLength = 50;
                this.columnNSLPONo.AllowDBNull = false;
                this.columnNSLPONo.MaxLength = 50;
                this.columnDeliveryNo.AllowDBNull = false;
                this.columnOfficeId.AllowDBNull = false;
                this.columnDeptId.AllowDBNull = false;
                this.columnProductTeamId.AllowDBNull = false;
                this.columnProductId.AllowDBNull = false;
                this.columnSeasonId.AllowDBNull = false;
                this.columnVendorId.AllowDBNull = false;
                this.columnCustomerId.AllowDBNull = false;
                this.columnTermOfPurchaseId.AllowDBNull = false;
                this.columnCustomerDestinationId.AllowDBNull = false;
                this.columnTradingAgencyId.AllowDBNull = false;
                this.columnCurrencyId.AllowDBNull = false;
                this.columnPaymentTermId.AllowDBNull = false;
                this.columnCountryOfOriginId.AllowDBNull = false;
                this.columnDesignSourceId.AllowDBNull = false;
                this.columnWithOPRFabric.AllowDBNull = false;
                this.columnInvoicePrefix.MaxLength = 4;
                this.columnBaseAmt.AllowDBNull = false;
                this.columnOtherAmt.AllowDBNull = false;
                this.columnQty.AllowDBNull = false;
                this.columnPiecesPerPack.AllowDBNull = false;
                this.columnPackingUnitId.AllowDBNull = false;
                this.columnSupplierInvoiceNo.MaxLength = 80;
                this.columnRefNo.MaxLength = 20;
                this.columnDCNoteNo.MaxLength = 50;
                this.columnBaseTax.AllowDBNull = false;
                this.columnOtherTax.AllowDBNull = false;
                this.columnSetSplitCount.AllowDBNull = false;
                this.columnQACommissionPercent.AllowDBNull = false;
                this.columnVendorPaymentDiscountPercent.AllowDBNull = false;
                this.columnLabTestIncome.AllowDBNull = false;
                this.columnUKSupplierCode.MaxLength = 10;
                this.columnSalesCommission.AllowDBNull = false;
                this.columnTotalShippedAmt.AllowDBNull = false;
                this.columnTotalShippedNetFOBAmt.AllowDBNull = false;
                this.columnTotalShippedSupplierGmtAmt.AllowDBNull = false;
                this.columnUTInputVATAmt.AllowDBNull = false;
                this.columnUTOutputVATAmt.AllowDBNull = false;
                this.columnUTImportDuty.AllowDBNull = false;
                this.columnUTImportDutyInBaseCurrency.AllowDBNull = false;
                this.columnUTTotalShippedAmt.AllowDBNull = false;
                this.columnUTTotalShippedNetFOBAmt.AllowDBNull = false;
                this.columnUTTotalShippedSupplierGmtAmt.AllowDBNull = false;
                this.columnUTSalesCommission.AllowDBNull = false;
                this.columnIsNextMfgOrder.AllowDBNull = false;
                this.columnIsPOIssueToNextMfg.AllowDBNull = false;
                this.columnIsMockShopSample.AllowDBNull = false;
                this.columnIsStudioSample.AllowDBNull = false;
                this.columnIsSelfBilledOrder.AllowDBNull = false;
                this.columnCategoryId.AllowDBNull = false;
                this.columnFullBaseAmt.AllowDBNull = false;
                this.columnFullOtherAmt.AllowDBNull = false;
                this.columnFullBaseTax.AllowDBNull = false;
                this.columnFullOtherTax.AllowDBNull = false;
                this.columnFullQty.AllowDBNull = false;
                this.columnIsReversalEntry.AllowDBNull = false;
                this.columnQueueId.AllowDBNull = false;
                this.columnCreatedOn.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SunInterfaceLogRow NewSunInterfaceLogRow() {
                return ((SunInterfaceLogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SunInterfaceLogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SunInterfaceLogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SunInterfaceLogRowChanged != null)) {
                    this.SunInterfaceLogRowChanged(this, new SunInterfaceLogRowChangeEvent(((SunInterfaceLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SunInterfaceLogRowChanging != null)) {
                    this.SunInterfaceLogRowChanging(this, new SunInterfaceLogRowChangeEvent(((SunInterfaceLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SunInterfaceLogRowDeleted != null)) {
                    this.SunInterfaceLogRowDeleted(this, new SunInterfaceLogRowChangeEvent(((SunInterfaceLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SunInterfaceLogRowDeleting != null)) {
                    this.SunInterfaceLogRowDeleting(this, new SunInterfaceLogRowChangeEvent(((SunInterfaceLogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSunInterfaceLogRow(SunInterfaceLogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SunInterfaceLogDs ds = new SunInterfaceLogDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SunInterfaceLogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SunInterfaceLogRow : global::System.Data.DataRow {
            
            private SunInterfaceLogDataTable tableSunInterfaceLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SunInterfaceLogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSunInterfaceLog = ((SunInterfaceLogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SunInterfaceLogId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.SunInterfaceLogIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.SunInterfaceLogIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SunInterfaceTypeId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.SunInterfaceTypeIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.SunInterfaceTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipmentId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.ShipmentIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.ShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SplitShipmentId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.SplitShipmentIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.SplitShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FiscalYear {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.FiscalYearColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.FiscalYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Period {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.PeriodColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.PeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TransactionDate {
                get {
                    return ((global::System.DateTime)(this[this.tableSunInterfaceLog.TransactionDateColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.TransactionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContractNo {
                get {
                    return ((string)(this[this.tableSunInterfaceLog.ContractNoColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.ContractNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NSLPONo {
                get {
                    return ((string)(this[this.tableSunInterfaceLog.NSLPONoColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.NSLPONoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeliveryNo {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.DeliveryNoColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.DeliveryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OfficeId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.OfficeIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.OfficeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeptId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.DeptIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.DeptIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductTeamId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.ProductTeamIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.ProductTeamIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.ProductIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.ProductIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SeasonId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.SeasonIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.SeasonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VendorId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.VendorIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.VendorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomerId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.CustomerIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TermOfPurchaseId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.TermOfPurchaseIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.TermOfPurchaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomerDestinationId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.CustomerDestinationIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.CustomerDestinationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TradingAgencyId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.TradingAgencyIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.TradingAgencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CurrencyId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.CurrencyIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.CurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PaymentTermId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.PaymentTermIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.PaymentTermIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CountryOfOriginId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.CountryOfOriginIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.CountryOfOriginIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DesignSourceId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.DesignSourceIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.DesignSourceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WithOPRFabric {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.WithOPRFabricColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.WithOPRFabricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoicePrefix {
                get {
                    try {
                        return ((string)(this[this.tableSunInterfaceLog.InvoicePrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePrefix\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.InvoicePrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceSeq {
                get {
                    try {
                        return ((int)(this[this.tableSunInterfaceLog.InvoiceSeqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceSeq\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.InvoiceSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceYear {
                get {
                    try {
                        return ((int)(this[this.tableSunInterfaceLog.InvoiceYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceYear\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.InvoiceYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SequenceNo {
                get {
                    try {
                        return ((int)(this[this.tableSunInterfaceLog.SequenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceNo\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.SequenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceUploadDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSunInterfaceLog.InvoiceUploadDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceUploadDate\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.InvoiceUploadDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BaseAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.BaseAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.BaseAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.OtherAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.OtherAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Qty {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.QtyColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PiecesPerPack {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.PiecesPerPackColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.PiecesPerPackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PackingUnitId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.PackingUnitIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.PackingUnitIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableSunInterfaceLog.SupplierInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierInvoiceNo\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.SupplierInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefNo {
                get {
                    try {
                        return ((string)(this[this.tableSunInterfaceLog.RefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefNo\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.RefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DCNoteNo {
                get {
                    try {
                        return ((string)(this[this.tableSunInterfaceLog.DCNoteNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCNoteNo\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.DCNoteNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BaseTax {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.BaseTaxColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.BaseTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherTax {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.OtherTaxColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.OtherTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SetSplitCount {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.SetSplitCountColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.SetSplitCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QACommissionPercent {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.QACommissionPercentColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.QACommissionPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VendorPaymentDiscountPercent {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.VendorPaymentDiscountPercentColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.VendorPaymentDiscountPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LabTestIncome {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.LabTestIncomeColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.LabTestIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UKSupplierCode {
                get {
                    try {
                        return ((string)(this[this.tableSunInterfaceLog.UKSupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UKSupplierCode\' in table \'SunInterfaceLog\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSunInterfaceLog.UKSupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesCommission {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.SalesCommissionColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.SalesCommissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalShippedAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.TotalShippedAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.TotalShippedAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalShippedNetFOBAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.TotalShippedNetFOBAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.TotalShippedNetFOBAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalShippedSupplierGmtAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.TotalShippedSupplierGmtAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.TotalShippedSupplierGmtAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UTInputVATAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.UTInputVATAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.UTInputVATAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UTOutputVATAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.UTOutputVATAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.UTOutputVATAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UTImportDuty {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.UTImportDutyColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.UTImportDutyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UTImportDutyInBaseCurrency {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.UTImportDutyInBaseCurrencyColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.UTImportDutyInBaseCurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UTTotalShippedAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.UTTotalShippedAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.UTTotalShippedAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UTTotalShippedNetFOBAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.UTTotalShippedNetFOBAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.UTTotalShippedNetFOBAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UTTotalShippedSupplierGmtAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.UTTotalShippedSupplierGmtAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.UTTotalShippedSupplierGmtAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UTSalesCommission {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.UTSalesCommissionColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.UTSalesCommissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsNextMfgOrder {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.IsNextMfgOrderColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.IsNextMfgOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsPOIssueToNextMfg {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.IsPOIssueToNextMfgColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.IsPOIssueToNextMfgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsMockShopSample {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.IsMockShopSampleColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.IsMockShopSampleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsStudioSample {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.IsStudioSampleColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.IsStudioSampleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSelfBilledOrder {
                get {
                    return ((bool)(this[this.tableSunInterfaceLog.IsSelfBilledOrderColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.IsSelfBilledOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CategoryId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.CategoryIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.CategoryIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FullBaseAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.FullBaseAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.FullBaseAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FullOtherAmt {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.FullOtherAmtColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.FullOtherAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FullBaseTax {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.FullBaseTaxColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.FullBaseTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FullOtherTax {
                get {
                    return ((decimal)(this[this.tableSunInterfaceLog.FullOtherTaxColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.FullOtherTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FullQty {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.FullQtyColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.FullQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReversalEntry {
                get {
                    return ((bool)(this[this.tableSunInterfaceLog.IsReversalEntryColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.IsReversalEntryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QueueId {
                get {
                    return ((int)(this[this.tableSunInterfaceLog.QueueIdColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.QueueIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedOn {
                get {
                    return ((global::System.DateTime)(this[this.tableSunInterfaceLog.CreatedOnColumn]));
                }
                set {
                    this[this.tableSunInterfaceLog.CreatedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicePrefixNull() {
                return this.IsNull(this.tableSunInterfaceLog.InvoicePrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicePrefixNull() {
                this[this.tableSunInterfaceLog.InvoicePrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceSeqNull() {
                return this.IsNull(this.tableSunInterfaceLog.InvoiceSeqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceSeqNull() {
                this[this.tableSunInterfaceLog.InvoiceSeqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceYearNull() {
                return this.IsNull(this.tableSunInterfaceLog.InvoiceYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceYearNull() {
                this[this.tableSunInterfaceLog.InvoiceYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSequenceNoNull() {
                return this.IsNull(this.tableSunInterfaceLog.SequenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSequenceNoNull() {
                this[this.tableSunInterfaceLog.SequenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceUploadDateNull() {
                return this.IsNull(this.tableSunInterfaceLog.InvoiceUploadDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceUploadDateNull() {
                this[this.tableSunInterfaceLog.InvoiceUploadDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierInvoiceNoNull() {
                return this.IsNull(this.tableSunInterfaceLog.SupplierInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierInvoiceNoNull() {
                this[this.tableSunInterfaceLog.SupplierInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefNoNull() {
                return this.IsNull(this.tableSunInterfaceLog.RefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefNoNull() {
                this[this.tableSunInterfaceLog.RefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDCNoteNoNull() {
                return this.IsNull(this.tableSunInterfaceLog.DCNoteNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDCNoteNoNull() {
                this[this.tableSunInterfaceLog.DCNoteNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUKSupplierCodeNull() {
                return this.IsNull(this.tableSunInterfaceLog.UKSupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUKSupplierCodeNull() {
                this[this.tableSunInterfaceLog.UKSupplierCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SunInterfaceLogRowChangeEvent : global::System.EventArgs {
            
            private SunInterfaceLogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SunInterfaceLogRowChangeEvent(SunInterfaceLogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SunInterfaceLogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.dataserver.model.account.SunInterfaceLogDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SunInterfaceLogTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SunInterfaceLogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SunInterfaceLog";
            tableMapping.ColumnMappings.Add("SunInterfaceLogId", "SunInterfaceLogId");
            tableMapping.ColumnMappings.Add("SunInterfaceTypeId", "SunInterfaceTypeId");
            tableMapping.ColumnMappings.Add("ShipmentId", "ShipmentId");
            tableMapping.ColumnMappings.Add("SplitShipmentId", "SplitShipmentId");
            tableMapping.ColumnMappings.Add("FiscalYear", "FiscalYear");
            tableMapping.ColumnMappings.Add("Period", "Period");
            tableMapping.ColumnMappings.Add("TransactionDate", "TransactionDate");
            tableMapping.ColumnMappings.Add("ContractNo", "ContractNo");
            tableMapping.ColumnMappings.Add("NSLPONo", "NSLPONo");
            tableMapping.ColumnMappings.Add("DeliveryNo", "DeliveryNo");
            tableMapping.ColumnMappings.Add("OfficeId", "OfficeId");
            tableMapping.ColumnMappings.Add("DeptId", "DeptId");
            tableMapping.ColumnMappings.Add("ProductTeamId", "ProductTeamId");
            tableMapping.ColumnMappings.Add("ProductId", "ProductId");
            tableMapping.ColumnMappings.Add("SeasonId", "SeasonId");
            tableMapping.ColumnMappings.Add("VendorId", "VendorId");
            tableMapping.ColumnMappings.Add("CustomerId", "CustomerId");
            tableMapping.ColumnMappings.Add("TermOfPurchaseId", "TermOfPurchaseId");
            tableMapping.ColumnMappings.Add("CustomerDestinationId", "CustomerDestinationId");
            tableMapping.ColumnMappings.Add("TradingAgencyId", "TradingAgencyId");
            tableMapping.ColumnMappings.Add("CurrencyId", "CurrencyId");
            tableMapping.ColumnMappings.Add("PaymentTermId", "PaymentTermId");
            tableMapping.ColumnMappings.Add("CountryOfOriginId", "CountryOfOriginId");
            tableMapping.ColumnMappings.Add("DesignSourceId", "DesignSourceId");
            tableMapping.ColumnMappings.Add("WithOPRFabric", "WithOPRFabric");
            tableMapping.ColumnMappings.Add("InvoicePrefix", "InvoicePrefix");
            tableMapping.ColumnMappings.Add("InvoiceSeq", "InvoiceSeq");
            tableMapping.ColumnMappings.Add("InvoiceYear", "InvoiceYear");
            tableMapping.ColumnMappings.Add("SequenceNo", "SequenceNo");
            tableMapping.ColumnMappings.Add("InvoiceUploadDate", "InvoiceUploadDate");
            tableMapping.ColumnMappings.Add("BaseAmt", "BaseAmt");
            tableMapping.ColumnMappings.Add("OtherAmt", "OtherAmt");
            tableMapping.ColumnMappings.Add("Qty", "Qty");
            tableMapping.ColumnMappings.Add("PiecesPerPack", "PiecesPerPack");
            tableMapping.ColumnMappings.Add("PackingUnitId", "PackingUnitId");
            tableMapping.ColumnMappings.Add("SupplierInvoiceNo", "SupplierInvoiceNo");
            tableMapping.ColumnMappings.Add("RefNo", "RefNo");
            tableMapping.ColumnMappings.Add("DCNoteNo", "DCNoteNo");
            tableMapping.ColumnMappings.Add("BaseTax", "BaseTax");
            tableMapping.ColumnMappings.Add("OtherTax", "OtherTax");
            tableMapping.ColumnMappings.Add("SetSplitCount", "SetSplitCount");
            tableMapping.ColumnMappings.Add("QACommissionPercent", "QACommissionPercent");
            tableMapping.ColumnMappings.Add("VendorPaymentDiscountPercent", "VendorPaymentDiscountPercent");
            tableMapping.ColumnMappings.Add("LabTestIncome", "LabTestIncome");
            tableMapping.ColumnMappings.Add("UKSupplierCode", "UKSupplierCode");
            tableMapping.ColumnMappings.Add("SalesCommission", "SalesCommission");
            tableMapping.ColumnMappings.Add("TotalShippedAmt", "TotalShippedAmt");
            tableMapping.ColumnMappings.Add("TotalShippedNetFOBAmt", "TotalShippedNetFOBAmt");
            tableMapping.ColumnMappings.Add("TotalShippedSupplierGmtAmt", "TotalShippedSupplierGmtAmt");
            tableMapping.ColumnMappings.Add("UTInputVATAmt", "UTInputVATAmt");
            tableMapping.ColumnMappings.Add("UTOutputVATAmt", "UTOutputVATAmt");
            tableMapping.ColumnMappings.Add("UTImportDuty", "UTImportDuty");
            tableMapping.ColumnMappings.Add("UTImportDutyInBaseCurrency", "UTImportDutyInBaseCurrency");
            tableMapping.ColumnMappings.Add("UTTotalShippedAmt", "UTTotalShippedAmt");
            tableMapping.ColumnMappings.Add("UTTotalShippedNetFOBAmt", "UTTotalShippedNetFOBAmt");
            tableMapping.ColumnMappings.Add("UTTotalShippedSupplierGmtAmt", "UTTotalShippedSupplierGmtAmt");
            tableMapping.ColumnMappings.Add("UTSalesCommission", "UTSalesCommission");
            tableMapping.ColumnMappings.Add("IsNextMfgOrder", "IsNextMfgOrder");
            tableMapping.ColumnMappings.Add("IsPOIssueToNextMfg", "IsPOIssueToNextMfg");
            tableMapping.ColumnMappings.Add("IsMockShopSample", "IsMockShopSample");
            tableMapping.ColumnMappings.Add("IsStudioSample", "IsStudioSample");
            tableMapping.ColumnMappings.Add("IsSelfBilledOrder", "IsSelfBilledOrder");
            tableMapping.ColumnMappings.Add("CategoryId", "CategoryId");
            tableMapping.ColumnMappings.Add("FullBaseAmt", "FullBaseAmt");
            tableMapping.ColumnMappings.Add("FullOtherAmt", "FullOtherAmt");
            tableMapping.ColumnMappings.Add("FullBaseTax", "FullBaseTax");
            tableMapping.ColumnMappings.Add("FullOtherTax", "FullOtherTax");
            tableMapping.ColumnMappings.Add("FullQty", "FullQty");
            tableMapping.ColumnMappings.Add("IsReversalEntry", "IsReversalEntry");
            tableMapping.ColumnMappings.Add("QueueId", "QueueId");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SunInterfaceLog] WHERE (([SunInterfaceLogId] = @Original_SunIn" +
                "terfaceLogId) AND ([SunInterfaceTypeId] = @Original_SunInterfaceTypeId) AND ([Sh" +
                "ipmentId] = @Original_ShipmentId) AND ([SplitShipmentId] = @Original_SplitShipme" +
                "ntId) AND ([FiscalYear] = @Original_FiscalYear) AND ([Period] = @Original_Period" +
                ") AND ([TransactionDate] = @Original_TransactionDate) AND ([ContractNo] = @Origi" +
                "nal_ContractNo) AND ([NSLPONo] = @Original_NSLPONo) AND ([DeliveryNo] = @Origina" +
                "l_DeliveryNo) AND ([OfficeId] = @Original_OfficeId) AND ([DeptId] = @Original_De" +
                "ptId) AND ([ProductTeamId] = @Original_ProductTeamId) AND ([ProductId] = @Origin" +
                "al_ProductId) AND ([SeasonId] = @Original_SeasonId) AND ([VendorId] = @Original_" +
                "VendorId) AND ([CustomerId] = @Original_CustomerId) AND ([TermOfPurchaseId] = @O" +
                "riginal_TermOfPurchaseId) AND ([CustomerDestinationId] = @Original_CustomerDesti" +
                "nationId) AND ([TradingAgencyId] = @Original_TradingAgencyId) AND ([CurrencyId] " +
                "= @Original_CurrencyId) AND ([PaymentTermId] = @Original_PaymentTermId) AND ([Co" +
                "untryOfOriginId] = @Original_CountryOfOriginId) AND ([DesignSourceId] = @Origina" +
                "l_DesignSourceId) AND ([WithOPRFabric] = @Original_WithOPRFabric) AND ((@IsNull_" +
                "InvoicePrefix = 1 AND [InvoicePrefix] IS NULL) OR ([InvoicePrefix] = @Original_I" +
                "nvoicePrefix)) AND ((@IsNull_InvoiceSeq = 1 AND [InvoiceSeq] IS NULL) OR ([Invoi" +
                "ceSeq] = @Original_InvoiceSeq)) AND ((@IsNull_InvoiceYear = 1 AND [InvoiceYear] " +
                "IS NULL) OR ([InvoiceYear] = @Original_InvoiceYear)) AND ((@IsNull_SequenceNo = " +
                "1 AND [SequenceNo] IS NULL) OR ([SequenceNo] = @Original_SequenceNo)) AND ((@IsN" +
                "ull_InvoiceUploadDate = 1 AND [InvoiceUploadDate] IS NULL) OR ([InvoiceUploadDat" +
                "e] = @Original_InvoiceUploadDate)) AND ([BaseAmt] = @Original_BaseAmt) AND ([Oth" +
                "erAmt] = @Original_OtherAmt) AND ([Qty] = @Original_Qty) AND ([PiecesPerPack] = " +
                "@Original_PiecesPerPack) AND ([PackingUnitId] = @Original_PackingUnitId) AND ((@" +
                "IsNull_SupplierInvoiceNo = 1 AND [SupplierInvoiceNo] IS NULL) OR ([SupplierInvoi" +
                "ceNo] = @Original_SupplierInvoiceNo)) AND ((@IsNull_RefNo = 1 AND [RefNo] IS NUL" +
                "L) OR ([RefNo] = @Original_RefNo)) AND ((@IsNull_DCNoteNo = 1 AND [DCNoteNo] IS " +
                "NULL) OR ([DCNoteNo] = @Original_DCNoteNo)) AND ([BaseTax] = @Original_BaseTax) " +
                "AND ([OtherTax] = @Original_OtherTax) AND ([SetSplitCount] = @Original_SetSplitC" +
                "ount) AND ([QACommissionPercent] = @Original_QACommissionPercent) AND ([VendorPa" +
                "ymentDiscountPercent] = @Original_VendorPaymentDiscountPercent) AND ([LabTestInc" +
                "ome] = @Original_LabTestIncome) AND ((@IsNull_UKSupplierCode = 1 AND [UKSupplier" +
                "Code] IS NULL) OR ([UKSupplierCode] = @Original_UKSupplierCode)) AND ([SalesComm" +
                "ission] = @Original_SalesCommission) AND ([TotalShippedAmt] = @Original_TotalShi" +
                "ppedAmt) AND ([TotalShippedNetFOBAmt] = @Original_TotalShippedNetFOBAmt) AND ([T" +
                "otalShippedSupplierGmtAmt] = @Original_TotalShippedSupplierGmtAmt) AND ([UTInput" +
                "VATAmt] = @Original_UTInputVATAmt) AND ([UTOutputVATAmt] = @Original_UTOutputVAT" +
                "Amt) AND ([UTImportDuty] = @Original_UTImportDuty) AND ([UTImportDutyInBaseCurre" +
                "ncy] = @Original_UTImportDutyInBaseCurrency) AND ([UTTotalShippedAmt] = @Origina" +
                "l_UTTotalShippedAmt) AND ([UTTotalShippedNetFOBAmt] = @Original_UTTotalShippedNe" +
                "tFOBAmt) AND ([UTTotalShippedSupplierGmtAmt] = @Original_UTTotalShippedSupplierG" +
                "mtAmt) AND ([UTSalesCommission] = @Original_UTSalesCommission) AND ([IsNextMfgOr" +
                "der] = @Original_IsNextMfgOrder) AND ([IsPOIssueToNextMfg] = @Original_IsPOIssue" +
                "ToNextMfg) AND ([IsMockShopSample] = @Original_IsMockShopSample) AND ([IsStudioS" +
                "ample] = @Original_IsStudioSample) AND ([IsSelfBilledOrder] = @Original_IsSelfBi" +
                "lledOrder) AND ([CategoryId] = @Original_CategoryId) AND ([FullBaseAmt] = @Origi" +
                "nal_FullBaseAmt) AND ([FullOtherAmt] = @Original_FullOtherAmt) AND ([FullBaseTax" +
                "] = @Original_FullBaseTax) AND ([FullOtherTax] = @Original_FullOtherTax) AND ([F" +
                "ullQty] = @Original_FullQty) AND ([IsReversalEntry] = @Original_IsReversalEntry)" +
                " AND ([QueueId] = @Original_QueueId) AND ([CreatedOn] = @Original_CreatedOn))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SunInterfaceLogId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunInterfaceLogId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SunInterfaceTypeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunInterfaceTypeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SplitShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FiscalYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransactionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NSLPONo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLPONo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerDestinationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerDestinationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradingAgencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DesignSourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignSourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WithOPRFabric", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WithOPRFabric", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoicePrefix", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePrefix", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoicePrefix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePrefix", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceSeq", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceSeq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceUploadDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceUploadDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceUploadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceUploadDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BaseAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Qty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PiecesPerPack", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiecesPerPack", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierInvoiceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierInvoiceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierInvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierInvoiceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RefNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DCNoteNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BaseTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetSplitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSplitCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QACommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "QACommissionPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UKSupplierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UKSupplierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UKSupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UKSupplierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SalesCommission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTInputVATAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTInputVATAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTOutputVATAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTOutputVATAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTImportDuty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTImportDuty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTImportDutyInBaseCurrency", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTImportDutyInBaseCurrency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTTotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTTotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTTotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTSalesCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTSalesCommission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsNextMfgOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNextMfgOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsPOIssueToNextMfg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPOIssueToNextMfg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMockShopSample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMockShopSample", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsStudioSample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsStudioSample", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSelfBilledOrder", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSelfBilledOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CategoryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CategoryId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullBaseAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullBaseAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullOtherAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullOtherAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullBaseTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullBaseTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullOtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullOtherTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsReversalEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsReversalEntry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SunInterfaceLog] ([SunInterfaceLogId], [SunInterfaceTypeId], [" +
                "ShipmentId], [SplitShipmentId], [FiscalYear], [Period], [TransactionDate], [Cont" +
                "ractNo], [NSLPONo], [DeliveryNo], [OfficeId], [DeptId], [ProductTeamId], [Produc" +
                "tId], [SeasonId], [VendorId], [CustomerId], [TermOfPurchaseId], [CustomerDestina" +
                "tionId], [TradingAgencyId], [CurrencyId], [PaymentTermId], [CountryOfOriginId], " +
                "[DesignSourceId], [WithOPRFabric], [InvoicePrefix], [InvoiceSeq], [InvoiceYear]," +
                " [SequenceNo], [InvoiceUploadDate], [BaseAmt], [OtherAmt], [Qty], [PiecesPerPack" +
                "], [PackingUnitId], [SupplierInvoiceNo], [RefNo], [DCNoteNo], [BaseTax], [OtherT" +
                "ax], [SetSplitCount], [QACommissionPercent], [VendorPaymentDiscountPercent], [La" +
                "bTestIncome], [UKSupplierCode], [SalesCommission], [TotalShippedAmt], [TotalShip" +
                "pedNetFOBAmt], [TotalShippedSupplierGmtAmt], [UTInputVATAmt], [UTOutputVATAmt], " +
                "[UTImportDuty], [UTImportDutyInBaseCurrency], [UTTotalShippedAmt], [UTTotalShipp" +
                "edNetFOBAmt], [UTTotalShippedSupplierGmtAmt], [UTSalesCommission], [IsNextMfgOrd" +
                "er], [IsPOIssueToNextMfg], [IsMockShopSample], [IsStudioSample], [IsSelfBilledOr" +
                "der], [CategoryId], [FullBaseAmt], [FullOtherAmt], [FullBaseTax], [FullOtherTax]" +
                ", [FullQty], [IsReversalEntry], [QueueId], [CreatedOn]) VALUES (@SunInterfaceLog" +
                "Id, @SunInterfaceTypeId, @ShipmentId, @SplitShipmentId, @FiscalYear, @Period, @T" +
                "ransactionDate, @ContractNo, @NSLPONo, @DeliveryNo, @OfficeId, @DeptId, @Product" +
                "TeamId, @ProductId, @SeasonId, @VendorId, @CustomerId, @TermOfPurchaseId, @Custo" +
                "merDestinationId, @TradingAgencyId, @CurrencyId, @PaymentTermId, @CountryOfOrigi" +
                "nId, @DesignSourceId, @WithOPRFabric, @InvoicePrefix, @InvoiceSeq, @InvoiceYear," +
                " @SequenceNo, @InvoiceUploadDate, @BaseAmt, @OtherAmt, @Qty, @PiecesPerPack, @Pa" +
                "ckingUnitId, @SupplierInvoiceNo, @RefNo, @DCNoteNo, @BaseTax, @OtherTax, @SetSpl" +
                "itCount, @QACommissionPercent, @VendorPaymentDiscountPercent, @LabTestIncome, @U" +
                "KSupplierCode, @SalesCommission, @TotalShippedAmt, @TotalShippedNetFOBAmt, @Tota" +
                "lShippedSupplierGmtAmt, @UTInputVATAmt, @UTOutputVATAmt, @UTImportDuty, @UTImpor" +
                "tDutyInBaseCurrency, @UTTotalShippedAmt, @UTTotalShippedNetFOBAmt, @UTTotalShipp" +
                "edSupplierGmtAmt, @UTSalesCommission, @IsNextMfgOrder, @IsPOIssueToNextMfg, @IsM" +
                "ockShopSample, @IsStudioSample, @IsSelfBilledOrder, @CategoryId, @FullBaseAmt, @" +
                "FullOtherAmt, @FullBaseTax, @FullOtherTax, @FullQty, @IsReversalEntry, @QueueId," +
                " @CreatedOn);\r\nSELECT SunInterfaceLogId, SunInterfaceTypeId, ShipmentId, SplitSh" +
                "ipmentId, FiscalYear, Period, TransactionDate, ContractNo, NSLPONo, DeliveryNo, " +
                "OfficeId, DeptId, ProductTeamId, ProductId, SeasonId, VendorId, CustomerId, Term" +
                "OfPurchaseId, CustomerDestinationId, TradingAgencyId, CurrencyId, PaymentTermId," +
                " CountryOfOriginId, DesignSourceId, WithOPRFabric, InvoicePrefix, InvoiceSeq, In" +
                "voiceYear, SequenceNo, InvoiceUploadDate, BaseAmt, OtherAmt, Qty, PiecesPerPack," +
                " PackingUnitId, SupplierInvoiceNo, RefNo, DCNoteNo, BaseTax, OtherTax, SetSplitC" +
                "ount, QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, UKSuppli" +
                "erCode, SalesCommission, TotalShippedAmt, TotalShippedNetFOBAmt, TotalShippedSup" +
                "plierGmtAmt, UTInputVATAmt, UTOutputVATAmt, UTImportDuty, UTImportDutyInBaseCurr" +
                "ency, UTTotalShippedAmt, UTTotalShippedNetFOBAmt, UTTotalShippedSupplierGmtAmt, " +
                "UTSalesCommission, IsNextMfgOrder, IsPOIssueToNextMfg, IsMockShopSample, IsStudi" +
                "oSample, IsSelfBilledOrder, CategoryId, FullBaseAmt, FullOtherAmt, FullBaseTax, " +
                "FullOtherTax, FullQty, IsReversalEntry, QueueId, CreatedOn FROM SunInterfaceLog " +
                "WHERE (SunInterfaceLogId = @SunInterfaceLogId)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SunInterfaceLogId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunInterfaceLogId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SunInterfaceTypeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunInterfaceTypeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SplitShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransactionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NSLPONo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLPONo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerDestinationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerDestinationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradingAgencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesignSourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignSourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WithOPRFabric", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WithOPRFabric", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoicePrefix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePrefix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceUploadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceUploadDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BaseAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Qty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PiecesPerPack", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiecesPerPack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierInvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierInvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BaseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetSplitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSplitCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QACommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "QACommissionPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UKSupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UKSupplierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SalesCommission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTInputVATAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTInputVATAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTOutputVATAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTOutputVATAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTImportDuty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTImportDuty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTImportDutyInBaseCurrency", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTImportDutyInBaseCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTTotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTTotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTTotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTSalesCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTSalesCommission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNextMfgOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNextMfgOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPOIssueToNextMfg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPOIssueToNextMfg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMockShopSample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMockShopSample", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsStudioSample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsStudioSample", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSelfBilledOrder", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSelfBilledOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CategoryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CategoryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullBaseAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullBaseAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullOtherAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullOtherAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullBaseTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullBaseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullOtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullOtherTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsReversalEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsReversalEntry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SunInterfaceLog] SET [SunInterfaceLogId] = @SunInterfaceLogId, [Sun" +
                "InterfaceTypeId] = @SunInterfaceTypeId, [ShipmentId] = @ShipmentId, [SplitShipme" +
                "ntId] = @SplitShipmentId, [FiscalYear] = @FiscalYear, [Period] = @Period, [Trans" +
                "actionDate] = @TransactionDate, [ContractNo] = @ContractNo, [NSLPONo] = @NSLPONo" +
                ", [DeliveryNo] = @DeliveryNo, [OfficeId] = @OfficeId, [DeptId] = @DeptId, [Produ" +
                "ctTeamId] = @ProductTeamId, [ProductId] = @ProductId, [SeasonId] = @SeasonId, [V" +
                "endorId] = @VendorId, [CustomerId] = @CustomerId, [TermOfPurchaseId] = @TermOfPu" +
                "rchaseId, [CustomerDestinationId] = @CustomerDestinationId, [TradingAgencyId] = " +
                "@TradingAgencyId, [CurrencyId] = @CurrencyId, [PaymentTermId] = @PaymentTermId, " +
                "[CountryOfOriginId] = @CountryOfOriginId, [DesignSourceId] = @DesignSourceId, [W" +
                "ithOPRFabric] = @WithOPRFabric, [InvoicePrefix] = @InvoicePrefix, [InvoiceSeq] =" +
                " @InvoiceSeq, [InvoiceYear] = @InvoiceYear, [SequenceNo] = @SequenceNo, [Invoice" +
                "UploadDate] = @InvoiceUploadDate, [BaseAmt] = @BaseAmt, [OtherAmt] = @OtherAmt, " +
                "[Qty] = @Qty, [PiecesPerPack] = @PiecesPerPack, [PackingUnitId] = @PackingUnitId" +
                ", [SupplierInvoiceNo] = @SupplierInvoiceNo, [RefNo] = @RefNo, [DCNoteNo] = @DCNo" +
                "teNo, [BaseTax] = @BaseTax, [OtherTax] = @OtherTax, [SetSplitCount] = @SetSplitC" +
                "ount, [QACommissionPercent] = @QACommissionPercent, [VendorPaymentDiscountPercen" +
                "t] = @VendorPaymentDiscountPercent, [LabTestIncome] = @LabTestIncome, [UKSupplie" +
                "rCode] = @UKSupplierCode, [SalesCommission] = @SalesCommission, [TotalShippedAmt" +
                "] = @TotalShippedAmt, [TotalShippedNetFOBAmt] = @TotalShippedNetFOBAmt, [TotalSh" +
                "ippedSupplierGmtAmt] = @TotalShippedSupplierGmtAmt, [UTInputVATAmt] = @UTInputVA" +
                "TAmt, [UTOutputVATAmt] = @UTOutputVATAmt, [UTImportDuty] = @UTImportDuty, [UTImp" +
                "ortDutyInBaseCurrency] = @UTImportDutyInBaseCurrency, [UTTotalShippedAmt] = @UTT" +
                "otalShippedAmt, [UTTotalShippedNetFOBAmt] = @UTTotalShippedNetFOBAmt, [UTTotalSh" +
                "ippedSupplierGmtAmt] = @UTTotalShippedSupplierGmtAmt, [UTSalesCommission] = @UTS" +
                "alesCommission, [IsNextMfgOrder] = @IsNextMfgOrder, [IsPOIssueToNextMfg] = @IsPO" +
                "IssueToNextMfg, [IsMockShopSample] = @IsMockShopSample, [IsStudioSample] = @IsSt" +
                "udioSample, [IsSelfBilledOrder] = @IsSelfBilledOrder, [CategoryId] = @CategoryId" +
                ", [FullBaseAmt] = @FullBaseAmt, [FullOtherAmt] = @FullOtherAmt, [FullBaseTax] = " +
                "@FullBaseTax, [FullOtherTax] = @FullOtherTax, [FullQty] = @FullQty, [IsReversalE" +
                "ntry] = @IsReversalEntry, [QueueId] = @QueueId, [CreatedOn] = @CreatedOn WHERE (" +
                "([SunInterfaceLogId] = @Original_SunInterfaceLogId) AND ([SunInterfaceTypeId] = " +
                "@Original_SunInterfaceTypeId) AND ([ShipmentId] = @Original_ShipmentId) AND ([Sp" +
                "litShipmentId] = @Original_SplitShipmentId) AND ([FiscalYear] = @Original_Fiscal" +
                "Year) AND ([Period] = @Original_Period) AND ([TransactionDate] = @Original_Trans" +
                "actionDate) AND ([ContractNo] = @Original_ContractNo) AND ([NSLPONo] = @Original" +
                "_NSLPONo) AND ([DeliveryNo] = @Original_DeliveryNo) AND ([OfficeId] = @Original_" +
                "OfficeId) AND ([DeptId] = @Original_DeptId) AND ([ProductTeamId] = @Original_Pro" +
                "ductTeamId) AND ([ProductId] = @Original_ProductId) AND ([SeasonId] = @Original_" +
                "SeasonId) AND ([VendorId] = @Original_VendorId) AND ([CustomerId] = @Original_Cu" +
                "stomerId) AND ([TermOfPurchaseId] = @Original_TermOfPurchaseId) AND ([CustomerDe" +
                "stinationId] = @Original_CustomerDestinationId) AND ([TradingAgencyId] = @Origin" +
                "al_TradingAgencyId) AND ([CurrencyId] = @Original_CurrencyId) AND ([PaymentTermI" +
                "d] = @Original_PaymentTermId) AND ([CountryOfOriginId] = @Original_CountryOfOrig" +
                "inId) AND ([DesignSourceId] = @Original_DesignSourceId) AND ([WithOPRFabric] = @" +
                "Original_WithOPRFabric) AND ((@IsNull_InvoicePrefix = 1 AND [InvoicePrefix] IS N" +
                "ULL) OR ([InvoicePrefix] = @Original_InvoicePrefix)) AND ((@IsNull_InvoiceSeq = " +
                "1 AND [InvoiceSeq] IS NULL) OR ([InvoiceSeq] = @Original_InvoiceSeq)) AND ((@IsN" +
                "ull_InvoiceYear = 1 AND [InvoiceYear] IS NULL) OR ([InvoiceYear] = @Original_Inv" +
                "oiceYear)) AND ((@IsNull_SequenceNo = 1 AND [SequenceNo] IS NULL) OR ([SequenceN" +
                "o] = @Original_SequenceNo)) AND ((@IsNull_InvoiceUploadDate = 1 AND [InvoiceUplo" +
                "adDate] IS NULL) OR ([InvoiceUploadDate] = @Original_InvoiceUploadDate)) AND ([B" +
                "aseAmt] = @Original_BaseAmt) AND ([OtherAmt] = @Original_OtherAmt) AND ([Qty] = " +
                "@Original_Qty) AND ([PiecesPerPack] = @Original_PiecesPerPack) AND ([PackingUnit" +
                "Id] = @Original_PackingUnitId) AND ((@IsNull_SupplierInvoiceNo = 1 AND [Supplier" +
                "InvoiceNo] IS NULL) OR ([SupplierInvoiceNo] = @Original_SupplierInvoiceNo)) AND " +
                "((@IsNull_RefNo = 1 AND [RefNo] IS NULL) OR ([RefNo] = @Original_RefNo)) AND ((@" +
                "IsNull_DCNoteNo = 1 AND [DCNoteNo] IS NULL) OR ([DCNoteNo] = @Original_DCNoteNo)" +
                ") AND ([BaseTax] = @Original_BaseTax) AND ([OtherTax] = @Original_OtherTax) AND " +
                "([SetSplitCount] = @Original_SetSplitCount) AND ([QACommissionPercent] = @Origin" +
                "al_QACommissionPercent) AND ([VendorPaymentDiscountPercent] = @Original_VendorPa" +
                "ymentDiscountPercent) AND ([LabTestIncome] = @Original_LabTestIncome) AND ((@IsN" +
                "ull_UKSupplierCode = 1 AND [UKSupplierCode] IS NULL) OR ([UKSupplierCode] = @Ori" +
                "ginal_UKSupplierCode)) AND ([SalesCommission] = @Original_SalesCommission) AND (" +
                "[TotalShippedAmt] = @Original_TotalShippedAmt) AND ([TotalShippedNetFOBAmt] = @O" +
                "riginal_TotalShippedNetFOBAmt) AND ([TotalShippedSupplierGmtAmt] = @Original_Tot" +
                "alShippedSupplierGmtAmt) AND ([UTInputVATAmt] = @Original_UTInputVATAmt) AND ([U" +
                "TOutputVATAmt] = @Original_UTOutputVATAmt) AND ([UTImportDuty] = @Original_UTImp" +
                "ortDuty) AND ([UTImportDutyInBaseCurrency] = @Original_UTImportDutyInBaseCurrenc" +
                "y) AND ([UTTotalShippedAmt] = @Original_UTTotalShippedAmt) AND ([UTTotalShippedN" +
                "etFOBAmt] = @Original_UTTotalShippedNetFOBAmt) AND ([UTTotalShippedSupplierGmtAm" +
                "t] = @Original_UTTotalShippedSupplierGmtAmt) AND ([UTSalesCommission] = @Origina" +
                "l_UTSalesCommission) AND ([IsNextMfgOrder] = @Original_IsNextMfgOrder) AND ([IsP" +
                "OIssueToNextMfg] = @Original_IsPOIssueToNextMfg) AND ([IsMockShopSample] = @Orig" +
                "inal_IsMockShopSample) AND ([IsStudioSample] = @Original_IsStudioSample) AND ([I" +
                "sSelfBilledOrder] = @Original_IsSelfBilledOrder) AND ([CategoryId] = @Original_C" +
                "ategoryId) AND ([FullBaseAmt] = @Original_FullBaseAmt) AND ([FullOtherAmt] = @Or" +
                "iginal_FullOtherAmt) AND ([FullBaseTax] = @Original_FullBaseTax) AND ([FullOther" +
                "Tax] = @Original_FullOtherTax) AND ([FullQty] = @Original_FullQty) AND ([IsRever" +
                "salEntry] = @Original_IsReversalEntry) AND ([QueueId] = @Original_QueueId) AND (" +
                "[CreatedOn] = @Original_CreatedOn));\r\nSELECT SunInterfaceLogId, SunInterfaceType" +
                "Id, ShipmentId, SplitShipmentId, FiscalYear, Period, TransactionDate, ContractNo" +
                ", NSLPONo, DeliveryNo, OfficeId, DeptId, ProductTeamId, ProductId, SeasonId, Ven" +
                "dorId, CustomerId, TermOfPurchaseId, CustomerDestinationId, TradingAgencyId, Cur" +
                "rencyId, PaymentTermId, CountryOfOriginId, DesignSourceId, WithOPRFabric, Invoic" +
                "ePrefix, InvoiceSeq, InvoiceYear, SequenceNo, InvoiceUploadDate, BaseAmt, OtherA" +
                "mt, Qty, PiecesPerPack, PackingUnitId, SupplierInvoiceNo, RefNo, DCNoteNo, BaseT" +
                "ax, OtherTax, SetSplitCount, QACommissionPercent, VendorPaymentDiscountPercent, " +
                "LabTestIncome, UKSupplierCode, SalesCommission, TotalShippedAmt, TotalShippedNet" +
                "FOBAmt, TotalShippedSupplierGmtAmt, UTInputVATAmt, UTOutputVATAmt, UTImportDuty," +
                " UTImportDutyInBaseCurrency, UTTotalShippedAmt, UTTotalShippedNetFOBAmt, UTTotal" +
                "ShippedSupplierGmtAmt, UTSalesCommission, IsNextMfgOrder, IsPOIssueToNextMfg, Is" +
                "MockShopSample, IsStudioSample, IsSelfBilledOrder, CategoryId, FullBaseAmt, Full" +
                "OtherAmt, FullBaseTax, FullOtherTax, FullQty, IsReversalEntry, QueueId, CreatedO" +
                "n FROM SunInterfaceLog WHERE (SunInterfaceLogId = @SunInterfaceLogId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SunInterfaceLogId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunInterfaceLogId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SunInterfaceTypeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunInterfaceTypeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SplitShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitShipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransactionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NSLPONo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLPONo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerDestinationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerDestinationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradingAgencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesignSourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignSourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WithOPRFabric", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WithOPRFabric", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoicePrefix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePrefix", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceSeq", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceUploadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceUploadDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BaseAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Qty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PiecesPerPack", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiecesPerPack", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierInvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierInvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RefNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DCNoteNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BaseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetSplitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSplitCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QACommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "QACommissionPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UKSupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UKSupplierCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SalesCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SalesCommission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTInputVATAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTInputVATAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTOutputVATAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTOutputVATAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTImportDuty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTImportDuty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTImportDutyInBaseCurrency", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTImportDutyInBaseCurrency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTTotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTTotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTTotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UTSalesCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTSalesCommission", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNextMfgOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNextMfgOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPOIssueToNextMfg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPOIssueToNextMfg", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsMockShopSample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMockShopSample", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsStudioSample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsStudioSample", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsSelfBilledOrder", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSelfBilledOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CategoryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CategoryId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullBaseAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullBaseAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullOtherAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullOtherAmt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullBaseTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullBaseTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullOtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullOtherTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FullQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsReversalEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsReversalEntry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QueueId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SunInterfaceLogId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunInterfaceLogId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SunInterfaceTypeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SunInterfaceTypeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SplitShipmentId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SplitShipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FiscalYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Period", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Period", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransactionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransactionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NSLPONo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NSLPONo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OfficeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeptId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeptId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductTeamId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductTeamId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProductId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProductId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeasonId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeasonId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TermOfPurchaseId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchaseId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerDestinationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerDestinationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TradingAgencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaymentTermId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryOfOriginId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryOfOriginId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DesignSourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DesignSourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WithOPRFabric", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WithOPRFabric", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoicePrefix", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePrefix", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoicePrefix", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoicePrefix", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceSeq", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceSeq", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceSeq", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceYear", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceUploadDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceUploadDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceUploadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceUploadDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BaseAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Qty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Qty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PiecesPerPack", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PiecesPerPack", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingUnitId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnitId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SupplierInvoiceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierInvoiceNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SupplierInvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierInvoiceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RefNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RefNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RefNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DCNoteNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DCNoteNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DCNoteNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BaseTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BaseTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetSplitCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetSplitCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QACommissionPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "QACommissionPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorPaymentDiscountPercent", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VendorPaymentDiscountPercent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UKSupplierCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UKSupplierCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UKSupplierCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UKSupplierCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SalesCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SalesCommission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTInputVATAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTInputVATAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTOutputVATAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTOutputVATAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTImportDuty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTImportDuty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTImportDutyInBaseCurrency", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTImportDutyInBaseCurrency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTTotalShippedAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTTotalShippedNetFOBAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedNetFOBAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTTotalShippedSupplierGmtAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTTotalShippedSupplierGmtAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UTSalesCommission", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "UTSalesCommission", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsNextMfgOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNextMfgOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsPOIssueToNextMfg", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPOIssueToNextMfg", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsMockShopSample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsMockShopSample", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsStudioSample", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsStudioSample", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsSelfBilledOrder", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsSelfBilledOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CategoryId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CategoryId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullBaseAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullBaseAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullOtherAmt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullOtherAmt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullBaseTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullBaseTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullOtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FullOtherTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FullQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FullQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsReversalEntry", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsReversalEntry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_QueueId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "QueueId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.next.isam.dataserver.Properties.Settings.Default.ISAMConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SunInterfaceLogId, SunInterfaceTypeId, ShipmentId, SplitShipmentId, FiscalYear, Period, TransactionDate, ContractNo, NSLPONo, DeliveryNo, OfficeId, DeptId, ProductTeamId, ProductId, SeasonId, VendorId, CustomerId, TermOfPurchaseId, CustomerDestinationId, TradingAgencyId, CurrencyId, PaymentTermId, CountryOfOriginId, DesignSourceId, WithOPRFabric, InvoicePrefix, InvoiceSeq, InvoiceYear, SequenceNo, InvoiceUploadDate, BaseAmt, OtherAmt, Qty, PiecesPerPack, PackingUnitId, SupplierInvoiceNo, RefNo, DCNoteNo, BaseTax, OtherTax, SetSplitCount, QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, UKSupplierCode, SalesCommission, TotalShippedAmt, TotalShippedNetFOBAmt, TotalShippedSupplierGmtAmt, UTInputVATAmt, UTOutputVATAmt, UTImportDuty, UTImportDutyInBaseCurrency, UTTotalShippedAmt, UTTotalShippedNetFOBAmt, UTTotalShippedSupplierGmtAmt, UTSalesCommission, IsNextMfgOrder, IsPOIssueToNextMfg, IsMockShopSample, IsStudioSample, IsSelfBilledOrder, CategoryId, FullBaseAmt, FullOtherAmt, FullBaseTax, FullOtherTax, FullQty, IsReversalEntry, QueueId, CreatedOn FROM dbo.SunInterfaceLog";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SunInterfaceLogDs.SunInterfaceLogDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SunInterfaceLogDs.SunInterfaceLogDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SunInterfaceLogDs.SunInterfaceLogDataTable dataTable = new SunInterfaceLogDs.SunInterfaceLogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SunInterfaceLogDs.SunInterfaceLogDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SunInterfaceLogDs dataSet) {
            return this.Adapter.Update(dataSet, "SunInterfaceLog");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_SunInterfaceLogId, 
                    int Original_SunInterfaceTypeId, 
                    int Original_ShipmentId, 
                    int Original_SplitShipmentId, 
                    int Original_FiscalYear, 
                    int Original_Period, 
                    System.DateTime Original_TransactionDate, 
                    string Original_ContractNo, 
                    string Original_NSLPONo, 
                    int Original_DeliveryNo, 
                    int Original_OfficeId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ProductId, 
                    int Original_SeasonId, 
                    int Original_VendorId, 
                    int Original_CustomerId, 
                    int Original_TermOfPurchaseId, 
                    int Original_CustomerDestinationId, 
                    int Original_TradingAgencyId, 
                    int Original_CurrencyId, 
                    int Original_PaymentTermId, 
                    int Original_CountryOfOriginId, 
                    int Original_DesignSourceId, 
                    int Original_WithOPRFabric, 
                    string Original_InvoicePrefix, 
                    global::System.Nullable<int> Original_InvoiceSeq, 
                    global::System.Nullable<int> Original_InvoiceYear, 
                    global::System.Nullable<int> Original_SequenceNo, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceUploadDate, 
                    decimal Original_BaseAmt, 
                    decimal Original_OtherAmt, 
                    int Original_Qty, 
                    int Original_PiecesPerPack, 
                    int Original_PackingUnitId, 
                    string Original_SupplierInvoiceNo, 
                    string Original_RefNo, 
                    string Original_DCNoteNo, 
                    decimal Original_BaseTax, 
                    decimal Original_OtherTax, 
                    int Original_SetSplitCount, 
                    decimal Original_QACommissionPercent, 
                    decimal Original_VendorPaymentDiscountPercent, 
                    decimal Original_LabTestIncome, 
                    string Original_UKSupplierCode, 
                    decimal Original_SalesCommission, 
                    decimal Original_TotalShippedAmt, 
                    decimal Original_TotalShippedNetFOBAmt, 
                    decimal Original_TotalShippedSupplierGmtAmt, 
                    decimal Original_UTInputVATAmt, 
                    decimal Original_UTOutputVATAmt, 
                    decimal Original_UTImportDuty, 
                    decimal Original_UTImportDutyInBaseCurrency, 
                    decimal Original_UTTotalShippedAmt, 
                    decimal Original_UTTotalShippedNetFOBAmt, 
                    decimal Original_UTTotalShippedSupplierGmtAmt, 
                    decimal Original_UTSalesCommission, 
                    int Original_IsNextMfgOrder, 
                    int Original_IsPOIssueToNextMfg, 
                    int Original_IsMockShopSample, 
                    int Original_IsStudioSample, 
                    bool Original_IsSelfBilledOrder, 
                    int Original_CategoryId, 
                    decimal Original_FullBaseAmt, 
                    decimal Original_FullOtherAmt, 
                    decimal Original_FullBaseTax, 
                    decimal Original_FullOtherTax, 
                    int Original_FullQty, 
                    bool Original_IsReversalEntry, 
                    int Original_QueueId, 
                    System.DateTime Original_CreatedOn) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SunInterfaceLogId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_SunInterfaceTypeId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ShipmentId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_SplitShipmentId));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_FiscalYear));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_Period));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_TransactionDate));
            if ((Original_ContractNo == null)) {
                throw new global::System.ArgumentNullException("Original_ContractNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ContractNo));
            }
            if ((Original_NSLPONo == null)) {
                throw new global::System.ArgumentNullException("Original_NSLPONo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_NSLPONo));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_DeliveryNo));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_OfficeId));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_DeptId));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ProductTeamId));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_ProductId));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_SeasonId));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_VendorId));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_CustomerId));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_TermOfPurchaseId));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_CustomerDestinationId));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((int)(Original_TradingAgencyId));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_CurrencyId));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_PaymentTermId));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_CountryOfOriginId));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((int)(Original_DesignSourceId));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_WithOPRFabric));
            if ((Original_InvoicePrefix == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_InvoicePrefix));
            }
            if ((Original_InvoiceSeq.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_InvoiceSeq.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceYear.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_InvoiceYear.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_SequenceNo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_SequenceNo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceUploadDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_InvoiceUploadDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[35].Value = ((decimal)(Original_BaseAmt));
            this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_OtherAmt));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((int)(Original_Qty));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_PiecesPerPack));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_PackingUnitId));
            if ((Original_SupplierInvoiceNo == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_SupplierInvoiceNo));
            }
            if ((Original_RefNo == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_RefNo));
            }
            if ((Original_DCNoteNo == null)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_DCNoteNo));
            }
            this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_BaseTax));
            this.Adapter.DeleteCommand.Parameters[47].Value = ((decimal)(Original_OtherTax));
            this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_SetSplitCount));
            this.Adapter.DeleteCommand.Parameters[49].Value = ((decimal)(Original_QACommissionPercent));
            this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_VendorPaymentDiscountPercent));
            this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_LabTestIncome));
            if ((Original_UKSupplierCode == null)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_UKSupplierCode));
            }
            this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_SalesCommission));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((decimal)(Original_TotalShippedAmt));
            this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_TotalShippedNetFOBAmt));
            this.Adapter.DeleteCommand.Parameters[57].Value = ((decimal)(Original_TotalShippedSupplierGmtAmt));
            this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_UTInputVATAmt));
            this.Adapter.DeleteCommand.Parameters[59].Value = ((decimal)(Original_UTOutputVATAmt));
            this.Adapter.DeleteCommand.Parameters[60].Value = ((decimal)(Original_UTImportDuty));
            this.Adapter.DeleteCommand.Parameters[61].Value = ((decimal)(Original_UTImportDutyInBaseCurrency));
            this.Adapter.DeleteCommand.Parameters[62].Value = ((decimal)(Original_UTTotalShippedAmt));
            this.Adapter.DeleteCommand.Parameters[63].Value = ((decimal)(Original_UTTotalShippedNetFOBAmt));
            this.Adapter.DeleteCommand.Parameters[64].Value = ((decimal)(Original_UTTotalShippedSupplierGmtAmt));
            this.Adapter.DeleteCommand.Parameters[65].Value = ((decimal)(Original_UTSalesCommission));
            this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_IsNextMfgOrder));
            this.Adapter.DeleteCommand.Parameters[67].Value = ((int)(Original_IsPOIssueToNextMfg));
            this.Adapter.DeleteCommand.Parameters[68].Value = ((int)(Original_IsMockShopSample));
            this.Adapter.DeleteCommand.Parameters[69].Value = ((int)(Original_IsStudioSample));
            this.Adapter.DeleteCommand.Parameters[70].Value = ((bool)(Original_IsSelfBilledOrder));
            this.Adapter.DeleteCommand.Parameters[71].Value = ((int)(Original_CategoryId));
            this.Adapter.DeleteCommand.Parameters[72].Value = ((decimal)(Original_FullBaseAmt));
            this.Adapter.DeleteCommand.Parameters[73].Value = ((decimal)(Original_FullOtherAmt));
            this.Adapter.DeleteCommand.Parameters[74].Value = ((decimal)(Original_FullBaseTax));
            this.Adapter.DeleteCommand.Parameters[75].Value = ((decimal)(Original_FullOtherTax));
            this.Adapter.DeleteCommand.Parameters[76].Value = ((int)(Original_FullQty));
            this.Adapter.DeleteCommand.Parameters[77].Value = ((bool)(Original_IsReversalEntry));
            this.Adapter.DeleteCommand.Parameters[78].Value = ((int)(Original_QueueId));
            this.Adapter.DeleteCommand.Parameters[79].Value = ((System.DateTime)(Original_CreatedOn));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int SunInterfaceLogId, 
                    int SunInterfaceTypeId, 
                    int ShipmentId, 
                    int SplitShipmentId, 
                    int FiscalYear, 
                    int Period, 
                    System.DateTime TransactionDate, 
                    string ContractNo, 
                    string NSLPONo, 
                    int DeliveryNo, 
                    int OfficeId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ProductId, 
                    int SeasonId, 
                    int VendorId, 
                    int CustomerId, 
                    int TermOfPurchaseId, 
                    int CustomerDestinationId, 
                    int TradingAgencyId, 
                    int CurrencyId, 
                    int PaymentTermId, 
                    int CountryOfOriginId, 
                    int DesignSourceId, 
                    int WithOPRFabric, 
                    string InvoicePrefix, 
                    global::System.Nullable<int> InvoiceSeq, 
                    global::System.Nullable<int> InvoiceYear, 
                    global::System.Nullable<int> SequenceNo, 
                    global::System.Nullable<global::System.DateTime> InvoiceUploadDate, 
                    decimal BaseAmt, 
                    decimal OtherAmt, 
                    int Qty, 
                    int PiecesPerPack, 
                    int PackingUnitId, 
                    string SupplierInvoiceNo, 
                    string RefNo, 
                    string DCNoteNo, 
                    decimal BaseTax, 
                    decimal OtherTax, 
                    int SetSplitCount, 
                    decimal QACommissionPercent, 
                    decimal VendorPaymentDiscountPercent, 
                    decimal LabTestIncome, 
                    string UKSupplierCode, 
                    decimal SalesCommission, 
                    decimal TotalShippedAmt, 
                    decimal TotalShippedNetFOBAmt, 
                    decimal TotalShippedSupplierGmtAmt, 
                    decimal UTInputVATAmt, 
                    decimal UTOutputVATAmt, 
                    decimal UTImportDuty, 
                    decimal UTImportDutyInBaseCurrency, 
                    decimal UTTotalShippedAmt, 
                    decimal UTTotalShippedNetFOBAmt, 
                    decimal UTTotalShippedSupplierGmtAmt, 
                    decimal UTSalesCommission, 
                    int IsNextMfgOrder, 
                    int IsPOIssueToNextMfg, 
                    int IsMockShopSample, 
                    int IsStudioSample, 
                    bool IsSelfBilledOrder, 
                    int CategoryId, 
                    decimal FullBaseAmt, 
                    decimal FullOtherAmt, 
                    decimal FullBaseTax, 
                    decimal FullOtherTax, 
                    int FullQty, 
                    bool IsReversalEntry, 
                    int QueueId, 
                    System.DateTime CreatedOn) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SunInterfaceLogId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(SunInterfaceTypeId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ShipmentId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SplitShipmentId));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(FiscalYear));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Period));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(TransactionDate));
            if ((ContractNo == null)) {
                throw new global::System.ArgumentNullException("ContractNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ContractNo));
            }
            if ((NSLPONo == null)) {
                throw new global::System.ArgumentNullException("NSLPONo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NSLPONo));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((int)(DeliveryNo));
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(OfficeId));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(DeptId));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(ProductTeamId));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(ProductId));
            this.Adapter.InsertCommand.Parameters[14].Value = ((int)(SeasonId));
            this.Adapter.InsertCommand.Parameters[15].Value = ((int)(VendorId));
            this.Adapter.InsertCommand.Parameters[16].Value = ((int)(CustomerId));
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(TermOfPurchaseId));
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(CustomerDestinationId));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(TradingAgencyId));
            this.Adapter.InsertCommand.Parameters[20].Value = ((int)(CurrencyId));
            this.Adapter.InsertCommand.Parameters[21].Value = ((int)(PaymentTermId));
            this.Adapter.InsertCommand.Parameters[22].Value = ((int)(CountryOfOriginId));
            this.Adapter.InsertCommand.Parameters[23].Value = ((int)(DesignSourceId));
            this.Adapter.InsertCommand.Parameters[24].Value = ((int)(WithOPRFabric));
            if ((InvoicePrefix == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(InvoicePrefix));
            }
            if ((InvoiceSeq.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(InvoiceSeq.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((InvoiceYear.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(InvoiceYear.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SequenceNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(SequenceNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((InvoiceUploadDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTime)(InvoiceUploadDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(BaseAmt));
            this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(OtherAmt));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(Qty));
            this.Adapter.InsertCommand.Parameters[33].Value = ((int)(PiecesPerPack));
            this.Adapter.InsertCommand.Parameters[34].Value = ((int)(PackingUnitId));
            if ((SupplierInvoiceNo == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SupplierInvoiceNo));
            }
            if ((RefNo == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(RefNo));
            }
            if ((DCNoteNo == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(DCNoteNo));
            }
            this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(BaseTax));
            this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(OtherTax));
            this.Adapter.InsertCommand.Parameters[40].Value = ((int)(SetSplitCount));
            this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(QACommissionPercent));
            this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(VendorPaymentDiscountPercent));
            this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(LabTestIncome));
            if ((UKSupplierCode == null)) {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(UKSupplierCode));
            }
            this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(SalesCommission));
            this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(TotalShippedAmt));
            this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(TotalShippedNetFOBAmt));
            this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(TotalShippedSupplierGmtAmt));
            this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(UTInputVATAmt));
            this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(UTOutputVATAmt));
            this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(UTImportDuty));
            this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(UTImportDutyInBaseCurrency));
            this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(UTTotalShippedAmt));
            this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(UTTotalShippedNetFOBAmt));
            this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(UTTotalShippedSupplierGmtAmt));
            this.Adapter.InsertCommand.Parameters[56].Value = ((decimal)(UTSalesCommission));
            this.Adapter.InsertCommand.Parameters[57].Value = ((int)(IsNextMfgOrder));
            this.Adapter.InsertCommand.Parameters[58].Value = ((int)(IsPOIssueToNextMfg));
            this.Adapter.InsertCommand.Parameters[59].Value = ((int)(IsMockShopSample));
            this.Adapter.InsertCommand.Parameters[60].Value = ((int)(IsStudioSample));
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(IsSelfBilledOrder));
            this.Adapter.InsertCommand.Parameters[62].Value = ((int)(CategoryId));
            this.Adapter.InsertCommand.Parameters[63].Value = ((decimal)(FullBaseAmt));
            this.Adapter.InsertCommand.Parameters[64].Value = ((decimal)(FullOtherAmt));
            this.Adapter.InsertCommand.Parameters[65].Value = ((decimal)(FullBaseTax));
            this.Adapter.InsertCommand.Parameters[66].Value = ((decimal)(FullOtherTax));
            this.Adapter.InsertCommand.Parameters[67].Value = ((int)(FullQty));
            this.Adapter.InsertCommand.Parameters[68].Value = ((bool)(IsReversalEntry));
            this.Adapter.InsertCommand.Parameters[69].Value = ((int)(QueueId));
            this.Adapter.InsertCommand.Parameters[70].Value = ((System.DateTime)(CreatedOn));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SunInterfaceLogId, 
                    int SunInterfaceTypeId, 
                    int ShipmentId, 
                    int SplitShipmentId, 
                    int FiscalYear, 
                    int Period, 
                    System.DateTime TransactionDate, 
                    string ContractNo, 
                    string NSLPONo, 
                    int DeliveryNo, 
                    int OfficeId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ProductId, 
                    int SeasonId, 
                    int VendorId, 
                    int CustomerId, 
                    int TermOfPurchaseId, 
                    int CustomerDestinationId, 
                    int TradingAgencyId, 
                    int CurrencyId, 
                    int PaymentTermId, 
                    int CountryOfOriginId, 
                    int DesignSourceId, 
                    int WithOPRFabric, 
                    string InvoicePrefix, 
                    global::System.Nullable<int> InvoiceSeq, 
                    global::System.Nullable<int> InvoiceYear, 
                    global::System.Nullable<int> SequenceNo, 
                    global::System.Nullable<global::System.DateTime> InvoiceUploadDate, 
                    decimal BaseAmt, 
                    decimal OtherAmt, 
                    int Qty, 
                    int PiecesPerPack, 
                    int PackingUnitId, 
                    string SupplierInvoiceNo, 
                    string RefNo, 
                    string DCNoteNo, 
                    decimal BaseTax, 
                    decimal OtherTax, 
                    int SetSplitCount, 
                    decimal QACommissionPercent, 
                    decimal VendorPaymentDiscountPercent, 
                    decimal LabTestIncome, 
                    string UKSupplierCode, 
                    decimal SalesCommission, 
                    decimal TotalShippedAmt, 
                    decimal TotalShippedNetFOBAmt, 
                    decimal TotalShippedSupplierGmtAmt, 
                    decimal UTInputVATAmt, 
                    decimal UTOutputVATAmt, 
                    decimal UTImportDuty, 
                    decimal UTImportDutyInBaseCurrency, 
                    decimal UTTotalShippedAmt, 
                    decimal UTTotalShippedNetFOBAmt, 
                    decimal UTTotalShippedSupplierGmtAmt, 
                    decimal UTSalesCommission, 
                    int IsNextMfgOrder, 
                    int IsPOIssueToNextMfg, 
                    int IsMockShopSample, 
                    int IsStudioSample, 
                    bool IsSelfBilledOrder, 
                    int CategoryId, 
                    decimal FullBaseAmt, 
                    decimal FullOtherAmt, 
                    decimal FullBaseTax, 
                    decimal FullOtherTax, 
                    int FullQty, 
                    bool IsReversalEntry, 
                    int QueueId, 
                    System.DateTime CreatedOn, 
                    int Original_SunInterfaceLogId, 
                    int Original_SunInterfaceTypeId, 
                    int Original_ShipmentId, 
                    int Original_SplitShipmentId, 
                    int Original_FiscalYear, 
                    int Original_Period, 
                    System.DateTime Original_TransactionDate, 
                    string Original_ContractNo, 
                    string Original_NSLPONo, 
                    int Original_DeliveryNo, 
                    int Original_OfficeId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ProductId, 
                    int Original_SeasonId, 
                    int Original_VendorId, 
                    int Original_CustomerId, 
                    int Original_TermOfPurchaseId, 
                    int Original_CustomerDestinationId, 
                    int Original_TradingAgencyId, 
                    int Original_CurrencyId, 
                    int Original_PaymentTermId, 
                    int Original_CountryOfOriginId, 
                    int Original_DesignSourceId, 
                    int Original_WithOPRFabric, 
                    string Original_InvoicePrefix, 
                    global::System.Nullable<int> Original_InvoiceSeq, 
                    global::System.Nullable<int> Original_InvoiceYear, 
                    global::System.Nullable<int> Original_SequenceNo, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceUploadDate, 
                    decimal Original_BaseAmt, 
                    decimal Original_OtherAmt, 
                    int Original_Qty, 
                    int Original_PiecesPerPack, 
                    int Original_PackingUnitId, 
                    string Original_SupplierInvoiceNo, 
                    string Original_RefNo, 
                    string Original_DCNoteNo, 
                    decimal Original_BaseTax, 
                    decimal Original_OtherTax, 
                    int Original_SetSplitCount, 
                    decimal Original_QACommissionPercent, 
                    decimal Original_VendorPaymentDiscountPercent, 
                    decimal Original_LabTestIncome, 
                    string Original_UKSupplierCode, 
                    decimal Original_SalesCommission, 
                    decimal Original_TotalShippedAmt, 
                    decimal Original_TotalShippedNetFOBAmt, 
                    decimal Original_TotalShippedSupplierGmtAmt, 
                    decimal Original_UTInputVATAmt, 
                    decimal Original_UTOutputVATAmt, 
                    decimal Original_UTImportDuty, 
                    decimal Original_UTImportDutyInBaseCurrency, 
                    decimal Original_UTTotalShippedAmt, 
                    decimal Original_UTTotalShippedNetFOBAmt, 
                    decimal Original_UTTotalShippedSupplierGmtAmt, 
                    decimal Original_UTSalesCommission, 
                    int Original_IsNextMfgOrder, 
                    int Original_IsPOIssueToNextMfg, 
                    int Original_IsMockShopSample, 
                    int Original_IsStudioSample, 
                    bool Original_IsSelfBilledOrder, 
                    int Original_CategoryId, 
                    decimal Original_FullBaseAmt, 
                    decimal Original_FullOtherAmt, 
                    decimal Original_FullBaseTax, 
                    decimal Original_FullOtherTax, 
                    int Original_FullQty, 
                    bool Original_IsReversalEntry, 
                    int Original_QueueId, 
                    System.DateTime Original_CreatedOn) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SunInterfaceLogId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(SunInterfaceTypeId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ShipmentId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SplitShipmentId));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(FiscalYear));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Period));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(TransactionDate));
            if ((ContractNo == null)) {
                throw new global::System.ArgumentNullException("ContractNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ContractNo));
            }
            if ((NSLPONo == null)) {
                throw new global::System.ArgumentNullException("NSLPONo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NSLPONo));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(DeliveryNo));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(OfficeId));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(DeptId));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(ProductTeamId));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ProductId));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(SeasonId));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(VendorId));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(CustomerId));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(TermOfPurchaseId));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(CustomerDestinationId));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(TradingAgencyId));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(CurrencyId));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(PaymentTermId));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(CountryOfOriginId));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(DesignSourceId));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(WithOPRFabric));
            if ((InvoicePrefix == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(InvoicePrefix));
            }
            if ((InvoiceSeq.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(InvoiceSeq.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((InvoiceYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(InvoiceYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((SequenceNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(SequenceNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((InvoiceUploadDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(InvoiceUploadDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(BaseAmt));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(OtherAmt));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(Qty));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(PiecesPerPack));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(PackingUnitId));
            if ((SupplierInvoiceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SupplierInvoiceNo));
            }
            if ((RefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(RefNo));
            }
            if ((DCNoteNo == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(DCNoteNo));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(BaseTax));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(OtherTax));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(SetSplitCount));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(QACommissionPercent));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(VendorPaymentDiscountPercent));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(LabTestIncome));
            if ((UKSupplierCode == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(UKSupplierCode));
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(SalesCommission));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(TotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(TotalShippedNetFOBAmt));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(TotalShippedSupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(UTInputVATAmt));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(UTOutputVATAmt));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(UTImportDuty));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(UTImportDutyInBaseCurrency));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(UTTotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(UTTotalShippedNetFOBAmt));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(UTTotalShippedSupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(UTSalesCommission));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(IsNextMfgOrder));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(IsPOIssueToNextMfg));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(IsMockShopSample));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(IsStudioSample));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(IsSelfBilledOrder));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(CategoryId));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(FullBaseAmt));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(FullOtherAmt));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(FullBaseTax));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(FullOtherTax));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((int)(FullQty));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((bool)(IsReversalEntry));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((int)(QueueId));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((System.DateTime)(CreatedOn));
            this.Adapter.UpdateCommand.Parameters[71].Value = ((int)(Original_SunInterfaceLogId));
            this.Adapter.UpdateCommand.Parameters[72].Value = ((int)(Original_SunInterfaceTypeId));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((int)(Original_ShipmentId));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((int)(Original_SplitShipmentId));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((int)(Original_FiscalYear));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Original_Period));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_TransactionDate));
            if ((Original_ContractNo == null)) {
                throw new global::System.ArgumentNullException("Original_ContractNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_ContractNo));
            }
            if ((Original_NSLPONo == null)) {
                throw new global::System.ArgumentNullException("Original_NSLPONo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(Original_NSLPONo));
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_DeliveryNo));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_OfficeId));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_DeptId));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(Original_ProductTeamId));
            this.Adapter.UpdateCommand.Parameters[84].Value = ((int)(Original_ProductId));
            this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(Original_SeasonId));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_VendorId));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(Original_CustomerId));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(Original_TermOfPurchaseId));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_CustomerDestinationId));
            this.Adapter.UpdateCommand.Parameters[90].Value = ((int)(Original_TradingAgencyId));
            this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_CurrencyId));
            this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(Original_PaymentTermId));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(Original_CountryOfOriginId));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(Original_DesignSourceId));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(Original_WithOPRFabric));
            if ((Original_InvoicePrefix == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_InvoicePrefix));
            }
            if ((Original_InvoiceSeq.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((int)(Original_InvoiceSeq.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceYear.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((int)(Original_InvoiceYear.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_SequenceNo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_SequenceNo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_InvoiceUploadDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((System.DateTime)(Original_InvoiceUploadDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[106].Value = ((decimal)(Original_BaseAmt));
            this.Adapter.UpdateCommand.Parameters[107].Value = ((decimal)(Original_OtherAmt));
            this.Adapter.UpdateCommand.Parameters[108].Value = ((int)(Original_Qty));
            this.Adapter.UpdateCommand.Parameters[109].Value = ((int)(Original_PiecesPerPack));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(Original_PackingUnitId));
            if ((Original_SupplierInvoiceNo == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_SupplierInvoiceNo));
            }
            if ((Original_RefNo == null)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_RefNo));
            }
            if ((Original_DCNoteNo == null)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_DCNoteNo));
            }
            this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(Original_BaseTax));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((decimal)(Original_OtherTax));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((int)(Original_SetSplitCount));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((decimal)(Original_QACommissionPercent));
            this.Adapter.UpdateCommand.Parameters[121].Value = ((decimal)(Original_VendorPaymentDiscountPercent));
            this.Adapter.UpdateCommand.Parameters[122].Value = ((decimal)(Original_LabTestIncome));
            if ((Original_UKSupplierCode == null)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_UKSupplierCode));
            }
            this.Adapter.UpdateCommand.Parameters[125].Value = ((decimal)(Original_SalesCommission));
            this.Adapter.UpdateCommand.Parameters[126].Value = ((decimal)(Original_TotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((decimal)(Original_TotalShippedNetFOBAmt));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(Original_TotalShippedSupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[129].Value = ((decimal)(Original_UTInputVATAmt));
            this.Adapter.UpdateCommand.Parameters[130].Value = ((decimal)(Original_UTOutputVATAmt));
            this.Adapter.UpdateCommand.Parameters[131].Value = ((decimal)(Original_UTImportDuty));
            this.Adapter.UpdateCommand.Parameters[132].Value = ((decimal)(Original_UTImportDutyInBaseCurrency));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((decimal)(Original_UTTotalShippedAmt));
            this.Adapter.UpdateCommand.Parameters[134].Value = ((decimal)(Original_UTTotalShippedNetFOBAmt));
            this.Adapter.UpdateCommand.Parameters[135].Value = ((decimal)(Original_UTTotalShippedSupplierGmtAmt));
            this.Adapter.UpdateCommand.Parameters[136].Value = ((decimal)(Original_UTSalesCommission));
            this.Adapter.UpdateCommand.Parameters[137].Value = ((int)(Original_IsNextMfgOrder));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((int)(Original_IsPOIssueToNextMfg));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((int)(Original_IsMockShopSample));
            this.Adapter.UpdateCommand.Parameters[140].Value = ((int)(Original_IsStudioSample));
            this.Adapter.UpdateCommand.Parameters[141].Value = ((bool)(Original_IsSelfBilledOrder));
            this.Adapter.UpdateCommand.Parameters[142].Value = ((int)(Original_CategoryId));
            this.Adapter.UpdateCommand.Parameters[143].Value = ((decimal)(Original_FullBaseAmt));
            this.Adapter.UpdateCommand.Parameters[144].Value = ((decimal)(Original_FullOtherAmt));
            this.Adapter.UpdateCommand.Parameters[145].Value = ((decimal)(Original_FullBaseTax));
            this.Adapter.UpdateCommand.Parameters[146].Value = ((decimal)(Original_FullOtherTax));
            this.Adapter.UpdateCommand.Parameters[147].Value = ((int)(Original_FullQty));
            this.Adapter.UpdateCommand.Parameters[148].Value = ((bool)(Original_IsReversalEntry));
            this.Adapter.UpdateCommand.Parameters[149].Value = ((int)(Original_QueueId));
            this.Adapter.UpdateCommand.Parameters[150].Value = ((System.DateTime)(Original_CreatedOn));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SunInterfaceTypeId, 
                    int ShipmentId, 
                    int SplitShipmentId, 
                    int FiscalYear, 
                    int Period, 
                    System.DateTime TransactionDate, 
                    string ContractNo, 
                    string NSLPONo, 
                    int DeliveryNo, 
                    int OfficeId, 
                    int DeptId, 
                    int ProductTeamId, 
                    int ProductId, 
                    int SeasonId, 
                    int VendorId, 
                    int CustomerId, 
                    int TermOfPurchaseId, 
                    int CustomerDestinationId, 
                    int TradingAgencyId, 
                    int CurrencyId, 
                    int PaymentTermId, 
                    int CountryOfOriginId, 
                    int DesignSourceId, 
                    int WithOPRFabric, 
                    string InvoicePrefix, 
                    global::System.Nullable<int> InvoiceSeq, 
                    global::System.Nullable<int> InvoiceYear, 
                    global::System.Nullable<int> SequenceNo, 
                    global::System.Nullable<global::System.DateTime> InvoiceUploadDate, 
                    decimal BaseAmt, 
                    decimal OtherAmt, 
                    int Qty, 
                    int PiecesPerPack, 
                    int PackingUnitId, 
                    string SupplierInvoiceNo, 
                    string RefNo, 
                    string DCNoteNo, 
                    decimal BaseTax, 
                    decimal OtherTax, 
                    int SetSplitCount, 
                    decimal QACommissionPercent, 
                    decimal VendorPaymentDiscountPercent, 
                    decimal LabTestIncome, 
                    string UKSupplierCode, 
                    decimal SalesCommission, 
                    decimal TotalShippedAmt, 
                    decimal TotalShippedNetFOBAmt, 
                    decimal TotalShippedSupplierGmtAmt, 
                    decimal UTInputVATAmt, 
                    decimal UTOutputVATAmt, 
                    decimal UTImportDuty, 
                    decimal UTImportDutyInBaseCurrency, 
                    decimal UTTotalShippedAmt, 
                    decimal UTTotalShippedNetFOBAmt, 
                    decimal UTTotalShippedSupplierGmtAmt, 
                    decimal UTSalesCommission, 
                    int IsNextMfgOrder, 
                    int IsPOIssueToNextMfg, 
                    int IsMockShopSample, 
                    int IsStudioSample, 
                    bool IsSelfBilledOrder, 
                    int CategoryId, 
                    decimal FullBaseAmt, 
                    decimal FullOtherAmt, 
                    decimal FullBaseTax, 
                    decimal FullOtherTax, 
                    int FullQty, 
                    bool IsReversalEntry, 
                    int QueueId, 
                    System.DateTime CreatedOn, 
                    int Original_SunInterfaceLogId, 
                    int Original_SunInterfaceTypeId, 
                    int Original_ShipmentId, 
                    int Original_SplitShipmentId, 
                    int Original_FiscalYear, 
                    int Original_Period, 
                    System.DateTime Original_TransactionDate, 
                    string Original_ContractNo, 
                    string Original_NSLPONo, 
                    int Original_DeliveryNo, 
                    int Original_OfficeId, 
                    int Original_DeptId, 
                    int Original_ProductTeamId, 
                    int Original_ProductId, 
                    int Original_SeasonId, 
                    int Original_VendorId, 
                    int Original_CustomerId, 
                    int Original_TermOfPurchaseId, 
                    int Original_CustomerDestinationId, 
                    int Original_TradingAgencyId, 
                    int Original_CurrencyId, 
                    int Original_PaymentTermId, 
                    int Original_CountryOfOriginId, 
                    int Original_DesignSourceId, 
                    int Original_WithOPRFabric, 
                    string Original_InvoicePrefix, 
                    global::System.Nullable<int> Original_InvoiceSeq, 
                    global::System.Nullable<int> Original_InvoiceYear, 
                    global::System.Nullable<int> Original_SequenceNo, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceUploadDate, 
                    decimal Original_BaseAmt, 
                    decimal Original_OtherAmt, 
                    int Original_Qty, 
                    int Original_PiecesPerPack, 
                    int Original_PackingUnitId, 
                    string Original_SupplierInvoiceNo, 
                    string Original_RefNo, 
                    string Original_DCNoteNo, 
                    decimal Original_BaseTax, 
                    decimal Original_OtherTax, 
                    int Original_SetSplitCount, 
                    decimal Original_QACommissionPercent, 
                    decimal Original_VendorPaymentDiscountPercent, 
                    decimal Original_LabTestIncome, 
                    string Original_UKSupplierCode, 
                    decimal Original_SalesCommission, 
                    decimal Original_TotalShippedAmt, 
                    decimal Original_TotalShippedNetFOBAmt, 
                    decimal Original_TotalShippedSupplierGmtAmt, 
                    decimal Original_UTInputVATAmt, 
                    decimal Original_UTOutputVATAmt, 
                    decimal Original_UTImportDuty, 
                    decimal Original_UTImportDutyInBaseCurrency, 
                    decimal Original_UTTotalShippedAmt, 
                    decimal Original_UTTotalShippedNetFOBAmt, 
                    decimal Original_UTTotalShippedSupplierGmtAmt, 
                    decimal Original_UTSalesCommission, 
                    int Original_IsNextMfgOrder, 
                    int Original_IsPOIssueToNextMfg, 
                    int Original_IsMockShopSample, 
                    int Original_IsStudioSample, 
                    bool Original_IsSelfBilledOrder, 
                    int Original_CategoryId, 
                    decimal Original_FullBaseAmt, 
                    decimal Original_FullOtherAmt, 
                    decimal Original_FullBaseTax, 
                    decimal Original_FullOtherTax, 
                    int Original_FullQty, 
                    bool Original_IsReversalEntry, 
                    int Original_QueueId, 
                    System.DateTime Original_CreatedOn) {
            return this.Update(Original_SunInterfaceLogId, SunInterfaceTypeId, ShipmentId, SplitShipmentId, FiscalYear, Period, TransactionDate, ContractNo, NSLPONo, DeliveryNo, OfficeId, DeptId, ProductTeamId, ProductId, SeasonId, VendorId, CustomerId, TermOfPurchaseId, CustomerDestinationId, TradingAgencyId, CurrencyId, PaymentTermId, CountryOfOriginId, DesignSourceId, WithOPRFabric, InvoicePrefix, InvoiceSeq, InvoiceYear, SequenceNo, InvoiceUploadDate, BaseAmt, OtherAmt, Qty, PiecesPerPack, PackingUnitId, SupplierInvoiceNo, RefNo, DCNoteNo, BaseTax, OtherTax, SetSplitCount, QACommissionPercent, VendorPaymentDiscountPercent, LabTestIncome, UKSupplierCode, SalesCommission, TotalShippedAmt, TotalShippedNetFOBAmt, TotalShippedSupplierGmtAmt, UTInputVATAmt, UTOutputVATAmt, UTImportDuty, UTImportDutyInBaseCurrency, UTTotalShippedAmt, UTTotalShippedNetFOBAmt, UTTotalShippedSupplierGmtAmt, UTSalesCommission, IsNextMfgOrder, IsPOIssueToNextMfg, IsMockShopSample, IsStudioSample, IsSelfBilledOrder, CategoryId, FullBaseAmt, FullOtherAmt, FullBaseTax, FullOtherTax, FullQty, IsReversalEntry, QueueId, CreatedOn, Original_SunInterfaceLogId, Original_SunInterfaceTypeId, Original_ShipmentId, Original_SplitShipmentId, Original_FiscalYear, Original_Period, Original_TransactionDate, Original_ContractNo, Original_NSLPONo, Original_DeliveryNo, Original_OfficeId, Original_DeptId, Original_ProductTeamId, Original_ProductId, Original_SeasonId, Original_VendorId, Original_CustomerId, Original_TermOfPurchaseId, Original_CustomerDestinationId, Original_TradingAgencyId, Original_CurrencyId, Original_PaymentTermId, Original_CountryOfOriginId, Original_DesignSourceId, Original_WithOPRFabric, Original_InvoicePrefix, Original_InvoiceSeq, Original_InvoiceYear, Original_SequenceNo, Original_InvoiceUploadDate, Original_BaseAmt, Original_OtherAmt, Original_Qty, Original_PiecesPerPack, Original_PackingUnitId, Original_SupplierInvoiceNo, Original_RefNo, Original_DCNoteNo, Original_BaseTax, Original_OtherTax, Original_SetSplitCount, Original_QACommissionPercent, Original_VendorPaymentDiscountPercent, Original_LabTestIncome, Original_UKSupplierCode, Original_SalesCommission, Original_TotalShippedAmt, Original_TotalShippedNetFOBAmt, Original_TotalShippedSupplierGmtAmt, Original_UTInputVATAmt, Original_UTOutputVATAmt, Original_UTImportDuty, Original_UTImportDutyInBaseCurrency, Original_UTTotalShippedAmt, Original_UTTotalShippedNetFOBAmt, Original_UTTotalShippedSupplierGmtAmt, Original_UTSalesCommission, Original_IsNextMfgOrder, Original_IsPOIssueToNextMfg, Original_IsMockShopSample, Original_IsStudioSample, Original_IsSelfBilledOrder, Original_CategoryId, Original_FullBaseAmt, Original_FullOtherAmt, Original_FullBaseTax, Original_FullOtherTax, Original_FullQty, Original_IsReversalEntry, Original_QueueId, Original_CreatedOn);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SunInterfaceLogTableAdapter _sunInterfaceLogTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SunInterfaceLogTableAdapter SunInterfaceLogTableAdapter {
            get {
                return this._sunInterfaceLogTableAdapter;
            }
            set {
                this._sunInterfaceLogTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._sunInterfaceLogTableAdapter != null) 
                            && (this._sunInterfaceLogTableAdapter.Connection != null))) {
                    return this._sunInterfaceLogTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._sunInterfaceLogTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SunInterfaceLogDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sunInterfaceLogTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SunInterfaceLog.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sunInterfaceLogTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SunInterfaceLogDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sunInterfaceLogTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SunInterfaceLog.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sunInterfaceLogTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SunInterfaceLogDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sunInterfaceLogTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SunInterfaceLog.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sunInterfaceLogTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SunInterfaceLogDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._sunInterfaceLogTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sunInterfaceLogTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._sunInterfaceLogTableAdapter != null)) {
                    revertConnections.Add(this._sunInterfaceLogTableAdapter, this._sunInterfaceLogTableAdapter.Connection);
                    this._sunInterfaceLogTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sunInterfaceLogTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sunInterfaceLogTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sunInterfaceLogTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sunInterfaceLogTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._sunInterfaceLogTableAdapter != null)) {
                    this._sunInterfaceLogTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sunInterfaceLogTableAdapter]));
                    this._sunInterfaceLogTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591