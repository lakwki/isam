//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.reporter.supplierpayment {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SupplierPaymentReportDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SupplierPaymentReportDs : global::System.Data.DataSet {
        
        private SupplierPaymentDataTable tableSupplierPayment;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SupplierPaymentReportDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SupplierPaymentReportDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SupplierPayment"] != null)) {
                    base.Tables.Add(new SupplierPaymentDataTable(ds.Tables["SupplierPayment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SupplierPaymentDataTable SupplierPayment {
            get {
                return this.tableSupplierPayment;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SupplierPaymentReportDs cln = ((SupplierPaymentReportDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SupplierPayment"] != null)) {
                    base.Tables.Add(new SupplierPaymentDataTable(ds.Tables["SupplierPayment"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSupplierPayment = ((SupplierPaymentDataTable)(base.Tables["SupplierPayment"]));
            if ((initTable == true)) {
                if ((this.tableSupplierPayment != null)) {
                    this.tableSupplierPayment.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SupplierPaymentReportDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SupplierPaymentReportDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSupplierPayment = new SupplierPaymentDataTable();
            base.Tables.Add(this.tableSupplierPayment);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSupplierPayment() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SupplierPaymentReportDs ds = new SupplierPaymentReportDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SupplierPaymentRowChangeEventHandler(object sender, SupplierPaymentRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SupplierPaymentDataTable : global::System.Data.TypedTableBase<SupplierPaymentRow> {
            
            private global::System.Data.DataColumn columnDeliveryNo;
            
            private global::System.Data.DataColumn columnContractId;
            
            private global::System.Data.DataColumn columnShipmentId;
            
            private global::System.Data.DataColumn columnContractNo;
            
            private global::System.Data.DataColumn columnInvoicePrefix;
            
            private global::System.Data.DataColumn columnInvoiceSeq;
            
            private global::System.Data.DataColumn columnInvoiceYear;
            
            private global::System.Data.DataColumn columnTotalShippedQty;
            
            private global::System.Data.DataColumn columnSupplierInvoiceNo;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnPaymentRefNo;
            
            private global::System.Data.DataColumn columnPaymentDate;
            
            private global::System.Data.DataColumn columnPaymentAmount;
            
            private global::System.Data.DataColumn columnCurrencyCode;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnBaseAmount;
            
            private global::System.Data.DataColumn columnBaseCurrencyCode;
            
            private global::System.Data.DataColumn columnBaseExchangeRate;
            
            private global::System.Data.DataColumn columnTradingAgencyName;
            
            private global::System.Data.DataColumn columnOfficeCode;
            
            private global::System.Data.DataColumn columnSeasonCode;
            
            private global::System.Data.DataColumn columnProductTeamCode;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnVendorSunAccountCode;
            
            private global::System.Data.DataColumn columnPackingUnitDesc;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerDesc;
            
            private global::System.Data.DataColumn columnSplitSuffix;
            
            private global::System.Data.DataColumn columnPurchaseAmount;
            
            private global::System.Data.DataColumn columnQACommissionPercent;
            
            private global::System.Data.DataColumn columnQACommissionAmount;
            
            private global::System.Data.DataColumn columnPurchaseBaseAmount;
            
            private global::System.Data.DataColumn columnVendorPaymentDiscountPercent;
            
            private global::System.Data.DataColumn columnVendorPaymentDiscountAmount;
            
            private global::System.Data.DataColumn columnQACommissionBaseAmount;
            
            private global::System.Data.DataColumn columnVendorPaymentDiscountBaseAmount;
            
            private global::System.Data.DataColumn columnSequenceNo;
            
            private global::System.Data.DataColumn columnCustomerOPSKey;
            
            private global::System.Data.DataColumn columnPaymentTermDesc;
            
            private global::System.Data.DataColumn columnShippingDocReceiptDate;
            
            private global::System.Data.DataColumn columnShippingDocCheckedOn;
            
            private global::System.Data.DataColumn columnAccountDocReceiptDate;
            
            private global::System.Data.DataColumn columnDocReviewedOn;
            
            private global::System.Data.DataColumn columnIsChinaGBTestRequired;
            
            private global::System.Data.DataColumn columnPurchaseInterfacedDate;
            
            private global::System.Data.DataColumn columnGBTestResult;
            
            private global::System.Data.DataColumn columnGBTestFlagMarkedOn;
            
            private global::System.Data.DataColumn columnGBTestFlagRemovedOn;
            
            private global::System.Data.DataColumn columnGBTestResultRecordedOn;
            
            private global::System.Data.DataColumn columnLabtestIncomeAmount;
            
            private global::System.Data.DataColumn columnLabTestIncomeBaseAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SupplierPaymentDataTable() {
                this.TableName = "SupplierPayment";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SupplierPaymentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SupplierPaymentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryNoColumn {
                get {
                    return this.columnDeliveryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractIdColumn {
                get {
                    return this.columnContractId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIdColumn {
                get {
                    return this.columnShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractNoColumn {
                get {
                    return this.columnContractNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrefixColumn {
                get {
                    return this.columnInvoicePrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceSeqColumn {
                get {
                    return this.columnInvoiceSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceYearColumn {
                get {
                    return this.columnInvoiceYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedQtyColumn {
                get {
                    return this.columnTotalShippedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierInvoiceNoColumn {
                get {
                    return this.columnSupplierInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentRefNoColumn {
                get {
                    return this.columnPaymentRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentDateColumn {
                get {
                    return this.columnPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentAmountColumn {
                get {
                    return this.columnPaymentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyCodeColumn {
                get {
                    return this.columnCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseAmountColumn {
                get {
                    return this.columnBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseCurrencyCodeColumn {
                get {
                    return this.columnBaseCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseExchangeRateColumn {
                get {
                    return this.columnBaseExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingAgencyNameColumn {
                get {
                    return this.columnTradingAgencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeCodeColumn {
                get {
                    return this.columnOfficeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeasonCodeColumn {
                get {
                    return this.columnSeasonCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTeamCodeColumn {
                get {
                    return this.columnProductTeamCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorSunAccountCodeColumn {
                get {
                    return this.columnVendorSunAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackingUnitDescColumn {
                get {
                    return this.columnPackingUnitDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerDescColumn {
                get {
                    return this.columnCustomerDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SplitSuffixColumn {
                get {
                    return this.columnSplitSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseAmountColumn {
                get {
                    return this.columnPurchaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QACommissionPercentColumn {
                get {
                    return this.columnQACommissionPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QACommissionAmountColumn {
                get {
                    return this.columnQACommissionAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseBaseAmountColumn {
                get {
                    return this.columnPurchaseBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorPaymentDiscountPercentColumn {
                get {
                    return this.columnVendorPaymentDiscountPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorPaymentDiscountAmountColumn {
                get {
                    return this.columnVendorPaymentDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QACommissionBaseAmountColumn {
                get {
                    return this.columnQACommissionBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorPaymentDiscountBaseAmountColumn {
                get {
                    return this.columnVendorPaymentDiscountBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SequenceNoColumn {
                get {
                    return this.columnSequenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerOPSKeyColumn {
                get {
                    return this.columnCustomerOPSKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTermDescColumn {
                get {
                    return this.columnPaymentTermDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingDocReceiptDateColumn {
                get {
                    return this.columnShippingDocReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingDocCheckedOnColumn {
                get {
                    return this.columnShippingDocCheckedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountDocReceiptDateColumn {
                get {
                    return this.columnAccountDocReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocReviewedOnColumn {
                get {
                    return this.columnDocReviewedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsChinaGBTestRequiredColumn {
                get {
                    return this.columnIsChinaGBTestRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PurchaseInterfacedDateColumn {
                get {
                    return this.columnPurchaseInterfacedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GBTestResultColumn {
                get {
                    return this.columnGBTestResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GBTestFlagMarkedOnColumn {
                get {
                    return this.columnGBTestFlagMarkedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GBTestFlagRemovedOnColumn {
                get {
                    return this.columnGBTestFlagRemovedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GBTestResultRecordedOnColumn {
                get {
                    return this.columnGBTestResultRecordedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabtestIncomeAmountColumn {
                get {
                    return this.columnLabtestIncomeAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabTestIncomeBaseAmountColumn {
                get {
                    return this.columnLabTestIncomeBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SupplierPaymentRow this[int index] {
                get {
                    return ((SupplierPaymentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SupplierPaymentRowChangeEventHandler SupplierPaymentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SupplierPaymentRowChangeEventHandler SupplierPaymentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SupplierPaymentRowChangeEventHandler SupplierPaymentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SupplierPaymentRowChangeEventHandler SupplierPaymentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSupplierPaymentRow(SupplierPaymentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SupplierPaymentRow AddSupplierPaymentRow(
                        int DeliveryNo, 
                        int ContractId, 
                        int ShipmentId, 
                        string ContractNo, 
                        string InvoicePrefix, 
                        int InvoiceSeq, 
                        int InvoiceYear, 
                        int TotalShippedQty, 
                        string SupplierInvoiceNo, 
                        System.DateTime InvoiceDate, 
                        string PaymentRefNo, 
                        System.DateTime PaymentDate, 
                        decimal PaymentAmount, 
                        string CurrencyCode, 
                        decimal ExchangeRate, 
                        decimal BaseAmount, 
                        string BaseCurrencyCode, 
                        decimal BaseExchangeRate, 
                        string TradingAgencyName, 
                        string OfficeCode, 
                        string SeasonCode, 
                        string ProductTeamCode, 
                        string VendorName, 
                        int VendorSunAccountCode, 
                        string PackingUnitDesc, 
                        string CustomerCode, 
                        string CustomerDesc, 
                        string SplitSuffix, 
                        decimal PurchaseAmount, 
                        decimal QACommissionPercent, 
                        decimal QACommissionAmount, 
                        decimal PurchaseBaseAmount, 
                        decimal VendorPaymentDiscountPercent, 
                        decimal VendorPaymentDiscountAmount, 
                        decimal QACommissionBaseAmount, 
                        decimal VendorPaymentDiscountBaseAmount, 
                        int SequenceNo, 
                        string CustomerOPSKey, 
                        string PaymentTermDesc, 
                        System.DateTime ShippingDocReceiptDate, 
                        System.DateTime ShippingDocCheckedOn, 
                        System.DateTime AccountDocReceiptDate, 
                        System.DateTime DocReviewedOn, 
                        bool IsChinaGBTestRequired, 
                        System.DateTime PurchaseInterfacedDate, 
                        string GBTestResult, 
                        System.DateTime GBTestFlagMarkedOn, 
                        System.DateTime GBTestFlagRemovedOn, 
                        System.DateTime GBTestResultRecordedOn, 
                        decimal LabtestIncomeAmount, 
                        decimal LabTestIncomeBaseAmount) {
                SupplierPaymentRow rowSupplierPaymentRow = ((SupplierPaymentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeliveryNo,
                        ContractId,
                        ShipmentId,
                        ContractNo,
                        InvoicePrefix,
                        InvoiceSeq,
                        InvoiceYear,
                        TotalShippedQty,
                        SupplierInvoiceNo,
                        InvoiceDate,
                        PaymentRefNo,
                        PaymentDate,
                        PaymentAmount,
                        CurrencyCode,
                        ExchangeRate,
                        BaseAmount,
                        BaseCurrencyCode,
                        BaseExchangeRate,
                        TradingAgencyName,
                        OfficeCode,
                        SeasonCode,
                        ProductTeamCode,
                        VendorName,
                        VendorSunAccountCode,
                        PackingUnitDesc,
                        CustomerCode,
                        CustomerDesc,
                        SplitSuffix,
                        PurchaseAmount,
                        QACommissionPercent,
                        QACommissionAmount,
                        PurchaseBaseAmount,
                        VendorPaymentDiscountPercent,
                        VendorPaymentDiscountAmount,
                        QACommissionBaseAmount,
                        VendorPaymentDiscountBaseAmount,
                        SequenceNo,
                        CustomerOPSKey,
                        PaymentTermDesc,
                        ShippingDocReceiptDate,
                        ShippingDocCheckedOn,
                        AccountDocReceiptDate,
                        DocReviewedOn,
                        IsChinaGBTestRequired,
                        PurchaseInterfacedDate,
                        GBTestResult,
                        GBTestFlagMarkedOn,
                        GBTestFlagRemovedOn,
                        GBTestResultRecordedOn,
                        LabtestIncomeAmount,
                        LabTestIncomeBaseAmount};
                rowSupplierPaymentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSupplierPaymentRow);
                return rowSupplierPaymentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SupplierPaymentRow FindByShipmentId(int ShipmentId) {
                return ((SupplierPaymentRow)(this.Rows.Find(new object[] {
                            ShipmentId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SupplierPaymentDataTable cln = ((SupplierPaymentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SupplierPaymentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDeliveryNo = base.Columns["DeliveryNo"];
                this.columnContractId = base.Columns["ContractId"];
                this.columnShipmentId = base.Columns["ShipmentId"];
                this.columnContractNo = base.Columns["ContractNo"];
                this.columnInvoicePrefix = base.Columns["InvoicePrefix"];
                this.columnInvoiceSeq = base.Columns["InvoiceSeq"];
                this.columnInvoiceYear = base.Columns["InvoiceYear"];
                this.columnTotalShippedQty = base.Columns["TotalShippedQty"];
                this.columnSupplierInvoiceNo = base.Columns["SupplierInvoiceNo"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnPaymentRefNo = base.Columns["PaymentRefNo"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnPaymentAmount = base.Columns["PaymentAmount"];
                this.columnCurrencyCode = base.Columns["CurrencyCode"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnBaseAmount = base.Columns["BaseAmount"];
                this.columnBaseCurrencyCode = base.Columns["BaseCurrencyCode"];
                this.columnBaseExchangeRate = base.Columns["BaseExchangeRate"];
                this.columnTradingAgencyName = base.Columns["TradingAgencyName"];
                this.columnOfficeCode = base.Columns["OfficeCode"];
                this.columnSeasonCode = base.Columns["SeasonCode"];
                this.columnProductTeamCode = base.Columns["ProductTeamCode"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnVendorSunAccountCode = base.Columns["VendorSunAccountCode"];
                this.columnPackingUnitDesc = base.Columns["PackingUnitDesc"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerDesc = base.Columns["CustomerDesc"];
                this.columnSplitSuffix = base.Columns["SplitSuffix"];
                this.columnPurchaseAmount = base.Columns["PurchaseAmount"];
                this.columnQACommissionPercent = base.Columns["QACommissionPercent"];
                this.columnQACommissionAmount = base.Columns["QACommissionAmount"];
                this.columnPurchaseBaseAmount = base.Columns["PurchaseBaseAmount"];
                this.columnVendorPaymentDiscountPercent = base.Columns["VendorPaymentDiscountPercent"];
                this.columnVendorPaymentDiscountAmount = base.Columns["VendorPaymentDiscountAmount"];
                this.columnQACommissionBaseAmount = base.Columns["QACommissionBaseAmount"];
                this.columnVendorPaymentDiscountBaseAmount = base.Columns["VendorPaymentDiscountBaseAmount"];
                this.columnSequenceNo = base.Columns["SequenceNo"];
                this.columnCustomerOPSKey = base.Columns["CustomerOPSKey"];
                this.columnPaymentTermDesc = base.Columns["PaymentTermDesc"];
                this.columnShippingDocReceiptDate = base.Columns["ShippingDocReceiptDate"];
                this.columnShippingDocCheckedOn = base.Columns["ShippingDocCheckedOn"];
                this.columnAccountDocReceiptDate = base.Columns["AccountDocReceiptDate"];
                this.columnDocReviewedOn = base.Columns["DocReviewedOn"];
                this.columnIsChinaGBTestRequired = base.Columns["IsChinaGBTestRequired"];
                this.columnPurchaseInterfacedDate = base.Columns["PurchaseInterfacedDate"];
                this.columnGBTestResult = base.Columns["GBTestResult"];
                this.columnGBTestFlagMarkedOn = base.Columns["GBTestFlagMarkedOn"];
                this.columnGBTestFlagRemovedOn = base.Columns["GBTestFlagRemovedOn"];
                this.columnGBTestResultRecordedOn = base.Columns["GBTestResultRecordedOn"];
                this.columnLabtestIncomeAmount = base.Columns["LabtestIncomeAmount"];
                this.columnLabTestIncomeBaseAmount = base.Columns["LabTestIncomeBaseAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDeliveryNo = new global::System.Data.DataColumn("DeliveryNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryNo);
                this.columnContractId = new global::System.Data.DataColumn("ContractId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractId);
                this.columnShipmentId = new global::System.Data.DataColumn("ShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentId);
                this.columnContractNo = new global::System.Data.DataColumn("ContractNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractNo);
                this.columnInvoicePrefix = new global::System.Data.DataColumn("InvoicePrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrefix);
                this.columnInvoiceSeq = new global::System.Data.DataColumn("InvoiceSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceSeq);
                this.columnInvoiceYear = new global::System.Data.DataColumn("InvoiceYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceYear);
                this.columnTotalShippedQty = new global::System.Data.DataColumn("TotalShippedQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedQty);
                this.columnSupplierInvoiceNo = new global::System.Data.DataColumn("SupplierInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierInvoiceNo);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnPaymentRefNo = new global::System.Data.DataColumn("PaymentRefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentRefNo);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnPaymentAmount = new global::System.Data.DataColumn("PaymentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentAmount);
                this.columnCurrencyCode = new global::System.Data.DataColumn("CurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyCode);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnBaseAmount = new global::System.Data.DataColumn("BaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAmount);
                this.columnBaseCurrencyCode = new global::System.Data.DataColumn("BaseCurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseCurrencyCode);
                this.columnBaseExchangeRate = new global::System.Data.DataColumn("BaseExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseExchangeRate);
                this.columnTradingAgencyName = new global::System.Data.DataColumn("TradingAgencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingAgencyName);
                this.columnOfficeCode = new global::System.Data.DataColumn("OfficeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeCode);
                this.columnSeasonCode = new global::System.Data.DataColumn("SeasonCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeasonCode);
                this.columnProductTeamCode = new global::System.Data.DataColumn("ProductTeamCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTeamCode);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnVendorSunAccountCode = new global::System.Data.DataColumn("VendorSunAccountCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorSunAccountCode);
                this.columnPackingUnitDesc = new global::System.Data.DataColumn("PackingUnitDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingUnitDesc);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerDesc = new global::System.Data.DataColumn("CustomerDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerDesc);
                this.columnSplitSuffix = new global::System.Data.DataColumn("SplitSuffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSplitSuffix);
                this.columnPurchaseAmount = new global::System.Data.DataColumn("PurchaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseAmount);
                this.columnQACommissionPercent = new global::System.Data.DataColumn("QACommissionPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQACommissionPercent);
                this.columnQACommissionAmount = new global::System.Data.DataColumn("QACommissionAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQACommissionAmount);
                this.columnPurchaseBaseAmount = new global::System.Data.DataColumn("PurchaseBaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseBaseAmount);
                this.columnVendorPaymentDiscountPercent = new global::System.Data.DataColumn("VendorPaymentDiscountPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaymentDiscountPercent);
                this.columnVendorPaymentDiscountAmount = new global::System.Data.DataColumn("VendorPaymentDiscountAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaymentDiscountAmount);
                this.columnQACommissionBaseAmount = new global::System.Data.DataColumn("QACommissionBaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQACommissionBaseAmount);
                this.columnVendorPaymentDiscountBaseAmount = new global::System.Data.DataColumn("VendorPaymentDiscountBaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaymentDiscountBaseAmount);
                this.columnSequenceNo = new global::System.Data.DataColumn("SequenceNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNo);
                this.columnCustomerOPSKey = new global::System.Data.DataColumn("CustomerOPSKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerOPSKey);
                this.columnPaymentTermDesc = new global::System.Data.DataColumn("PaymentTermDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTermDesc);
                this.columnShippingDocReceiptDate = new global::System.Data.DataColumn("ShippingDocReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingDocReceiptDate);
                this.columnShippingDocCheckedOn = new global::System.Data.DataColumn("ShippingDocCheckedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingDocCheckedOn);
                this.columnAccountDocReceiptDate = new global::System.Data.DataColumn("AccountDocReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountDocReceiptDate);
                this.columnDocReviewedOn = new global::System.Data.DataColumn("DocReviewedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocReviewedOn);
                this.columnIsChinaGBTestRequired = new global::System.Data.DataColumn("IsChinaGBTestRequired", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsChinaGBTestRequired);
                this.columnPurchaseInterfacedDate = new global::System.Data.DataColumn("PurchaseInterfacedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseInterfacedDate);
                this.columnGBTestResult = new global::System.Data.DataColumn("GBTestResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBTestResult);
                this.columnGBTestFlagMarkedOn = new global::System.Data.DataColumn("GBTestFlagMarkedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBTestFlagMarkedOn);
                this.columnGBTestFlagRemovedOn = new global::System.Data.DataColumn("GBTestFlagRemovedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBTestFlagRemovedOn);
                this.columnGBTestResultRecordedOn = new global::System.Data.DataColumn("GBTestResultRecordedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGBTestResultRecordedOn);
                this.columnLabtestIncomeAmount = new global::System.Data.DataColumn("LabtestIncomeAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabtestIncomeAmount);
                this.columnLabTestIncomeBaseAmount = new global::System.Data.DataColumn("LabTestIncomeBaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabTestIncomeBaseAmount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnShipmentId}, true));
                this.columnDeliveryNo.AllowDBNull = false;
                this.columnContractId.AllowDBNull = false;
                this.columnShipmentId.AllowDBNull = false;
                this.columnShipmentId.Unique = true;
                this.columnContractNo.AllowDBNull = false;
                this.columnContractNo.MaxLength = 50;
                this.columnInvoicePrefix.MaxLength = 50;
                this.columnTotalShippedQty.AllowDBNull = false;
                this.columnSupplierInvoiceNo.MaxLength = 80;
                this.columnPaymentRefNo.MaxLength = 20;
                this.columnPaymentAmount.AllowDBNull = false;
                this.columnCurrencyCode.MaxLength = 10;
                this.columnBaseAmount.ReadOnly = true;
                this.columnBaseCurrencyCode.MaxLength = 10;
                this.columnTradingAgencyName.AllowDBNull = false;
                this.columnTradingAgencyName.MaxLength = 10;
                this.columnOfficeCode.AllowDBNull = false;
                this.columnOfficeCode.MaxLength = 5;
                this.columnSeasonCode.ReadOnly = true;
                this.columnProductTeamCode.ReadOnly = true;
                this.columnVendorName.ReadOnly = true;
                this.columnVendorSunAccountCode.ReadOnly = true;
                this.columnPackingUnitDesc.AllowDBNull = false;
                this.columnPackingUnitDesc.MaxLength = 50;
                this.columnCustomerCode.AllowDBNull = false;
                this.columnCustomerCode.MaxLength = 20;
                this.columnCustomerDesc.AllowDBNull = false;
                this.columnCustomerDesc.MaxLength = 50;
                this.columnSplitSuffix.AllowDBNull = false;
                this.columnSplitSuffix.MaxLength = 2;
                this.columnPurchaseAmount.AllowDBNull = false;
                this.columnQACommissionPercent.AllowDBNull = false;
                this.columnQACommissionAmount.ReadOnly = true;
                this.columnPurchaseBaseAmount.ReadOnly = true;
                this.columnVendorPaymentDiscountPercent.AllowDBNull = false;
                this.columnVendorPaymentDiscountAmount.ReadOnly = true;
                this.columnQACommissionBaseAmount.ReadOnly = true;
                this.columnVendorPaymentDiscountBaseAmount.ReadOnly = true;
                this.columnCustomerOPSKey.MaxLength = 1;
                this.columnPaymentTermDesc.ReadOnly = true;
                this.columnPaymentTermDesc.MaxLength = 50;
                this.columnIsChinaGBTestRequired.AllowDBNull = false;
                this.columnPurchaseInterfacedDate.ReadOnly = true;
                this.columnGBTestResult.ReadOnly = true;
                this.columnGBTestResult.MaxLength = 1;
                this.columnGBTestFlagMarkedOn.ReadOnly = true;
                this.columnGBTestFlagRemovedOn.ReadOnly = true;
                this.columnGBTestResultRecordedOn.ReadOnly = true;
                this.columnLabtestIncomeAmount.ReadOnly = true;
                this.columnLabTestIncomeBaseAmount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SupplierPaymentRow NewSupplierPaymentRow() {
                return ((SupplierPaymentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SupplierPaymentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SupplierPaymentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SupplierPaymentRowChanged != null)) {
                    this.SupplierPaymentRowChanged(this, new SupplierPaymentRowChangeEvent(((SupplierPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SupplierPaymentRowChanging != null)) {
                    this.SupplierPaymentRowChanging(this, new SupplierPaymentRowChangeEvent(((SupplierPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SupplierPaymentRowDeleted != null)) {
                    this.SupplierPaymentRowDeleted(this, new SupplierPaymentRowChangeEvent(((SupplierPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SupplierPaymentRowDeleting != null)) {
                    this.SupplierPaymentRowDeleting(this, new SupplierPaymentRowChangeEvent(((SupplierPaymentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSupplierPaymentRow(SupplierPaymentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SupplierPaymentReportDs ds = new SupplierPaymentReportDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SupplierPaymentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SupplierPaymentRow : global::System.Data.DataRow {
            
            private SupplierPaymentDataTable tableSupplierPayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SupplierPaymentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSupplierPayment = ((SupplierPaymentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeliveryNo {
                get {
                    return ((int)(this[this.tableSupplierPayment.DeliveryNoColumn]));
                }
                set {
                    this[this.tableSupplierPayment.DeliveryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ContractId {
                get {
                    return ((int)(this[this.tableSupplierPayment.ContractIdColumn]));
                }
                set {
                    this[this.tableSupplierPayment.ContractIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipmentId {
                get {
                    return ((int)(this[this.tableSupplierPayment.ShipmentIdColumn]));
                }
                set {
                    this[this.tableSupplierPayment.ShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContractNo {
                get {
                    return ((string)(this[this.tableSupplierPayment.ContractNoColumn]));
                }
                set {
                    this[this.tableSupplierPayment.ContractNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoicePrefix {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.InvoicePrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePrefix\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.InvoicePrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceSeq {
                get {
                    try {
                        return ((int)(this[this.tableSupplierPayment.InvoiceSeqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceSeq\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.InvoiceSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceYear {
                get {
                    try {
                        return ((int)(this[this.tableSupplierPayment.InvoiceYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceYear\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.InvoiceYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalShippedQty {
                get {
                    return ((int)(this[this.tableSupplierPayment.TotalShippedQtyColumn]));
                }
                set {
                    this[this.tableSupplierPayment.TotalShippedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.SupplierInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierInvoiceNo\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.SupplierInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentRefNo {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.PaymentRefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentRefNo\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.PaymentRefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PaymentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.PaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDate\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.PaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PaymentAmount {
                get {
                    return ((decimal)(this[this.tableSupplierPayment.PaymentAmountColumn]));
                }
                set {
                    this[this.tableSupplierPayment.PaymentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyCode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.CurrencyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyCode\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.CurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRate {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.ExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRate\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.BaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseAmount\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.BaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BaseCurrencyCode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.BaseCurrencyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseCurrencyCode\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.BaseCurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BaseExchangeRate {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.BaseExchangeRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseExchangeRate\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.BaseExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradingAgencyName {
                get {
                    return ((string)(this[this.tableSupplierPayment.TradingAgencyNameColumn]));
                }
                set {
                    this[this.tableSupplierPayment.TradingAgencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfficeCode {
                get {
                    return ((string)(this[this.tableSupplierPayment.OfficeCodeColumn]));
                }
                set {
                    this[this.tableSupplierPayment.OfficeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeasonCode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.SeasonCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeasonCode\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.SeasonCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductTeamCode {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.ProductTeamCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductTeamCode\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.ProductTeamCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VendorSunAccountCode {
                get {
                    try {
                        return ((int)(this[this.tableSupplierPayment.VendorSunAccountCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorSunAccountCode\' in table \'SupplierPayment\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.VendorSunAccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PackingUnitDesc {
                get {
                    return ((string)(this[this.tableSupplierPayment.PackingUnitDescColumn]));
                }
                set {
                    this[this.tableSupplierPayment.PackingUnitDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerCode {
                get {
                    return ((string)(this[this.tableSupplierPayment.CustomerCodeColumn]));
                }
                set {
                    this[this.tableSupplierPayment.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerDesc {
                get {
                    return ((string)(this[this.tableSupplierPayment.CustomerDescColumn]));
                }
                set {
                    this[this.tableSupplierPayment.CustomerDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SplitSuffix {
                get {
                    return ((string)(this[this.tableSupplierPayment.SplitSuffixColumn]));
                }
                set {
                    this[this.tableSupplierPayment.SplitSuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PurchaseAmount {
                get {
                    return ((decimal)(this[this.tableSupplierPayment.PurchaseAmountColumn]));
                }
                set {
                    this[this.tableSupplierPayment.PurchaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QACommissionPercent {
                get {
                    return ((decimal)(this[this.tableSupplierPayment.QACommissionPercentColumn]));
                }
                set {
                    this[this.tableSupplierPayment.QACommissionPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QACommissionAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.QACommissionAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QACommissionAmount\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.QACommissionAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PurchaseBaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.PurchaseBaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseBaseAmount\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.PurchaseBaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VendorPaymentDiscountPercent {
                get {
                    return ((decimal)(this[this.tableSupplierPayment.VendorPaymentDiscountPercentColumn]));
                }
                set {
                    this[this.tableSupplierPayment.VendorPaymentDiscountPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VendorPaymentDiscountAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.VendorPaymentDiscountAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorPaymentDiscountAmount\' in table \'SupplierPayment\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.VendorPaymentDiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QACommissionBaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.QACommissionBaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QACommissionBaseAmount\' in table \'SupplierPayment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.QACommissionBaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VendorPaymentDiscountBaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.VendorPaymentDiscountBaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorPaymentDiscountBaseAmount\' in table \'SupplierPayment\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.VendorPaymentDiscountBaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SequenceNo {
                get {
                    try {
                        return ((int)(this[this.tableSupplierPayment.SequenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceNo\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.SequenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerOPSKey {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.CustomerOPSKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerOPSKey\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.CustomerOPSKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentTermDesc {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.PaymentTermDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentTermDesc\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.PaymentTermDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ShippingDocReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.ShippingDocReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingDocReceiptDate\' in table \'SupplierPayment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.ShippingDocReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ShippingDocCheckedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.ShippingDocCheckedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingDocCheckedOn\' in table \'SupplierPayment\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.ShippingDocCheckedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AccountDocReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.AccountDocReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountDocReceiptDate\' in table \'SupplierPayment\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.AccountDocReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DocReviewedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.DocReviewedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocReviewedOn\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.DocReviewedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChinaGBTestRequired {
                get {
                    return ((bool)(this[this.tableSupplierPayment.IsChinaGBTestRequiredColumn]));
                }
                set {
                    this[this.tableSupplierPayment.IsChinaGBTestRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PurchaseInterfacedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.PurchaseInterfacedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseInterfacedDate\' in table \'SupplierPayment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.PurchaseInterfacedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GBTestResult {
                get {
                    try {
                        return ((string)(this[this.tableSupplierPayment.GBTestResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GBTestResult\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.GBTestResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime GBTestFlagMarkedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.GBTestFlagMarkedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GBTestFlagMarkedOn\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.GBTestFlagMarkedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime GBTestFlagRemovedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.GBTestFlagRemovedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GBTestFlagRemovedOn\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.GBTestFlagRemovedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime GBTestResultRecordedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSupplierPayment.GBTestResultRecordedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GBTestResultRecordedOn\' in table \'SupplierPayment\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.GBTestResultRecordedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LabtestIncomeAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.LabtestIncomeAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabtestIncomeAmount\' in table \'SupplierPayment\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.LabtestIncomeAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LabTestIncomeBaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSupplierPayment.LabTestIncomeBaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabTestIncomeBaseAmount\' in table \'SupplierPayment\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSupplierPayment.LabTestIncomeBaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicePrefixNull() {
                return this.IsNull(this.tableSupplierPayment.InvoicePrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicePrefixNull() {
                this[this.tableSupplierPayment.InvoicePrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceSeqNull() {
                return this.IsNull(this.tableSupplierPayment.InvoiceSeqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceSeqNull() {
                this[this.tableSupplierPayment.InvoiceSeqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceYearNull() {
                return this.IsNull(this.tableSupplierPayment.InvoiceYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceYearNull() {
                this[this.tableSupplierPayment.InvoiceYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierInvoiceNoNull() {
                return this.IsNull(this.tableSupplierPayment.SupplierInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierInvoiceNoNull() {
                this[this.tableSupplierPayment.SupplierInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableSupplierPayment.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableSupplierPayment.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentRefNoNull() {
                return this.IsNull(this.tableSupplierPayment.PaymentRefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentRefNoNull() {
                this[this.tableSupplierPayment.PaymentRefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentDateNull() {
                return this.IsNull(this.tableSupplierPayment.PaymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentDateNull() {
                this[this.tableSupplierPayment.PaymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyCodeNull() {
                return this.IsNull(this.tableSupplierPayment.CurrencyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyCodeNull() {
                this[this.tableSupplierPayment.CurrencyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExchangeRateNull() {
                return this.IsNull(this.tableSupplierPayment.ExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExchangeRateNull() {
                this[this.tableSupplierPayment.ExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseAmountNull() {
                return this.IsNull(this.tableSupplierPayment.BaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseAmountNull() {
                this[this.tableSupplierPayment.BaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseCurrencyCodeNull() {
                return this.IsNull(this.tableSupplierPayment.BaseCurrencyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseCurrencyCodeNull() {
                this[this.tableSupplierPayment.BaseCurrencyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseExchangeRateNull() {
                return this.IsNull(this.tableSupplierPayment.BaseExchangeRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseExchangeRateNull() {
                this[this.tableSupplierPayment.BaseExchangeRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeasonCodeNull() {
                return this.IsNull(this.tableSupplierPayment.SeasonCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeasonCodeNull() {
                this[this.tableSupplierPayment.SeasonCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductTeamCodeNull() {
                return this.IsNull(this.tableSupplierPayment.ProductTeamCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductTeamCodeNull() {
                this[this.tableSupplierPayment.ProductTeamCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableSupplierPayment.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorNameNull() {
                this[this.tableSupplierPayment.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorSunAccountCodeNull() {
                return this.IsNull(this.tableSupplierPayment.VendorSunAccountCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorSunAccountCodeNull() {
                this[this.tableSupplierPayment.VendorSunAccountCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQACommissionAmountNull() {
                return this.IsNull(this.tableSupplierPayment.QACommissionAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQACommissionAmountNull() {
                this[this.tableSupplierPayment.QACommissionAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchaseBaseAmountNull() {
                return this.IsNull(this.tableSupplierPayment.PurchaseBaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchaseBaseAmountNull() {
                this[this.tableSupplierPayment.PurchaseBaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorPaymentDiscountAmountNull() {
                return this.IsNull(this.tableSupplierPayment.VendorPaymentDiscountAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorPaymentDiscountAmountNull() {
                this[this.tableSupplierPayment.VendorPaymentDiscountAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQACommissionBaseAmountNull() {
                return this.IsNull(this.tableSupplierPayment.QACommissionBaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQACommissionBaseAmountNull() {
                this[this.tableSupplierPayment.QACommissionBaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorPaymentDiscountBaseAmountNull() {
                return this.IsNull(this.tableSupplierPayment.VendorPaymentDiscountBaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorPaymentDiscountBaseAmountNull() {
                this[this.tableSupplierPayment.VendorPaymentDiscountBaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSequenceNoNull() {
                return this.IsNull(this.tableSupplierPayment.SequenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSequenceNoNull() {
                this[this.tableSupplierPayment.SequenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerOPSKeyNull() {
                return this.IsNull(this.tableSupplierPayment.CustomerOPSKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerOPSKeyNull() {
                this[this.tableSupplierPayment.CustomerOPSKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentTermDescNull() {
                return this.IsNull(this.tableSupplierPayment.PaymentTermDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentTermDescNull() {
                this[this.tableSupplierPayment.PaymentTermDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingDocReceiptDateNull() {
                return this.IsNull(this.tableSupplierPayment.ShippingDocReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingDocReceiptDateNull() {
                this[this.tableSupplierPayment.ShippingDocReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingDocCheckedOnNull() {
                return this.IsNull(this.tableSupplierPayment.ShippingDocCheckedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingDocCheckedOnNull() {
                this[this.tableSupplierPayment.ShippingDocCheckedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountDocReceiptDateNull() {
                return this.IsNull(this.tableSupplierPayment.AccountDocReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountDocReceiptDateNull() {
                this[this.tableSupplierPayment.AccountDocReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocReviewedOnNull() {
                return this.IsNull(this.tableSupplierPayment.DocReviewedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocReviewedOnNull() {
                this[this.tableSupplierPayment.DocReviewedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPurchaseInterfacedDateNull() {
                return this.IsNull(this.tableSupplierPayment.PurchaseInterfacedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPurchaseInterfacedDateNull() {
                this[this.tableSupplierPayment.PurchaseInterfacedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGBTestResultNull() {
                return this.IsNull(this.tableSupplierPayment.GBTestResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGBTestResultNull() {
                this[this.tableSupplierPayment.GBTestResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGBTestFlagMarkedOnNull() {
                return this.IsNull(this.tableSupplierPayment.GBTestFlagMarkedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGBTestFlagMarkedOnNull() {
                this[this.tableSupplierPayment.GBTestFlagMarkedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGBTestFlagRemovedOnNull() {
                return this.IsNull(this.tableSupplierPayment.GBTestFlagRemovedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGBTestFlagRemovedOnNull() {
                this[this.tableSupplierPayment.GBTestFlagRemovedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGBTestResultRecordedOnNull() {
                return this.IsNull(this.tableSupplierPayment.GBTestResultRecordedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGBTestResultRecordedOnNull() {
                this[this.tableSupplierPayment.GBTestResultRecordedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabtestIncomeAmountNull() {
                return this.IsNull(this.tableSupplierPayment.LabtestIncomeAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabtestIncomeAmountNull() {
                this[this.tableSupplierPayment.LabtestIncomeAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabTestIncomeBaseAmountNull() {
                return this.IsNull(this.tableSupplierPayment.LabTestIncomeBaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabTestIncomeBaseAmountNull() {
                this[this.tableSupplierPayment.LabTestIncomeBaseAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SupplierPaymentRowChangeEvent : global::System.EventArgs {
            
            private SupplierPaymentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SupplierPaymentRowChangeEvent(SupplierPaymentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SupplierPaymentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.reporter.supplierpayment.SupplierPaymentReportDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SupplierPaymentTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SupplierPaymentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SupplierPayment";
            tableMapping.ColumnMappings.Add("DeliveryNo", "DeliveryNo");
            tableMapping.ColumnMappings.Add("ContractId", "ContractId");
            tableMapping.ColumnMappings.Add("ShipmentId", "ShipmentId");
            tableMapping.ColumnMappings.Add("ContractNo", "ContractNo");
            tableMapping.ColumnMappings.Add("InvoicePrefix", "InvoicePrefix");
            tableMapping.ColumnMappings.Add("InvoiceSeq", "InvoiceSeq");
            tableMapping.ColumnMappings.Add("InvoiceYear", "InvoiceYear");
            tableMapping.ColumnMappings.Add("TotalShippedQty", "TotalShippedQty");
            tableMapping.ColumnMappings.Add("SupplierInvoiceNo", "SupplierInvoiceNo");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("PaymentRefNo", "PaymentRefNo");
            tableMapping.ColumnMappings.Add("PaymentDate", "PaymentDate");
            tableMapping.ColumnMappings.Add("PaymentAmount", "PaymentAmount");
            tableMapping.ColumnMappings.Add("CurrencyCode", "CurrencyCode");
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate");
            tableMapping.ColumnMappings.Add("BaseAmount", "BaseAmount");
            tableMapping.ColumnMappings.Add("BaseCurrencyCode", "BaseCurrencyCode");
            tableMapping.ColumnMappings.Add("BaseExchangeRate", "BaseExchangeRate");
            tableMapping.ColumnMappings.Add("TradingAgencyName", "TradingAgencyName");
            tableMapping.ColumnMappings.Add("OfficeCode", "OfficeCode");
            tableMapping.ColumnMappings.Add("SeasonCode", "SeasonCode");
            tableMapping.ColumnMappings.Add("ProductTeamCode", "ProductTeamCode");
            tableMapping.ColumnMappings.Add("VendorName", "VendorName");
            tableMapping.ColumnMappings.Add("VendorSunAccountCode", "VendorSunAccountCode");
            tableMapping.ColumnMappings.Add("PackingUnitDesc", "PackingUnitDesc");
            tableMapping.ColumnMappings.Add("CustomerCode", "CustomerCode");
            tableMapping.ColumnMappings.Add("CustomerDesc", "CustomerDesc");
            tableMapping.ColumnMappings.Add("SplitSuffix", "SplitSuffix");
            tableMapping.ColumnMappings.Add("PurchaseAmount", "PurchaseAmount");
            tableMapping.ColumnMappings.Add("QACommissionPercent", "QACommissionPercent");
            tableMapping.ColumnMappings.Add("QACommissionAmount", "QACommissionAmount");
            tableMapping.ColumnMappings.Add("PurchaseBaseAmount", "PurchaseBaseAmount");
            tableMapping.ColumnMappings.Add("VendorPaymentDiscountPercent", "VendorPaymentDiscountPercent");
            tableMapping.ColumnMappings.Add("VendorPaymentDiscountAmount", "VendorPaymentDiscountAmount");
            tableMapping.ColumnMappings.Add("QACommissionBaseAmount", "QACommissionBaseAmount");
            tableMapping.ColumnMappings.Add("VendorPaymentDiscountBaseAmount", "VendorPaymentDiscountBaseAmount");
            tableMapping.ColumnMappings.Add("SequenceNo", "SequenceNo");
            tableMapping.ColumnMappings.Add("CustomerOPSKey", "CustomerOPSKey");
            tableMapping.ColumnMappings.Add("PaymentTermDesc", "PaymentTermDesc");
            tableMapping.ColumnMappings.Add("ShippingDocReceiptDate", "ShippingDocReceiptDate");
            tableMapping.ColumnMappings.Add("ShippingDocCheckedOn", "ShippingDocCheckedOn");
            tableMapping.ColumnMappings.Add("AccountDocReceiptDate", "AccountDocReceiptDate");
            tableMapping.ColumnMappings.Add("DocReviewedOn", "DocReviewedOn");
            tableMapping.ColumnMappings.Add("IsChinaGBTestRequired", "IsChinaGBTestRequired");
            tableMapping.ColumnMappings.Add("PurchaseInterfacedDate", "PurchaseInterfacedDate");
            tableMapping.ColumnMappings.Add("GBTestResult", "GBTestResult");
            tableMapping.ColumnMappings.Add("GBTestFlagMarkedOn", "GBTestFlagMarkedOn");
            tableMapping.ColumnMappings.Add("GBTestFlagRemovedOn", "GBTestFlagRemovedOn");
            tableMapping.ColumnMappings.Add("GBTestResultRecordedOn", "GBTestResultRecordedOn");
            tableMapping.ColumnMappings.Add("LabtestIncomeAmount", "LabtestIncomeAmount");
            tableMapping.ColumnMappings.Add("LabTestIncomeBaseAmount", "LabTestIncomeBaseAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::com.next.isam.reporter.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Shipment.ShipmentId, Shipment.ContractId, Contract.ContractNo, Ship" +
                "ment.DeliveryNo, Invoice.InvoicePrefix, Invoice.InvoiceSeq, Invoice.InvoiceYear," +
                " \r\n                         Invoice.SupplierInvoiceNo, Invoice.InvoiceDate, Ship" +
                "ment.TotalShippedQty, Invoice.APRefNo AS PaymentRefNo, Invoice.APDate AS Payment" +
                "Date, \r\n                         Invoice.APAmt AS PaymentAmount, Currency.Curren" +
                "cyCode, ExchangeRate.ExchangeRate, Invoice.APAmt * ExchangeRate.ExchangeRate AS " +
                "BaseAmount, \r\n                         Currency.CurrencyCode AS BaseCurrencyCode" +
                ", ExchangeRate.ExchangeRate AS BaseExchangeRate, TradingAgency.ShortName AS Trad" +
                "ingAgencyName, \r\n                         Office.OfficeCode, \'\' AS SeasonCode, \'" +
                "\' AS ProductTeamCode, \'\' AS VendorName, 0 AS VendorSunAccountCode, PackingUnit.P" +
                "ackingUnitDesc, \r\n                         Customer.CustomerCode, Customer.Custo" +
                "merDesc, SplitShipment.SplitSuffix, Shipment.TotalShippedSupplierGmtAmtAfterDisc" +
                "ount AS PurchaseAmount, \r\n                         Shipment.TotalShippedSupplier" +
                "GmtAmtAfterDiscount * ExchangeRate.ExchangeRate AS PurchaseBaseAmount, Shipment." +
                "QACommissionPercent, \r\n                         ROUND(Shipment.QACommissionPerce" +
                "nt * Shipment.TotalShippedSupplierGmtAmtAfterDiscount / 100, 2) AS QACommissionA" +
                "mount, \r\n                         ROUND(Shipment.QACommissionPercent * Shipment." +
                "TotalShippedSupplierGmtAmtAfterDiscount / 100, 2) \r\n                         * E" +
                "xchangeRate.ExchangeRate AS QACommissionBaseAmount, Shipment.VendorPaymentDiscou" +
                "ntPercent, \r\n                         ROUND(Shipment.VendorPaymentDiscountPercen" +
                "t * Shipment.TotalShippedSupplierGmtAmtAfterDiscount / 100, 2) AS VendorPaymentD" +
                "iscountAmount, \r\n                         ROUND(Shipment.VendorPaymentDiscountPe" +
                "rcent * Shipment.TotalShippedSupplierGmtAmtAfterDiscount / 100, 2) \r\n           " +
                "              * ExchangeRate.ExchangeRate AS VendorPaymentDiscountBaseAmount, Sh" +
                "ipment.LabTestIncome * Shipment.TotalShippedQty AS LabtestIncomeAmount, \r\n      " +
                "                   ROUND(Shipment.LabTestIncome * Shipment.TotalShippedQty * Exc" +
                "hangeRate.ExchangeRate / ExchangeRate.ExchangeRate, 2) AS LabTestIncomeBaseAmoun" +
                "t, \r\n                         Invoice.SequenceNo, Customer.CustomerOPSKey,\r\n    " +
                "                         (SELECT        PaymentTermDesc\r\n                       " +
                "        FROM            PaymentTerm\r\n                               WHERE       " +
                " (PaymentTermId = Shipment.PaymentTermId)) AS PaymentTermDesc, Invoice.ShippingD" +
                "ocReceiptDate, Invoice.ShippingDocCheckedOn, \r\n                         Invoice." +
                "AccountDocReceiptDate, Shipment.DocReviewedOn, GETDATE() AS PurchaseInterfacedDa" +
                "te, Shipment.IsChinaGBTestRequired, \r\n                         (CASE WHEN shipme" +
                "nt.IsChinaGBTestRequired = 1 THEN\r\n                             (SELECT        T" +
                "OP 1 TestResult\r\n                               FROM            NSLDB02.NSS.dbo." +
                "ChinaGBTestResult\r\n                               WHERE        Status = 1 AND Pr" +
                "oductId = contract.ProductId AND OfficeId = contract.OfficeId AND (VendorId = - " +
                "1 OR\r\n                                                         VendorId = shipme" +
                "nt.VendorId) AND (SeasonId = - 1 OR\r\n                                           " +
                "              SeasonId = contract.SeasonId)\r\n                               ORDE" +
                "R BY VendorId DESC, SeasonId DESC, TestCompletionDate DESC) ELSE NULL END) AS GB" +
                "TestResult,\r\n                             (SELECT        MAX(ActionDate) AS Expr" +
                "1\r\n                               FROM            NSLDB04.ISAM.dbo.ActionHistory" +
                " AS e WITH (NOLOCK)\r\n                               WHERE        (ShipmentId = S" +
                "hipment.ShipmentId) AND (AmendmentTypeId = 67) AND (Remark = \'China GB Test Requ" +
                "irement : FALSE -> TRUE\')) \r\n                         AS GBTestFlagMarkedOn,\r\n  " +
                "                           (SELECT        MAX(ActionDate) AS Expr1\r\n            " +
                "                   FROM            NSLDB04.ISAM.dbo.ActionHistory AS e WITH (NOL" +
                "OCK)\r\n                               WHERE        (ShipmentId = Shipment.Shipmen" +
                "tId) AND (AmendmentTypeId = 67) AND (Remark = \'China GB Test Requirement : TRUE " +
                "-> FALSE\')) \r\n                         AS GBTestFlagRemovedOn, (CASE WHEN shipme" +
                "nt.IsChinaGBTestRequired = 1 THEN\r\n                             (SELECT        T" +
                "OP 1 CreatedOn\r\n                               FROM            NSLDB02.NSS.dbo.C" +
                "hinaGBTestResult\r\n                               WHERE        Status = 1 AND Pro" +
                "ductId = contract.ProductId AND OfficeId = contract.OfficeId AND (VendorId = - 1" +
                " OR\r\n                                                         VendorId = shipmen" +
                "t.VendorId) AND (SeasonId = - 1 OR\r\n                                            " +
                "             SeasonId = contract.SeasonId)\r\n                               ORDER" +
                " BY VendorId DESC, SeasonId DESC, TestCompletionDate DESC) ELSE NULL END) AS GBT" +
                "estResultRecordedOn\r\nFROM            Contract INNER JOIN\r\n                      " +
                "   Shipment ON Shipment.ContractId = Contract.ContractId AND Shipment.WorkflowSt" +
                "atusId = 8 AND Shipment.Status = 1 INNER JOIN\r\n                         Invoice " +
                "ON Shipment.ShipmentId = Invoice.ShipmentId AND Invoice.ARDate IS NOT NULL AND I" +
                "nvoice.Status = 1 INNER JOIN\r\n                         Currency ON Shipment.BuyC" +
                "urrencyId = Currency.CurrencyId INNER JOIN\r\n                         TradingAgen" +
                "cy ON Contract.TradingAgencyId = TradingAgency.TradingAgencyId INNER JOIN\r\n     " +
                "                    Office ON Contract.OfficeId = Office.OfficeId INNER JOIN\r\n  " +
                "                       PackingUnit ON Contract.PackingUnitId = PackingUnit.Packi" +
                "ngUnitId INNER JOIN\r\n                         Customer ON Contract.CustomerId = " +
                "Customer.CustomerId INNER JOIN\r\n                         SplitShipment ON Shipme" +
                "nt.ShipmentId = SplitShipment.ShipmentId LEFT OUTER JOIN\r\n                      " +
                "   ExchangeRate ON Shipment.BuyCurrencyId = ExchangeRate.CurrencyId AND Exchange" +
                "Rate.ExchangeRateTypeId = 2 AND Invoice.APDate BETWEEN \r\n                       " +
                "  ExchangeRate.EffectiveDateFrom AND ExchangeRate.EffectiveDateTo AND ExchangeRa" +
                "te.Status = 1\r\nWHERE        (Contract.Status = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SupplierPaymentReportDs.SupplierPaymentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SupplierPaymentReportDs.SupplierPaymentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SupplierPaymentReportDs.SupplierPaymentDataTable dataTable = new SupplierPaymentReportDs.SupplierPaymentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(SupplierPaymentReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(SupplierPaymentReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(SupplierPaymentReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(SupplierPaymentReportDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591