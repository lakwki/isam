//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1026
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.reporter.lcreport {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LCStatusReportDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LCStatusReportDs : global::System.Data.DataSet {
        
        private LCStatusReportDataTable tableLCStatusReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LCStatusReportDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LCStatusReportDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LCStatusReport"] != null)) {
                    base.Tables.Add(new LCStatusReportDataTable(ds.Tables["LCStatusReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LCStatusReportDataTable LCStatusReport {
            get {
                return this.tableLCStatusReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LCStatusReportDs cln = ((LCStatusReportDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LCStatusReport"] != null)) {
                    base.Tables.Add(new LCStatusReportDataTable(ds.Tables["LCStatusReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableLCStatusReport = ((LCStatusReportDataTable)(base.Tables["LCStatusReport"]));
            if ((initTable == true)) {
                if ((this.tableLCStatusReport != null)) {
                    this.tableLCStatusReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LCStatusReportDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LCStatusReportDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLCStatusReport = new LCStatusReportDataTable();
            base.Tables.Add(this.tableLCStatusReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLCStatusReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LCStatusReportDs ds = new LCStatusReportDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LCStatusReportRowChangeEventHandler(object sender, LCStatusReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LCStatusReportDataTable : global::System.Data.TypedTableBase<LCStatusReportRow> {
            
            private global::System.Data.DataColumn columnShipmentId;
            
            private global::System.Data.DataColumn columnContractId;
            
            private global::System.Data.DataColumn columnLCNo;
            
            private global::System.Data.DataColumn columnLCIssueAmount;
            
            private global::System.Data.DataColumn columnLCIssueDate;
            
            private global::System.Data.DataColumn columnLCExpiryDate;
            
            private global::System.Data.DataColumn columnSplitSuffix;
            
            private global::System.Data.DataColumn columnContractNo;
            
            private global::System.Data.DataColumn columnDeliveryNo;
            
            private global::System.Data.DataColumn columnPOAtWarehouseDate;
            
            private global::System.Data.DataColumn columnStockAtWarehouseDate;
            
            private global::System.Data.DataColumn columnPOQty;
            
            private global::System.Data.DataColumn columnTotalPoAmt;
            
            private global::System.Data.DataColumn columnSupplierInvoiceNo;
            
            private global::System.Data.DataColumn columnShippedQty;
            
            private global::System.Data.DataColumn columnInvoiceAmount;
            
            private global::System.Data.DataColumn columnLCPaymentDeduction;
            
            private global::System.Data.DataColumn columnSupplierInvoiceAmount;
            
            private global::System.Data.DataColumn columnLCPaymentCheckedDate;
            
            private global::System.Data.DataColumn columnOfficeCode;
            
            private global::System.Data.DataColumn columnOfficeDesc;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerDesc;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnCurrencyCode;
            
            private global::System.Data.DataColumn columnCOCode;
            
            private global::System.Data.DataColumn columnCOName;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnProductTeamCode;
            
            private global::System.Data.DataColumn columnPiecesPerPack;
            
            private global::System.Data.DataColumn columnPackingUnitDesc;
            
            private global::System.Data.DataColumn columnInvoicePrefix;
            
            private global::System.Data.DataColumn columnInvoiceSeq;
            
            private global::System.Data.DataColumn columnInvoiceYear;
            
            private global::System.Data.DataColumn columnIsLCPaymentChecked;
            
            private global::System.Data.DataColumn columnQACommissionPercent;
            
            private global::System.Data.DataColumn columnVendorPaymentDiscountPercent;
            
            private global::System.Data.DataColumn columnLabTestIncome;
            
            private global::System.Data.DataColumn columnLC_TotalSupplierInvoiceAmount;
            
            private global::System.Data.DataColumn columnSeasonId;
            
            private global::System.Data.DataColumn columnCustomerId;
            
            private global::System.Data.DataColumn columnProductId;
            
            private global::System.Data.DataColumn columnIsChinaGBTestRequired;
            
            private global::System.Data.DataColumn columnChinaGBTestResult;
            
            private global::System.Data.DataColumn columnLCBillRefNo;
            
            private global::System.Data.DataColumn columnVendorId;
            
            private global::System.Data.DataColumn columnLGDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LCStatusReportDataTable() {
                this.TableName = "LCStatusReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LCStatusReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LCStatusReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIdColumn {
                get {
                    return this.columnShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractIdColumn {
                get {
                    return this.columnContractId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCNoColumn {
                get {
                    return this.columnLCNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCIssueAmountColumn {
                get {
                    return this.columnLCIssueAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCIssueDateColumn {
                get {
                    return this.columnLCIssueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCExpiryDateColumn {
                get {
                    return this.columnLCExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SplitSuffixColumn {
                get {
                    return this.columnSplitSuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractNoColumn {
                get {
                    return this.columnContractNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryNoColumn {
                get {
                    return this.columnDeliveryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POAtWarehouseDateColumn {
                get {
                    return this.columnPOAtWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StockAtWarehouseDateColumn {
                get {
                    return this.columnStockAtWarehouseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POQtyColumn {
                get {
                    return this.columnPOQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPoAmtColumn {
                get {
                    return this.columnTotalPoAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierInvoiceNoColumn {
                get {
                    return this.columnSupplierInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippedQtyColumn {
                get {
                    return this.columnShippedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceAmountColumn {
                get {
                    return this.columnInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCPaymentDeductionColumn {
                get {
                    return this.columnLCPaymentDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierInvoiceAmountColumn {
                get {
                    return this.columnSupplierInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCPaymentCheckedDateColumn {
                get {
                    return this.columnLCPaymentCheckedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeCodeColumn {
                get {
                    return this.columnOfficeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeDescColumn {
                get {
                    return this.columnOfficeDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerDescColumn {
                get {
                    return this.columnCustomerDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyCodeColumn {
                get {
                    return this.columnCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COCodeColumn {
                get {
                    return this.columnCOCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONameColumn {
                get {
                    return this.columnCOName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTeamCodeColumn {
                get {
                    return this.columnProductTeamCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PiecesPerPackColumn {
                get {
                    return this.columnPiecesPerPack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackingUnitDescColumn {
                get {
                    return this.columnPackingUnitDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrefixColumn {
                get {
                    return this.columnInvoicePrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceSeqColumn {
                get {
                    return this.columnInvoiceSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceYearColumn {
                get {
                    return this.columnInvoiceYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsLCPaymentCheckedColumn {
                get {
                    return this.columnIsLCPaymentChecked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QACommissionPercentColumn {
                get {
                    return this.columnQACommissionPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorPaymentDiscountPercentColumn {
                get {
                    return this.columnVendorPaymentDiscountPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabTestIncomeColumn {
                get {
                    return this.columnLabTestIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LC_TotalSupplierInvoiceAmountColumn {
                get {
                    return this.columnLC_TotalSupplierInvoiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeasonIdColumn {
                get {
                    return this.columnSeasonId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerIdColumn {
                get {
                    return this.columnCustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductIdColumn {
                get {
                    return this.columnProductId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsChinaGBTestRequiredColumn {
                get {
                    return this.columnIsChinaGBTestRequired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChinaGBTestResultColumn {
                get {
                    return this.columnChinaGBTestResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCBillRefNoColumn {
                get {
                    return this.columnLCBillRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorIdColumn {
                get {
                    return this.columnVendorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LGDateColumn {
                get {
                    return this.columnLGDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LCStatusReportRow this[int index] {
                get {
                    return ((LCStatusReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LCStatusReportRowChangeEventHandler LCStatusReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LCStatusReportRowChangeEventHandler LCStatusReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LCStatusReportRowChangeEventHandler LCStatusReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LCStatusReportRowChangeEventHandler LCStatusReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLCStatusReportRow(LCStatusReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LCStatusReportRow AddLCStatusReportRow(
                        int ShipmentId, 
                        int ContractId, 
                        string LCNo, 
                        decimal LCIssueAmount, 
                        System.DateTime LCIssueDate, 
                        System.DateTime LCExpiryDate, 
                        string SplitSuffix, 
                        string ContractNo, 
                        int DeliveryNo, 
                        System.DateTime POAtWarehouseDate, 
                        System.DateTime StockAtWarehouseDate, 
                        int POQty, 
                        decimal TotalPoAmt, 
                        string SupplierInvoiceNo, 
                        int ShippedQty, 
                        decimal InvoiceAmount, 
                        decimal LCPaymentDeduction, 
                        decimal SupplierInvoiceAmount, 
                        System.DateTime LCPaymentCheckedDate, 
                        string OfficeCode, 
                        string OfficeDesc, 
                        string CustomerCode, 
                        string CustomerDesc, 
                        string ItemNo, 
                        string CurrencyCode, 
                        string COCode, 
                        string COName, 
                        string VendorName, 
                        string ProductTeamCode, 
                        int PiecesPerPack, 
                        string PackingUnitDesc, 
                        string InvoicePrefix, 
                        int InvoiceSeq, 
                        int InvoiceYear, 
                        int IsLCPaymentChecked, 
                        decimal QACommissionPercent, 
                        decimal VendorPaymentDiscountPercent, 
                        decimal LabTestIncome, 
                        decimal LC_TotalSupplierInvoiceAmount, 
                        int SeasonId, 
                        int CustomerId, 
                        int ProductId, 
                        int IsChinaGBTestRequired, 
                        int ChinaGBTestResult, 
                        string LCBillRefNo, 
                        int VendorId, 
                        System.DateTime LGDate) {
                LCStatusReportRow rowLCStatusReportRow = ((LCStatusReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShipmentId,
                        ContractId,
                        LCNo,
                        LCIssueAmount,
                        LCIssueDate,
                        LCExpiryDate,
                        SplitSuffix,
                        ContractNo,
                        DeliveryNo,
                        POAtWarehouseDate,
                        StockAtWarehouseDate,
                        POQty,
                        TotalPoAmt,
                        SupplierInvoiceNo,
                        ShippedQty,
                        InvoiceAmount,
                        LCPaymentDeduction,
                        SupplierInvoiceAmount,
                        LCPaymentCheckedDate,
                        OfficeCode,
                        OfficeDesc,
                        CustomerCode,
                        CustomerDesc,
                        ItemNo,
                        CurrencyCode,
                        COCode,
                        COName,
                        VendorName,
                        ProductTeamCode,
                        PiecesPerPack,
                        PackingUnitDesc,
                        InvoicePrefix,
                        InvoiceSeq,
                        InvoiceYear,
                        IsLCPaymentChecked,
                        QACommissionPercent,
                        VendorPaymentDiscountPercent,
                        LabTestIncome,
                        LC_TotalSupplierInvoiceAmount,
                        SeasonId,
                        CustomerId,
                        ProductId,
                        IsChinaGBTestRequired,
                        ChinaGBTestResult,
                        LCBillRefNo,
                        VendorId,
                        LGDate};
                rowLCStatusReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLCStatusReportRow);
                return rowLCStatusReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LCStatusReportDataTable cln = ((LCStatusReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LCStatusReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnShipmentId = base.Columns["ShipmentId"];
                this.columnContractId = base.Columns["ContractId"];
                this.columnLCNo = base.Columns["LCNo"];
                this.columnLCIssueAmount = base.Columns["LCIssueAmount"];
                this.columnLCIssueDate = base.Columns["LCIssueDate"];
                this.columnLCExpiryDate = base.Columns["LCExpiryDate"];
                this.columnSplitSuffix = base.Columns["SplitSuffix"];
                this.columnContractNo = base.Columns["ContractNo"];
                this.columnDeliveryNo = base.Columns["DeliveryNo"];
                this.columnPOAtWarehouseDate = base.Columns["POAtWarehouseDate"];
                this.columnStockAtWarehouseDate = base.Columns["StockAtWarehouseDate"];
                this.columnPOQty = base.Columns["POQty"];
                this.columnTotalPoAmt = base.Columns["TotalPoAmt"];
                this.columnSupplierInvoiceNo = base.Columns["SupplierInvoiceNo"];
                this.columnShippedQty = base.Columns["ShippedQty"];
                this.columnInvoiceAmount = base.Columns["InvoiceAmount"];
                this.columnLCPaymentDeduction = base.Columns["LCPaymentDeduction"];
                this.columnSupplierInvoiceAmount = base.Columns["SupplierInvoiceAmount"];
                this.columnLCPaymentCheckedDate = base.Columns["LCPaymentCheckedDate"];
                this.columnOfficeCode = base.Columns["OfficeCode"];
                this.columnOfficeDesc = base.Columns["OfficeDesc"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerDesc = base.Columns["CustomerDesc"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnCurrencyCode = base.Columns["CurrencyCode"];
                this.columnCOCode = base.Columns["COCode"];
                this.columnCOName = base.Columns["COName"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnProductTeamCode = base.Columns["ProductTeamCode"];
                this.columnPiecesPerPack = base.Columns["PiecesPerPack"];
                this.columnPackingUnitDesc = base.Columns["PackingUnitDesc"];
                this.columnInvoicePrefix = base.Columns["InvoicePrefix"];
                this.columnInvoiceSeq = base.Columns["InvoiceSeq"];
                this.columnInvoiceYear = base.Columns["InvoiceYear"];
                this.columnIsLCPaymentChecked = base.Columns["IsLCPaymentChecked"];
                this.columnQACommissionPercent = base.Columns["QACommissionPercent"];
                this.columnVendorPaymentDiscountPercent = base.Columns["VendorPaymentDiscountPercent"];
                this.columnLabTestIncome = base.Columns["LabTestIncome"];
                this.columnLC_TotalSupplierInvoiceAmount = base.Columns["LC_TotalSupplierInvoiceAmount"];
                this.columnSeasonId = base.Columns["SeasonId"];
                this.columnCustomerId = base.Columns["CustomerId"];
                this.columnProductId = base.Columns["ProductId"];
                this.columnIsChinaGBTestRequired = base.Columns["IsChinaGBTestRequired"];
                this.columnChinaGBTestResult = base.Columns["ChinaGBTestResult"];
                this.columnLCBillRefNo = base.Columns["LCBillRefNo"];
                this.columnVendorId = base.Columns["VendorId"];
                this.columnLGDate = base.Columns["LGDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnShipmentId = new global::System.Data.DataColumn("ShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentId);
                this.columnContractId = new global::System.Data.DataColumn("ContractId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractId);
                this.columnLCNo = new global::System.Data.DataColumn("LCNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCNo);
                this.columnLCIssueAmount = new global::System.Data.DataColumn("LCIssueAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCIssueAmount);
                this.columnLCIssueDate = new global::System.Data.DataColumn("LCIssueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCIssueDate);
                this.columnLCExpiryDate = new global::System.Data.DataColumn("LCExpiryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCExpiryDate);
                this.columnSplitSuffix = new global::System.Data.DataColumn("SplitSuffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSplitSuffix);
                this.columnContractNo = new global::System.Data.DataColumn("ContractNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractNo);
                this.columnDeliveryNo = new global::System.Data.DataColumn("DeliveryNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryNo);
                this.columnPOAtWarehouseDate = new global::System.Data.DataColumn("POAtWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOAtWarehouseDate);
                this.columnStockAtWarehouseDate = new global::System.Data.DataColumn("StockAtWarehouseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAtWarehouseDate);
                this.columnPOQty = new global::System.Data.DataColumn("POQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOQty);
                this.columnTotalPoAmt = new global::System.Data.DataColumn("TotalPoAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPoAmt);
                this.columnSupplierInvoiceNo = new global::System.Data.DataColumn("SupplierInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierInvoiceNo);
                this.columnShippedQty = new global::System.Data.DataColumn("ShippedQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippedQty);
                this.columnInvoiceAmount = new global::System.Data.DataColumn("InvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceAmount);
                this.columnLCPaymentDeduction = new global::System.Data.DataColumn("LCPaymentDeduction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCPaymentDeduction);
                this.columnSupplierInvoiceAmount = new global::System.Data.DataColumn("SupplierInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierInvoiceAmount);
                this.columnLCPaymentCheckedDate = new global::System.Data.DataColumn("LCPaymentCheckedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCPaymentCheckedDate);
                this.columnOfficeCode = new global::System.Data.DataColumn("OfficeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeCode);
                this.columnOfficeDesc = new global::System.Data.DataColumn("OfficeDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeDesc);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerDesc = new global::System.Data.DataColumn("CustomerDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerDesc);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnCurrencyCode = new global::System.Data.DataColumn("CurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyCode);
                this.columnCOCode = new global::System.Data.DataColumn("COCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOCode);
                this.columnCOName = new global::System.Data.DataColumn("COName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOName);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnProductTeamCode = new global::System.Data.DataColumn("ProductTeamCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductTeamCode);
                this.columnPiecesPerPack = new global::System.Data.DataColumn("PiecesPerPack", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiecesPerPack);
                this.columnPackingUnitDesc = new global::System.Data.DataColumn("PackingUnitDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingUnitDesc);
                this.columnInvoicePrefix = new global::System.Data.DataColumn("InvoicePrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrefix);
                this.columnInvoiceSeq = new global::System.Data.DataColumn("InvoiceSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceSeq);
                this.columnInvoiceYear = new global::System.Data.DataColumn("InvoiceYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceYear);
                this.columnIsLCPaymentChecked = new global::System.Data.DataColumn("IsLCPaymentChecked", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLCPaymentChecked);
                this.columnQACommissionPercent = new global::System.Data.DataColumn("QACommissionPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQACommissionPercent);
                this.columnVendorPaymentDiscountPercent = new global::System.Data.DataColumn("VendorPaymentDiscountPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaymentDiscountPercent);
                this.columnLabTestIncome = new global::System.Data.DataColumn("LabTestIncome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabTestIncome);
                this.columnLC_TotalSupplierInvoiceAmount = new global::System.Data.DataColumn("LC_TotalSupplierInvoiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLC_TotalSupplierInvoiceAmount);
                this.columnSeasonId = new global::System.Data.DataColumn("SeasonId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeasonId);
                this.columnCustomerId = new global::System.Data.DataColumn("CustomerId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerId);
                this.columnProductId = new global::System.Data.DataColumn("ProductId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductId);
                this.columnIsChinaGBTestRequired = new global::System.Data.DataColumn("IsChinaGBTestRequired", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsChinaGBTestRequired);
                this.columnChinaGBTestResult = new global::System.Data.DataColumn("ChinaGBTestResult", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChinaGBTestResult);
                this.columnLCBillRefNo = new global::System.Data.DataColumn("LCBillRefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCBillRefNo);
                this.columnVendorId = new global::System.Data.DataColumn("VendorId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorId);
                this.columnLGDate = new global::System.Data.DataColumn("LGDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGDate);
                this.columnLCNo.MaxLength = 15;
                this.columnLCIssueAmount.AllowDBNull = false;
                this.columnSplitSuffix.MaxLength = 2;
                this.columnContractNo.AllowDBNull = false;
                this.columnContractNo.MaxLength = 50;
                this.columnDeliveryNo.AllowDBNull = false;
                this.columnPOAtWarehouseDate.AllowDBNull = false;
                this.columnPOQty.AllowDBNull = false;
                this.columnTotalPoAmt.AllowDBNull = false;
                this.columnSupplierInvoiceNo.MaxLength = 80;
                this.columnShippedQty.AllowDBNull = false;
                this.columnInvoiceAmount.AllowDBNull = false;
                this.columnSupplierInvoiceAmount.AllowDBNull = false;
                this.columnOfficeCode.AllowDBNull = false;
                this.columnOfficeCode.MaxLength = 5;
                this.columnOfficeDesc.AllowDBNull = false;
                this.columnOfficeDesc.MaxLength = 50;
                this.columnCustomerCode.AllowDBNull = false;
                this.columnCustomerCode.MaxLength = 6;
                this.columnCustomerDesc.AllowDBNull = false;
                this.columnCustomerDesc.MaxLength = 50;
                this.columnItemNo.AllowDBNull = false;
                this.columnItemNo.MaxLength = 15;
                this.columnCurrencyCode.MaxLength = 10;
                this.columnCOCode.AllowDBNull = false;
                this.columnCOCode.MaxLength = 2;
                this.columnCOName.MaxLength = 30;
                this.columnVendorName.ReadOnly = true;
                this.columnVendorName.MaxLength = 100;
                this.columnProductTeamCode.ReadOnly = true;
                this.columnProductTeamCode.MaxLength = 10;
                this.columnPiecesPerPack.AllowDBNull = false;
                this.columnPackingUnitDesc.AllowDBNull = false;
                this.columnPackingUnitDesc.MaxLength = 50;
                this.columnInvoicePrefix.MaxLength = 50;
                this.columnIsLCPaymentChecked.AllowDBNull = false;
                this.columnQACommissionPercent.AllowDBNull = false;
                this.columnVendorPaymentDiscountPercent.AllowDBNull = false;
                this.columnLabTestIncome.ReadOnly = true;
                this.columnLC_TotalSupplierInvoiceAmount.AllowDBNull = false;
                this.columnSeasonId.AllowDBNull = false;
                this.columnCustomerId.AllowDBNull = false;
                this.columnProductId.AllowDBNull = false;
                this.columnLCBillRefNo.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LCStatusReportRow NewLCStatusReportRow() {
                return ((LCStatusReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LCStatusReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LCStatusReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LCStatusReportRowChanged != null)) {
                    this.LCStatusReportRowChanged(this, new LCStatusReportRowChangeEvent(((LCStatusReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LCStatusReportRowChanging != null)) {
                    this.LCStatusReportRowChanging(this, new LCStatusReportRowChangeEvent(((LCStatusReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LCStatusReportRowDeleted != null)) {
                    this.LCStatusReportRowDeleted(this, new LCStatusReportRowChangeEvent(((LCStatusReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LCStatusReportRowDeleting != null)) {
                    this.LCStatusReportRowDeleting(this, new LCStatusReportRowChangeEvent(((LCStatusReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLCStatusReportRow(LCStatusReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LCStatusReportDs ds = new LCStatusReportDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LCStatusReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LCStatusReportRow : global::System.Data.DataRow {
            
            private LCStatusReportDataTable tableLCStatusReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LCStatusReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLCStatusReport = ((LCStatusReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipmentId {
                get {
                    try {
                        return ((int)(this[this.tableLCStatusReport.ShipmentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipmentId\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.ShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ContractId {
                get {
                    try {
                        return ((int)(this[this.tableLCStatusReport.ContractIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractId\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.ContractIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LCNo {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.LCNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCNo\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.LCNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LCIssueAmount {
                get {
                    return ((decimal)(this[this.tableLCStatusReport.LCIssueAmountColumn]));
                }
                set {
                    this[this.tableLCStatusReport.LCIssueAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LCIssueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLCStatusReport.LCIssueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCIssueDate\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.LCIssueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LCExpiryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLCStatusReport.LCExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCExpiryDate\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.LCExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SplitSuffix {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.SplitSuffixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SplitSuffix\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.SplitSuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContractNo {
                get {
                    return ((string)(this[this.tableLCStatusReport.ContractNoColumn]));
                }
                set {
                    this[this.tableLCStatusReport.ContractNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeliveryNo {
                get {
                    return ((int)(this[this.tableLCStatusReport.DeliveryNoColumn]));
                }
                set {
                    this[this.tableLCStatusReport.DeliveryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime POAtWarehouseDate {
                get {
                    return ((global::System.DateTime)(this[this.tableLCStatusReport.POAtWarehouseDateColumn]));
                }
                set {
                    this[this.tableLCStatusReport.POAtWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime StockAtWarehouseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLCStatusReport.StockAtWarehouseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockAtWarehouseDate\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.StockAtWarehouseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int POQty {
                get {
                    return ((int)(this[this.tableLCStatusReport.POQtyColumn]));
                }
                set {
                    this[this.tableLCStatusReport.POQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalPoAmt {
                get {
                    return ((decimal)(this[this.tableLCStatusReport.TotalPoAmtColumn]));
                }
                set {
                    this[this.tableLCStatusReport.TotalPoAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.SupplierInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierInvoiceNo\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.SupplierInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShippedQty {
                get {
                    return ((int)(this[this.tableLCStatusReport.ShippedQtyColumn]));
                }
                set {
                    this[this.tableLCStatusReport.ShippedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InvoiceAmount {
                get {
                    return ((decimal)(this[this.tableLCStatusReport.InvoiceAmountColumn]));
                }
                set {
                    this[this.tableLCStatusReport.InvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LCPaymentDeduction {
                get {
                    try {
                        return ((decimal)(this[this.tableLCStatusReport.LCPaymentDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCPaymentDeduction\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.LCPaymentDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SupplierInvoiceAmount {
                get {
                    return ((decimal)(this[this.tableLCStatusReport.SupplierInvoiceAmountColumn]));
                }
                set {
                    this[this.tableLCStatusReport.SupplierInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LCPaymentCheckedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLCStatusReport.LCPaymentCheckedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCPaymentCheckedDate\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.LCPaymentCheckedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfficeCode {
                get {
                    return ((string)(this[this.tableLCStatusReport.OfficeCodeColumn]));
                }
                set {
                    this[this.tableLCStatusReport.OfficeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfficeDesc {
                get {
                    return ((string)(this[this.tableLCStatusReport.OfficeDescColumn]));
                }
                set {
                    this[this.tableLCStatusReport.OfficeDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerCode {
                get {
                    return ((string)(this[this.tableLCStatusReport.CustomerCodeColumn]));
                }
                set {
                    this[this.tableLCStatusReport.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerDesc {
                get {
                    return ((string)(this[this.tableLCStatusReport.CustomerDescColumn]));
                }
                set {
                    this[this.tableLCStatusReport.CustomerDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemNo {
                get {
                    return ((string)(this[this.tableLCStatusReport.ItemNoColumn]));
                }
                set {
                    this[this.tableLCStatusReport.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyCode {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.CurrencyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyCode\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.CurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COCode {
                get {
                    return ((string)(this[this.tableLCStatusReport.COCodeColumn]));
                }
                set {
                    this[this.tableLCStatusReport.COCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COName {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.CONameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'COName\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.CONameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductTeamCode {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.ProductTeamCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductTeamCode\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.ProductTeamCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PiecesPerPack {
                get {
                    return ((int)(this[this.tableLCStatusReport.PiecesPerPackColumn]));
                }
                set {
                    this[this.tableLCStatusReport.PiecesPerPackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PackingUnitDesc {
                get {
                    return ((string)(this[this.tableLCStatusReport.PackingUnitDescColumn]));
                }
                set {
                    this[this.tableLCStatusReport.PackingUnitDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoicePrefix {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.InvoicePrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePrefix\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.InvoicePrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceSeq {
                get {
                    try {
                        return ((int)(this[this.tableLCStatusReport.InvoiceSeqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceSeq\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.InvoiceSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceYear {
                get {
                    try {
                        return ((int)(this[this.tableLCStatusReport.InvoiceYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceYear\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.InvoiceYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsLCPaymentChecked {
                get {
                    return ((int)(this[this.tableLCStatusReport.IsLCPaymentCheckedColumn]));
                }
                set {
                    this[this.tableLCStatusReport.IsLCPaymentCheckedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QACommissionPercent {
                get {
                    return ((decimal)(this[this.tableLCStatusReport.QACommissionPercentColumn]));
                }
                set {
                    this[this.tableLCStatusReport.QACommissionPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VendorPaymentDiscountPercent {
                get {
                    return ((decimal)(this[this.tableLCStatusReport.VendorPaymentDiscountPercentColumn]));
                }
                set {
                    this[this.tableLCStatusReport.VendorPaymentDiscountPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LabTestIncome {
                get {
                    try {
                        return ((decimal)(this[this.tableLCStatusReport.LabTestIncomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabTestIncome\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.LabTestIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LC_TotalSupplierInvoiceAmount {
                get {
                    return ((decimal)(this[this.tableLCStatusReport.LC_TotalSupplierInvoiceAmountColumn]));
                }
                set {
                    this[this.tableLCStatusReport.LC_TotalSupplierInvoiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SeasonId {
                get {
                    return ((int)(this[this.tableLCStatusReport.SeasonIdColumn]));
                }
                set {
                    this[this.tableLCStatusReport.SeasonIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomerId {
                get {
                    return ((int)(this[this.tableLCStatusReport.CustomerIdColumn]));
                }
                set {
                    this[this.tableLCStatusReport.CustomerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductId {
                get {
                    return ((int)(this[this.tableLCStatusReport.ProductIdColumn]));
                }
                set {
                    this[this.tableLCStatusReport.ProductIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IsChinaGBTestRequired {
                get {
                    try {
                        return ((int)(this[this.tableLCStatusReport.IsChinaGBTestRequiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsChinaGBTestRequired\' in table \'LCStatusReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.IsChinaGBTestRequiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ChinaGBTestResult {
                get {
                    try {
                        return ((int)(this[this.tableLCStatusReport.ChinaGBTestResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChinaGBTestResult\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.ChinaGBTestResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LCBillRefNo {
                get {
                    try {
                        return ((string)(this[this.tableLCStatusReport.LCBillRefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCBillRefNo\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.LCBillRefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VendorId {
                get {
                    try {
                        return ((int)(this[this.tableLCStatusReport.VendorIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorId\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.VendorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LGDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLCStatusReport.LGDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LGDate\' in table \'LCStatusReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLCStatusReport.LGDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShipmentIdNull() {
                return this.IsNull(this.tableLCStatusReport.ShipmentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShipmentIdNull() {
                this[this.tableLCStatusReport.ShipmentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContractIdNull() {
                return this.IsNull(this.tableLCStatusReport.ContractIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContractIdNull() {
                this[this.tableLCStatusReport.ContractIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCNoNull() {
                return this.IsNull(this.tableLCStatusReport.LCNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCNoNull() {
                this[this.tableLCStatusReport.LCNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCIssueDateNull() {
                return this.IsNull(this.tableLCStatusReport.LCIssueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCIssueDateNull() {
                this[this.tableLCStatusReport.LCIssueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCExpiryDateNull() {
                return this.IsNull(this.tableLCStatusReport.LCExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCExpiryDateNull() {
                this[this.tableLCStatusReport.LCExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSplitSuffixNull() {
                return this.IsNull(this.tableLCStatusReport.SplitSuffixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSplitSuffixNull() {
                this[this.tableLCStatusReport.SplitSuffixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStockAtWarehouseDateNull() {
                return this.IsNull(this.tableLCStatusReport.StockAtWarehouseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStockAtWarehouseDateNull() {
                this[this.tableLCStatusReport.StockAtWarehouseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierInvoiceNoNull() {
                return this.IsNull(this.tableLCStatusReport.SupplierInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierInvoiceNoNull() {
                this[this.tableLCStatusReport.SupplierInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCPaymentDeductionNull() {
                return this.IsNull(this.tableLCStatusReport.LCPaymentDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCPaymentDeductionNull() {
                this[this.tableLCStatusReport.LCPaymentDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCPaymentCheckedDateNull() {
                return this.IsNull(this.tableLCStatusReport.LCPaymentCheckedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCPaymentCheckedDateNull() {
                this[this.tableLCStatusReport.LCPaymentCheckedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyCodeNull() {
                return this.IsNull(this.tableLCStatusReport.CurrencyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyCodeNull() {
                this[this.tableLCStatusReport.CurrencyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONameNull() {
                return this.IsNull(this.tableLCStatusReport.CONameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONameNull() {
                this[this.tableLCStatusReport.CONameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableLCStatusReport.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorNameNull() {
                this[this.tableLCStatusReport.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductTeamCodeNull() {
                return this.IsNull(this.tableLCStatusReport.ProductTeamCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductTeamCodeNull() {
                this[this.tableLCStatusReport.ProductTeamCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicePrefixNull() {
                return this.IsNull(this.tableLCStatusReport.InvoicePrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicePrefixNull() {
                this[this.tableLCStatusReport.InvoicePrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceSeqNull() {
                return this.IsNull(this.tableLCStatusReport.InvoiceSeqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceSeqNull() {
                this[this.tableLCStatusReport.InvoiceSeqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceYearNull() {
                return this.IsNull(this.tableLCStatusReport.InvoiceYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceYearNull() {
                this[this.tableLCStatusReport.InvoiceYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabTestIncomeNull() {
                return this.IsNull(this.tableLCStatusReport.LabTestIncomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabTestIncomeNull() {
                this[this.tableLCStatusReport.LabTestIncomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsChinaGBTestRequiredNull() {
                return this.IsNull(this.tableLCStatusReport.IsChinaGBTestRequiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsChinaGBTestRequiredNull() {
                this[this.tableLCStatusReport.IsChinaGBTestRequiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChinaGBTestResultNull() {
                return this.IsNull(this.tableLCStatusReport.ChinaGBTestResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChinaGBTestResultNull() {
                this[this.tableLCStatusReport.ChinaGBTestResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCBillRefNoNull() {
                return this.IsNull(this.tableLCStatusReport.LCBillRefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCBillRefNoNull() {
                this[this.tableLCStatusReport.LCBillRefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorIdNull() {
                return this.IsNull(this.tableLCStatusReport.VendorIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorIdNull() {
                this[this.tableLCStatusReport.VendorIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLGDateNull() {
                return this.IsNull(this.tableLCStatusReport.LGDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLGDateNull() {
                this[this.tableLCStatusReport.LGDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LCStatusReportRowChangeEvent : global::System.EventArgs {
            
            private LCStatusReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LCStatusReportRowChangeEvent(LCStatusReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LCStatusReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.reporter.lcreport.LCStatusReportDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LCStatusReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LCStatusReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LCStatusReport";
            tableMapping.ColumnMappings.Add("ShipmentId", "ShipmentId");
            tableMapping.ColumnMappings.Add("ContractId", "ContractId");
            tableMapping.ColumnMappings.Add("LCNo", "LCNo");
            tableMapping.ColumnMappings.Add("LCIssueAmount", "LCIssueAmount");
            tableMapping.ColumnMappings.Add("LCIssueDate", "LCIssueDate");
            tableMapping.ColumnMappings.Add("LCExpiryDate", "LCExpiryDate");
            tableMapping.ColumnMappings.Add("SplitSuffix", "SplitSuffix");
            tableMapping.ColumnMappings.Add("ContractNo", "ContractNo");
            tableMapping.ColumnMappings.Add("DeliveryNo", "DeliveryNo");
            tableMapping.ColumnMappings.Add("POAtWarehouseDate", "POAtWarehouseDate");
            tableMapping.ColumnMappings.Add("StockAtWarehouseDate", "StockAtWarehouseDate");
            tableMapping.ColumnMappings.Add("POQty", "POQty");
            tableMapping.ColumnMappings.Add("TotalPoAmt", "TotalPoAmt");
            tableMapping.ColumnMappings.Add("SupplierInvoiceNo", "SupplierInvoiceNo");
            tableMapping.ColumnMappings.Add("ShippedQty", "ShippedQty");
            tableMapping.ColumnMappings.Add("InvoiceAmount", "InvoiceAmount");
            tableMapping.ColumnMappings.Add("SupplierInvoiceAmount", "SupplierInvoiceAmount");
            tableMapping.ColumnMappings.Add("LCPaymentDeduction", "LCPaymentDeduction");
            tableMapping.ColumnMappings.Add("LCPaymentCheckedDate", "LCPaymentCheckedDate");
            tableMapping.ColumnMappings.Add("OfficeCode", "OfficeCode");
            tableMapping.ColumnMappings.Add("OfficeDesc", "OfficeDesc");
            tableMapping.ColumnMappings.Add("CustomerCode", "CustomerCode");
            tableMapping.ColumnMappings.Add("CustomerDesc", "CustomerDesc");
            tableMapping.ColumnMappings.Add("ItemNo", "ItemNo");
            tableMapping.ColumnMappings.Add("CurrencyCode", "CurrencyCode");
            tableMapping.ColumnMappings.Add("COCode", "COCode");
            tableMapping.ColumnMappings.Add("COName", "COName");
            tableMapping.ColumnMappings.Add("VendorName", "VendorName");
            tableMapping.ColumnMappings.Add("ProductTeamCode", "ProductTeamCode");
            tableMapping.ColumnMappings.Add("PiecesPerPack", "PiecesPerPack");
            tableMapping.ColumnMappings.Add("PackingUnitDesc", "PackingUnitDesc");
            tableMapping.ColumnMappings.Add("InvoicePrefix", "InvoicePrefix");
            tableMapping.ColumnMappings.Add("InvoiceSeq", "InvoiceSeq");
            tableMapping.ColumnMappings.Add("InvoiceYear", "InvoiceYear");
            tableMapping.ColumnMappings.Add("IsLCPaymentChecked", "IsLCPaymentChecked");
            tableMapping.ColumnMappings.Add("QACommissionPercent", "QACommissionPercent");
            tableMapping.ColumnMappings.Add("VendorPaymentDiscountPercent", "VendorPaymentDiscountPercent");
            tableMapping.ColumnMappings.Add("LabTestIncome", "LabTestIncome");
            tableMapping.ColumnMappings.Add("LC_TotalSupplierInvoiceAmount", "LC_TotalSupplierInvoiceAmount");
            tableMapping.ColumnMappings.Add("SeasonId", "SeasonId");
            tableMapping.ColumnMappings.Add("CustomerId", "CustomerId");
            tableMapping.ColumnMappings.Add("ProductId", "ProductId");
            tableMapping.ColumnMappings.Add("IsChinaGBTestRequired", "IsChinaGBTestRequired");
            tableMapping.ColumnMappings.Add("ChinaGBTestResult", "ChinaGBTestResult");
            tableMapping.ColumnMappings.Add("LCBillRefNo", "LCBillRefNo");
            tableMapping.ColumnMappings.Add("VendorId", "VendorId");
            tableMapping.ColumnMappings.Add("LGDate", "LGDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::com.next.isam.reporter.Properties.Settings.Default.ConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT top 10\r\n                      ShipmentId=ls.ShipmentId+0, ContractId=c.Con" +
                "tractId+0,\r\n                      i.LCNo, i.LCAmt AS LCIssueAmount, i.LCIssueDat" +
                "e, i.LCExpiryDate, i.LCBillRefNo,\r\n                      ss.SplitSuffix, c.Contr" +
                "actNo, s.DeliveryNo, s.SupplierAtWarehouseDate AS POAtWarehouseDate,\r\n          " +
                "            i.ActualAtWarehouseDate AS StockAtWarehouseDate, s.TotalPOQty AS POQ" +
                "ty, s.TotalPOAmt AS TotalPoAmt, i.SupplierInvoiceNo,\r\n                      s.To" +
                "talShippedQty AS ShippedQty, s.TotalShippedAmt AS InvoiceAmount, LCPaymentDeduct" +
                "ion=0.000000,\r\n                      s.TotalShippedSupplierGmtAmtAfterDiscount A" +
                "S SupplierInvoiceAmount, i.LCPaymentCheckedDate, o.OfficeCode, o.Description AS " +
                "OfficeDesc,\r\n                      cu.CustomerShortCode AS CustomerCode, cu.Cust" +
                "omerDesc, p.ItemNo, cy.CurrencyCode, co.Code AS COCode,\r\n                      c" +
                "o.Name AS COName, s.VendorId, CONVERT(varchar(100), \'\') AS VendorName, CONVERT(v" +
                "archar(10), \'\') AS ProductTeamCode, c.PiecesPerPack,\r\n                      pu.P" +
                "ackingUnitDesc, i.InvoicePrefix, i.InvoiceSeq, i.InvoiceYear, s.TotalPOAmt AS LC" +
                "_TotalSupplierInvoiceAmount,\r\n                      i.IsLCPaymentChecked, ls.QAC" +
                "ommissionPercent, ls.VendorPaymentDiscountPercent,\r\n                      LabTes" +
                "tIncome=0.000000, c.SeasonId, c.CustomerId, c.ProductId, IsChinaGBTestRequired=0" +
                ", ChinaGBTestResult=0\r\n,lg.LGDate\r\n                      FROM LCBatch INNER JOIN" +
                " LCApplicationShipment as ls ON ls.LCBatchId = LCBatch.LCBatchId AND ls.Status =" +
                " 1\r\n                      INNER JOIN LCApplication as l ON l.LCApplicationId = l" +
                "s.LCApplicationId AND l.Status = 1\r\n                      INNER JOIN Shipment as" +
                " s ON s.ShipmentId = ls.ShipmentId AND s.Status = 1\r\n                      INNER" +
                " JOIN Contract as c ON c.ContractId = s.ContractId AND c.Status = 1\r\n           " +
                "           INNER JOIN Invoice as i ON i.ShipmentId = ls.ShipmentId AND i.Status " +
                "= 1\r\n                      INNER JOIN Office as o ON c.OfficeId = o.OfficeId\r\n  " +
                "                    INNER JOIN Customer as cu ON ls.CustomerId = cu.CustomerId\r\n" +
                "                      INNER JOIN Product as p ON ls.ProductId = p.ProductId\r\n   " +
                "                   INNER JOIN PackingUnit as pu ON c.PackingUnitId = pu.PackingU" +
                "nitId\r\n                      INNER JOIN Currency as cy ON s.BuyCurrencyId = cy.C" +
                "urrencyId\r\n                      INNER JOIN CountryOfOrigin as co ON s.CountryOf" +
                "OriginId = co.CountryOfOriginId\r\n                      LEFT OUTER JOIN SplitShip" +
                "ment as ss ON ss.SplitShipmentId = ls.SplitShipmentId\r\n\t\t\t\t\tLEFT JOIN LGDetail a" +
                "s ld ON ld.ShipmentId=s.ShipmentId\r\n\t\t\t\t\tLEFT JOIN LetterOfGuarantee as lg ON lg" +
                ".LGId=ld.LGId\r\n                    ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LCStatusReportDs.LCStatusReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LCStatusReportDs.LCStatusReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            LCStatusReportDs.LCStatusReportDataTable dataTable = new LCStatusReportDs.LCStatusReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(LCStatusReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(LCStatusReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(LCStatusReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(LCStatusReportDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591