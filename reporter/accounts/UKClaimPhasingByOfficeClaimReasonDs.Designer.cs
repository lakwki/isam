//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.reporter.accounts {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("UKClaimPhasingByOfficeClaimReasonDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class UKClaimPhasingByOfficeClaimReasonDs : global::System.Data.DataSet {
        
        private UKClaimPhasingDataTable tableUKClaimPhasing;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UKClaimPhasingByOfficeClaimReasonDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected UKClaimPhasingByOfficeClaimReasonDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["UKClaimPhasing"] != null)) {
                    base.Tables.Add(new UKClaimPhasingDataTable(ds.Tables["UKClaimPhasing"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UKClaimPhasingDataTable UKClaimPhasing {
            get {
                return this.tableUKClaimPhasing;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            UKClaimPhasingByOfficeClaimReasonDs cln = ((UKClaimPhasingByOfficeClaimReasonDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["UKClaimPhasing"] != null)) {
                    base.Tables.Add(new UKClaimPhasingDataTable(ds.Tables["UKClaimPhasing"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableUKClaimPhasing = ((UKClaimPhasingDataTable)(base.Tables["UKClaimPhasing"]));
            if ((initTable == true)) {
                if ((this.tableUKClaimPhasing != null)) {
                    this.tableUKClaimPhasing.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "UKClaimPhasingByOfficeClaimReasonDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/UKClaimPhasingByOfficeClaimReasonDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableUKClaimPhasing = new UKClaimPhasingDataTable();
            base.Tables.Add(this.tableUKClaimPhasing);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUKClaimPhasing() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            UKClaimPhasingByOfficeClaimReasonDs ds = new UKClaimPhasingByOfficeClaimReasonDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UKClaimPhasingRowChangeEventHandler(object sender, UKClaimPhasingRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UKClaimPhasingDataTable : global::System.Data.TypedTableBase<UKClaimPhasingRow> {
            
            private global::System.Data.DataColumn columnFiscalYear;
            
            private global::System.Data.DataColumn columnOffice;
            
            private global::System.Data.DataColumn columnReasonDesc;
            
            private global::System.Data.DataColumn columnP1VendorAmt;
            
            private global::System.Data.DataColumn columnP2VendorAmt;
            
            private global::System.Data.DataColumn columnP3VendorAmt;
            
            private global::System.Data.DataColumn columnP4VendorAmt;
            
            private global::System.Data.DataColumn columnP5VendorAmt;
            
            private global::System.Data.DataColumn columnP6VendorAmt;
            
            private global::System.Data.DataColumn columnP7VendorAmt;
            
            private global::System.Data.DataColumn columnP8VendorAmt;
            
            private global::System.Data.DataColumn columnP9VendorAmt;
            
            private global::System.Data.DataColumn columnP10VendorAmt;
            
            private global::System.Data.DataColumn columnP11VendorAmt;
            
            private global::System.Data.DataColumn columnP12VendorAmt;
            
            private global::System.Data.DataColumn columnTotalVendorAmt;
            
            private global::System.Data.DataColumn columnP1NSAmt;
            
            private global::System.Data.DataColumn columnP2NSAmt;
            
            private global::System.Data.DataColumn columnP3NSAmt;
            
            private global::System.Data.DataColumn columnP4NSAmt;
            
            private global::System.Data.DataColumn columnP5NSAmt;
            
            private global::System.Data.DataColumn columnP6NSAmt;
            
            private global::System.Data.DataColumn columnP7NSAmt;
            
            private global::System.Data.DataColumn columnP8NSAmt;
            
            private global::System.Data.DataColumn columnP9NSAmt;
            
            private global::System.Data.DataColumn columnP10NSAmt;
            
            private global::System.Data.DataColumn columnP11NSAmt;
            
            private global::System.Data.DataColumn columnP12NSAmt;
            
            private global::System.Data.DataColumn columnTotalNSAmt;
            
            private global::System.Data.DataColumn columnOfficeTotalAmt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UKClaimPhasingDataTable() {
                this.TableName = "UKClaimPhasing";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UKClaimPhasingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UKClaimPhasingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FiscalYearColumn {
                get {
                    return this.columnFiscalYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeColumn {
                get {
                    return this.columnOffice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReasonDescColumn {
                get {
                    return this.columnReasonDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P1VendorAmtColumn {
                get {
                    return this.columnP1VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2VendorAmtColumn {
                get {
                    return this.columnP2VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P3VendorAmtColumn {
                get {
                    return this.columnP3VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P4VendorAmtColumn {
                get {
                    return this.columnP4VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P5VendorAmtColumn {
                get {
                    return this.columnP5VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P6VendorAmtColumn {
                get {
                    return this.columnP6VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P7VendorAmtColumn {
                get {
                    return this.columnP7VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P8VendorAmtColumn {
                get {
                    return this.columnP8VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P9VendorAmtColumn {
                get {
                    return this.columnP9VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P10VendorAmtColumn {
                get {
                    return this.columnP10VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P11VendorAmtColumn {
                get {
                    return this.columnP11VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P12VendorAmtColumn {
                get {
                    return this.columnP12VendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalVendorAmtColumn {
                get {
                    return this.columnTotalVendorAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P1NSAmtColumn {
                get {
                    return this.columnP1NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2NSAmtColumn {
                get {
                    return this.columnP2NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P3NSAmtColumn {
                get {
                    return this.columnP3NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P4NSAmtColumn {
                get {
                    return this.columnP4NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P5NSAmtColumn {
                get {
                    return this.columnP5NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P6NSAmtColumn {
                get {
                    return this.columnP6NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P7NSAmtColumn {
                get {
                    return this.columnP7NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P8NSAmtColumn {
                get {
                    return this.columnP8NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P9NSAmtColumn {
                get {
                    return this.columnP9NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P10NSAmtColumn {
                get {
                    return this.columnP10NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P11NSAmtColumn {
                get {
                    return this.columnP11NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P12NSAmtColumn {
                get {
                    return this.columnP12NSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalNSAmtColumn {
                get {
                    return this.columnTotalNSAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeTotalAmtColumn {
                get {
                    return this.columnOfficeTotalAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UKClaimPhasingRow this[int index] {
                get {
                    return ((UKClaimPhasingRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UKClaimPhasingRowChangeEventHandler UKClaimPhasingRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UKClaimPhasingRowChangeEventHandler UKClaimPhasingRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UKClaimPhasingRowChangeEventHandler UKClaimPhasingRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UKClaimPhasingRowChangeEventHandler UKClaimPhasingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUKClaimPhasingRow(UKClaimPhasingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UKClaimPhasingRow AddUKClaimPhasingRow(
                        int FiscalYear, 
                        string Office, 
                        string ReasonDesc, 
                        decimal P1VendorAmt, 
                        decimal P2VendorAmt, 
                        decimal P3VendorAmt, 
                        decimal P4VendorAmt, 
                        decimal P5VendorAmt, 
                        decimal P6VendorAmt, 
                        decimal P7VendorAmt, 
                        decimal P8VendorAmt, 
                        decimal P9VendorAmt, 
                        decimal P10VendorAmt, 
                        decimal P11VendorAmt, 
                        decimal P12VendorAmt, 
                        decimal TotalVendorAmt, 
                        decimal P1NSAmt, 
                        decimal P2NSAmt, 
                        decimal P3NSAmt, 
                        decimal P4NSAmt, 
                        decimal P5NSAmt, 
                        decimal P6NSAmt, 
                        decimal P7NSAmt, 
                        decimal P8NSAmt, 
                        decimal P9NSAmt, 
                        decimal P10NSAmt, 
                        decimal P11NSAmt, 
                        decimal P12NSAmt, 
                        decimal TotalNSAmt, 
                        decimal OfficeTotalAmt) {
                UKClaimPhasingRow rowUKClaimPhasingRow = ((UKClaimPhasingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FiscalYear,
                        Office,
                        ReasonDesc,
                        P1VendorAmt,
                        P2VendorAmt,
                        P3VendorAmt,
                        P4VendorAmt,
                        P5VendorAmt,
                        P6VendorAmt,
                        P7VendorAmt,
                        P8VendorAmt,
                        P9VendorAmt,
                        P10VendorAmt,
                        P11VendorAmt,
                        P12VendorAmt,
                        TotalVendorAmt,
                        P1NSAmt,
                        P2NSAmt,
                        P3NSAmt,
                        P4NSAmt,
                        P5NSAmt,
                        P6NSAmt,
                        P7NSAmt,
                        P8NSAmt,
                        P9NSAmt,
                        P10NSAmt,
                        P11NSAmt,
                        P12NSAmt,
                        TotalNSAmt,
                        OfficeTotalAmt};
                rowUKClaimPhasingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUKClaimPhasingRow);
                return rowUKClaimPhasingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UKClaimPhasingDataTable cln = ((UKClaimPhasingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UKClaimPhasingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFiscalYear = base.Columns["FiscalYear"];
                this.columnOffice = base.Columns["Office"];
                this.columnReasonDesc = base.Columns["ReasonDesc"];
                this.columnP1VendorAmt = base.Columns["P1VendorAmt"];
                this.columnP2VendorAmt = base.Columns["P2VendorAmt"];
                this.columnP3VendorAmt = base.Columns["P3VendorAmt"];
                this.columnP4VendorAmt = base.Columns["P4VendorAmt"];
                this.columnP5VendorAmt = base.Columns["P5VendorAmt"];
                this.columnP6VendorAmt = base.Columns["P6VendorAmt"];
                this.columnP7VendorAmt = base.Columns["P7VendorAmt"];
                this.columnP8VendorAmt = base.Columns["P8VendorAmt"];
                this.columnP9VendorAmt = base.Columns["P9VendorAmt"];
                this.columnP10VendorAmt = base.Columns["P10VendorAmt"];
                this.columnP11VendorAmt = base.Columns["P11VendorAmt"];
                this.columnP12VendorAmt = base.Columns["P12VendorAmt"];
                this.columnTotalVendorAmt = base.Columns["TotalVendorAmt"];
                this.columnP1NSAmt = base.Columns["P1NSAmt"];
                this.columnP2NSAmt = base.Columns["P2NSAmt"];
                this.columnP3NSAmt = base.Columns["P3NSAmt"];
                this.columnP4NSAmt = base.Columns["P4NSAmt"];
                this.columnP5NSAmt = base.Columns["P5NSAmt"];
                this.columnP6NSAmt = base.Columns["P6NSAmt"];
                this.columnP7NSAmt = base.Columns["P7NSAmt"];
                this.columnP8NSAmt = base.Columns["P8NSAmt"];
                this.columnP9NSAmt = base.Columns["P9NSAmt"];
                this.columnP10NSAmt = base.Columns["P10NSAmt"];
                this.columnP11NSAmt = base.Columns["P11NSAmt"];
                this.columnP12NSAmt = base.Columns["P12NSAmt"];
                this.columnTotalNSAmt = base.Columns["TotalNSAmt"];
                this.columnOfficeTotalAmt = base.Columns["OfficeTotalAmt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFiscalYear = new global::System.Data.DataColumn("FiscalYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYear);
                this.columnOffice = new global::System.Data.DataColumn("Office", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffice);
                this.columnReasonDesc = new global::System.Data.DataColumn("ReasonDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonDesc);
                this.columnP1VendorAmt = new global::System.Data.DataColumn("P1VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1VendorAmt);
                this.columnP2VendorAmt = new global::System.Data.DataColumn("P2VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2VendorAmt);
                this.columnP3VendorAmt = new global::System.Data.DataColumn("P3VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP3VendorAmt);
                this.columnP4VendorAmt = new global::System.Data.DataColumn("P4VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP4VendorAmt);
                this.columnP5VendorAmt = new global::System.Data.DataColumn("P5VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP5VendorAmt);
                this.columnP6VendorAmt = new global::System.Data.DataColumn("P6VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP6VendorAmt);
                this.columnP7VendorAmt = new global::System.Data.DataColumn("P7VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP7VendorAmt);
                this.columnP8VendorAmt = new global::System.Data.DataColumn("P8VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP8VendorAmt);
                this.columnP9VendorAmt = new global::System.Data.DataColumn("P9VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP9VendorAmt);
                this.columnP10VendorAmt = new global::System.Data.DataColumn("P10VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP10VendorAmt);
                this.columnP11VendorAmt = new global::System.Data.DataColumn("P11VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP11VendorAmt);
                this.columnP12VendorAmt = new global::System.Data.DataColumn("P12VendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP12VendorAmt);
                this.columnTotalVendorAmt = new global::System.Data.DataColumn("TotalVendorAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalVendorAmt);
                this.columnP1NSAmt = new global::System.Data.DataColumn("P1NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP1NSAmt);
                this.columnP2NSAmt = new global::System.Data.DataColumn("P2NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2NSAmt);
                this.columnP3NSAmt = new global::System.Data.DataColumn("P3NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP3NSAmt);
                this.columnP4NSAmt = new global::System.Data.DataColumn("P4NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP4NSAmt);
                this.columnP5NSAmt = new global::System.Data.DataColumn("P5NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP5NSAmt);
                this.columnP6NSAmt = new global::System.Data.DataColumn("P6NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP6NSAmt);
                this.columnP7NSAmt = new global::System.Data.DataColumn("P7NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP7NSAmt);
                this.columnP8NSAmt = new global::System.Data.DataColumn("P8NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP8NSAmt);
                this.columnP9NSAmt = new global::System.Data.DataColumn("P9NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP9NSAmt);
                this.columnP10NSAmt = new global::System.Data.DataColumn("P10NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP10NSAmt);
                this.columnP11NSAmt = new global::System.Data.DataColumn("P11NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP11NSAmt);
                this.columnP12NSAmt = new global::System.Data.DataColumn("P12NSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP12NSAmt);
                this.columnTotalNSAmt = new global::System.Data.DataColumn("TotalNSAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNSAmt);
                this.columnOfficeTotalAmt = new global::System.Data.DataColumn("OfficeTotalAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeTotalAmt);
                this.columnOffice.MaxLength = 10;
                this.columnReasonDesc.MaxLength = 500;
                this.columnP1VendorAmt.ReadOnly = true;
                this.columnP2VendorAmt.ReadOnly = true;
                this.columnP3VendorAmt.ReadOnly = true;
                this.columnP4VendorAmt.ReadOnly = true;
                this.columnP5VendorAmt.ReadOnly = true;
                this.columnP6VendorAmt.ReadOnly = true;
                this.columnP7VendorAmt.ReadOnly = true;
                this.columnP8VendorAmt.ReadOnly = true;
                this.columnP9VendorAmt.ReadOnly = true;
                this.columnP10VendorAmt.ReadOnly = true;
                this.columnP11VendorAmt.ReadOnly = true;
                this.columnP12VendorAmt.ReadOnly = true;
                this.columnTotalVendorAmt.ReadOnly = true;
                this.columnP1NSAmt.ReadOnly = true;
                this.columnP2NSAmt.ReadOnly = true;
                this.columnP3NSAmt.ReadOnly = true;
                this.columnP4NSAmt.ReadOnly = true;
                this.columnP5NSAmt.ReadOnly = true;
                this.columnP6NSAmt.ReadOnly = true;
                this.columnP7NSAmt.ReadOnly = true;
                this.columnP8NSAmt.ReadOnly = true;
                this.columnP9NSAmt.ReadOnly = true;
                this.columnP10NSAmt.ReadOnly = true;
                this.columnP11NSAmt.ReadOnly = true;
                this.columnP12NSAmt.ReadOnly = true;
                this.columnTotalNSAmt.ReadOnly = true;
                this.columnOfficeTotalAmt.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UKClaimPhasingRow NewUKClaimPhasingRow() {
                return ((UKClaimPhasingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UKClaimPhasingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UKClaimPhasingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UKClaimPhasingRowChanged != null)) {
                    this.UKClaimPhasingRowChanged(this, new UKClaimPhasingRowChangeEvent(((UKClaimPhasingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UKClaimPhasingRowChanging != null)) {
                    this.UKClaimPhasingRowChanging(this, new UKClaimPhasingRowChangeEvent(((UKClaimPhasingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UKClaimPhasingRowDeleted != null)) {
                    this.UKClaimPhasingRowDeleted(this, new UKClaimPhasingRowChangeEvent(((UKClaimPhasingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UKClaimPhasingRowDeleting != null)) {
                    this.UKClaimPhasingRowDeleting(this, new UKClaimPhasingRowChangeEvent(((UKClaimPhasingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUKClaimPhasingRow(UKClaimPhasingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                UKClaimPhasingByOfficeClaimReasonDs ds = new UKClaimPhasingByOfficeClaimReasonDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UKClaimPhasingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UKClaimPhasingRow : global::System.Data.DataRow {
            
            private UKClaimPhasingDataTable tableUKClaimPhasing;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UKClaimPhasingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUKClaimPhasing = ((UKClaimPhasingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FiscalYear {
                get {
                    try {
                        return ((int)(this[this.tableUKClaimPhasing.FiscalYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FiscalYear\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.FiscalYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Office {
                get {
                    try {
                        return ((string)(this[this.tableUKClaimPhasing.OfficeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Office\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.OfficeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReasonDesc {
                get {
                    try {
                        return ((string)(this[this.tableUKClaimPhasing.ReasonDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonDesc\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.ReasonDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P1VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P1VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P1VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P2VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P2VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P2VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P2VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P3VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P3VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P3VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P3VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P4VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P4VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P4VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P4VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P5VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P5VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P5VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P5VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P6VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P6VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P6VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P6VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P7VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P7VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P7VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P7VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P8VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P8VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P8VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P8VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P9VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P9VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P9VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P9VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P10VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P10VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P10VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P10VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P11VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P11VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P11VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P11VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P12VendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P12VendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P12VendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P12VendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalVendorAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.TotalVendorAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalVendorAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.TotalVendorAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P1NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P1NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P1NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P1NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P2NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P2NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P2NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P2NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P3NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P3NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P3NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P3NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P4NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P4NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P4NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P4NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P5NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P5NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P5NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P5NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P6NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P6NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P6NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P6NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P7NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P7NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P7NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P7NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P8NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P8NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P8NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P8NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P9NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P9NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P9NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P9NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P10NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P10NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P10NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P10NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P11NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P11NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P11NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P11NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal P12NSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.P12NSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P12NSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.P12NSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalNSAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.TotalNSAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalNSAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.TotalNSAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OfficeTotalAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableUKClaimPhasing.OfficeTotalAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfficeTotalAmt\' in table \'UKClaimPhasing\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUKClaimPhasing.OfficeTotalAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFiscalYearNull() {
                return this.IsNull(this.tableUKClaimPhasing.FiscalYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFiscalYearNull() {
                this[this.tableUKClaimPhasing.FiscalYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfficeNull() {
                return this.IsNull(this.tableUKClaimPhasing.OfficeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfficeNull() {
                this[this.tableUKClaimPhasing.OfficeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReasonDescNull() {
                return this.IsNull(this.tableUKClaimPhasing.ReasonDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReasonDescNull() {
                this[this.tableUKClaimPhasing.ReasonDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP1VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P1VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP1VendorAmtNull() {
                this[this.tableUKClaimPhasing.P1VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP2VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P2VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP2VendorAmtNull() {
                this[this.tableUKClaimPhasing.P2VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP3VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P3VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP3VendorAmtNull() {
                this[this.tableUKClaimPhasing.P3VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP4VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P4VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP4VendorAmtNull() {
                this[this.tableUKClaimPhasing.P4VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP5VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P5VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP5VendorAmtNull() {
                this[this.tableUKClaimPhasing.P5VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP6VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P6VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP6VendorAmtNull() {
                this[this.tableUKClaimPhasing.P6VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP7VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P7VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP7VendorAmtNull() {
                this[this.tableUKClaimPhasing.P7VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP8VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P8VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP8VendorAmtNull() {
                this[this.tableUKClaimPhasing.P8VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP9VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P9VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP9VendorAmtNull() {
                this[this.tableUKClaimPhasing.P9VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP10VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P10VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP10VendorAmtNull() {
                this[this.tableUKClaimPhasing.P10VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP11VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P11VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP11VendorAmtNull() {
                this[this.tableUKClaimPhasing.P11VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP12VendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P12VendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP12VendorAmtNull() {
                this[this.tableUKClaimPhasing.P12VendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalVendorAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.TotalVendorAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalVendorAmtNull() {
                this[this.tableUKClaimPhasing.TotalVendorAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP1NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P1NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP1NSAmtNull() {
                this[this.tableUKClaimPhasing.P1NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP2NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P2NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP2NSAmtNull() {
                this[this.tableUKClaimPhasing.P2NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP3NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P3NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP3NSAmtNull() {
                this[this.tableUKClaimPhasing.P3NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP4NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P4NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP4NSAmtNull() {
                this[this.tableUKClaimPhasing.P4NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP5NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P5NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP5NSAmtNull() {
                this[this.tableUKClaimPhasing.P5NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP6NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P6NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP6NSAmtNull() {
                this[this.tableUKClaimPhasing.P6NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP7NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P7NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP7NSAmtNull() {
                this[this.tableUKClaimPhasing.P7NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP8NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P8NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP8NSAmtNull() {
                this[this.tableUKClaimPhasing.P8NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP9NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P9NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP9NSAmtNull() {
                this[this.tableUKClaimPhasing.P9NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP10NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P10NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP10NSAmtNull() {
                this[this.tableUKClaimPhasing.P10NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP11NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P11NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP11NSAmtNull() {
                this[this.tableUKClaimPhasing.P11NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP12NSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.P12NSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP12NSAmtNull() {
                this[this.tableUKClaimPhasing.P12NSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNSAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.TotalNSAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNSAmtNull() {
                this[this.tableUKClaimPhasing.TotalNSAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfficeTotalAmtNull() {
                return this.IsNull(this.tableUKClaimPhasing.OfficeTotalAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfficeTotalAmtNull() {
                this[this.tableUKClaimPhasing.OfficeTotalAmtColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UKClaimPhasingRowChangeEvent : global::System.EventArgs {
            
            private UKClaimPhasingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UKClaimPhasingRowChangeEvent(UKClaimPhasingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UKClaimPhasingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.reporter.accounts.UKClaimPhasingByOfficeClaimReasonDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UKClaimPhasingTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UKClaimPhasingTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UKClaimPhasing";
            tableMapping.ColumnMappings.Add("FiscalYear", "FiscalYear");
            tableMapping.ColumnMappings.Add("Office", "Office");
            tableMapping.ColumnMappings.Add("ReasonDesc", "ReasonDesc");
            tableMapping.ColumnMappings.Add("P1VendorAmt", "P1VendorAmt");
            tableMapping.ColumnMappings.Add("P2VendorAmt", "P2VendorAmt");
            tableMapping.ColumnMappings.Add("P3VendorAmt", "P3VendorAmt");
            tableMapping.ColumnMappings.Add("P4VendorAmt", "P4VendorAmt");
            tableMapping.ColumnMappings.Add("P5VendorAmt", "P5VendorAmt");
            tableMapping.ColumnMappings.Add("P6VendorAmt", "P6VendorAmt");
            tableMapping.ColumnMappings.Add("P7VendorAmt", "P7VendorAmt");
            tableMapping.ColumnMappings.Add("P8VendorAmt", "P8VendorAmt");
            tableMapping.ColumnMappings.Add("P9VendorAmt", "P9VendorAmt");
            tableMapping.ColumnMappings.Add("P10VendorAmt", "P10VendorAmt");
            tableMapping.ColumnMappings.Add("P11VendorAmt", "P11VendorAmt");
            tableMapping.ColumnMappings.Add("P12VendorAmt", "P12VendorAmt");
            tableMapping.ColumnMappings.Add("TotalVendorAmt", "TotalVendorAmt");
            tableMapping.ColumnMappings.Add("P1NSAmt", "P1NSAmt");
            tableMapping.ColumnMappings.Add("P2NSAmt", "P2NSAmt");
            tableMapping.ColumnMappings.Add("P3NSAmt", "P3NSAmt");
            tableMapping.ColumnMappings.Add("P4NSAmt", "P4NSAmt");
            tableMapping.ColumnMappings.Add("P5NSAmt", "P5NSAmt");
            tableMapping.ColumnMappings.Add("P6NSAmt", "P6NSAmt");
            tableMapping.ColumnMappings.Add("P7NSAmt", "P7NSAmt");
            tableMapping.ColumnMappings.Add("P8NSAmt", "P8NSAmt");
            tableMapping.ColumnMappings.Add("P9NSAmt", "P9NSAmt");
            tableMapping.ColumnMappings.Add("P10NSAmt", "P10NSAmt");
            tableMapping.ColumnMappings.Add("P11NSAmt", "P11NSAmt");
            tableMapping.ColumnMappings.Add("P12NSAmt", "P12NSAmt");
            tableMapping.ColumnMappings.Add("TotalNSAmt", "TotalNSAmt");
            tableMapping.ColumnMappings.Add("OfficeTotalAmt", "OfficeTotalAmt");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::com.next.isam.reporter.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "          SELECT FiscalYear = x.BudgetYear, x.Office, x.ReasonDesc,\r\n            " +
                "  P1VendorAmt = SUM(ROUND(CASE WHEN x.Period = 1  THEN x.VendorAmt * xr.Exchange" +
                "Rate / xru.ExchangeRate ELSE 0 END, 0)),\r\n              P2VendorAmt = SUM(ROUND(" +
                "CASE WHEN x.Period = 2  THEN x.VendorAmt * xr.ExchangeRate / xru.ExchangeRate EL" +
                "SE 0 END, 0)),\r\n              P3VendorAmt = SUM(ROUND(CASE WHEN x.Period = 3  TH" +
                "EN x.VendorAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n          " +
                "    P4VendorAmt = SUM(ROUND(CASE WHEN x.Period = 4  THEN x.VendorAmt * xr.Exchan" +
                "geRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n              P5VendorAmt = SUM(ROUN" +
                "D(CASE WHEN x.Period = 5  THEN x.VendorAmt * xr.ExchangeRate / xru.ExchangeRate " +
                "ELSE 0 END, 0)),\r\n              P6VendorAmt = SUM(ROUND(CASE WHEN x.Period = 6  " +
                "THEN x.VendorAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n        " +
                "      P7VendorAmt = SUM(ROUND(CASE WHEN x.Period = 7  THEN x.VendorAmt * xr.Exch" +
                "angeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n              P8VendorAmt = SUM(RO" +
                "UND(CASE WHEN x.Period = 8  THEN x.VendorAmt * xr.ExchangeRate / xru.ExchangeRat" +
                "e ELSE 0 END, 0)),\r\n              P9VendorAmt = SUM(ROUND(CASE WHEN x.Period = 9" +
                "  THEN x.VendorAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n      " +
                "        P10VendorAmt = SUM(ROUND(CASE WHEN x.Period = 10 THEN x.VendorAmt * xr.E" +
                "xchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n              P11VendorAmt = SU" +
                "M(ROUND(CASE WHEN x.Period = 11 THEN x.VendorAmt * xr.ExchangeRate / xru.Exchang" +
                "eRate ELSE 0 END, 0)),\r\n              P12VendorAmt = SUM(ROUND(CASE WHEN x.Perio" +
                "d = 12 THEN x.VendorAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n " +
                "             TotalVendorAmt = SUM(ROUND(CASE WHEN x.Period BETWEEN 1 AND 12 THEN" +
                " x.VendorAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n            " +
                "  P1NSAmt = SUM(ROUND(CASE WHEN x.Period = 1  THEN x.NSAmt * xr.ExchangeRate / x" +
                "ru.ExchangeRate ELSE 0 END, 0)),\r\n              P2NSAmt = SUM(ROUND(CASE WHEN x." +
                "Period = 2  THEN x.NSAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n" +
                "              P3NSAmt = SUM(ROUND(CASE WHEN x.Period = 3  THEN x.NSAmt * xr.Exch" +
                "angeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n              P4NSAmt = SUM(ROUND(" +
                "CASE WHEN x.Period = 4  THEN x.NSAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0" +
                " END, 0)),\r\n              P5NSAmt = SUM(ROUND(CASE WHEN x.Period = 5  THEN x.NSA" +
                "mt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n              P6NSAmt " +
                "= SUM(ROUND(CASE WHEN x.Period = 6  THEN x.NSAmt * xr.ExchangeRate / xru.Exchang" +
                "eRate ELSE 0 END, 0)),\r\n              P7NSAmt = SUM(ROUND(CASE WHEN x.Period = 7" +
                "  THEN x.NSAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n          " +
                "    P8NSAmt = SUM(ROUND(CASE WHEN x.Period = 8  THEN x.NSAmt * xr.ExchangeRate /" +
                " xru.ExchangeRate ELSE 0 END, 0)),\r\n              P9NSAmt = SUM(ROUND(CASE WHEN " +
                "x.Period = 9  THEN x.NSAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0))," +
                "\r\n              P10NSAmt = SUM(ROUND(CASE WHEN x.Period = 10 THEN x.NSAmt * xr.E" +
                "xchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n              P11NSAmt = SUM(RO" +
                "UND(CASE WHEN x.Period = 11 THEN x.NSAmt * xr.ExchangeRate / xru.ExchangeRate EL" +
                "SE 0 END, 0)),\r\n              P12NSAmt = SUM(ROUND(CASE WHEN x.Period = 12 THEN " +
                "x.NSAmt * xr.ExchangeRate / xru.ExchangeRate ELSE 0 END, 0)),\r\n              Tot" +
                "alNSAmt = SUM(ROUND(CASE WHEN x.Period BETWEEN 1 AND 12 THEN x.NSAmt * xr.Exchan" +
                "geRate / xru.ExchangeRate ELSE 0 END, 0)), OfficeTotalAmt = 0.0\r\n          FROM\r" +
                "\n              (\r\n                  SELECT afc.BudgetYear, afc.Period, cp.ClaimT" +
                "ypeId,\r\n                      cp.NSAmt, cp.VendorAmt, cp.CurrencyId, cp.Received" +
                "Date, \r\n                      Office = (CASE WHEN cp.OfficeId in (1) AND uc.Term" +
                "OfPurchaseId<>1 THEN \'NMC\' ELSE  (SELECT OfficeCode FROM Office WHERE OfficeId=c" +
                "p.OfficeId) END),\r\n                      r.ReasonDesc\r\n                  FROM\r\n " +
                "                     vw_UKClaimPhasingQAIS AS cp \r\n                      LEFT JO" +
                "IN  nsldb..AccountFinancialCalender AS afc WITH (NOLOCK)ON cp.ReceivedDate BETWE" +
                "EN afc.StartDate AND afc.EndDate\r\n                      LEFT JOIN UKClaim AS uc " +
                "ON uc.ClaimId = cp.ClaimId AND uc.Status = 1\r\n                      LEFT JOIN Co" +
                "ntract AS c ON c.ContractNo = uc.ContractNo\r\n\t\t\tLEFT JOIN nsldb01.qcis.dbo.Claim" +
                "Request AS cr ON cr.RequestId = uc.ClaimRequestId\r\n\t\t\tLEFT JOIN nsldb01.qcis.dbo" +
                ".ClaimReason AS r ON r.ReasonId=cr.FaultReasonId\r\n                  WHERE 1=0\r\n " +
                "             ) as x\r\n              LEFT JOIN ExchangeRate xr  WITH (NOLOCK) ON x" +
                "r.ExchangeRateTypeId = 2  and x.ReceivedDate between xr.EffectiveDateFrom  and x" +
                "r.EffectiveDateTo  and xr.CurrencyId = x.CurrencyId\r\n              LEFT JOIN Exc" +
                "hangeRate xru WITH (NOLOCK) ON xru.ExchangeRateTypeId = 2 and x.ReceivedDate bet" +
                "ween xru.EffectiveDateFrom and xru.EffectiveDateTo and xru.CurrencyId = 3\r\n     " +
                "     GROUP BY\r\n              x.BudgetYear, x.Office, x.ReasonDesc, x.ClaimTypeId" +
                "\r\n          ORDER BY\r\n            x.BudgetYear, x.Office, x.ReasonDesc\r\n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(UKClaimPhasingByOfficeClaimReasonDs.UKClaimPhasingDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual UKClaimPhasingByOfficeClaimReasonDs.UKClaimPhasingDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            UKClaimPhasingByOfficeClaimReasonDs.UKClaimPhasingDataTable dataTable = new UKClaimPhasingByOfficeClaimReasonDs.UKClaimPhasingDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(UKClaimPhasingByOfficeClaimReasonDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(UKClaimPhasingByOfficeClaimReasonDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(UKClaimPhasingByOfficeClaimReasonDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(UKClaimPhasingByOfficeClaimReasonDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591