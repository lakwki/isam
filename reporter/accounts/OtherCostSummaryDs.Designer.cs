//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.reporter.accounts {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OtherCostSummaryDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OtherCostSummaryDs : global::System.Data.DataSet {
        
        private OtherCostSummaryDataTable tableOtherCostSummary;
        
        private OtherCostSunAccountCodeDataTable tableOtherCostSunAccountCode;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OtherCostSummaryDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected OtherCostSummaryDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OtherCostSummary"] != null)) {
                    base.Tables.Add(new OtherCostSummaryDataTable(ds.Tables["OtherCostSummary"]));
                }
                if ((ds.Tables["OtherCostSunAccountCode"] != null)) {
                    base.Tables.Add(new OtherCostSunAccountCodeDataTable(ds.Tables["OtherCostSunAccountCode"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OtherCostSummaryDataTable OtherCostSummary {
            get {
                return this.tableOtherCostSummary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OtherCostSunAccountCodeDataTable OtherCostSunAccountCode {
            get {
                return this.tableOtherCostSunAccountCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            OtherCostSummaryDs cln = ((OtherCostSummaryDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OtherCostSummary"] != null)) {
                    base.Tables.Add(new OtherCostSummaryDataTable(ds.Tables["OtherCostSummary"]));
                }
                if ((ds.Tables["OtherCostSunAccountCode"] != null)) {
                    base.Tables.Add(new OtherCostSunAccountCodeDataTable(ds.Tables["OtherCostSunAccountCode"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableOtherCostSummary = ((OtherCostSummaryDataTable)(base.Tables["OtherCostSummary"]));
            if ((initTable == true)) {
                if ((this.tableOtherCostSummary != null)) {
                    this.tableOtherCostSummary.InitVars();
                }
            }
            this.tableOtherCostSunAccountCode = ((OtherCostSunAccountCodeDataTable)(base.Tables["OtherCostSunAccountCode"]));
            if ((initTable == true)) {
                if ((this.tableOtherCostSunAccountCode != null)) {
                    this.tableOtherCostSunAccountCode.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "OtherCostSummaryDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OtherCostSummaryDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOtherCostSummary = new OtherCostSummaryDataTable();
            base.Tables.Add(this.tableOtherCostSummary);
            this.tableOtherCostSunAccountCode = new OtherCostSunAccountCodeDataTable();
            base.Tables.Add(this.tableOtherCostSunAccountCode);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOtherCostSummary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOtherCostSunAccountCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OtherCostSummaryDs ds = new OtherCostSummaryDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OtherCostSummaryRowChangeEventHandler(object sender, OtherCostSummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OtherCostSunAccountCodeRowChangeEventHandler(object sender, OtherCostSunAccountCodeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OtherCostSummaryDataTable : global::System.Data.TypedTableBase<OtherCostSummaryRow> {
            
            private global::System.Data.DataColumn columnInvoicePrefix;
            
            private global::System.Data.DataColumn columnInvoiceSeq;
            
            private global::System.Data.DataColumn columnInvoiceYear;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnSupplierInvoiceNo;
            
            private global::System.Data.DataColumn columnPiecesPerPack;
            
            private global::System.Data.DataColumn columnContractNo;
            
            private global::System.Data.DataColumn columnDeliveryNo;
            
            private global::System.Data.DataColumn columnTotalShippedQty;
            
            private global::System.Data.DataColumn columnExchangeRate;
            
            private global::System.Data.DataColumn columnRepairCost;
            
            private global::System.Data.DataColumn columnFreightCost;
            
            private global::System.Data.DataColumn columnDutyCost;
            
            private global::System.Data.DataColumn columnBaseExchangeRate;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnSupplier;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnUNIT;
            
            private global::System.Data.DataColumn columnCurrencyCode;
            
            private global::System.Data.DataColumn columnSalesAmount;
            
            private global::System.Data.DataColumn columnSupplierAmount;
            
            private global::System.Data.DataColumn columnPackagingCost;
            
            private global::System.Data.DataColumn columnImportQuotaCharge;
            
            private global::System.Data.DataColumn columnOutsideLabTestCost;
            
            private global::System.Data.DataColumn columnOtherFabricCost;
            
            private global::System.Data.DataColumn columnSellingPriceDiscount;
            
            private global::System.Data.DataColumn columnFactoryPriceDiscount;
            
            private global::System.Data.DataColumn columnWashPrintAndDevelopCost;
            
            private global::System.Data.DataColumn columnTransportationCost;
            
            private global::System.Data.DataColumn columnFragranceCost;
            
            private global::System.Data.DataColumn columnToolingCost;
            
            private global::System.Data.DataColumn columnBaseCurrencyCode;
            
            private global::System.Data.DataColumn columnShipmentId;
            
            private global::System.Data.DataColumn columnSeasonCode;
            
            private global::System.Data.DataColumn columnCoName;
            
            private global::System.Data.DataColumn columnOfficeCode;
            
            private global::System.Data.DataColumn columnDeliveryDatae;
            
            private global::System.Data.DataColumn columnSupplierAmountDiscount;
            
            private global::System.Data.DataColumn columnFOBAmount;
            
            private global::System.Data.DataColumn columnDesignFee;
            
            private global::System.Data.DataColumn columnUKAmountDiscount;
            
            private global::System.Data.DataColumn columnAgencyCommission;
            
            private global::System.Data.DataColumn columnFinanceCost;
            
            private global::System.Data.DataColumn columnAirFreightCost;
            
            private global::System.Data.DataColumn columniNetActualMarginDiff;
            
            private global::System.Data.DataColumn columnKitDevelopment;
            
            private global::System.Data.DataColumn columnRepeatDiscount;
            
            private global::System.Data.DataColumn columnDevelopmentSampleCost;
            
            private global::System.Data.DataColumn columnSampleLengthCost;
            
            private global::System.Data.DataColumn columnFreightForBodycare;
            
            private global::System.Data.DataColumn columnCourierCostForSample;
            
            private global::System.Data.DataColumn columnFabricLiabProvision;
            
            private global::System.Data.DataColumn columnMarginDifference;
            
            private global::System.Data.DataColumn columnRecoveryHomeAndHard;
            
            private global::System.Data.DataColumn columnNTNRecovery;
            
            private global::System.Data.DataColumn columnCoverForQuenbyFabric;
            
            private global::System.Data.DataColumn columnClaimRecovery;
            
            private global::System.Data.DataColumn columnQCCentre;
            
            private global::System.Data.DataColumn columnMailOrderBoxCost;
            
            private global::System.Data.DataColumn columnForwarderCharge;
            
            private global::System.Data.DataColumn columnLicenceCost;
            
            private global::System.Data.DataColumn columnTradingAirFreight;
            
            private global::System.Data.DataColumn columnClaimsRecovery;
            
            private global::System.Data.DataColumn columnCoatingCost;
            
            private global::System.Data.DataColumn columnSlippage;
            
            private global::System.Data.DataColumn columnQCCenterMyanmar;
            
            private global::System.Data.DataColumn columnCMPHandling;
            
            private global::System.Data.DataColumn columnCMPQAComm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSummaryDataTable() {
                this.TableName = "OtherCostSummary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OtherCostSummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OtherCostSummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoicePrefixColumn {
                get {
                    return this.columnInvoicePrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceSeqColumn {
                get {
                    return this.columnInvoiceSeq;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceYearColumn {
                get {
                    return this.columnInvoiceYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierInvoiceNoColumn {
                get {
                    return this.columnSupplierInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PiecesPerPackColumn {
                get {
                    return this.columnPiecesPerPack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractNoColumn {
                get {
                    return this.columnContractNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryNoColumn {
                get {
                    return this.columnDeliveryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedQtyColumn {
                get {
                    return this.columnTotalShippedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExchangeRateColumn {
                get {
                    return this.columnExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RepairCostColumn {
                get {
                    return this.columnRepairCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreightCostColumn {
                get {
                    return this.columnFreightCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DutyCostColumn {
                get {
                    return this.columnDutyCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseExchangeRateColumn {
                get {
                    return this.columnBaseExchangeRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierColumn {
                get {
                    return this.columnSupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNITColumn {
                get {
                    return this.columnUNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyCodeColumn {
                get {
                    return this.columnCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalesAmountColumn {
                get {
                    return this.columnSalesAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierAmountColumn {
                get {
                    return this.columnSupplierAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackagingCostColumn {
                get {
                    return this.columnPackagingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportQuotaChargeColumn {
                get {
                    return this.columnImportQuotaCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutsideLabTestCostColumn {
                get {
                    return this.columnOutsideLabTestCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherFabricCostColumn {
                get {
                    return this.columnOtherFabricCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingPriceDiscountColumn {
                get {
                    return this.columnSellingPriceDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactoryPriceDiscountColumn {
                get {
                    return this.columnFactoryPriceDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WashPrintAndDevelopCostColumn {
                get {
                    return this.columnWashPrintAndDevelopCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransportationCostColumn {
                get {
                    return this.columnTransportationCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FragranceCostColumn {
                get {
                    return this.columnFragranceCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToolingCostColumn {
                get {
                    return this.columnToolingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseCurrencyCodeColumn {
                get {
                    return this.columnBaseCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentIdColumn {
                get {
                    return this.columnShipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeasonCodeColumn {
                get {
                    return this.columnSeasonCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoNameColumn {
                get {
                    return this.columnCoName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeCodeColumn {
                get {
                    return this.columnOfficeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryDataeColumn {
                get {
                    return this.columnDeliveryDatae;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierAmountDiscountColumn {
                get {
                    return this.columnSupplierAmountDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FOBAmountColumn {
                get {
                    return this.columnFOBAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DesignFeeColumn {
                get {
                    return this.columnDesignFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UKAmountDiscountColumn {
                get {
                    return this.columnUKAmountDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgencyCommissionColumn {
                get {
                    return this.columnAgencyCommission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinanceCostColumn {
                get {
                    return this.columnFinanceCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AirFreightCostColumn {
                get {
                    return this.columnAirFreightCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iNetActualMarginDiffColumn {
                get {
                    return this.columniNetActualMarginDiff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KitDevelopmentColumn {
                get {
                    return this.columnKitDevelopment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RepeatDiscountColumn {
                get {
                    return this.columnRepeatDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DevelopmentSampleCostColumn {
                get {
                    return this.columnDevelopmentSampleCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleLengthCostColumn {
                get {
                    return this.columnSampleLengthCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreightForBodycareColumn {
                get {
                    return this.columnFreightForBodycare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourierCostForSampleColumn {
                get {
                    return this.columnCourierCostForSample;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FabricLiabProvisionColumn {
                get {
                    return this.columnFabricLiabProvision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarginDifferenceColumn {
                get {
                    return this.columnMarginDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecoveryHomeAndHardColumn {
                get {
                    return this.columnRecoveryHomeAndHard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NTNRecoveryColumn {
                get {
                    return this.columnNTNRecovery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoverForQuenbyFabricColumn {
                get {
                    return this.columnCoverForQuenbyFabric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClaimRecoveryColumn {
                get {
                    return this.columnClaimRecovery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QCCentreColumn {
                get {
                    return this.columnQCCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MailOrderBoxCostColumn {
                get {
                    return this.columnMailOrderBoxCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForwarderChargeColumn {
                get {
                    return this.columnForwarderCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LicenceCostColumn {
                get {
                    return this.columnLicenceCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingAirFreightColumn {
                get {
                    return this.columnTradingAirFreight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClaimsRecoveryColumn {
                get {
                    return this.columnClaimsRecovery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoatingCostColumn {
                get {
                    return this.columnCoatingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlippageColumn {
                get {
                    return this.columnSlippage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QCCenterMyanmarColumn {
                get {
                    return this.columnQCCenterMyanmar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMPHandlingColumn {
                get {
                    return this.columnCMPHandling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMPQACommColumn {
                get {
                    return this.columnCMPQAComm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSummaryRow this[int index] {
                get {
                    return ((OtherCostSummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OtherCostSummaryRowChangeEventHandler OtherCostSummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OtherCostSummaryRowChangeEventHandler OtherCostSummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OtherCostSummaryRowChangeEventHandler OtherCostSummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OtherCostSummaryRowChangeEventHandler OtherCostSummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOtherCostSummaryRow(OtherCostSummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSummaryRow AddOtherCostSummaryRow(
                        string InvoicePrefix, 
                        int InvoiceSeq, 
                        int InvoiceYear, 
                        System.DateTime InvoiceDate, 
                        string SupplierInvoiceNo, 
                        int PiecesPerPack, 
                        string ContractNo, 
                        int DeliveryNo, 
                        int TotalShippedQty, 
                        decimal ExchangeRate, 
                        decimal RepairCost, 
                        decimal FreightCost, 
                        decimal DutyCost, 
                        decimal BaseExchangeRate, 
                        string InvoiceNo, 
                        string Supplier, 
                        string ProductCode, 
                        string ItemNo, 
                        string UNIT, 
                        string CurrencyCode, 
                        decimal SalesAmount, 
                        decimal SupplierAmount, 
                        decimal PackagingCost, 
                        decimal ImportQuotaCharge, 
                        decimal OutsideLabTestCost, 
                        decimal OtherFabricCost, 
                        decimal SellingPriceDiscount, 
                        decimal FactoryPriceDiscount, 
                        decimal WashPrintAndDevelopCost, 
                        decimal TransportationCost, 
                        decimal FragranceCost, 
                        decimal ToolingCost, 
                        string BaseCurrencyCode, 
                        int ShipmentId, 
                        string SeasonCode, 
                        string CoName, 
                        string OfficeCode, 
                        System.DateTime DeliveryDatae, 
                        decimal SupplierAmountDiscount, 
                        decimal FOBAmount, 
                        decimal DesignFee, 
                        decimal UKAmountDiscount, 
                        decimal AgencyCommission, 
                        decimal FinanceCost, 
                        decimal AirFreightCost, 
                        decimal iNetActualMarginDiff, 
                        decimal KitDevelopment, 
                        decimal RepeatDiscount, 
                        decimal DevelopmentSampleCost, 
                        decimal SampleLengthCost, 
                        decimal FreightForBodycare, 
                        decimal CourierCostForSample, 
                        decimal FabricLiabProvision, 
                        decimal MarginDifference, 
                        decimal RecoveryHomeAndHard, 
                        decimal NTNRecovery, 
                        decimal CoverForQuenbyFabric, 
                        decimal ClaimRecovery, 
                        decimal QCCentre, 
                        decimal MailOrderBoxCost, 
                        decimal ForwarderCharge, 
                        decimal LicenceCost, 
                        decimal TradingAirFreight, 
                        decimal ClaimsRecovery, 
                        decimal CoatingCost, 
                        decimal Slippage, 
                        decimal QCCenterMyanmar, 
                        decimal CMPHandling, 
                        decimal CMPQAComm) {
                OtherCostSummaryRow rowOtherCostSummaryRow = ((OtherCostSummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InvoicePrefix,
                        InvoiceSeq,
                        InvoiceYear,
                        InvoiceDate,
                        SupplierInvoiceNo,
                        PiecesPerPack,
                        ContractNo,
                        DeliveryNo,
                        TotalShippedQty,
                        ExchangeRate,
                        RepairCost,
                        FreightCost,
                        DutyCost,
                        BaseExchangeRate,
                        InvoiceNo,
                        Supplier,
                        ProductCode,
                        ItemNo,
                        UNIT,
                        CurrencyCode,
                        SalesAmount,
                        SupplierAmount,
                        PackagingCost,
                        ImportQuotaCharge,
                        OutsideLabTestCost,
                        OtherFabricCost,
                        SellingPriceDiscount,
                        FactoryPriceDiscount,
                        WashPrintAndDevelopCost,
                        TransportationCost,
                        FragranceCost,
                        ToolingCost,
                        BaseCurrencyCode,
                        ShipmentId,
                        SeasonCode,
                        CoName,
                        OfficeCode,
                        DeliveryDatae,
                        SupplierAmountDiscount,
                        FOBAmount,
                        DesignFee,
                        UKAmountDiscount,
                        AgencyCommission,
                        FinanceCost,
                        AirFreightCost,
                        iNetActualMarginDiff,
                        KitDevelopment,
                        RepeatDiscount,
                        DevelopmentSampleCost,
                        SampleLengthCost,
                        FreightForBodycare,
                        CourierCostForSample,
                        FabricLiabProvision,
                        MarginDifference,
                        RecoveryHomeAndHard,
                        NTNRecovery,
                        CoverForQuenbyFabric,
                        ClaimRecovery,
                        QCCentre,
                        MailOrderBoxCost,
                        ForwarderCharge,
                        LicenceCost,
                        TradingAirFreight,
                        ClaimsRecovery,
                        CoatingCost,
                        Slippage,
                        QCCenterMyanmar,
                        CMPHandling,
                        CMPQAComm};
                rowOtherCostSummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOtherCostSummaryRow);
                return rowOtherCostSummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSummaryRow FindByShipmentId(int ShipmentId) {
                return ((OtherCostSummaryRow)(this.Rows.Find(new object[] {
                            ShipmentId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OtherCostSummaryDataTable cln = ((OtherCostSummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OtherCostSummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInvoicePrefix = base.Columns["InvoicePrefix"];
                this.columnInvoiceSeq = base.Columns["InvoiceSeq"];
                this.columnInvoiceYear = base.Columns["InvoiceYear"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnSupplierInvoiceNo = base.Columns["SupplierInvoiceNo"];
                this.columnPiecesPerPack = base.Columns["PiecesPerPack"];
                this.columnContractNo = base.Columns["ContractNo"];
                this.columnDeliveryNo = base.Columns["DeliveryNo"];
                this.columnTotalShippedQty = base.Columns["TotalShippedQty"];
                this.columnExchangeRate = base.Columns["ExchangeRate"];
                this.columnRepairCost = base.Columns["RepairCost"];
                this.columnFreightCost = base.Columns["FreightCost"];
                this.columnDutyCost = base.Columns["DutyCost"];
                this.columnBaseExchangeRate = base.Columns["BaseExchangeRate"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnSupplier = base.Columns["Supplier"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnUNIT = base.Columns["UNIT"];
                this.columnCurrencyCode = base.Columns["CurrencyCode"];
                this.columnSalesAmount = base.Columns["SalesAmount"];
                this.columnSupplierAmount = base.Columns["SupplierAmount"];
                this.columnPackagingCost = base.Columns["PackagingCost"];
                this.columnImportQuotaCharge = base.Columns["ImportQuotaCharge"];
                this.columnOutsideLabTestCost = base.Columns["OutsideLabTestCost"];
                this.columnOtherFabricCost = base.Columns["OtherFabricCost"];
                this.columnSellingPriceDiscount = base.Columns["SellingPriceDiscount"];
                this.columnFactoryPriceDiscount = base.Columns["FactoryPriceDiscount"];
                this.columnWashPrintAndDevelopCost = base.Columns["WashPrintAndDevelopCost"];
                this.columnTransportationCost = base.Columns["TransportationCost"];
                this.columnFragranceCost = base.Columns["FragranceCost"];
                this.columnToolingCost = base.Columns["ToolingCost"];
                this.columnBaseCurrencyCode = base.Columns["BaseCurrencyCode"];
                this.columnShipmentId = base.Columns["ShipmentId"];
                this.columnSeasonCode = base.Columns["SeasonCode"];
                this.columnCoName = base.Columns["CoName"];
                this.columnOfficeCode = base.Columns["OfficeCode"];
                this.columnDeliveryDatae = base.Columns["DeliveryDatae"];
                this.columnSupplierAmountDiscount = base.Columns["SupplierAmountDiscount"];
                this.columnFOBAmount = base.Columns["FOBAmount"];
                this.columnDesignFee = base.Columns["DesignFee"];
                this.columnUKAmountDiscount = base.Columns["UKAmountDiscount"];
                this.columnAgencyCommission = base.Columns["AgencyCommission"];
                this.columnFinanceCost = base.Columns["FinanceCost"];
                this.columnAirFreightCost = base.Columns["AirFreightCost"];
                this.columniNetActualMarginDiff = base.Columns["iNetActualMarginDiff"];
                this.columnKitDevelopment = base.Columns["KitDevelopment"];
                this.columnRepeatDiscount = base.Columns["RepeatDiscount"];
                this.columnDevelopmentSampleCost = base.Columns["DevelopmentSampleCost"];
                this.columnSampleLengthCost = base.Columns["SampleLengthCost"];
                this.columnFreightForBodycare = base.Columns["FreightForBodycare"];
                this.columnCourierCostForSample = base.Columns["CourierCostForSample"];
                this.columnFabricLiabProvision = base.Columns["FabricLiabProvision"];
                this.columnMarginDifference = base.Columns["MarginDifference"];
                this.columnRecoveryHomeAndHard = base.Columns["RecoveryHomeAndHard"];
                this.columnNTNRecovery = base.Columns["NTNRecovery"];
                this.columnCoverForQuenbyFabric = base.Columns["CoverForQuenbyFabric"];
                this.columnClaimRecovery = base.Columns["ClaimRecovery"];
                this.columnQCCentre = base.Columns["QCCentre"];
                this.columnMailOrderBoxCost = base.Columns["MailOrderBoxCost"];
                this.columnForwarderCharge = base.Columns["ForwarderCharge"];
                this.columnLicenceCost = base.Columns["LicenceCost"];
                this.columnTradingAirFreight = base.Columns["TradingAirFreight"];
                this.columnClaimsRecovery = base.Columns["ClaimsRecovery"];
                this.columnCoatingCost = base.Columns["CoatingCost"];
                this.columnSlippage = base.Columns["Slippage"];
                this.columnQCCenterMyanmar = base.Columns["QCCenterMyanmar"];
                this.columnCMPHandling = base.Columns["CMPHandling"];
                this.columnCMPQAComm = base.Columns["CMPQAComm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInvoicePrefix = new global::System.Data.DataColumn("InvoicePrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoicePrefix);
                this.columnInvoiceSeq = new global::System.Data.DataColumn("InvoiceSeq", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceSeq);
                this.columnInvoiceYear = new global::System.Data.DataColumn("InvoiceYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceYear);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnSupplierInvoiceNo = new global::System.Data.DataColumn("SupplierInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierInvoiceNo);
                this.columnPiecesPerPack = new global::System.Data.DataColumn("PiecesPerPack", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPiecesPerPack);
                this.columnContractNo = new global::System.Data.DataColumn("ContractNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractNo);
                this.columnDeliveryNo = new global::System.Data.DataColumn("DeliveryNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryNo);
                this.columnTotalShippedQty = new global::System.Data.DataColumn("TotalShippedQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedQty);
                this.columnExchangeRate = new global::System.Data.DataColumn("ExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRate);
                this.columnRepairCost = new global::System.Data.DataColumn("RepairCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairCost);
                this.columnFreightCost = new global::System.Data.DataColumn("FreightCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightCost);
                this.columnDutyCost = new global::System.Data.DataColumn("DutyCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyCost);
                this.columnBaseExchangeRate = new global::System.Data.DataColumn("BaseExchangeRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseExchangeRate);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnSupplier = new global::System.Data.DataColumn("Supplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplier);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnUNIT = new global::System.Data.DataColumn("UNIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT);
                this.columnCurrencyCode = new global::System.Data.DataColumn("CurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyCode);
                this.columnSalesAmount = new global::System.Data.DataColumn("SalesAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesAmount);
                this.columnSupplierAmount = new global::System.Data.DataColumn("SupplierAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierAmount);
                this.columnPackagingCost = new global::System.Data.DataColumn("PackagingCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackagingCost);
                this.columnImportQuotaCharge = new global::System.Data.DataColumn("ImportQuotaCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportQuotaCharge);
                this.columnOutsideLabTestCost = new global::System.Data.DataColumn("OutsideLabTestCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutsideLabTestCost);
                this.columnOtherFabricCost = new global::System.Data.DataColumn("OtherFabricCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherFabricCost);
                this.columnSellingPriceDiscount = new global::System.Data.DataColumn("SellingPriceDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingPriceDiscount);
                this.columnFactoryPriceDiscount = new global::System.Data.DataColumn("FactoryPriceDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactoryPriceDiscount);
                this.columnWashPrintAndDevelopCost = new global::System.Data.DataColumn("WashPrintAndDevelopCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWashPrintAndDevelopCost);
                this.columnTransportationCost = new global::System.Data.DataColumn("TransportationCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportationCost);
                this.columnFragranceCost = new global::System.Data.DataColumn("FragranceCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFragranceCost);
                this.columnToolingCost = new global::System.Data.DataColumn("ToolingCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToolingCost);
                this.columnBaseCurrencyCode = new global::System.Data.DataColumn("BaseCurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseCurrencyCode);
                this.columnShipmentId = new global::System.Data.DataColumn("ShipmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentId);
                this.columnSeasonCode = new global::System.Data.DataColumn("SeasonCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeasonCode);
                this.columnCoName = new global::System.Data.DataColumn("CoName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoName);
                this.columnOfficeCode = new global::System.Data.DataColumn("OfficeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeCode);
                this.columnDeliveryDatae = new global::System.Data.DataColumn("DeliveryDatae", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDatae);
                this.columnSupplierAmountDiscount = new global::System.Data.DataColumn("SupplierAmountDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierAmountDiscount);
                this.columnFOBAmount = new global::System.Data.DataColumn("FOBAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOBAmount);
                this.columnDesignFee = new global::System.Data.DataColumn("DesignFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignFee);
                this.columnUKAmountDiscount = new global::System.Data.DataColumn("UKAmountDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUKAmountDiscount);
                this.columnAgencyCommission = new global::System.Data.DataColumn("AgencyCommission", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyCommission);
                this.columnFinanceCost = new global::System.Data.DataColumn("FinanceCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinanceCost);
                this.columnAirFreightCost = new global::System.Data.DataColumn("AirFreightCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAirFreightCost);
                this.columniNetActualMarginDiff = new global::System.Data.DataColumn("iNetActualMarginDiff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniNetActualMarginDiff);
                this.columnKitDevelopment = new global::System.Data.DataColumn("KitDevelopment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKitDevelopment);
                this.columnRepeatDiscount = new global::System.Data.DataColumn("RepeatDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepeatDiscount);
                this.columnDevelopmentSampleCost = new global::System.Data.DataColumn("DevelopmentSampleCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDevelopmentSampleCost);
                this.columnSampleLengthCost = new global::System.Data.DataColumn("SampleLengthCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleLengthCost);
                this.columnFreightForBodycare = new global::System.Data.DataColumn("FreightForBodycare", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightForBodycare);
                this.columnCourierCostForSample = new global::System.Data.DataColumn("CourierCostForSample", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourierCostForSample);
                this.columnFabricLiabProvision = new global::System.Data.DataColumn("FabricLiabProvision", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabricLiabProvision);
                this.columnMarginDifference = new global::System.Data.DataColumn("MarginDifference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginDifference);
                this.columnRecoveryHomeAndHard = new global::System.Data.DataColumn("RecoveryHomeAndHard", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecoveryHomeAndHard);
                this.columnNTNRecovery = new global::System.Data.DataColumn("NTNRecovery", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTNRecovery);
                this.columnCoverForQuenbyFabric = new global::System.Data.DataColumn("CoverForQuenbyFabric", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoverForQuenbyFabric);
                this.columnClaimRecovery = new global::System.Data.DataColumn("ClaimRecovery", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimRecovery);
                this.columnQCCentre = new global::System.Data.DataColumn("QCCentre", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCCentre);
                this.columnMailOrderBoxCost = new global::System.Data.DataColumn("MailOrderBoxCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailOrderBoxCost);
                this.columnForwarderCharge = new global::System.Data.DataColumn("ForwarderCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForwarderCharge);
                this.columnLicenceCost = new global::System.Data.DataColumn("LicenceCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenceCost);
                this.columnTradingAirFreight = new global::System.Data.DataColumn("TradingAirFreight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingAirFreight);
                this.columnClaimsRecovery = new global::System.Data.DataColumn("ClaimsRecovery", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimsRecovery);
                this.columnCoatingCost = new global::System.Data.DataColumn("CoatingCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoatingCost);
                this.columnSlippage = new global::System.Data.DataColumn("Slippage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlippage);
                this.columnQCCenterMyanmar = new global::System.Data.DataColumn("QCCenterMyanmar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCCenterMyanmar);
                this.columnCMPHandling = new global::System.Data.DataColumn("CMPHandling", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMPHandling);
                this.columnCMPQAComm = new global::System.Data.DataColumn("CMPQAComm", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMPQAComm);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnShipmentId}, true));
                this.columnInvoicePrefix.MaxLength = 50;
                this.columnSupplierInvoiceNo.MaxLength = 80;
                this.columnPiecesPerPack.AllowDBNull = false;
                this.columnContractNo.AllowDBNull = false;
                this.columnContractNo.MaxLength = 50;
                this.columnDeliveryNo.AllowDBNull = false;
                this.columnTotalShippedQty.AllowDBNull = false;
                this.columnExchangeRate.AllowDBNull = false;
                this.columnRepairCost.ReadOnly = true;
                this.columnFreightCost.ReadOnly = true;
                this.columnDutyCost.ReadOnly = true;
                this.columnBaseExchangeRate.AllowDBNull = false;
                this.columnBaseExchangeRate.ReadOnly = true;
                this.columnInvoiceNo.ReadOnly = true;
                this.columnInvoiceNo.MaxLength = 15;
                this.columnSupplier.ReadOnly = true;
                this.columnSupplier.MaxLength = 100;
                this.columnProductCode.ReadOnly = true;
                this.columnItemNo.ReadOnly = true;
                this.columnItemNo.MaxLength = 15;
                this.columnUNIT.ReadOnly = true;
                this.columnUNIT.MaxLength = 50;
                this.columnCurrencyCode.ReadOnly = true;
                this.columnCurrencyCode.MaxLength = 10;
                this.columnSalesAmount.AllowDBNull = false;
                this.columnSupplierAmount.AllowDBNull = false;
                this.columnPackagingCost.ReadOnly = true;
                this.columnImportQuotaCharge.ReadOnly = true;
                this.columnOutsideLabTestCost.ReadOnly = true;
                this.columnOtherFabricCost.ReadOnly = true;
                this.columnSellingPriceDiscount.ReadOnly = true;
                this.columnFactoryPriceDiscount.ReadOnly = true;
                this.columnWashPrintAndDevelopCost.ReadOnly = true;
                this.columnTransportationCost.ReadOnly = true;
                this.columnFragranceCost.ReadOnly = true;
                this.columnToolingCost.ReadOnly = true;
                this.columnBaseCurrencyCode.ReadOnly = true;
                this.columnBaseCurrencyCode.MaxLength = 10;
                this.columnShipmentId.AllowDBNull = false;
                this.columnShipmentId.Unique = true;
                this.columnSeasonCode.ReadOnly = true;
                this.columnSeasonCode.MaxLength = 10;
                this.columnCoName.ReadOnly = true;
                this.columnCoName.MaxLength = 30;
                this.columnOfficeCode.ReadOnly = true;
                this.columnOfficeCode.MaxLength = 5;
                this.columnDeliveryDatae.ReadOnly = true;
                this.columnSupplierAmountDiscount.AllowDBNull = false;
                this.columnFOBAmount.AllowDBNull = false;
                this.columnUKAmountDiscount.AllowDBNull = false;
                this.columnRepeatDiscount.ReadOnly = true;
                this.columnDevelopmentSampleCost.ReadOnly = true;
                this.columnSampleLengthCost.ReadOnly = true;
                this.columnFreightForBodycare.ReadOnly = true;
                this.columnCourierCostForSample.ReadOnly = true;
                this.columnFabricLiabProvision.ReadOnly = true;
                this.columnMarginDifference.ReadOnly = true;
                this.columnRecoveryHomeAndHard.ReadOnly = true;
                this.columnNTNRecovery.ReadOnly = true;
                this.columnCoverForQuenbyFabric.ReadOnly = true;
                this.columnClaimRecovery.ReadOnly = true;
                this.columnQCCentre.ReadOnly = true;
                this.columnMailOrderBoxCost.ReadOnly = true;
                this.columnForwarderCharge.ReadOnly = true;
                this.columnLicenceCost.ReadOnly = true;
                this.columnTradingAirFreight.ReadOnly = true;
                this.columnClaimsRecovery.ReadOnly = true;
                this.columnCoatingCost.ReadOnly = true;
                this.columnSlippage.ReadOnly = true;
                this.columnQCCenterMyanmar.ReadOnly = true;
                this.columnCMPHandling.ReadOnly = true;
                this.columnCMPQAComm.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSummaryRow NewOtherCostSummaryRow() {
                return ((OtherCostSummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OtherCostSummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OtherCostSummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OtherCostSummaryRowChanged != null)) {
                    this.OtherCostSummaryRowChanged(this, new OtherCostSummaryRowChangeEvent(((OtherCostSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OtherCostSummaryRowChanging != null)) {
                    this.OtherCostSummaryRowChanging(this, new OtherCostSummaryRowChangeEvent(((OtherCostSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OtherCostSummaryRowDeleted != null)) {
                    this.OtherCostSummaryRowDeleted(this, new OtherCostSummaryRowChangeEvent(((OtherCostSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OtherCostSummaryRowDeleting != null)) {
                    this.OtherCostSummaryRowDeleting(this, new OtherCostSummaryRowChangeEvent(((OtherCostSummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOtherCostSummaryRow(OtherCostSummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OtherCostSummaryDs ds = new OtherCostSummaryDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OtherCostSummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OtherCostSunAccountCodeDataTable : global::System.Data.TypedTableBase<OtherCostSunAccountCodeRow> {
            
            private global::System.Data.DataColumn columnPackagingCost;
            
            private global::System.Data.DataColumn columnImportQuotaCharge;
            
            private global::System.Data.DataColumn columnExportQuotaCharge;
            
            private global::System.Data.DataColumn columnRepairCost;
            
            private global::System.Data.DataColumn columnOutsideLabTestCost;
            
            private global::System.Data.DataColumn columnOtherFabricCost;
            
            private global::System.Data.DataColumn columnSellingPrxDiscount;
            
            private global::System.Data.DataColumn columnFtyPrxDiscount;
            
            private global::System.Data.DataColumn columnWashingPrintAndDevCost;
            
            private global::System.Data.DataColumn columnFreightCost;
            
            private global::System.Data.DataColumn columnDutyCost;
            
            private global::System.Data.DataColumn columnTransportationCost;
            
            private global::System.Data.DataColumn columnFragranceCost;
            
            private global::System.Data.DataColumn columnToolingCost;
            
            private global::System.Data.DataColumn columnDesignFee;
            
            private global::System.Data.DataColumn columnAgencyCommission;
            
            private global::System.Data.DataColumn columniNetActualMarginDiff;
            
            private global::System.Data.DataColumn columnProvisionOfClaims;
            
            private global::System.Data.DataColumn columnFinanceCost;
            
            private global::System.Data.DataColumn columnAirFreightCost;
            
            private global::System.Data.DataColumn columnKitDevelopment;
            
            private global::System.Data.DataColumn columnFabricLiabProvision;
            
            private global::System.Data.DataColumn columnRepeatDiscount;
            
            private global::System.Data.DataColumn columnDevelopmentSampleCost;
            
            private global::System.Data.DataColumn columnSampleLengthCost;
            
            private global::System.Data.DataColumn columnFreightForBodycare;
            
            private global::System.Data.DataColumn columnCourierCostsForSample;
            
            private global::System.Data.DataColumn columnMarginDifference;
            
            private global::System.Data.DataColumn columnRecoveryHomeAndHard;
            
            private global::System.Data.DataColumn columnNTNRecovery;
            
            private global::System.Data.DataColumn columnCoverForQuenbyFabric;
            
            private global::System.Data.DataColumn columnClaimRecovery;
            
            private global::System.Data.DataColumn columnQCCentre;
            
            private global::System.Data.DataColumn columnMailOrderBoxCost;
            
            private global::System.Data.DataColumn columnForwarderCharge;
            
            private global::System.Data.DataColumn columnLicenceCost;
            
            private global::System.Data.DataColumn columnTradingAirFreight;
            
            private global::System.Data.DataColumn columnClaimsRecovery;
            
            private global::System.Data.DataColumn columnCoatingCost;
            
            private global::System.Data.DataColumn columnSlippage;
            
            private global::System.Data.DataColumn columnQCCenterMyanmar;
            
            private global::System.Data.DataColumn columnCMPHandling;
            
            private global::System.Data.DataColumn columnCMPQAComm;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSunAccountCodeDataTable() {
                this.TableName = "OtherCostSunAccountCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OtherCostSunAccountCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OtherCostSunAccountCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackagingCostColumn {
                get {
                    return this.columnPackagingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImportQuotaChargeColumn {
                get {
                    return this.columnImportQuotaCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExportQuotaChargeColumn {
                get {
                    return this.columnExportQuotaCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RepairCostColumn {
                get {
                    return this.columnRepairCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutsideLabTestCostColumn {
                get {
                    return this.columnOutsideLabTestCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherFabricCostColumn {
                get {
                    return this.columnOtherFabricCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingPrxDiscountColumn {
                get {
                    return this.columnSellingPrxDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FtyPrxDiscountColumn {
                get {
                    return this.columnFtyPrxDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WashingPrintAndDevCostColumn {
                get {
                    return this.columnWashingPrintAndDevCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreightCostColumn {
                get {
                    return this.columnFreightCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DutyCostColumn {
                get {
                    return this.columnDutyCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransportationCostColumn {
                get {
                    return this.columnTransportationCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FragranceCostColumn {
                get {
                    return this.columnFragranceCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToolingCostColumn {
                get {
                    return this.columnToolingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DesignFeeColumn {
                get {
                    return this.columnDesignFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgencyCommissionColumn {
                get {
                    return this.columnAgencyCommission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn iNetActualMarginDiffColumn {
                get {
                    return this.columniNetActualMarginDiff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProvisionOfClaimsColumn {
                get {
                    return this.columnProvisionOfClaims;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinanceCostColumn {
                get {
                    return this.columnFinanceCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AirFreightCostColumn {
                get {
                    return this.columnAirFreightCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KitDevelopmentColumn {
                get {
                    return this.columnKitDevelopment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FabricLiabProvisionColumn {
                get {
                    return this.columnFabricLiabProvision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RepeatDiscountColumn {
                get {
                    return this.columnRepeatDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DevelopmentSampleCostColumn {
                get {
                    return this.columnDevelopmentSampleCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleLengthCostColumn {
                get {
                    return this.columnSampleLengthCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FreightForBodycareColumn {
                get {
                    return this.columnFreightForBodycare;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourierCostsForSampleColumn {
                get {
                    return this.columnCourierCostsForSample;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarginDifferenceColumn {
                get {
                    return this.columnMarginDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecoveryHomeAndHardColumn {
                get {
                    return this.columnRecoveryHomeAndHard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NTNRecoveryColumn {
                get {
                    return this.columnNTNRecovery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoverForQuenbyFabricColumn {
                get {
                    return this.columnCoverForQuenbyFabric;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClaimRecoveryColumn {
                get {
                    return this.columnClaimRecovery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QCCentreColumn {
                get {
                    return this.columnQCCentre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MailOrderBoxCostColumn {
                get {
                    return this.columnMailOrderBoxCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForwarderChargeColumn {
                get {
                    return this.columnForwarderCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LicenceCostColumn {
                get {
                    return this.columnLicenceCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingAirFreightColumn {
                get {
                    return this.columnTradingAirFreight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClaimsRecoveryColumn {
                get {
                    return this.columnClaimsRecovery;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoatingCostColumn {
                get {
                    return this.columnCoatingCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlippageColumn {
                get {
                    return this.columnSlippage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QCCenterMyanmarColumn {
                get {
                    return this.columnQCCenterMyanmar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMPHandlingColumn {
                get {
                    return this.columnCMPHandling;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CMPQACommColumn {
                get {
                    return this.columnCMPQAComm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSunAccountCodeRow this[int index] {
                get {
                    return ((OtherCostSunAccountCodeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OtherCostSunAccountCodeRowChangeEventHandler OtherCostSunAccountCodeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OtherCostSunAccountCodeRowChangeEventHandler OtherCostSunAccountCodeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OtherCostSunAccountCodeRowChangeEventHandler OtherCostSunAccountCodeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OtherCostSunAccountCodeRowChangeEventHandler OtherCostSunAccountCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOtherCostSunAccountCodeRow(OtherCostSunAccountCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSunAccountCodeRow AddOtherCostSunAccountCodeRow(
                        string PackagingCost, 
                        string ImportQuotaCharge, 
                        string ExportQuotaCharge, 
                        string RepairCost, 
                        string OutsideLabTestCost, 
                        string OtherFabricCost, 
                        string SellingPrxDiscount, 
                        string FtyPrxDiscount, 
                        string WashingPrintAndDevCost, 
                        string FreightCost, 
                        string DutyCost, 
                        string TransportationCost, 
                        string FragranceCost, 
                        string ToolingCost, 
                        string DesignFee, 
                        string AgencyCommission, 
                        string iNetActualMarginDiff, 
                        string ProvisionOfClaims, 
                        string FinanceCost, 
                        string AirFreightCost, 
                        string KitDevelopment, 
                        string FabricLiabProvision, 
                        string RepeatDiscount, 
                        string DevelopmentSampleCost, 
                        string SampleLengthCost, 
                        string FreightForBodycare, 
                        string CourierCostsForSample, 
                        string MarginDifference, 
                        string RecoveryHomeAndHard, 
                        string NTNRecovery, 
                        string CoverForQuenbyFabric, 
                        string ClaimRecovery, 
                        string QCCentre, 
                        string MailOrderBoxCost, 
                        string ForwarderCharge, 
                        string LicenceCost, 
                        string TradingAirFreight, 
                        string ClaimsRecovery, 
                        string CoatingCost, 
                        string Slippage, 
                        string QCCenterMyanmar, 
                        string CMPHandling, 
                        string CMPQAComm) {
                OtherCostSunAccountCodeRow rowOtherCostSunAccountCodeRow = ((OtherCostSunAccountCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PackagingCost,
                        ImportQuotaCharge,
                        ExportQuotaCharge,
                        RepairCost,
                        OutsideLabTestCost,
                        OtherFabricCost,
                        SellingPrxDiscount,
                        FtyPrxDiscount,
                        WashingPrintAndDevCost,
                        FreightCost,
                        DutyCost,
                        TransportationCost,
                        FragranceCost,
                        ToolingCost,
                        DesignFee,
                        AgencyCommission,
                        iNetActualMarginDiff,
                        ProvisionOfClaims,
                        FinanceCost,
                        AirFreightCost,
                        KitDevelopment,
                        FabricLiabProvision,
                        RepeatDiscount,
                        DevelopmentSampleCost,
                        SampleLengthCost,
                        FreightForBodycare,
                        CourierCostsForSample,
                        MarginDifference,
                        RecoveryHomeAndHard,
                        NTNRecovery,
                        CoverForQuenbyFabric,
                        ClaimRecovery,
                        QCCentre,
                        MailOrderBoxCost,
                        ForwarderCharge,
                        LicenceCost,
                        TradingAirFreight,
                        ClaimsRecovery,
                        CoatingCost,
                        Slippage,
                        QCCenterMyanmar,
                        CMPHandling,
                        CMPQAComm};
                rowOtherCostSunAccountCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOtherCostSunAccountCodeRow);
                return rowOtherCostSunAccountCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OtherCostSunAccountCodeDataTable cln = ((OtherCostSunAccountCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OtherCostSunAccountCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPackagingCost = base.Columns["PackagingCost"];
                this.columnImportQuotaCharge = base.Columns["ImportQuotaCharge"];
                this.columnExportQuotaCharge = base.Columns["ExportQuotaCharge"];
                this.columnRepairCost = base.Columns["RepairCost"];
                this.columnOutsideLabTestCost = base.Columns["OutsideLabTestCost"];
                this.columnOtherFabricCost = base.Columns["OtherFabricCost"];
                this.columnSellingPrxDiscount = base.Columns["SellingPrxDiscount"];
                this.columnFtyPrxDiscount = base.Columns["FtyPrxDiscount"];
                this.columnWashingPrintAndDevCost = base.Columns["WashingPrintAndDevCost"];
                this.columnFreightCost = base.Columns["FreightCost"];
                this.columnDutyCost = base.Columns["DutyCost"];
                this.columnTransportationCost = base.Columns["TransportationCost"];
                this.columnFragranceCost = base.Columns["FragranceCost"];
                this.columnToolingCost = base.Columns["ToolingCost"];
                this.columnDesignFee = base.Columns["DesignFee"];
                this.columnAgencyCommission = base.Columns["AgencyCommission"];
                this.columniNetActualMarginDiff = base.Columns["iNetActualMarginDiff"];
                this.columnProvisionOfClaims = base.Columns["ProvisionOfClaims"];
                this.columnFinanceCost = base.Columns["FinanceCost"];
                this.columnAirFreightCost = base.Columns["AirFreightCost"];
                this.columnKitDevelopment = base.Columns["KitDevelopment"];
                this.columnFabricLiabProvision = base.Columns["FabricLiabProvision"];
                this.columnRepeatDiscount = base.Columns["RepeatDiscount"];
                this.columnDevelopmentSampleCost = base.Columns["DevelopmentSampleCost"];
                this.columnSampleLengthCost = base.Columns["SampleLengthCost"];
                this.columnFreightForBodycare = base.Columns["FreightForBodycare"];
                this.columnCourierCostsForSample = base.Columns["CourierCostsForSample"];
                this.columnMarginDifference = base.Columns["MarginDifference"];
                this.columnRecoveryHomeAndHard = base.Columns["RecoveryHomeAndHard"];
                this.columnNTNRecovery = base.Columns["NTNRecovery"];
                this.columnCoverForQuenbyFabric = base.Columns["CoverForQuenbyFabric"];
                this.columnClaimRecovery = base.Columns["ClaimRecovery"];
                this.columnQCCentre = base.Columns["QCCentre"];
                this.columnMailOrderBoxCost = base.Columns["MailOrderBoxCost"];
                this.columnForwarderCharge = base.Columns["ForwarderCharge"];
                this.columnLicenceCost = base.Columns["LicenceCost"];
                this.columnTradingAirFreight = base.Columns["TradingAirFreight"];
                this.columnClaimsRecovery = base.Columns["ClaimsRecovery"];
                this.columnCoatingCost = base.Columns["CoatingCost"];
                this.columnSlippage = base.Columns["Slippage"];
                this.columnQCCenterMyanmar = base.Columns["QCCenterMyanmar"];
                this.columnCMPHandling = base.Columns["CMPHandling"];
                this.columnCMPQAComm = base.Columns["CMPQAComm"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPackagingCost = new global::System.Data.DataColumn("PackagingCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackagingCost);
                this.columnImportQuotaCharge = new global::System.Data.DataColumn("ImportQuotaCharge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportQuotaCharge);
                this.columnExportQuotaCharge = new global::System.Data.DataColumn("ExportQuotaCharge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExportQuotaCharge);
                this.columnRepairCost = new global::System.Data.DataColumn("RepairCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepairCost);
                this.columnOutsideLabTestCost = new global::System.Data.DataColumn("OutsideLabTestCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutsideLabTestCost);
                this.columnOtherFabricCost = new global::System.Data.DataColumn("OtherFabricCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherFabricCost);
                this.columnSellingPrxDiscount = new global::System.Data.DataColumn("SellingPrxDiscount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingPrxDiscount);
                this.columnFtyPrxDiscount = new global::System.Data.DataColumn("FtyPrxDiscount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFtyPrxDiscount);
                this.columnWashingPrintAndDevCost = new global::System.Data.DataColumn("WashingPrintAndDevCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWashingPrintAndDevCost);
                this.columnFreightCost = new global::System.Data.DataColumn("FreightCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightCost);
                this.columnDutyCost = new global::System.Data.DataColumn("DutyCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDutyCost);
                this.columnTransportationCost = new global::System.Data.DataColumn("TransportationCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportationCost);
                this.columnFragranceCost = new global::System.Data.DataColumn("FragranceCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFragranceCost);
                this.columnToolingCost = new global::System.Data.DataColumn("ToolingCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToolingCost);
                this.columnDesignFee = new global::System.Data.DataColumn("DesignFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesignFee);
                this.columnAgencyCommission = new global::System.Data.DataColumn("AgencyCommission", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyCommission);
                this.columniNetActualMarginDiff = new global::System.Data.DataColumn("iNetActualMarginDiff", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniNetActualMarginDiff);
                this.columnProvisionOfClaims = new global::System.Data.DataColumn("ProvisionOfClaims", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvisionOfClaims);
                this.columnFinanceCost = new global::System.Data.DataColumn("FinanceCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinanceCost);
                this.columnAirFreightCost = new global::System.Data.DataColumn("AirFreightCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAirFreightCost);
                this.columnKitDevelopment = new global::System.Data.DataColumn("KitDevelopment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKitDevelopment);
                this.columnFabricLiabProvision = new global::System.Data.DataColumn("FabricLiabProvision", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFabricLiabProvision);
                this.columnRepeatDiscount = new global::System.Data.DataColumn("RepeatDiscount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepeatDiscount);
                this.columnDevelopmentSampleCost = new global::System.Data.DataColumn("DevelopmentSampleCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDevelopmentSampleCost);
                this.columnSampleLengthCost = new global::System.Data.DataColumn("SampleLengthCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleLengthCost);
                this.columnFreightForBodycare = new global::System.Data.DataColumn("FreightForBodycare", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightForBodycare);
                this.columnCourierCostsForSample = new global::System.Data.DataColumn("CourierCostsForSample", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourierCostsForSample);
                this.columnMarginDifference = new global::System.Data.DataColumn("MarginDifference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarginDifference);
                this.columnRecoveryHomeAndHard = new global::System.Data.DataColumn("RecoveryHomeAndHard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecoveryHomeAndHard);
                this.columnNTNRecovery = new global::System.Data.DataColumn("NTNRecovery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNTNRecovery);
                this.columnCoverForQuenbyFabric = new global::System.Data.DataColumn("CoverForQuenbyFabric", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoverForQuenbyFabric);
                this.columnClaimRecovery = new global::System.Data.DataColumn("ClaimRecovery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimRecovery);
                this.columnQCCentre = new global::System.Data.DataColumn("QCCentre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCCentre);
                this.columnMailOrderBoxCost = new global::System.Data.DataColumn("MailOrderBoxCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailOrderBoxCost);
                this.columnForwarderCharge = new global::System.Data.DataColumn("ForwarderCharge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForwarderCharge);
                this.columnLicenceCost = new global::System.Data.DataColumn("LicenceCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenceCost);
                this.columnTradingAirFreight = new global::System.Data.DataColumn("TradingAirFreight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingAirFreight);
                this.columnClaimsRecovery = new global::System.Data.DataColumn("ClaimsRecovery", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClaimsRecovery);
                this.columnCoatingCost = new global::System.Data.DataColumn("CoatingCost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoatingCost);
                this.columnSlippage = new global::System.Data.DataColumn("Slippage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlippage);
                this.columnQCCenterMyanmar = new global::System.Data.DataColumn("QCCenterMyanmar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQCCenterMyanmar);
                this.columnCMPHandling = new global::System.Data.DataColumn("CMPHandling", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMPHandling);
                this.columnCMPQAComm = new global::System.Data.DataColumn("CMPQAComm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCMPQAComm);
                this.columnPackagingCost.ReadOnly = true;
                this.columnPackagingCost.MaxLength = 10;
                this.columnImportQuotaCharge.ReadOnly = true;
                this.columnImportQuotaCharge.MaxLength = 10;
                this.columnExportQuotaCharge.ReadOnly = true;
                this.columnExportQuotaCharge.MaxLength = 10;
                this.columnRepairCost.ReadOnly = true;
                this.columnRepairCost.MaxLength = 10;
                this.columnOutsideLabTestCost.ReadOnly = true;
                this.columnOutsideLabTestCost.MaxLength = 10;
                this.columnOtherFabricCost.ReadOnly = true;
                this.columnOtherFabricCost.MaxLength = 10;
                this.columnSellingPrxDiscount.ReadOnly = true;
                this.columnSellingPrxDiscount.MaxLength = 10;
                this.columnFtyPrxDiscount.ReadOnly = true;
                this.columnFtyPrxDiscount.MaxLength = 10;
                this.columnWashingPrintAndDevCost.ReadOnly = true;
                this.columnWashingPrintAndDevCost.MaxLength = 10;
                this.columnFreightCost.ReadOnly = true;
                this.columnFreightCost.MaxLength = 10;
                this.columnDutyCost.ReadOnly = true;
                this.columnDutyCost.MaxLength = 10;
                this.columnTransportationCost.ReadOnly = true;
                this.columnTransportationCost.MaxLength = 10;
                this.columnFragranceCost.ReadOnly = true;
                this.columnFragranceCost.MaxLength = 10;
                this.columnToolingCost.ReadOnly = true;
                this.columnToolingCost.MaxLength = 10;
                this.columnDesignFee.ReadOnly = true;
                this.columnDesignFee.MaxLength = 10;
                this.columnAgencyCommission.ReadOnly = true;
                this.columnAgencyCommission.MaxLength = 10;
                this.columniNetActualMarginDiff.ReadOnly = true;
                this.columniNetActualMarginDiff.MaxLength = 10;
                this.columnProvisionOfClaims.ReadOnly = true;
                this.columnProvisionOfClaims.MaxLength = 10;
                this.columnFinanceCost.ReadOnly = true;
                this.columnFinanceCost.MaxLength = 10;
                this.columnAirFreightCost.ReadOnly = true;
                this.columnAirFreightCost.MaxLength = 10;
                this.columnKitDevelopment.ReadOnly = true;
                this.columnKitDevelopment.MaxLength = 10;
                this.columnFabricLiabProvision.ReadOnly = true;
                this.columnFabricLiabProvision.MaxLength = 10;
                this.columnRepeatDiscount.ReadOnly = true;
                this.columnRepeatDiscount.MaxLength = 10;
                this.columnDevelopmentSampleCost.ReadOnly = true;
                this.columnDevelopmentSampleCost.MaxLength = 10;
                this.columnSampleLengthCost.ReadOnly = true;
                this.columnSampleLengthCost.MaxLength = 10;
                this.columnFreightForBodycare.ReadOnly = true;
                this.columnFreightForBodycare.MaxLength = 10;
                this.columnCourierCostsForSample.ReadOnly = true;
                this.columnCourierCostsForSample.MaxLength = 10;
                this.columnMarginDifference.ReadOnly = true;
                this.columnMarginDifference.MaxLength = 10;
                this.columnRecoveryHomeAndHard.ReadOnly = true;
                this.columnRecoveryHomeAndHard.MaxLength = 10;
                this.columnNTNRecovery.ReadOnly = true;
                this.columnNTNRecovery.MaxLength = 10;
                this.columnCoverForQuenbyFabric.ReadOnly = true;
                this.columnCoverForQuenbyFabric.MaxLength = 10;
                this.columnClaimRecovery.ReadOnly = true;
                this.columnClaimRecovery.MaxLength = 10;
                this.columnQCCentre.ReadOnly = true;
                this.columnQCCentre.MaxLength = 10;
                this.columnMailOrderBoxCost.ReadOnly = true;
                this.columnMailOrderBoxCost.MaxLength = 10;
                this.columnForwarderCharge.ReadOnly = true;
                this.columnForwarderCharge.MaxLength = 10;
                this.columnLicenceCost.ReadOnly = true;
                this.columnLicenceCost.MaxLength = 10;
                this.columnTradingAirFreight.ReadOnly = true;
                this.columnTradingAirFreight.MaxLength = 30;
                this.columnClaimsRecovery.ReadOnly = true;
                this.columnClaimsRecovery.MaxLength = 30;
                this.columnCoatingCost.ReadOnly = true;
                this.columnCoatingCost.MaxLength = 30;
                this.columnSlippage.ReadOnly = true;
                this.columnSlippage.MaxLength = 30;
                this.columnQCCenterMyanmar.ReadOnly = true;
                this.columnQCCenterMyanmar.MaxLength = 30;
                this.columnCMPHandling.ReadOnly = true;
                this.columnCMPHandling.MaxLength = 30;
                this.columnCMPQAComm.ReadOnly = true;
                this.columnCMPQAComm.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSunAccountCodeRow NewOtherCostSunAccountCodeRow() {
                return ((OtherCostSunAccountCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OtherCostSunAccountCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OtherCostSunAccountCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OtherCostSunAccountCodeRowChanged != null)) {
                    this.OtherCostSunAccountCodeRowChanged(this, new OtherCostSunAccountCodeRowChangeEvent(((OtherCostSunAccountCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OtherCostSunAccountCodeRowChanging != null)) {
                    this.OtherCostSunAccountCodeRowChanging(this, new OtherCostSunAccountCodeRowChangeEvent(((OtherCostSunAccountCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OtherCostSunAccountCodeRowDeleted != null)) {
                    this.OtherCostSunAccountCodeRowDeleted(this, new OtherCostSunAccountCodeRowChangeEvent(((OtherCostSunAccountCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OtherCostSunAccountCodeRowDeleting != null)) {
                    this.OtherCostSunAccountCodeRowDeleting(this, new OtherCostSunAccountCodeRowChangeEvent(((OtherCostSunAccountCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOtherCostSunAccountCodeRow(OtherCostSunAccountCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OtherCostSummaryDs ds = new OtherCostSummaryDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OtherCostSunAccountCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OtherCostSummaryRow : global::System.Data.DataRow {
            
            private OtherCostSummaryDataTable tableOtherCostSummary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OtherCostSummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOtherCostSummary = ((OtherCostSummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoicePrefix {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.InvoicePrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoicePrefix\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.InvoicePrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceSeq {
                get {
                    try {
                        return ((int)(this[this.tableOtherCostSummary.InvoiceSeqColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceSeq\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.InvoiceSeqColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceYear {
                get {
                    try {
                        return ((int)(this[this.tableOtherCostSummary.InvoiceYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceYear\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.InvoiceYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOtherCostSummary.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.SupplierInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierInvoiceNo\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.SupplierInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PiecesPerPack {
                get {
                    return ((int)(this[this.tableOtherCostSummary.PiecesPerPackColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.PiecesPerPackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContractNo {
                get {
                    return ((string)(this[this.tableOtherCostSummary.ContractNoColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.ContractNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeliveryNo {
                get {
                    return ((int)(this[this.tableOtherCostSummary.DeliveryNoColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.DeliveryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalShippedQty {
                get {
                    return ((int)(this[this.tableOtherCostSummary.TotalShippedQtyColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.TotalShippedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExchangeRate {
                get {
                    return ((decimal)(this[this.tableOtherCostSummary.ExchangeRateColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.ExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RepairCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.RepairCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepairCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.RepairCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FreightCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.FreightCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.FreightCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DutyCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.DutyCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.DutyCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BaseExchangeRate {
                get {
                    return ((decimal)(this[this.tableOtherCostSummary.BaseExchangeRateColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.BaseExchangeRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Supplier {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.SupplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supplier\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.SupplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemNo {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.ItemNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNo\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UNIT {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.UNITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UNIT\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.UNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyCode {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.CurrencyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyCode\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.CurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalesAmount {
                get {
                    return ((decimal)(this[this.tableOtherCostSummary.SalesAmountColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.SalesAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SupplierAmount {
                get {
                    return ((decimal)(this[this.tableOtherCostSummary.SupplierAmountColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.SupplierAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PackagingCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.PackagingCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackagingCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.PackagingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ImportQuotaCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.ImportQuotaChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportQuotaCharge\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.ImportQuotaChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutsideLabTestCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.OutsideLabTestCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutsideLabTestCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.OutsideLabTestCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherFabricCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.OtherFabricCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFabricCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.OtherFabricCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SellingPriceDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.SellingPriceDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingPriceDiscount\' in table \'OtherCostSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.SellingPriceDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FactoryPriceDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.FactoryPriceDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactoryPriceDiscount\' in table \'OtherCostSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.FactoryPriceDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WashPrintAndDevelopCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.WashPrintAndDevelopCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WashPrintAndDevelopCost\' in table \'OtherCostSummary\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.WashPrintAndDevelopCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TransportationCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.TransportationCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransportationCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.TransportationCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FragranceCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.FragranceCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FragranceCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.FragranceCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ToolingCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.ToolingCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToolingCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.ToolingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BaseCurrencyCode {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.BaseCurrencyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseCurrencyCode\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.BaseCurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShipmentId {
                get {
                    return ((int)(this[this.tableOtherCostSummary.ShipmentIdColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.ShipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SeasonCode {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.SeasonCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeasonCode\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.SeasonCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoName {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.CoNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoName\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.CoNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfficeCode {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSummary.OfficeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfficeCode\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.OfficeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DeliveryDatae {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOtherCostSummary.DeliveryDataeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryDatae\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.DeliveryDataeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SupplierAmountDiscount {
                get {
                    return ((decimal)(this[this.tableOtherCostSummary.SupplierAmountDiscountColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.SupplierAmountDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FOBAmount {
                get {
                    return ((decimal)(this[this.tableOtherCostSummary.FOBAmountColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.FOBAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DesignFee {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.DesignFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DesignFee\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.DesignFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UKAmountDiscount {
                get {
                    return ((decimal)(this[this.tableOtherCostSummary.UKAmountDiscountColumn]));
                }
                set {
                    this[this.tableOtherCostSummary.UKAmountDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AgencyCommission {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.AgencyCommissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgencyCommission\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.AgencyCommissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FinanceCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.FinanceCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinanceCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.FinanceCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AirFreightCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.AirFreightCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AirFreightCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.AirFreightCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal iNetActualMarginDiff {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.iNetActualMarginDiffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iNetActualMarginDiff\' in table \'OtherCostSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.iNetActualMarginDiffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal KitDevelopment {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.KitDevelopmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KitDevelopment\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.KitDevelopmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RepeatDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.RepeatDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepeatDiscount\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.RepeatDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DevelopmentSampleCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.DevelopmentSampleCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DevelopmentSampleCost\' in table \'OtherCostSummary\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.DevelopmentSampleCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SampleLengthCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.SampleLengthCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleLengthCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.SampleLengthCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FreightForBodycare {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.FreightForBodycareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightForBodycare\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.FreightForBodycareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CourierCostForSample {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.CourierCostForSampleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CourierCostForSample\' in table \'OtherCostSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.CourierCostForSampleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FabricLiabProvision {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.FabricLiabProvisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FabricLiabProvision\' in table \'OtherCostSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.FabricLiabProvisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MarginDifference {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.MarginDifferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginDifference\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.MarginDifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RecoveryHomeAndHard {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.RecoveryHomeAndHardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecoveryHomeAndHard\' in table \'OtherCostSummary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.RecoveryHomeAndHardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NTNRecovery {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.NTNRecoveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTNRecovery\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.NTNRecoveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CoverForQuenbyFabric {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.CoverForQuenbyFabricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoverForQuenbyFabric\' in table \'OtherCostSummary\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.CoverForQuenbyFabricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ClaimRecovery {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.ClaimRecoveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClaimRecovery\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.ClaimRecoveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QCCentre {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.QCCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QCCentre\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.QCCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MailOrderBoxCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.MailOrderBoxCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MailOrderBoxCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.MailOrderBoxCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ForwarderCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.ForwarderChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForwarderCharge\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.ForwarderChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LicenceCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.LicenceCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LicenceCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.LicenceCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TradingAirFreight {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.TradingAirFreightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradingAirFreight\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.TradingAirFreightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ClaimsRecovery {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.ClaimsRecoveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClaimsRecovery\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.ClaimsRecoveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CoatingCost {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.CoatingCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoatingCost\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.CoatingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Slippage {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.SlippageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Slippage\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.SlippageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QCCenterMyanmar {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.QCCenterMyanmarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QCCenterMyanmar\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.QCCenterMyanmarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMPHandling {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.CMPHandlingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMPHandling\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.CMPHandlingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CMPQAComm {
                get {
                    try {
                        return ((decimal)(this[this.tableOtherCostSummary.CMPQACommColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMPQAComm\' in table \'OtherCostSummary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSummary.CMPQACommColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoicePrefixNull() {
                return this.IsNull(this.tableOtherCostSummary.InvoicePrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoicePrefixNull() {
                this[this.tableOtherCostSummary.InvoicePrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceSeqNull() {
                return this.IsNull(this.tableOtherCostSummary.InvoiceSeqColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceSeqNull() {
                this[this.tableOtherCostSummary.InvoiceSeqColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceYearNull() {
                return this.IsNull(this.tableOtherCostSummary.InvoiceYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceYearNull() {
                this[this.tableOtherCostSummary.InvoiceYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableOtherCostSummary.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableOtherCostSummary.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierInvoiceNoNull() {
                return this.IsNull(this.tableOtherCostSummary.SupplierInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierInvoiceNoNull() {
                this[this.tableOtherCostSummary.SupplierInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRepairCostNull() {
                return this.IsNull(this.tableOtherCostSummary.RepairCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRepairCostNull() {
                this[this.tableOtherCostSummary.RepairCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreightCostNull() {
                return this.IsNull(this.tableOtherCostSummary.FreightCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreightCostNull() {
                this[this.tableOtherCostSummary.FreightCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDutyCostNull() {
                return this.IsNull(this.tableOtherCostSummary.DutyCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDutyCostNull() {
                this[this.tableOtherCostSummary.DutyCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tableOtherCostSummary.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceNoNull() {
                this[this.tableOtherCostSummary.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierNull() {
                return this.IsNull(this.tableOtherCostSummary.SupplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierNull() {
                this[this.tableOtherCostSummary.SupplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableOtherCostSummary.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductCodeNull() {
                this[this.tableOtherCostSummary.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemNoNull() {
                return this.IsNull(this.tableOtherCostSummary.ItemNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemNoNull() {
                this[this.tableOtherCostSummary.ItemNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNITNull() {
                return this.IsNull(this.tableOtherCostSummary.UNITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNITNull() {
                this[this.tableOtherCostSummary.UNITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyCodeNull() {
                return this.IsNull(this.tableOtherCostSummary.CurrencyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyCodeNull() {
                this[this.tableOtherCostSummary.CurrencyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackagingCostNull() {
                return this.IsNull(this.tableOtherCostSummary.PackagingCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackagingCostNull() {
                this[this.tableOtherCostSummary.PackagingCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImportQuotaChargeNull() {
                return this.IsNull(this.tableOtherCostSummary.ImportQuotaChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImportQuotaChargeNull() {
                this[this.tableOtherCostSummary.ImportQuotaChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutsideLabTestCostNull() {
                return this.IsNull(this.tableOtherCostSummary.OutsideLabTestCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutsideLabTestCostNull() {
                this[this.tableOtherCostSummary.OutsideLabTestCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherFabricCostNull() {
                return this.IsNull(this.tableOtherCostSummary.OtherFabricCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherFabricCostNull() {
                this[this.tableOtherCostSummary.OtherFabricCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingPriceDiscountNull() {
                return this.IsNull(this.tableOtherCostSummary.SellingPriceDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingPriceDiscountNull() {
                this[this.tableOtherCostSummary.SellingPriceDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactoryPriceDiscountNull() {
                return this.IsNull(this.tableOtherCostSummary.FactoryPriceDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactoryPriceDiscountNull() {
                this[this.tableOtherCostSummary.FactoryPriceDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWashPrintAndDevelopCostNull() {
                return this.IsNull(this.tableOtherCostSummary.WashPrintAndDevelopCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWashPrintAndDevelopCostNull() {
                this[this.tableOtherCostSummary.WashPrintAndDevelopCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransportationCostNull() {
                return this.IsNull(this.tableOtherCostSummary.TransportationCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransportationCostNull() {
                this[this.tableOtherCostSummary.TransportationCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFragranceCostNull() {
                return this.IsNull(this.tableOtherCostSummary.FragranceCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFragranceCostNull() {
                this[this.tableOtherCostSummary.FragranceCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToolingCostNull() {
                return this.IsNull(this.tableOtherCostSummary.ToolingCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToolingCostNull() {
                this[this.tableOtherCostSummary.ToolingCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseCurrencyCodeNull() {
                return this.IsNull(this.tableOtherCostSummary.BaseCurrencyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseCurrencyCodeNull() {
                this[this.tableOtherCostSummary.BaseCurrencyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeasonCodeNull() {
                return this.IsNull(this.tableOtherCostSummary.SeasonCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeasonCodeNull() {
                this[this.tableOtherCostSummary.SeasonCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoNameNull() {
                return this.IsNull(this.tableOtherCostSummary.CoNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoNameNull() {
                this[this.tableOtherCostSummary.CoNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfficeCodeNull() {
                return this.IsNull(this.tableOtherCostSummary.OfficeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfficeCodeNull() {
                this[this.tableOtherCostSummary.OfficeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeliveryDataeNull() {
                return this.IsNull(this.tableOtherCostSummary.DeliveryDataeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeliveryDataeNull() {
                this[this.tableOtherCostSummary.DeliveryDataeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDesignFeeNull() {
                return this.IsNull(this.tableOtherCostSummary.DesignFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDesignFeeNull() {
                this[this.tableOtherCostSummary.DesignFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgencyCommissionNull() {
                return this.IsNull(this.tableOtherCostSummary.AgencyCommissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgencyCommissionNull() {
                this[this.tableOtherCostSummary.AgencyCommissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinanceCostNull() {
                return this.IsNull(this.tableOtherCostSummary.FinanceCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinanceCostNull() {
                this[this.tableOtherCostSummary.FinanceCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAirFreightCostNull() {
                return this.IsNull(this.tableOtherCostSummary.AirFreightCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAirFreightCostNull() {
                this[this.tableOtherCostSummary.AirFreightCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsiNetActualMarginDiffNull() {
                return this.IsNull(this.tableOtherCostSummary.iNetActualMarginDiffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetiNetActualMarginDiffNull() {
                this[this.tableOtherCostSummary.iNetActualMarginDiffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKitDevelopmentNull() {
                return this.IsNull(this.tableOtherCostSummary.KitDevelopmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKitDevelopmentNull() {
                this[this.tableOtherCostSummary.KitDevelopmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRepeatDiscountNull() {
                return this.IsNull(this.tableOtherCostSummary.RepeatDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRepeatDiscountNull() {
                this[this.tableOtherCostSummary.RepeatDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDevelopmentSampleCostNull() {
                return this.IsNull(this.tableOtherCostSummary.DevelopmentSampleCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDevelopmentSampleCostNull() {
                this[this.tableOtherCostSummary.DevelopmentSampleCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleLengthCostNull() {
                return this.IsNull(this.tableOtherCostSummary.SampleLengthCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleLengthCostNull() {
                this[this.tableOtherCostSummary.SampleLengthCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreightForBodycareNull() {
                return this.IsNull(this.tableOtherCostSummary.FreightForBodycareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreightForBodycareNull() {
                this[this.tableOtherCostSummary.FreightForBodycareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCourierCostForSampleNull() {
                return this.IsNull(this.tableOtherCostSummary.CourierCostForSampleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCourierCostForSampleNull() {
                this[this.tableOtherCostSummary.CourierCostForSampleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFabricLiabProvisionNull() {
                return this.IsNull(this.tableOtherCostSummary.FabricLiabProvisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFabricLiabProvisionNull() {
                this[this.tableOtherCostSummary.FabricLiabProvisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarginDifferenceNull() {
                return this.IsNull(this.tableOtherCostSummary.MarginDifferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarginDifferenceNull() {
                this[this.tableOtherCostSummary.MarginDifferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecoveryHomeAndHardNull() {
                return this.IsNull(this.tableOtherCostSummary.RecoveryHomeAndHardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecoveryHomeAndHardNull() {
                this[this.tableOtherCostSummary.RecoveryHomeAndHardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNTNRecoveryNull() {
                return this.IsNull(this.tableOtherCostSummary.NTNRecoveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNTNRecoveryNull() {
                this[this.tableOtherCostSummary.NTNRecoveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoverForQuenbyFabricNull() {
                return this.IsNull(this.tableOtherCostSummary.CoverForQuenbyFabricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoverForQuenbyFabricNull() {
                this[this.tableOtherCostSummary.CoverForQuenbyFabricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClaimRecoveryNull() {
                return this.IsNull(this.tableOtherCostSummary.ClaimRecoveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClaimRecoveryNull() {
                this[this.tableOtherCostSummary.ClaimRecoveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQCCentreNull() {
                return this.IsNull(this.tableOtherCostSummary.QCCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQCCentreNull() {
                this[this.tableOtherCostSummary.QCCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMailOrderBoxCostNull() {
                return this.IsNull(this.tableOtherCostSummary.MailOrderBoxCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMailOrderBoxCostNull() {
                this[this.tableOtherCostSummary.MailOrderBoxCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsForwarderChargeNull() {
                return this.IsNull(this.tableOtherCostSummary.ForwarderChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetForwarderChargeNull() {
                this[this.tableOtherCostSummary.ForwarderChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLicenceCostNull() {
                return this.IsNull(this.tableOtherCostSummary.LicenceCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLicenceCostNull() {
                this[this.tableOtherCostSummary.LicenceCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradingAirFreightNull() {
                return this.IsNull(this.tableOtherCostSummary.TradingAirFreightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradingAirFreightNull() {
                this[this.tableOtherCostSummary.TradingAirFreightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClaimsRecoveryNull() {
                return this.IsNull(this.tableOtherCostSummary.ClaimsRecoveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClaimsRecoveryNull() {
                this[this.tableOtherCostSummary.ClaimsRecoveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoatingCostNull() {
                return this.IsNull(this.tableOtherCostSummary.CoatingCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoatingCostNull() {
                this[this.tableOtherCostSummary.CoatingCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlippageNull() {
                return this.IsNull(this.tableOtherCostSummary.SlippageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlippageNull() {
                this[this.tableOtherCostSummary.SlippageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQCCenterMyanmarNull() {
                return this.IsNull(this.tableOtherCostSummary.QCCenterMyanmarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQCCenterMyanmarNull() {
                this[this.tableOtherCostSummary.QCCenterMyanmarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCMPHandlingNull() {
                return this.IsNull(this.tableOtherCostSummary.CMPHandlingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCMPHandlingNull() {
                this[this.tableOtherCostSummary.CMPHandlingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCMPQACommNull() {
                return this.IsNull(this.tableOtherCostSummary.CMPQACommColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCMPQACommNull() {
                this[this.tableOtherCostSummary.CMPQACommColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OtherCostSunAccountCodeRow : global::System.Data.DataRow {
            
            private OtherCostSunAccountCodeDataTable tableOtherCostSunAccountCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OtherCostSunAccountCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOtherCostSunAccountCode = ((OtherCostSunAccountCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PackagingCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.PackagingCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackagingCost\' in table \'OtherCostSunAccountCode\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.PackagingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImportQuotaCharge {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.ImportQuotaChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImportQuotaCharge\' in table \'OtherCostSunAccountCode\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.ImportQuotaChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExportQuotaCharge {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.ExportQuotaChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExportQuotaCharge\' in table \'OtherCostSunAccountCode\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.ExportQuotaChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RepairCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.RepairCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepairCost\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.RepairCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutsideLabTestCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.OutsideLabTestCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutsideLabTestCost\' in table \'OtherCostSunAccountCode\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.OutsideLabTestCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherFabricCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.OtherFabricCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherFabricCost\' in table \'OtherCostSunAccountCode\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.OtherFabricCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SellingPrxDiscount {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.SellingPrxDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingPrxDiscount\' in table \'OtherCostSunAccountCode\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.SellingPrxDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FtyPrxDiscount {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.FtyPrxDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FtyPrxDiscount\' in table \'OtherCostSunAccountCode\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.FtyPrxDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WashingPrintAndDevCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.WashingPrintAndDevCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WashingPrintAndDevCost\' in table \'OtherCostSunAccountCode\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.WashingPrintAndDevCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FreightCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.FreightCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightCost\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.FreightCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DutyCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.DutyCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DutyCost\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.DutyCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransportationCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.TransportationCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransportationCost\' in table \'OtherCostSunAccountCode\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.TransportationCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FragranceCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.FragranceCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FragranceCost\' in table \'OtherCostSunAccountCode\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.FragranceCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ToolingCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.ToolingCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToolingCost\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.ToolingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DesignFee {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.DesignFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DesignFee\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.DesignFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgencyCommission {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.AgencyCommissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgencyCommission\' in table \'OtherCostSunAccountCode\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.AgencyCommissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string iNetActualMarginDiff {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.iNetActualMarginDiffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iNetActualMarginDiff\' in table \'OtherCostSunAccountCode\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.iNetActualMarginDiffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProvisionOfClaims {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.ProvisionOfClaimsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvisionOfClaims\' in table \'OtherCostSunAccountCode\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.ProvisionOfClaimsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FinanceCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.FinanceCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinanceCost\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.FinanceCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AirFreightCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.AirFreightCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AirFreightCost\' in table \'OtherCostSunAccountCode\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.AirFreightCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KitDevelopment {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.KitDevelopmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KitDevelopment\' in table \'OtherCostSunAccountCode\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.KitDevelopmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FabricLiabProvision {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.FabricLiabProvisionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FabricLiabProvision\' in table \'OtherCostSunAccountCode\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.FabricLiabProvisionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RepeatDiscount {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.RepeatDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RepeatDiscount\' in table \'OtherCostSunAccountCode\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.RepeatDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DevelopmentSampleCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.DevelopmentSampleCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DevelopmentSampleCost\' in table \'OtherCostSunAccountCode\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.DevelopmentSampleCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampleLengthCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.SampleLengthCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleLengthCost\' in table \'OtherCostSunAccountCode\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.SampleLengthCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FreightForBodycare {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.FreightForBodycareColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightForBodycare\' in table \'OtherCostSunAccountCode\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.FreightForBodycareColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CourierCostsForSample {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.CourierCostsForSampleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CourierCostsForSample\' in table \'OtherCostSunAccountCode\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.CourierCostsForSampleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MarginDifference {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.MarginDifferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarginDifference\' in table \'OtherCostSunAccountCode\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.MarginDifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RecoveryHomeAndHard {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.RecoveryHomeAndHardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecoveryHomeAndHard\' in table \'OtherCostSunAccountCode\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.RecoveryHomeAndHardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NTNRecovery {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.NTNRecoveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NTNRecovery\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.NTNRecoveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoverForQuenbyFabric {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.CoverForQuenbyFabricColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoverForQuenbyFabric\' in table \'OtherCostSunAccountCode\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.CoverForQuenbyFabricColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClaimRecovery {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.ClaimRecoveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClaimRecovery\' in table \'OtherCostSunAccountCode\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.ClaimRecoveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QCCentre {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.QCCentreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QCCentre\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.QCCentreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MailOrderBoxCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.MailOrderBoxCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MailOrderBoxCost\' in table \'OtherCostSunAccountCode\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.MailOrderBoxCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ForwarderCharge {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.ForwarderChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForwarderCharge\' in table \'OtherCostSunAccountCode\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.ForwarderChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LicenceCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.LicenceCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LicenceCost\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.LicenceCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradingAirFreight {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.TradingAirFreightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradingAirFreight\' in table \'OtherCostSunAccountCode\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.TradingAirFreightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClaimsRecovery {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.ClaimsRecoveryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClaimsRecovery\' in table \'OtherCostSunAccountCode\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.ClaimsRecoveryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CoatingCost {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.CoatingCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoatingCost\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.CoatingCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Slippage {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.SlippageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Slippage\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.SlippageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string QCCenterMyanmar {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.QCCenterMyanmarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QCCenterMyanmar\' in table \'OtherCostSunAccountCode\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.QCCenterMyanmarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CMPHandling {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.CMPHandlingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMPHandling\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.CMPHandlingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CMPQAComm {
                get {
                    try {
                        return ((string)(this[this.tableOtherCostSunAccountCode.CMPQACommColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CMPQAComm\' in table \'OtherCostSunAccountCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOtherCostSunAccountCode.CMPQACommColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackagingCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.PackagingCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackagingCostNull() {
                this[this.tableOtherCostSunAccountCode.PackagingCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImportQuotaChargeNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.ImportQuotaChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImportQuotaChargeNull() {
                this[this.tableOtherCostSunAccountCode.ImportQuotaChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExportQuotaChargeNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.ExportQuotaChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExportQuotaChargeNull() {
                this[this.tableOtherCostSunAccountCode.ExportQuotaChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRepairCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.RepairCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRepairCostNull() {
                this[this.tableOtherCostSunAccountCode.RepairCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutsideLabTestCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.OutsideLabTestCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutsideLabTestCostNull() {
                this[this.tableOtherCostSunAccountCode.OutsideLabTestCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherFabricCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.OtherFabricCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherFabricCostNull() {
                this[this.tableOtherCostSunAccountCode.OtherFabricCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingPrxDiscountNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.SellingPrxDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingPrxDiscountNull() {
                this[this.tableOtherCostSunAccountCode.SellingPrxDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFtyPrxDiscountNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.FtyPrxDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFtyPrxDiscountNull() {
                this[this.tableOtherCostSunAccountCode.FtyPrxDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWashingPrintAndDevCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.WashingPrintAndDevCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWashingPrintAndDevCostNull() {
                this[this.tableOtherCostSunAccountCode.WashingPrintAndDevCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreightCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.FreightCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreightCostNull() {
                this[this.tableOtherCostSunAccountCode.FreightCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDutyCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.DutyCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDutyCostNull() {
                this[this.tableOtherCostSunAccountCode.DutyCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransportationCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.TransportationCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransportationCostNull() {
                this[this.tableOtherCostSunAccountCode.TransportationCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFragranceCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.FragranceCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFragranceCostNull() {
                this[this.tableOtherCostSunAccountCode.FragranceCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToolingCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.ToolingCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToolingCostNull() {
                this[this.tableOtherCostSunAccountCode.ToolingCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDesignFeeNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.DesignFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDesignFeeNull() {
                this[this.tableOtherCostSunAccountCode.DesignFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgencyCommissionNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.AgencyCommissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgencyCommissionNull() {
                this[this.tableOtherCostSunAccountCode.AgencyCommissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsiNetActualMarginDiffNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.iNetActualMarginDiffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetiNetActualMarginDiffNull() {
                this[this.tableOtherCostSunAccountCode.iNetActualMarginDiffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProvisionOfClaimsNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.ProvisionOfClaimsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProvisionOfClaimsNull() {
                this[this.tableOtherCostSunAccountCode.ProvisionOfClaimsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinanceCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.FinanceCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinanceCostNull() {
                this[this.tableOtherCostSunAccountCode.FinanceCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAirFreightCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.AirFreightCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAirFreightCostNull() {
                this[this.tableOtherCostSunAccountCode.AirFreightCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKitDevelopmentNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.KitDevelopmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKitDevelopmentNull() {
                this[this.tableOtherCostSunAccountCode.KitDevelopmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFabricLiabProvisionNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.FabricLiabProvisionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFabricLiabProvisionNull() {
                this[this.tableOtherCostSunAccountCode.FabricLiabProvisionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRepeatDiscountNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.RepeatDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRepeatDiscountNull() {
                this[this.tableOtherCostSunAccountCode.RepeatDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDevelopmentSampleCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.DevelopmentSampleCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDevelopmentSampleCostNull() {
                this[this.tableOtherCostSunAccountCode.DevelopmentSampleCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleLengthCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.SampleLengthCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleLengthCostNull() {
                this[this.tableOtherCostSunAccountCode.SampleLengthCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFreightForBodycareNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.FreightForBodycareColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFreightForBodycareNull() {
                this[this.tableOtherCostSunAccountCode.FreightForBodycareColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCourierCostsForSampleNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.CourierCostsForSampleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCourierCostsForSampleNull() {
                this[this.tableOtherCostSunAccountCode.CourierCostsForSampleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarginDifferenceNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.MarginDifferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarginDifferenceNull() {
                this[this.tableOtherCostSunAccountCode.MarginDifferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecoveryHomeAndHardNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.RecoveryHomeAndHardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecoveryHomeAndHardNull() {
                this[this.tableOtherCostSunAccountCode.RecoveryHomeAndHardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNTNRecoveryNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.NTNRecoveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNTNRecoveryNull() {
                this[this.tableOtherCostSunAccountCode.NTNRecoveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoverForQuenbyFabricNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.CoverForQuenbyFabricColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoverForQuenbyFabricNull() {
                this[this.tableOtherCostSunAccountCode.CoverForQuenbyFabricColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClaimRecoveryNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.ClaimRecoveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClaimRecoveryNull() {
                this[this.tableOtherCostSunAccountCode.ClaimRecoveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQCCentreNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.QCCentreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQCCentreNull() {
                this[this.tableOtherCostSunAccountCode.QCCentreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMailOrderBoxCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.MailOrderBoxCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMailOrderBoxCostNull() {
                this[this.tableOtherCostSunAccountCode.MailOrderBoxCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsForwarderChargeNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.ForwarderChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetForwarderChargeNull() {
                this[this.tableOtherCostSunAccountCode.ForwarderChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLicenceCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.LicenceCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLicenceCostNull() {
                this[this.tableOtherCostSunAccountCode.LicenceCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradingAirFreightNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.TradingAirFreightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradingAirFreightNull() {
                this[this.tableOtherCostSunAccountCode.TradingAirFreightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClaimsRecoveryNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.ClaimsRecoveryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClaimsRecoveryNull() {
                this[this.tableOtherCostSunAccountCode.ClaimsRecoveryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoatingCostNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.CoatingCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoatingCostNull() {
                this[this.tableOtherCostSunAccountCode.CoatingCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlippageNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.SlippageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlippageNull() {
                this[this.tableOtherCostSunAccountCode.SlippageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQCCenterMyanmarNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.QCCenterMyanmarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQCCenterMyanmarNull() {
                this[this.tableOtherCostSunAccountCode.QCCenterMyanmarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCMPHandlingNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.CMPHandlingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCMPHandlingNull() {
                this[this.tableOtherCostSunAccountCode.CMPHandlingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCMPQACommNull() {
                return this.IsNull(this.tableOtherCostSunAccountCode.CMPQACommColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCMPQACommNull() {
                this[this.tableOtherCostSunAccountCode.CMPQACommColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OtherCostSummaryRowChangeEvent : global::System.EventArgs {
            
            private OtherCostSummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSummaryRowChangeEvent(OtherCostSummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OtherCostSunAccountCodeRowChangeEvent : global::System.EventArgs {
            
            private OtherCostSunAccountCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSunAccountCodeRowChangeEvent(OtherCostSunAccountCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OtherCostSunAccountCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.reporter.accounts.OtherCostSummaryDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OtherCostSummaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OtherCostSummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OtherCostSummary";
            tableMapping.ColumnMappings.Add("InvoicePrefix", "InvoicePrefix");
            tableMapping.ColumnMappings.Add("InvoiceSeq", "InvoiceSeq");
            tableMapping.ColumnMappings.Add("InvoiceYear", "InvoiceYear");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("SupplierInvoiceNo", "SupplierInvoiceNo");
            tableMapping.ColumnMappings.Add("PiecesPerPack", "PiecesPerPack");
            tableMapping.ColumnMappings.Add("ContractNo", "ContractNo");
            tableMapping.ColumnMappings.Add("DeliveryNo", "DeliveryNo");
            tableMapping.ColumnMappings.Add("TotalShippedQty", "TotalShippedQty");
            tableMapping.ColumnMappings.Add("ExchangeRate", "ExchangeRate");
            tableMapping.ColumnMappings.Add("RepairCost", "RepairCost");
            tableMapping.ColumnMappings.Add("FreightCost", "FreightCost");
            tableMapping.ColumnMappings.Add("DutyCost", "DutyCost");
            tableMapping.ColumnMappings.Add("BaseExchangeRate", "BaseExchangeRate");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("Supplier", "Supplier");
            tableMapping.ColumnMappings.Add("ProductCode", "ProductCode");
            tableMapping.ColumnMappings.Add("ItemNo", "ItemNo");
            tableMapping.ColumnMappings.Add("UNIT", "UNIT");
            tableMapping.ColumnMappings.Add("CurrencyCode", "CurrencyCode");
            tableMapping.ColumnMappings.Add("SalesAmount", "SalesAmount");
            tableMapping.ColumnMappings.Add("SupplierAmount", "SupplierAmount");
            tableMapping.ColumnMappings.Add("PackagingCost", "PackagingCost");
            tableMapping.ColumnMappings.Add("ImportQuotaCharge", "ImportQuotaCharge");
            tableMapping.ColumnMappings.Add("OutsideLabTestCost", "OutsideLabTestCost");
            tableMapping.ColumnMappings.Add("OtherFabricCost", "OtherFabricCost");
            tableMapping.ColumnMappings.Add("SellingPriceDiscount", "SellingPriceDiscount");
            tableMapping.ColumnMappings.Add("FactoryPriceDiscount", "FactoryPriceDiscount");
            tableMapping.ColumnMappings.Add("PrintAndDevelopmentCost", "WashPrintAndDevelopCost");
            tableMapping.ColumnMappings.Add("TransportationCost", "TransportationCost");
            tableMapping.ColumnMappings.Add("FragranceCost", "FragranceCost");
            tableMapping.ColumnMappings.Add("ToolingCost", "ToolingCost");
            tableMapping.ColumnMappings.Add("BaseCurrencyCode", "BaseCurrencyCode");
            tableMapping.ColumnMappings.Add("ShipmentId", "ShipmentId");
            tableMapping.ColumnMappings.Add("SeasonCode", "SeasonCode");
            tableMapping.ColumnMappings.Add("CoName", "CoName");
            tableMapping.ColumnMappings.Add("OfficeCode", "OfficeCode");
            tableMapping.ColumnMappings.Add("DeliveryDatae", "DeliveryDatae");
            tableMapping.ColumnMappings.Add("SupplierAmountDiscount", "SupplierAmountDiscount");
            tableMapping.ColumnMappings.Add("FOBAmount", "FOBAmount");
            tableMapping.ColumnMappings.Add("UKAmountDiscount", "UKAmountDiscount");
            tableMapping.ColumnMappings.Add("KitDevelopment", "KitDevelopment");
            tableMapping.ColumnMappings.Add("RepeatDiscount", "RepeatDiscount");
            tableMapping.ColumnMappings.Add("DevelopmentSampleCost", "DevelopmentSampleCost");
            tableMapping.ColumnMappings.Add("SampleLengthCost", "SampleLengthCost");
            tableMapping.ColumnMappings.Add("FreightForBodycare", "FreightForBodycare");
            tableMapping.ColumnMappings.Add("CourierCostForSample", "CourierCostForSample");
            tableMapping.ColumnMappings.Add("FabricLiabProvision", "FabricLiabProvision");
            tableMapping.ColumnMappings.Add("MarginDifference", "MarginDifference");
            tableMapping.ColumnMappings.Add("RecoveryHomeAndHard", "RecoveryHomeAndHard");
            tableMapping.ColumnMappings.Add("NTNRecovery", "NTNRecovery");
            tableMapping.ColumnMappings.Add("CoverForQuenbyFabric", "CoverForQuenbyFabric");
            tableMapping.ColumnMappings.Add("ClaimRecovery", "ClaimRecovery");
            tableMapping.ColumnMappings.Add("QCCentre", "QCCentre");
            tableMapping.ColumnMappings.Add("MailOrderBoxCost", "MailOrderBoxCost");
            tableMapping.ColumnMappings.Add("ForwarderCharge", "ForwarderCharge");
            tableMapping.ColumnMappings.Add("LicenceCost", "LicenceCost");
            tableMapping.ColumnMappings.Add("TradingAirFreight", "TradingAirFreight");
            tableMapping.ColumnMappings.Add("ClaimsRecovery", "ClaimsRecovery");
            tableMapping.ColumnMappings.Add("CoatingCost", "CoatingCost");
            tableMapping.ColumnMappings.Add("Slippage", "Slippage");
            tableMapping.ColumnMappings.Add("QCCenterMyanmar", "QCCenterMyanmar");
            tableMapping.ColumnMappings.Add("CMPHandling", "CMPHandling");
            tableMapping.ColumnMappings.Add("CMPQAComm", "CMPQAComm");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.next.isam.reporter.Properties.Settings.Default.ISAMConnectionString3;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT\ti.ShipmentId, i.InvoicePrefix, i.InvoiceSeq, i.InvoiceYear, \r\n\tCONVERT(var" +
                "char(15), i.InvoicePrefix + \'/\' + RIGHT(\'00000\' + CONVERT(varchar, i.InvoiceSeq)" +
                ", 5) + \'/\' + CONVERT(varchar, i.InvoiceYear)) AS InvoiceNo, \r\n\ti.InvoiceDate, c." +
                "ContractNo, s.DeliveryNo, i.SupplierInvoiceNo, \r\n\tISNULL(i.InvoiceDate, s.Custom" +
                "erAtWarehouseDate) AS DeliveryDatae,\r\n\t(SELECT Code FROM NSLDB01.NSLDB.dbo.Seaso" +
                "n AS Season_1 WHERE (SeasonId = c.SeasonId)) AS SeasonCode,\r\n\t(SELECT Name FROM " +
                "CountryOfOrigin WHERE (CountryOfOriginId = s.CountryOfOriginId)) AS CoName,\r\n\t(S" +
                "ELECT OfficeCode FROM NSLDB01.NSLDB.dbo.Office AS Office_1 WHERE (OfficeId = c.O" +
                "fficeId)) AS OfficeCode,\r\n\t(SELECT Name FROM NSLDB01.NSLIndustry.dbo.Vendor AS V" +
                "endor WHERE (VendorId = s.VendorId)) AS Supplier,\r\n\t(SELECT Code FROM NSLDB01.NS" +
                "LDB.dbo.OfficeStructure AS OfficeStructure WHERE (OfficeStructureId = c.ProductT" +
                "eamId)) AS ProductCode,\r\n\t(SELECT ItemNo FROM Product WHERE (ProductId = c.Produ" +
                "ctId)) AS ItemNo,\r\n\t(SELECT PackingUnitDesc FROM PackingUnit WHERE (PackingUnitI" +
                "d = c.PackingUnitId)) AS UNIT, \r\n\ts.TotalShippedQty, c.PiecesPerPack, s.TotalShi" +
                "ppedAmt AS SalesAmount, \r\n\ts.TotalShippedSupplierGmtAmtAfterDiscount AS Supplier" +
                "AmountDiscount, s.TotalShippedNetFOBAmt AS FOBAmount, \r\n\ts.TotalShippedAmtAfterD" +
                "iscount AS UKAmountDiscount, s.TotalShippedSupplierGmtAmt AS SupplierAmount,\r\n\t(" +
                "SELECT CurrencyCode FROM Currency WHERE (CurrencyId = s.SellCurrencyId)) AS Curr" +
                "encyCode, er.ExchangeRate,\r\n\t(SELECT CurrencyCode FROM Currency AS Currency_1 WH" +
                "ERE (CurrencyId = 3)) AS BaseCurrencyCode, br.ExchangeRate AS BaseExchangeRate, " +
                "\r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 1 THEN oc.OtherCostAmt ELSE 0 END)" +
                ", 0) * sd.ShippedQty) AS PackagingCost, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTyp" +
                "eId = 2 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS ImportQuotaChar" +
                "ge, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 4 THEN oc.OtherCostAmt ELSE 0 " +
                "END), 0) * sd.ShippedQty) AS RepairCost, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTy" +
                "peId = 5 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS OutsideLabTest" +
                "Cost, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 6 THEN oc.OtherCostAmt ELSE " +
                "0 END), 0) * sd.ShippedQty) AS OtherFabricCost, \r\n\tSUM(ISNULL((CASE WHEN oc.Othe" +
                "rCostTypeId = 7 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS Selling" +
                "PriceDiscount, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 8 THEN oc.OtherCost" +
                "Amt ELSE 0 END), 0) * sd.ShippedQty) AS FactoryPriceDiscount, \r\n\tSUM(ISNULL((CAS" +
                "E WHEN oc.OtherCostTypeId = 9 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQ" +
                "ty) AS PrintAndDevelopmentCost, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 10" +
                " THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS FreightCost, \r\n\tSUM(IS" +
                "NULL((CASE WHEN oc.OtherCostTypeId = 11 THEN oc.OtherCostAmt ELSE 0 END), 0) * s" +
                "d.ShippedQty) AS DutyCost, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 12 THEN" +
                " oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS TransportationCost, \r\n\tSUM(" +
                "ISNULL((CASE WHEN oc.OtherCostTypeId = 13 THEN oc.OtherCostAmt ELSE 0 END), 0) *" +
                " sd.ShippedQty) AS FragranceCost, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = " +
                "14 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS ToolingCost, \r\n\tSUM(" +
                "ISNULL((CASE WHEN oc.OtherCostTypeId = 21 THEN oc.OtherCostAmt ELSE 0 END), 0) *" +
                " sd.ShippedQty) AS KitDevelopment, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId =" +
                " 22 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS FabricLiabProvision" +
                ", \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 23 THEN oc.OtherCostAmt ELSE 0 E" +
                "ND), 0) * sd.ShippedQty) AS RepeatDiscount, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCos" +
                "tTypeId = 24 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS Developmen" +
                "tSampleCost, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 25 THEN oc.OtherCostA" +
                "mt ELSE 0 END), 0) * sd.ShippedQty) AS SampleLengthCost, \r\n\tSUM(ISNULL((CASE WHE" +
                "N oc.OtherCostTypeId = 26 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) " +
                "AS FreightForBodycare, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 27 THEN oc." +
                "OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS CourierCostForSample, \r\n\tSUM(IS" +
                "NULL((CASE WHEN oc.OtherCostTypeId = 28 THEN oc.OtherCostAmt ELSE 0 END), 0) * s" +
                "d.ShippedQty) AS MarginDifference, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId =" +
                " 29 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS RecoveryHomeAndHard" +
                ", \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 30 THEN oc.OtherCostAmt ELSE 0 E" +
                "ND), 0) * sd.ShippedQty) AS NTNRecovery, \r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTy" +
                "peId = 31 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS CoverForQuenb" +
                "yFabric,\r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 32 THEN oc.OtherCostAmt EL" +
                "SE 0 END), 0) * sd.ShippedQty) AS ClaimRecovery,\r\n\tSUM(ISNULL((CASE WHEN oc.Othe" +
                "rCostTypeId = 33 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS QCCent" +
                "re,\r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 34 THEN oc.OtherCostAmt ELSE 0 " +
                "END), 0) * sd.ShippedQty) AS MailOrderBoxCost,\r\n\tSUM(ISNULL((CASE WHEN oc.OtherC" +
                "ostTypeId = 35 THEN oc.OtherCostAmt ELSE 0 END), 0) * sd.ShippedQty) AS Forwarde" +
                "rCharge,\r\n\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 36 THEN oc.OtherCostAmt EL" +
                "SE 0 END), 0) * sd.ShippedQty) AS LicenceCost,\r\n                TradingAirFreigh" +
                "t=\tSUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 37 THEN oc.OtherCostAmt ELSE 0 END" +
                "),0) * sd.ShippedQty),\r\n                ClaimsRecovery=SUM(ISNULL((CASE WHEN oc." +
                "OtherCostTypeId = 38 THEN oc.OtherCostAmt ELSE 0 END),0) * sd.ShippedQty),\r\n    " +
                "            CoatingCost = SUM(ISNULL((CASE WHEN oc.OtherCostTypeId = 39 THEN oc." +
                "OtherCostAmt ELSE 0 END),0) * sd.ShippedQty),\r\n                Slippage = SUM(IS" +
                "NULL((CASE WHEN oc.OtherCostTypeId = 42 THEN oc.OtherCostAmt ELSE 0 END),0) * sd" +
                ".ShippedQty)\r\n\r\nFROM            Invoice AS i INNER JOIN\r\n                       " +
                "  NSLDB.dbo.AccountFinancialCalender AS ac ON ac.StartDate <= i.InvoiceDate AND " +
                "ac.EndDate + 1 > i.InvoiceDate INNER JOIN\r\n                         Shipment AS " +
                "s ON s.ShipmentId = i.ShipmentId INNER JOIN\r\n                         Contract A" +
                "S c ON c.ContractId = s.ContractId INNER JOIN\r\n                         Exchange" +
                "Rate AS er ON er.CurrencyId = s.SellCurrencyId AND er.ExchangeRateTypeId = 1 AND" +
                " i.InvoiceDate BETWEEN er.EffectiveDateFrom AND \r\n                         er.Ef" +
                "fectiveDateTo INNER JOIN\r\n                         ExchangeRate AS br ON br.Curr" +
                "encyId = 1 AND br.ExchangeRateTypeId = 1 AND i.InvoiceDate BETWEEN br.EffectiveD" +
                "ateFrom AND br.EffectiveDateTo INNER JOIN\r\n                         ShipmentDeta" +
                "il AS sd ON sd.ShipmentId = i.ShipmentId AND sd.Status = 1 INNER JOIN\r\n         " +
                "                OtherCost AS oc ON oc.ShipmentDetailId = sd.ShipmentDetailId AND" +
                " oc.Status = 1\r\nWHERE        (ac.BudgetYear = 2009) AND (ac.Period BETWEEN 5 AND" +
                " 5) AND (c.OfficeId IN (1, 2))\r\nGROUP BY i.ShipmentId, i.InvoicePrefix, i.Invoic" +
                "eSeq, i.InvoiceYear, i.InvoiceDate, i.SupplierInvoiceNo, c.ProductTeamId, c.Prod" +
                "uctId, c.PackingUnitId, c.SeasonId, c.OfficeId, \r\n                         c.Pie" +
                "cesPerPack, c.ContractNo, s.DeliveryNo, s.CountryOfOriginId, s.VendorId, s.Total" +
                "ShippedQty, s.SellCurrencyId, s.TotalShippedAmt, \r\n                         s.To" +
                "talShippedSupplierGmtAmt, s.TotalShippedSupplierGmtAmtAfterDiscount, s.TotalShip" +
                "pedNetFOBAmt, s.TotalShippedAmtAfterDiscount, er.ExchangeRate, \r\n               " +
                "          br.ExchangeRate, s.CustomerAtWarehouseDate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OtherCostSummaryDs.OtherCostSummaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OtherCostSummaryDs.OtherCostSummaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OtherCostSummaryDs.OtherCostSummaryDataTable dataTable = new OtherCostSummaryDs.OtherCostSummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OtherCostSunAccountCodeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OtherCostSunAccountCodeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OtherCostSunAccountCode";
            tableMapping.ColumnMappings.Add("PackagingCost", "PackagingCost");
            tableMapping.ColumnMappings.Add("ImportQuotaCharge", "ImportQuotaCharge");
            tableMapping.ColumnMappings.Add("ExportQuotaCharge", "ExportQuotaCharge");
            tableMapping.ColumnMappings.Add("RepairCost", "RepairCost");
            tableMapping.ColumnMappings.Add("OutsideLabTestCost", "OutsideLabTestCost");
            tableMapping.ColumnMappings.Add("OtherFabricCost", "OtherFabricCost");
            tableMapping.ColumnMappings.Add("SellingPrxDiscount", "SellingPrxDiscount");
            tableMapping.ColumnMappings.Add("FtyPrxDiscount", "FtyPrxDiscount");
            tableMapping.ColumnMappings.Add("WashingPrintAndDevCost", "WashingPrintAndDevCost");
            tableMapping.ColumnMappings.Add("FreightCost", "FreightCost");
            tableMapping.ColumnMappings.Add("DutyCost", "DutyCost");
            tableMapping.ColumnMappings.Add("TransportationCost", "TransportationCost");
            tableMapping.ColumnMappings.Add("FragranceCost", "FragranceCost");
            tableMapping.ColumnMappings.Add("ToolingCost", "ToolingCost");
            tableMapping.ColumnMappings.Add("DesignFee", "DesignFee");
            tableMapping.ColumnMappings.Add("AgencyCommission", "AgencyCommission");
            tableMapping.ColumnMappings.Add("iNetActualMarginDiff", "iNetActualMarginDiff");
            tableMapping.ColumnMappings.Add("ProvisionOfClaims", "ProvisionOfClaims");
            tableMapping.ColumnMappings.Add("FinanceCost", "FinanceCost");
            tableMapping.ColumnMappings.Add("AirFreightCost", "AirFreightCost");
            tableMapping.ColumnMappings.Add("KitDevelopment", "KitDevelopment");
            tableMapping.ColumnMappings.Add("FabricLiabProvision", "FabricLiabProvision");
            tableMapping.ColumnMappings.Add("RepeatDiscount", "RepeatDiscount");
            tableMapping.ColumnMappings.Add("DevelopmentSampleCost", "DevelopmentSampleCost");
            tableMapping.ColumnMappings.Add("SampleLengthCost", "SampleLengthCost");
            tableMapping.ColumnMappings.Add("FreightForBodycare", "FreightForBodycare");
            tableMapping.ColumnMappings.Add("CourierCostsForSample", "CourierCostsForSample");
            tableMapping.ColumnMappings.Add("MarginDifference", "MarginDifference");
            tableMapping.ColumnMappings.Add("RecoveryHomeAndHard", "RecoveryHomeAndHard");
            tableMapping.ColumnMappings.Add("NTNRecovery", "NTNRecovery");
            tableMapping.ColumnMappings.Add("CoverForQuenbyFabric", "CoverForQuenbyFabric");
            tableMapping.ColumnMappings.Add("ClaimRecovery", "ClaimRecovery");
            tableMapping.ColumnMappings.Add("QCCentre", "QCCentre");
            tableMapping.ColumnMappings.Add("MailOrderBoxCost", "MailOrderBoxCost");
            tableMapping.ColumnMappings.Add("ForwarderCharge", "ForwarderCharge");
            tableMapping.ColumnMappings.Add("LicenceCost", "LicenceCost");
            tableMapping.ColumnMappings.Add("TradingAirFreight", "TradingAirFreight");
            tableMapping.ColumnMappings.Add("ClaimsRecovery", "ClaimsRecovery");
            tableMapping.ColumnMappings.Add("CoatingCost", "CoatingCost");
            tableMapping.ColumnMappings.Add("Slippage", "Slippage");
            tableMapping.ColumnMappings.Add("QCCenterMyanmar", "QCCenterMyanmar");
            tableMapping.ColumnMappings.Add("CMPHandling", "CMPHandling");
            tableMapping.ColumnMappings.Add("CMPQAComm", "CMPQAComm");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.next.isam.reporter.Properties.Settings.Default.ISAMConnectionString3;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \r\n\tPackagingCost\t\t= max(case when OtherCostTypeId = 1  then ISNULL(Convert" +
                "(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tImportQuotaCharge\t= max(case when " +
                "OtherCostTypeId = 2  then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end" +
                "), \r\n\tExportQuotaCharge\t= max(case when OtherCostTypeId = 3  then ISNULL(Convert" +
                "(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tRepairCost\t\t= max(case when OtherC" +
                "ostTypeId = 4  then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\t" +
                "OutsideLabTestCost\t= max(case when OtherCostTypeId = 5  then ISNULL(Convert(Varc" +
                "har,SunAccountCode),\'\') else \'\' end), \r\n\tOtherFabricCost\t\t= max(case when OtherC" +
                "ostTypeId = 6  then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\t" +
                "SellingPrxDiscount\t\t= max(case when OtherCostTypeId = 7  then ISNULL(Convert(Var" +
                "char,SunAccountCode),\'\') else \'\' end), \r\n\tFtyPrxDiscount\t\t= max(case when OtherC" +
                "ostTypeId = 8  then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\t" +
                "WashingPrintAndDevCost\t= max(case when OtherCostTypeId = 9  then ISNULL(Convert(" +
                "Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tFreightCost\t\t= max(case when OtherC" +
                "ostTypeId = 10 then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\t" +
                "DutyCost\t\t\t= max(case when OtherCostTypeId = 11 then ISNULL(Convert(Varchar,SunA" +
                "ccountCode),\'\') else \'\' end), \r\n\tTransportationCost\t\t= max(case when OtherCostTy" +
                "peId = 12 then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tFragr" +
                "anceCost\t\t= max(case when OtherCostTypeId = 13 then ISNULL(Convert(Varchar,SunAc" +
                "countCode),\'\') else \'\' end), \r\n\tToolingCost\t\t= max(case when OtherCostTypeId = 1" +
                "4 then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tDesignFee\t\t= " +
                "max(case when OtherCostTypeId = 15 then ISNULL(Convert(Varchar,SunAccountCode),\'" +
                "\') else \'\' end), \r\n\tAgencyCommission\t= max(case when OtherCostTypeId = 16 then I" +
                "SNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tiNetActualMarginDiff\t" +
                "= max(case when OtherCostTypeId = 17 then ISNULL(Convert(Varchar,SunAccountCode)" +
                ",\'\') else \'\' end), \r\n\tProvisionOfClaims\t\t= max(case when OtherCostTypeId = 18 th" +
                "en ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tFinanceCost\t\t= ma" +
                "x(case when OtherCostTypeId = 19 then ISNULL(Convert(Varchar,SunAccountCode),\'\')" +
                " else \'\' end), \r\n\tAirFreightCost\t\t= max(case when OtherCostTypeId = 20 then ISNU" +
                "LL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tKitDevelopment\t\t= max(ca" +
                "se when OtherCostTypeId = 21 then ISNULL(Convert(Varchar,SunAccountCode),\'\') els" +
                "e \'\' end), \r\n\tFabricLiabProvision\t= max(case when OtherCostTypeId = 22 then ISNU" +
                "LL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tRepeatDiscount\t\t= max(ca" +
                "se when OtherCostTypeId = 23 then ISNULL(Convert(Varchar,SunAccountCode),\'\') els" +
                "e \'\' end), \r\n\tDevelopmentSampleCost\t= max(case when OtherCostTypeId = 24 then IS" +
                "NULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tSampleLengthCost\t\t= ma" +
                "x(case when OtherCostTypeId = 25 then ISNULL(Convert(Varchar,SunAccountCode),\'\')" +
                " else \'\' end), \r\n\tFreightForBodycare\t= max(case when OtherCostTypeId = 26 then I" +
                "SNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tCourierCostsForSample" +
                "\t= max(case when OtherCostTypeId = 27 then ISNULL(Convert(Varchar,SunAccountCode" +
                "),\'\') else \'\' end),\r\n\tMarginDifference\t\t= max(case when OtherCostTypeId = 28 the" +
                "n ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end), \r\n\tRecoveryHomeAndHar" +
                "d\t= max(case when OtherCostTypeId = 29 then ISNULL(Convert(Varchar,SunAccountCod" +
                "e),\'\') else \'\' end),\r\n\tNTNRecovery\t\t= max(case when OtherCostTypeId = 30 then IS" +
                "NULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end),\r\n\tCoverForQuenbyFabric\t= " +
                "max(case when OtherCostTypeId = 31 then ISNULL(Convert(Varchar,SunAccountCode),\'" +
                "\') else \'\' end),\r\n\tClaimRecovery\t\t= max(case when OtherCostTypeId = 32 then ISNU" +
                "LL(Convert(Varchar,SunAccountCode),\'\') else \'\' end),\r\n\tQCCentre\t\t\t= max(case whe" +
                "n OtherCostTypeId = 33 then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' e" +
                "nd),\r\n\tMailOrderBoxCost\t\t= max(case when OtherCostTypeId = 34 then ISNULL(Conver" +
                "t(Varchar,SunAccountCode),\'\') else \'\' end),\r\n\tForwarderCharge\t\t= max(case when O" +
                "therCostTypeId = 35 then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end)" +
                ",\r\n\tLicenceCost\t\t= max(case when OtherCostTypeId = 36 then ISNULL(Convert(Varcha" +
                "r,SunAccountCode),\'\') else \'\' end),\r\n\tTradingAirFreight\t\t= max(case when OtherCo" +
                "stTypeId = 37 then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end),\r\n\tCl" +
                "aimsRecovery\t\t= max(case when OtherCostTypeId = 38 then ISNULL(Convert(Varchar,S" +
                "unAccountCode),\'\') else \'\' end),\r\n\tCoatingCost\t\t= max(case when OtherCostTypeId " +
                "= 39 then ISNULL(Convert(Varchar,SunAccountCode),\'\') else \'\' end),\r\n\tSlippage\t\t=" +
                " max(case when OtherCostTypeId = 42 then ISNULL(Convert(Varchar,SunAccountCode)," +
                "\'\') else \'\' end)\r\nfrom OtherCostType\r\n";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OtherCostSummaryDs.OtherCostSunAccountCodeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OtherCostSummaryDs.OtherCostSunAccountCodeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OtherCostSummaryDs.OtherCostSunAccountCodeDataTable dataTable = new OtherCostSummaryDs.OtherCostSunAccountCodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(OtherCostSummaryDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(OtherCostSummaryDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(OtherCostSummaryDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(OtherCostSummaryDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591