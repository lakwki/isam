//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace com.next.isam.reporter.ARAP {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OutstandingTradeReportDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OutstandingTradeReportDs : global::System.Data.DataSet {
        
        private OutstandingTradeReportDataTable tableOutstandingTradeReport;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OutstandingTradeReportDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected OutstandingTradeReportDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OutstandingTradeReport"] != null)) {
                    base.Tables.Add(new OutstandingTradeReportDataTable(ds.Tables["OutstandingTradeReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OutstandingTradeReportDataTable OutstandingTradeReport {
            get {
                return this.tableOutstandingTradeReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            OutstandingTradeReportDs cln = ((OutstandingTradeReportDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OutstandingTradeReport"] != null)) {
                    base.Tables.Add(new OutstandingTradeReportDataTable(ds.Tables["OutstandingTradeReport"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableOutstandingTradeReport = ((OutstandingTradeReportDataTable)(base.Tables["OutstandingTradeReport"]));
            if ((initTable == true)) {
                if ((this.tableOutstandingTradeReport != null)) {
                    this.tableOutstandingTradeReport.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "OutstandingTradeReportDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OutstandingTradeReportDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOutstandingTradeReport = new OutstandingTradeReportDataTable();
            base.Tables.Add(this.tableOutstandingTradeReport);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOutstandingTradeReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OutstandingTradeReportDs ds = new OutstandingTradeReportDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OutstandingTradeReportRowChangeEventHandler(object sender, OutstandingTradeReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OutstandingTradeReportDataTable : global::System.Data.TypedTableBase<OutstandingTradeReportRow> {
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnVendor;
            
            private global::System.Data.DataColumn columnAccountCode;
            
            private global::System.Data.DataColumn columnSupplierInvoiceNo;
            
            private global::System.Data.DataColumn columnSequenceNo;
            
            private global::System.Data.DataColumn columnOfficeCode;
            
            private global::System.Data.DataColumn columnTradingAgency;
            
            private global::System.Data.DataColumn columnTermOfPurchase;
            
            private global::System.Data.DataColumn columnContractNo;
            
            private global::System.Data.DataColumn columnDeliveryNo;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnPaymentTermDesc;
            
            private global::System.Data.DataColumn columnFiscalYear;
            
            private global::System.Data.DataColumn columnFiscalPeriod;
            
            private global::System.Data.DataColumn columnFiscalWeek;
            
            private global::System.Data.DataColumn columnItemNo;
            
            private global::System.Data.DataColumn columnTotalShippedQty;
            
            private global::System.Data.DataColumn columnPackingUnit;
            
            private global::System.Data.DataColumn columnCurrencyCode;
            
            private global::System.Data.DataColumn columnOtherAmount;
            
            private global::System.Data.DataColumn columnBaseAmount;
            
            private global::System.Data.DataColumn columnCO;
            
            private global::System.Data.DataColumn columnDataType;
            
            private global::System.Data.DataColumn columnLabTestIncome;
            
            private global::System.Data.DataColumn columnShippingDocReceiptDate;
            
            private global::System.Data.DataColumn columnAccountDocReceiptDate;
            
            private global::System.Data.DataColumn columnShippingDocCheckedOn;
            
            private global::System.Data.DataColumn columnQACommissionAmount;
            
            private global::System.Data.DataColumn columnVendorPaymentDiscountAmount;
            
            private global::System.Data.DataColumn columnNetPaymentAmount;
            
            private global::System.Data.DataColumn columnLabTestIncomeBaseAmount;
            
            private global::System.Data.DataColumn columnQACommissionBaseAmount;
            
            private global::System.Data.DataColumn columnVendorPaymentDiscountBaseAmount;
            
            private global::System.Data.DataColumn columnLGDueDate;
            
            private global::System.Data.DataColumn columnLCBillRefNo;
            
            private global::System.Data.DataColumn columnLCPaymentCheckedDate;
            
            private global::System.Data.DataColumn columnShipmentMethodDesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutstandingTradeReportDataTable() {
                this.TableName = "OutstandingTradeReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OutstandingTradeReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OutstandingTradeReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorColumn {
                get {
                    return this.columnVendor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountCodeColumn {
                get {
                    return this.columnAccountCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SupplierInvoiceNoColumn {
                get {
                    return this.columnSupplierInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SequenceNoColumn {
                get {
                    return this.columnSequenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OfficeCodeColumn {
                get {
                    return this.columnOfficeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingAgencyColumn {
                get {
                    return this.columnTradingAgency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TermOfPurchaseColumn {
                get {
                    return this.columnTermOfPurchase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractNoColumn {
                get {
                    return this.columnContractNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeliveryNoColumn {
                get {
                    return this.columnDeliveryNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentTermDescColumn {
                get {
                    return this.columnPaymentTermDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FiscalYearColumn {
                get {
                    return this.columnFiscalYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FiscalPeriodColumn {
                get {
                    return this.columnFiscalPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FiscalWeekColumn {
                get {
                    return this.columnFiscalWeek;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ItemNoColumn {
                get {
                    return this.columnItemNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalShippedQtyColumn {
                get {
                    return this.columnTotalShippedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackingUnitColumn {
                get {
                    return this.columnPackingUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyCodeColumn {
                get {
                    return this.columnCurrencyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherAmountColumn {
                get {
                    return this.columnOtherAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseAmountColumn {
                get {
                    return this.columnBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COColumn {
                get {
                    return this.columnCO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataTypeColumn {
                get {
                    return this.columnDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabTestIncomeColumn {
                get {
                    return this.columnLabTestIncome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingDocReceiptDateColumn {
                get {
                    return this.columnShippingDocReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountDocReceiptDateColumn {
                get {
                    return this.columnAccountDocReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShippingDocCheckedOnColumn {
                get {
                    return this.columnShippingDocCheckedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QACommissionAmountColumn {
                get {
                    return this.columnQACommissionAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorPaymentDiscountAmountColumn {
                get {
                    return this.columnVendorPaymentDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPaymentAmountColumn {
                get {
                    return this.columnNetPaymentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabTestIncomeBaseAmountColumn {
                get {
                    return this.columnLabTestIncomeBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QACommissionBaseAmountColumn {
                get {
                    return this.columnQACommissionBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorPaymentDiscountBaseAmountColumn {
                get {
                    return this.columnVendorPaymentDiscountBaseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LGDueDateColumn {
                get {
                    return this.columnLGDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCBillRefNoColumn {
                get {
                    return this.columnLCBillRefNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LCPaymentCheckedDateColumn {
                get {
                    return this.columnLCPaymentCheckedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShipmentMethodDescColumn {
                get {
                    return this.columnShipmentMethodDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutstandingTradeReportRow this[int index] {
                get {
                    return ((OutstandingTradeReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutstandingTradeReportRowChangeEventHandler OutstandingTradeReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutstandingTradeReportRowChangeEventHandler OutstandingTradeReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutstandingTradeReportRowChangeEventHandler OutstandingTradeReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OutstandingTradeReportRowChangeEventHandler OutstandingTradeReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOutstandingTradeReportRow(OutstandingTradeReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutstandingTradeReportRow AddOutstandingTradeReportRow(
                        string InvoiceNo, 
                        System.DateTime InvoiceDate, 
                        string Vendor, 
                        string AccountCode, 
                        string SupplierInvoiceNo, 
                        int SequenceNo, 
                        string OfficeCode, 
                        string TradingAgency, 
                        string TermOfPurchase, 
                        string ContractNo, 
                        int DeliveryNo, 
                        string CustomerCode, 
                        string PaymentTermDesc, 
                        string FiscalYear, 
                        int FiscalPeriod, 
                        int FiscalWeek, 
                        string ItemNo, 
                        int TotalShippedQty, 
                        string PackingUnit, 
                        string CurrencyCode, 
                        decimal OtherAmount, 
                        decimal BaseAmount, 
                        string CO, 
                        int DataType, 
                        decimal LabTestIncome, 
                        System.DateTime ShippingDocReceiptDate, 
                        System.DateTime AccountDocReceiptDate, 
                        System.DateTime ShippingDocCheckedOn, 
                        decimal QACommissionAmount, 
                        decimal VendorPaymentDiscountAmount, 
                        decimal NetPaymentAmount, 
                        decimal LabTestIncomeBaseAmount, 
                        decimal QACommissionBaseAmount, 
                        decimal VendorPaymentDiscountBaseAmount, 
                        System.DateTime LGDueDate, 
                        string LCBillRefNo, 
                        System.DateTime LCPaymentCheckedDate, 
                        string ShipmentMethodDesc) {
                OutstandingTradeReportRow rowOutstandingTradeReportRow = ((OutstandingTradeReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InvoiceNo,
                        InvoiceDate,
                        Vendor,
                        AccountCode,
                        SupplierInvoiceNo,
                        SequenceNo,
                        OfficeCode,
                        TradingAgency,
                        TermOfPurchase,
                        ContractNo,
                        DeliveryNo,
                        CustomerCode,
                        PaymentTermDesc,
                        FiscalYear,
                        FiscalPeriod,
                        FiscalWeek,
                        ItemNo,
                        TotalShippedQty,
                        PackingUnit,
                        CurrencyCode,
                        OtherAmount,
                        BaseAmount,
                        CO,
                        DataType,
                        LabTestIncome,
                        ShippingDocReceiptDate,
                        AccountDocReceiptDate,
                        ShippingDocCheckedOn,
                        QACommissionAmount,
                        VendorPaymentDiscountAmount,
                        NetPaymentAmount,
                        LabTestIncomeBaseAmount,
                        QACommissionBaseAmount,
                        VendorPaymentDiscountBaseAmount,
                        LGDueDate,
                        LCBillRefNo,
                        LCPaymentCheckedDate,
                        ShipmentMethodDesc};
                rowOutstandingTradeReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOutstandingTradeReportRow);
                return rowOutstandingTradeReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OutstandingTradeReportDataTable cln = ((OutstandingTradeReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OutstandingTradeReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnVendor = base.Columns["Vendor"];
                this.columnAccountCode = base.Columns["AccountCode"];
                this.columnSupplierInvoiceNo = base.Columns["SupplierInvoiceNo"];
                this.columnSequenceNo = base.Columns["SequenceNo"];
                this.columnOfficeCode = base.Columns["OfficeCode"];
                this.columnTradingAgency = base.Columns["TradingAgency"];
                this.columnTermOfPurchase = base.Columns["TermOfPurchase"];
                this.columnContractNo = base.Columns["ContractNo"];
                this.columnDeliveryNo = base.Columns["DeliveryNo"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnPaymentTermDesc = base.Columns["PaymentTermDesc"];
                this.columnFiscalYear = base.Columns["FiscalYear"];
                this.columnFiscalPeriod = base.Columns["FiscalPeriod"];
                this.columnFiscalWeek = base.Columns["FiscalWeek"];
                this.columnItemNo = base.Columns["ItemNo"];
                this.columnTotalShippedQty = base.Columns["TotalShippedQty"];
                this.columnPackingUnit = base.Columns["PackingUnit"];
                this.columnCurrencyCode = base.Columns["CurrencyCode"];
                this.columnOtherAmount = base.Columns["OtherAmount"];
                this.columnBaseAmount = base.Columns["BaseAmount"];
                this.columnCO = base.Columns["CO"];
                this.columnDataType = base.Columns["DataType"];
                this.columnLabTestIncome = base.Columns["LabTestIncome"];
                this.columnShippingDocReceiptDate = base.Columns["ShippingDocReceiptDate"];
                this.columnAccountDocReceiptDate = base.Columns["AccountDocReceiptDate"];
                this.columnShippingDocCheckedOn = base.Columns["ShippingDocCheckedOn"];
                this.columnQACommissionAmount = base.Columns["QACommissionAmount"];
                this.columnVendorPaymentDiscountAmount = base.Columns["VendorPaymentDiscountAmount"];
                this.columnNetPaymentAmount = base.Columns["NetPaymentAmount"];
                this.columnLabTestIncomeBaseAmount = base.Columns["LabTestIncomeBaseAmount"];
                this.columnQACommissionBaseAmount = base.Columns["QACommissionBaseAmount"];
                this.columnVendorPaymentDiscountBaseAmount = base.Columns["VendorPaymentDiscountBaseAmount"];
                this.columnLGDueDate = base.Columns["LGDueDate"];
                this.columnLCBillRefNo = base.Columns["LCBillRefNo"];
                this.columnLCPaymentCheckedDate = base.Columns["LCPaymentCheckedDate"];
                this.columnShipmentMethodDesc = base.Columns["ShipmentMethodDesc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnVendor = new global::System.Data.DataColumn("Vendor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendor);
                this.columnAccountCode = new global::System.Data.DataColumn("AccountCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountCode);
                this.columnSupplierInvoiceNo = new global::System.Data.DataColumn("SupplierInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierInvoiceNo);
                this.columnSequenceNo = new global::System.Data.DataColumn("SequenceNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNo);
                this.columnOfficeCode = new global::System.Data.DataColumn("OfficeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfficeCode);
                this.columnTradingAgency = new global::System.Data.DataColumn("TradingAgency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingAgency);
                this.columnTermOfPurchase = new global::System.Data.DataColumn("TermOfPurchase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermOfPurchase);
                this.columnContractNo = new global::System.Data.DataColumn("ContractNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractNo);
                this.columnDeliveryNo = new global::System.Data.DataColumn("DeliveryNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryNo);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnPaymentTermDesc = new global::System.Data.DataColumn("PaymentTermDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentTermDesc);
                this.columnFiscalYear = new global::System.Data.DataColumn("FiscalYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYear);
                this.columnFiscalPeriod = new global::System.Data.DataColumn("FiscalPeriod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalPeriod);
                this.columnFiscalWeek = new global::System.Data.DataColumn("FiscalWeek", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalWeek);
                this.columnItemNo = new global::System.Data.DataColumn("ItemNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNo);
                this.columnTotalShippedQty = new global::System.Data.DataColumn("TotalShippedQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalShippedQty);
                this.columnPackingUnit = new global::System.Data.DataColumn("PackingUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingUnit);
                this.columnCurrencyCode = new global::System.Data.DataColumn("CurrencyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyCode);
                this.columnOtherAmount = new global::System.Data.DataColumn("OtherAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAmount);
                this.columnBaseAmount = new global::System.Data.DataColumn("BaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseAmount);
                this.columnCO = new global::System.Data.DataColumn("CO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCO);
                this.columnDataType = new global::System.Data.DataColumn("DataType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataType);
                this.columnLabTestIncome = new global::System.Data.DataColumn("LabTestIncome", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabTestIncome);
                this.columnShippingDocReceiptDate = new global::System.Data.DataColumn("ShippingDocReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingDocReceiptDate);
                this.columnAccountDocReceiptDate = new global::System.Data.DataColumn("AccountDocReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountDocReceiptDate);
                this.columnShippingDocCheckedOn = new global::System.Data.DataColumn("ShippingDocCheckedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingDocCheckedOn);
                this.columnQACommissionAmount = new global::System.Data.DataColumn("QACommissionAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQACommissionAmount);
                this.columnVendorPaymentDiscountAmount = new global::System.Data.DataColumn("VendorPaymentDiscountAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaymentDiscountAmount);
                this.columnNetPaymentAmount = new global::System.Data.DataColumn("NetPaymentAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPaymentAmount);
                this.columnLabTestIncomeBaseAmount = new global::System.Data.DataColumn("LabTestIncomeBaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabTestIncomeBaseAmount);
                this.columnQACommissionBaseAmount = new global::System.Data.DataColumn("QACommissionBaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQACommissionBaseAmount);
                this.columnVendorPaymentDiscountBaseAmount = new global::System.Data.DataColumn("VendorPaymentDiscountBaseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaymentDiscountBaseAmount);
                this.columnLGDueDate = new global::System.Data.DataColumn("LGDueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLGDueDate);
                this.columnLCBillRefNo = new global::System.Data.DataColumn("LCBillRefNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCBillRefNo);
                this.columnLCPaymentCheckedDate = new global::System.Data.DataColumn("LCPaymentCheckedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCPaymentCheckedDate);
                this.columnShipmentMethodDesc = new global::System.Data.DataColumn("ShipmentMethodDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipmentMethodDesc);
                this.columnInvoiceNo.MaxLength = 20;
                this.columnVendor.AllowDBNull = false;
                this.columnVendor.MaxLength = 100;
                this.columnAccountCode.MaxLength = 50;
                this.columnSupplierInvoiceNo.MaxLength = 80;
                this.columnOfficeCode.MaxLength = 5;
                this.columnTradingAgency.MaxLength = 10;
                this.columnTermOfPurchase.MaxLength = 50;
                this.columnContractNo.AllowDBNull = false;
                this.columnContractNo.MaxLength = 50;
                this.columnDeliveryNo.AllowDBNull = false;
                this.columnCustomerCode.AllowDBNull = false;
                this.columnCustomerCode.MaxLength = 100;
                this.columnPaymentTermDesc.AllowDBNull = false;
                this.columnPaymentTermDesc.MaxLength = 50;
                this.columnFiscalYear.MaxLength = 30;
                this.columnItemNo.MaxLength = 15;
                this.columnTotalShippedQty.AllowDBNull = false;
                this.columnPackingUnit.MaxLength = 50;
                this.columnCurrencyCode.MaxLength = 10;
                this.columnOtherAmount.AllowDBNull = false;
                this.columnCO.MaxLength = 30;
                this.columnDataType.AllowDBNull = false;
                this.columnLabTestIncome.AllowDBNull = false;
                this.columnLCBillRefNo.MaxLength = 20;
                this.columnShipmentMethodDesc.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutstandingTradeReportRow NewOutstandingTradeReportRow() {
                return ((OutstandingTradeReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OutstandingTradeReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OutstandingTradeReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OutstandingTradeReportRowChanged != null)) {
                    this.OutstandingTradeReportRowChanged(this, new OutstandingTradeReportRowChangeEvent(((OutstandingTradeReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OutstandingTradeReportRowChanging != null)) {
                    this.OutstandingTradeReportRowChanging(this, new OutstandingTradeReportRowChangeEvent(((OutstandingTradeReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OutstandingTradeReportRowDeleted != null)) {
                    this.OutstandingTradeReportRowDeleted(this, new OutstandingTradeReportRowChangeEvent(((OutstandingTradeReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OutstandingTradeReportRowDeleting != null)) {
                    this.OutstandingTradeReportRowDeleting(this, new OutstandingTradeReportRowChangeEvent(((OutstandingTradeReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOutstandingTradeReportRow(OutstandingTradeReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OutstandingTradeReportDs ds = new OutstandingTradeReportDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OutstandingTradeReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OutstandingTradeReportRow : global::System.Data.DataRow {
            
            private OutstandingTradeReportDataTable tableOutstandingTradeReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OutstandingTradeReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOutstandingTradeReport = ((OutstandingTradeReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutstandingTradeReport.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vendor {
                get {
                    return ((string)(this[this.tableOutstandingTradeReport.VendorColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.VendorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountCode {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.AccountCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountCode\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.AccountCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SupplierInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.SupplierInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierInvoiceNo\' in table \'OutstandingTradeReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.SupplierInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SequenceNo {
                get {
                    try {
                        return ((int)(this[this.tableOutstandingTradeReport.SequenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceNo\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.SequenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OfficeCode {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.OfficeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfficeCode\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.OfficeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradingAgency {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.TradingAgencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TradingAgency\' in table \'OutstandingTradeReport\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.TradingAgencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TermOfPurchase {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.TermOfPurchaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TermOfPurchase\' in table \'OutstandingTradeReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.TermOfPurchaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContractNo {
                get {
                    return ((string)(this[this.tableOutstandingTradeReport.ContractNoColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.ContractNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeliveryNo {
                get {
                    return ((int)(this[this.tableOutstandingTradeReport.DeliveryNoColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.DeliveryNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerCode {
                get {
                    return ((string)(this[this.tableOutstandingTradeReport.CustomerCodeColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentTermDesc {
                get {
                    return ((string)(this[this.tableOutstandingTradeReport.PaymentTermDescColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.PaymentTermDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FiscalYear {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.FiscalYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FiscalYear\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.FiscalYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FiscalPeriod {
                get {
                    try {
                        return ((int)(this[this.tableOutstandingTradeReport.FiscalPeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FiscalPeriod\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.FiscalPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FiscalWeek {
                get {
                    try {
                        return ((int)(this[this.tableOutstandingTradeReport.FiscalWeekColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FiscalWeek\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.FiscalWeekColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ItemNo {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.ItemNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNo\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.ItemNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalShippedQty {
                get {
                    return ((int)(this[this.tableOutstandingTradeReport.TotalShippedQtyColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.TotalShippedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PackingUnit {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.PackingUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackingUnit\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.PackingUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyCode {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.CurrencyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyCode\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.CurrencyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherAmount {
                get {
                    return ((decimal)(this[this.tableOutstandingTradeReport.OtherAmountColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.OtherAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableOutstandingTradeReport.BaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseAmount\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.BaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CO {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.COColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CO\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.COColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DataType {
                get {
                    return ((int)(this[this.tableOutstandingTradeReport.DataTypeColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.DataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LabTestIncome {
                get {
                    return ((decimal)(this[this.tableOutstandingTradeReport.LabTestIncomeColumn]));
                }
                set {
                    this[this.tableOutstandingTradeReport.LabTestIncomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ShippingDocReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutstandingTradeReport.ShippingDocReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingDocReceiptDate\' in table \'OutstandingTradeReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.ShippingDocReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AccountDocReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutstandingTradeReport.AccountDocReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountDocReceiptDate\' in table \'OutstandingTradeReport\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.AccountDocReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ShippingDocCheckedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutstandingTradeReport.ShippingDocCheckedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingDocCheckedOn\' in table \'OutstandingTradeReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.ShippingDocCheckedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QACommissionAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableOutstandingTradeReport.QACommissionAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QACommissionAmount\' in table \'OutstandingTradeReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.QACommissionAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VendorPaymentDiscountAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableOutstandingTradeReport.VendorPaymentDiscountAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorPaymentDiscountAmount\' in table \'OutstandingTradeRepo" +
                                "rt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.VendorPaymentDiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NetPaymentAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableOutstandingTradeReport.NetPaymentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetPaymentAmount\' in table \'OutstandingTradeReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.NetPaymentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LabTestIncomeBaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableOutstandingTradeReport.LabTestIncomeBaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabTestIncomeBaseAmount\' in table \'OutstandingTradeReport\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.LabTestIncomeBaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal QACommissionBaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableOutstandingTradeReport.QACommissionBaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QACommissionBaseAmount\' in table \'OutstandingTradeReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.QACommissionBaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VendorPaymentDiscountBaseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableOutstandingTradeReport.VendorPaymentDiscountBaseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorPaymentDiscountBaseAmount\' in table \'OutstandingTrade" +
                                "Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.VendorPaymentDiscountBaseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LGDueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutstandingTradeReport.LGDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LGDueDate\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.LGDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LCBillRefNo {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.LCBillRefNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCBillRefNo\' in table \'OutstandingTradeReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.LCBillRefNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime LCPaymentCheckedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOutstandingTradeReport.LCPaymentCheckedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCPaymentCheckedDate\' in table \'OutstandingTradeReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.LCPaymentCheckedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShipmentMethodDesc {
                get {
                    try {
                        return ((string)(this[this.tableOutstandingTradeReport.ShipmentMethodDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipmentMethodDesc\' in table \'OutstandingTradeReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOutstandingTradeReport.ShipmentMethodDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tableOutstandingTradeReport.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceNoNull() {
                this[this.tableOutstandingTradeReport.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableOutstandingTradeReport.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableOutstandingTradeReport.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountCodeNull() {
                return this.IsNull(this.tableOutstandingTradeReport.AccountCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountCodeNull() {
                this[this.tableOutstandingTradeReport.AccountCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupplierInvoiceNoNull() {
                return this.IsNull(this.tableOutstandingTradeReport.SupplierInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupplierInvoiceNoNull() {
                this[this.tableOutstandingTradeReport.SupplierInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSequenceNoNull() {
                return this.IsNull(this.tableOutstandingTradeReport.SequenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSequenceNoNull() {
                this[this.tableOutstandingTradeReport.SequenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOfficeCodeNull() {
                return this.IsNull(this.tableOutstandingTradeReport.OfficeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOfficeCodeNull() {
                this[this.tableOutstandingTradeReport.OfficeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradingAgencyNull() {
                return this.IsNull(this.tableOutstandingTradeReport.TradingAgencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradingAgencyNull() {
                this[this.tableOutstandingTradeReport.TradingAgencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTermOfPurchaseNull() {
                return this.IsNull(this.tableOutstandingTradeReport.TermOfPurchaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTermOfPurchaseNull() {
                this[this.tableOutstandingTradeReport.TermOfPurchaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFiscalYearNull() {
                return this.IsNull(this.tableOutstandingTradeReport.FiscalYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFiscalYearNull() {
                this[this.tableOutstandingTradeReport.FiscalYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFiscalPeriodNull() {
                return this.IsNull(this.tableOutstandingTradeReport.FiscalPeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFiscalPeriodNull() {
                this[this.tableOutstandingTradeReport.FiscalPeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFiscalWeekNull() {
                return this.IsNull(this.tableOutstandingTradeReport.FiscalWeekColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFiscalWeekNull() {
                this[this.tableOutstandingTradeReport.FiscalWeekColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsItemNoNull() {
                return this.IsNull(this.tableOutstandingTradeReport.ItemNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetItemNoNull() {
                this[this.tableOutstandingTradeReport.ItemNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackingUnitNull() {
                return this.IsNull(this.tableOutstandingTradeReport.PackingUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackingUnitNull() {
                this[this.tableOutstandingTradeReport.PackingUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyCodeNull() {
                return this.IsNull(this.tableOutstandingTradeReport.CurrencyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyCodeNull() {
                this[this.tableOutstandingTradeReport.CurrencyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseAmountNull() {
                return this.IsNull(this.tableOutstandingTradeReport.BaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseAmountNull() {
                this[this.tableOutstandingTradeReport.BaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONull() {
                return this.IsNull(this.tableOutstandingTradeReport.COColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONull() {
                this[this.tableOutstandingTradeReport.COColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingDocReceiptDateNull() {
                return this.IsNull(this.tableOutstandingTradeReport.ShippingDocReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingDocReceiptDateNull() {
                this[this.tableOutstandingTradeReport.ShippingDocReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountDocReceiptDateNull() {
                return this.IsNull(this.tableOutstandingTradeReport.AccountDocReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountDocReceiptDateNull() {
                this[this.tableOutstandingTradeReport.AccountDocReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShippingDocCheckedOnNull() {
                return this.IsNull(this.tableOutstandingTradeReport.ShippingDocCheckedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShippingDocCheckedOnNull() {
                this[this.tableOutstandingTradeReport.ShippingDocCheckedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQACommissionAmountNull() {
                return this.IsNull(this.tableOutstandingTradeReport.QACommissionAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQACommissionAmountNull() {
                this[this.tableOutstandingTradeReport.QACommissionAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorPaymentDiscountAmountNull() {
                return this.IsNull(this.tableOutstandingTradeReport.VendorPaymentDiscountAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorPaymentDiscountAmountNull() {
                this[this.tableOutstandingTradeReport.VendorPaymentDiscountAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetPaymentAmountNull() {
                return this.IsNull(this.tableOutstandingTradeReport.NetPaymentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetPaymentAmountNull() {
                this[this.tableOutstandingTradeReport.NetPaymentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabTestIncomeBaseAmountNull() {
                return this.IsNull(this.tableOutstandingTradeReport.LabTestIncomeBaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabTestIncomeBaseAmountNull() {
                this[this.tableOutstandingTradeReport.LabTestIncomeBaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQACommissionBaseAmountNull() {
                return this.IsNull(this.tableOutstandingTradeReport.QACommissionBaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQACommissionBaseAmountNull() {
                this[this.tableOutstandingTradeReport.QACommissionBaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorPaymentDiscountBaseAmountNull() {
                return this.IsNull(this.tableOutstandingTradeReport.VendorPaymentDiscountBaseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorPaymentDiscountBaseAmountNull() {
                this[this.tableOutstandingTradeReport.VendorPaymentDiscountBaseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLGDueDateNull() {
                return this.IsNull(this.tableOutstandingTradeReport.LGDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLGDueDateNull() {
                this[this.tableOutstandingTradeReport.LGDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCBillRefNoNull() {
                return this.IsNull(this.tableOutstandingTradeReport.LCBillRefNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCBillRefNoNull() {
                this[this.tableOutstandingTradeReport.LCBillRefNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLCPaymentCheckedDateNull() {
                return this.IsNull(this.tableOutstandingTradeReport.LCPaymentCheckedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLCPaymentCheckedDateNull() {
                this[this.tableOutstandingTradeReport.LCPaymentCheckedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShipmentMethodDescNull() {
                return this.IsNull(this.tableOutstandingTradeReport.ShipmentMethodDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShipmentMethodDescNull() {
                this[this.tableOutstandingTradeReport.ShipmentMethodDescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OutstandingTradeReportRowChangeEvent : global::System.EventArgs {
            
            private OutstandingTradeReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutstandingTradeReportRowChangeEvent(OutstandingTradeReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OutstandingTradeReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace com.next.isam.reporter.ARAP.OutstandingTradeReportDsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OutstandingTradeReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OutstandingTradeReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OutstandingTradeReport";
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("Vendor", "Vendor");
            tableMapping.ColumnMappings.Add("AccountCode", "AccountCode");
            tableMapping.ColumnMappings.Add("SupplierInvoiceNo", "SupplierInvoiceNo");
            tableMapping.ColumnMappings.Add("SequenceNo", "SequenceNo");
            tableMapping.ColumnMappings.Add("OfficeCode", "OfficeCode");
            tableMapping.ColumnMappings.Add("TradingAgency", "TradingAgency");
            tableMapping.ColumnMappings.Add("TermOfPurchase", "TermOfPurchase");
            tableMapping.ColumnMappings.Add("ContractNo", "ContractNo");
            tableMapping.ColumnMappings.Add("DeliveryNo", "DeliveryNo");
            tableMapping.ColumnMappings.Add("CustomerCode", "CustomerCode");
            tableMapping.ColumnMappings.Add("PaymentTermDesc", "PaymentTermDesc");
            tableMapping.ColumnMappings.Add("FiscalYear", "FiscalYear");
            tableMapping.ColumnMappings.Add("FiscalPeriod", "FiscalPeriod");
            tableMapping.ColumnMappings.Add("FiscalWeek", "FiscalWeek");
            tableMapping.ColumnMappings.Add("ItemNo", "ItemNo");
            tableMapping.ColumnMappings.Add("TotalShippedQty", "TotalShippedQty");
            tableMapping.ColumnMappings.Add("PackingUnit", "PackingUnit");
            tableMapping.ColumnMappings.Add("CurrencyCode", "CurrencyCode");
            tableMapping.ColumnMappings.Add("OtherAmount", "OtherAmount");
            tableMapping.ColumnMappings.Add("BaseAmount", "BaseAmount");
            tableMapping.ColumnMappings.Add("CO", "CO");
            tableMapping.ColumnMappings.Add("DataType", "DataType");
            tableMapping.ColumnMappings.Add("LabTestIncome", "LabTestIncome");
            tableMapping.ColumnMappings.Add("ShippingDocReceiptDate", "ShippingDocReceiptDate");
            tableMapping.ColumnMappings.Add("AccountDocReceiptDate", "AccountDocReceiptDate");
            tableMapping.ColumnMappings.Add("ShippingDocCheckedOn", "ShippingDocCheckedOn");
            tableMapping.ColumnMappings.Add("QACommissionAmount", "QACommissionAmount");
            tableMapping.ColumnMappings.Add("VendorPaymentDiscountAmount", "VendorPaymentDiscountAmount");
            tableMapping.ColumnMappings.Add("NetPaymentAmount", "NetPaymentAmount");
            tableMapping.ColumnMappings.Add("LabTestIncomeBaseAmount", "LabTestIncomeBaseAmount");
            tableMapping.ColumnMappings.Add("QACommissionBaseAmount", "QACommissionBaseAmount");
            tableMapping.ColumnMappings.Add("VendorPaymentDiscountBaseAmount", "VendorPaymentDiscountBaseAmount");
            tableMapping.ColumnMappings.Add("LGDueDate", "LGDueDate");
            tableMapping.ColumnMappings.Add("LCBillRefNo", "LCBillRefNo");
            tableMapping.ColumnMappings.Add("LCPaymentCheckedDate", "LCPaymentCheckedDate");
            tableMapping.ColumnMappings.Add("ShipmentMethodDesc", "ShipmentMethodDesc");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[outsta] ([InvoiceNo], [InvoiceDate], [Vendor], [AccountCode], [SupplierInvoiceNo], [SequenceNo], [OfficeCode], [TradingAgency], [TermOfPurchase], [ContractNo], [DeliveryNo], [CustomerCode], [PaymentTermDesc], [FiscalYear], [FiscalPeriod], [FiscalWeek], [ItemNo], [TotalShippedQty], [PackingUnit], [CurrencyCode], [OtherAmount], [BaseAmount], [CO], [DataType], [LabTestIncome], [ShippingDocReceiptDate], [AccountDocReceiptDate], [ShippingDocCheckedOn], [QACommissionAmount], [VendorPaymentDiscountAmount], [NetPaymentAmount], [LabTestIncomeBaseAmount], [QACommissionBaseAmount], [VendorPaymentDiscountBaseAmount], [LGDueDate], [LCBillRefNo], [LCPaymentCheckedDate], [ShipmentMethodDesc]) VALUES (@InvoiceNo, @InvoiceDate, @Vendor, @AccountCode, @SupplierInvoiceNo, @SequenceNo, @OfficeCode, @TradingAgency, @TermOfPurchase, @ContractNo, @DeliveryNo, @CustomerCode, @PaymentTermDesc, @FiscalYear, @FiscalPeriod, @FiscalWeek, @ItemNo, @TotalShippedQty, @PackingUnit, @CurrencyCode, @OtherAmount, @BaseAmount, @CO, @DataType, @LabTestIncome, @ShippingDocReceiptDate, @AccountDocReceiptDate, @ShippingDocCheckedOn, @QACommissionAmount, @VendorPaymentDiscountAmount, @NetPaymentAmount, @LabTestIncomeBaseAmount, @QACommissionBaseAmount, @VendorPaymentDiscountBaseAmount, @LGDueDate, @LCBillRefNo, @LCPaymentCheckedDate, @ShipmentMethodDesc)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vendor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vendor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SupplierInvoiceNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SupplierInvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OfficeCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OfficeCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TradingAgency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TradingAgency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TermOfPurchase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TermOfPurchase", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaymentTermDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaymentTermDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalYear", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalPeriod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FiscalWeek", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FiscalWeek", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ItemNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ItemNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalShippedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalShippedQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingUnit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingUnit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrencyCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CurrencyCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OtherAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BaseAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 6, "BaseAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabTestIncome", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 4, "LabTestIncome", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingDocReceiptDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingDocReceiptDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccountDocReceiptDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccountDocReceiptDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShippingDocCheckedOn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShippingDocCheckedOn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QACommissionAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 6, "QACommissionAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorPaymentDiscountAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 6, "VendorPaymentDiscountAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NetPaymentAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 6, "NetPaymentAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LabTestIncomeBaseAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 6, "LabTestIncomeBaseAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@QACommissionBaseAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 6, "QACommissionBaseAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorPaymentDiscountBaseAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 38, 6, "VendorPaymentDiscountBaseAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LGDueDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LGDueDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LCBillRefNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCBillRefNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LCPaymentCheckedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LCPaymentCheckedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShipmentMethodDesc", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShipmentMethodDesc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::com.next.isam.reporter.Properties.Settings.Default.ISAMConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT InvoiceNo, InvoiceDate, Vendor, AccountCode, SupplierInvoiceNo, SequenceNo, OfficeCode, TradingAgency, TermOfPurchase, ContractNo, DeliveryNo, CustomerCode, PaymentTermDesc, FiscalYear, FiscalPeriod, FiscalWeek, ItemNo, TotalShippedQty, PackingUnit, CurrencyCode, OtherAmount, BaseAmount, CO, DataType, LabTestIncome, ShippingDocReceiptDate, AccountDocReceiptDate, ShippingDocCheckedOn, QACommissionAmount, VendorPaymentDiscountAmount, NetPaymentAmount, LabTestIncomeBaseAmount, QACommissionBaseAmount, VendorPaymentDiscountBaseAmount, LGDueDate, LCBillRefNo, LCPaymentCheckedDate, ShipmentMethodDesc FROM dbo.outsta";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OutstandingTradeReportDs.OutstandingTradeReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OutstandingTradeReportDs.OutstandingTradeReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OutstandingTradeReportDs.OutstandingTradeReportDataTable dataTable = new OutstandingTradeReportDs.OutstandingTradeReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OutstandingTradeReportDs.OutstandingTradeReportDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(OutstandingTradeReportDs dataSet) {
            return this.Adapter.Update(dataSet, "OutstandingTradeReport");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string InvoiceNo, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    string Vendor, 
                    string AccountCode, 
                    string SupplierInvoiceNo, 
                    global::System.Nullable<int> SequenceNo, 
                    string OfficeCode, 
                    string TradingAgency, 
                    string TermOfPurchase, 
                    string ContractNo, 
                    int DeliveryNo, 
                    string CustomerCode, 
                    string PaymentTermDesc, 
                    string FiscalYear, 
                    global::System.Nullable<int> FiscalPeriod, 
                    global::System.Nullable<int> FiscalWeek, 
                    string ItemNo, 
                    int TotalShippedQty, 
                    string PackingUnit, 
                    string CurrencyCode, 
                    decimal OtherAmount, 
                    global::System.Nullable<decimal> BaseAmount, 
                    string CO, 
                    int DataType, 
                    decimal LabTestIncome, 
                    global::System.Nullable<global::System.DateTime> ShippingDocReceiptDate, 
                    global::System.Nullable<global::System.DateTime> AccountDocReceiptDate, 
                    global::System.Nullable<global::System.DateTime> ShippingDocCheckedOn, 
                    global::System.Nullable<decimal> QACommissionAmount, 
                    global::System.Nullable<decimal> VendorPaymentDiscountAmount, 
                    global::System.Nullable<decimal> NetPaymentAmount, 
                    global::System.Nullable<decimal> LabTestIncomeBaseAmount, 
                    global::System.Nullable<decimal> QACommissionBaseAmount, 
                    global::System.Nullable<decimal> VendorPaymentDiscountBaseAmount, 
                    global::System.Nullable<global::System.DateTime> LGDueDate, 
                    string LCBillRefNo, 
                    global::System.Nullable<global::System.DateTime> LCPaymentCheckedDate, 
                    string ShipmentMethodDesc) {
            if ((InvoiceNo == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(InvoiceNo));
            }
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Vendor == null)) {
                throw new global::System.ArgumentNullException("Vendor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Vendor));
            }
            if ((AccountCode == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(AccountCode));
            }
            if ((SupplierInvoiceNo == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(SupplierInvoiceNo));
            }
            if ((SequenceNo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(SequenceNo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((OfficeCode == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(OfficeCode));
            }
            if ((TradingAgency == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(TradingAgency));
            }
            if ((TermOfPurchase == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(TermOfPurchase));
            }
            if ((ContractNo == null)) {
                throw new global::System.ArgumentNullException("ContractNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(ContractNo));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(DeliveryNo));
            if ((CustomerCode == null)) {
                throw new global::System.ArgumentNullException("CustomerCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CustomerCode));
            }
            if ((PaymentTermDesc == null)) {
                throw new global::System.ArgumentNullException("PaymentTermDesc");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PaymentTermDesc));
            }
            if ((FiscalYear == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(FiscalYear));
            }
            if ((FiscalPeriod.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(FiscalPeriod.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((FiscalWeek.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(FiscalWeek.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((ItemNo == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ItemNo));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((int)(TotalShippedQty));
            if ((PackingUnit == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(PackingUnit));
            }
            if ((CurrencyCode == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(CurrencyCode));
            }
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(OtherAmount));
            if ((BaseAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(BaseAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((CO == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(CO));
            }
            this.Adapter.InsertCommand.Parameters[23].Value = ((int)(DataType));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(LabTestIncome));
            if ((ShippingDocReceiptDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(ShippingDocReceiptDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((AccountDocReceiptDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(AccountDocReceiptDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((ShippingDocCheckedOn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(ShippingDocCheckedOn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((QACommissionAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(QACommissionAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((VendorPaymentDiscountAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(VendorPaymentDiscountAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((NetPaymentAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(NetPaymentAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((LabTestIncomeBaseAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(LabTestIncomeBaseAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((QACommissionBaseAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(QACommissionBaseAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((VendorPaymentDiscountBaseAmount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(VendorPaymentDiscountBaseAmount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((LGDueDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((System.DateTime)(LGDueDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((LCBillRefNo == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(LCBillRefNo));
            }
            if ((LCPaymentCheckedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((System.DateTime)(LCPaymentCheckedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ShipmentMethodDesc == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(ShipmentMethodDesc));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private OutstandingTradeReportTableAdapter _outstandingTradeReportTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OutstandingTradeReportTableAdapter OutstandingTradeReportTableAdapter {
            get {
                return this._outstandingTradeReportTableAdapter;
            }
            set {
                this._outstandingTradeReportTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._outstandingTradeReportTableAdapter != null) 
                            && (this._outstandingTradeReportTableAdapter.Connection != null))) {
                    return this._outstandingTradeReportTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._outstandingTradeReportTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(OutstandingTradeReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._outstandingTradeReportTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OutstandingTradeReport.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._outstandingTradeReportTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(OutstandingTradeReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._outstandingTradeReportTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OutstandingTradeReport.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._outstandingTradeReportTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(OutstandingTradeReportDs dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._outstandingTradeReportTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OutstandingTradeReport.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._outstandingTradeReportTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(OutstandingTradeReportDs dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._outstandingTradeReportTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._outstandingTradeReportTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._outstandingTradeReportTableAdapter != null)) {
                    revertConnections.Add(this._outstandingTradeReportTableAdapter, this._outstandingTradeReportTableAdapter.Connection);
                    this._outstandingTradeReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._outstandingTradeReportTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._outstandingTradeReportTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._outstandingTradeReportTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._outstandingTradeReportTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._outstandingTradeReportTableAdapter != null)) {
                    this._outstandingTradeReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._outstandingTradeReportTableAdapter]));
                    this._outstandingTradeReportTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591